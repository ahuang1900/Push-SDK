!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
A	webrtc/base/bind_unittest.cc	/^struct A { int dummy; };$/;"	s	namespace:rtc::__anon4	file:
A	webrtc/base/refcountedobject_unittest.cc	/^  A() {}$/;"	f	class:rtc::__anon50::A
A	webrtc/base/refcountedobject_unittest.cc	/^class A {$/;"	c	namespace:rtc::__anon50	file:
ACCESS_ON	webrtc/base/thread_checker.h	/^#define ACCESS_ON(/;"	d
ACQUIRED_AFTER	webrtc/base/thread_annotations.h	/^#define ACQUIRED_AFTER(/;"	d
ACQUIRED_BEFORE	webrtc/base/thread_annotations.h	/^#define ACQUIRED_BEFORE(/;"	d
ACTION	webrtc/common_audio/resampler/sinc_resampler_unittest.cc	/^ACTION(ClearBuffer) {$/;"	f	namespace:webrtc
ACTION	webrtc/common_audio/resampler/sinc_resampler_unittest.cc	/^ACTION(FillBuffer) {$/;"	f	namespace:webrtc
ADAPTER_TYPE_CELLULAR	webrtc/base/networkmonitor.h	/^  ADAPTER_TYPE_CELLULAR = 1 << 2,$/;"	e	enum:rtc::AdapterType
ADAPTER_TYPE_ETHERNET	webrtc/base/networkmonitor.h	/^  ADAPTER_TYPE_ETHERNET = 1 << 0,$/;"	e	enum:rtc::AdapterType
ADAPTER_TYPE_LOOPBACK	webrtc/base/networkmonitor.h	/^  ADAPTER_TYPE_LOOPBACK = 1 << 4$/;"	e	enum:rtc::AdapterType
ADAPTER_TYPE_UNKNOWN	webrtc/base/networkmonitor.h	/^  ADAPTER_TYPE_UNKNOWN = 0,$/;"	e	enum:rtc::AdapterType
ADAPTER_TYPE_VPN	webrtc/base/networkmonitor.h	/^  ADAPTER_TYPE_VPN = 1 << 3,$/;"	e	enum:rtc::AdapterType
ADAPTER_TYPE_WIFI	webrtc/base/networkmonitor.h	/^  ADAPTER_TYPE_WIFI = 1 << 1,$/;"	e	enum:rtc::AdapterType
ADP_MSG_FIRST_AVAILABLE	webrtc/base/autodetectproxy.h	/^         ADP_MSG_FIRST_AVAILABLE};$/;"	e	enum:rtc::AutoDetectProxy::__anon2
AECLevelConvert	WebRTCAudioProcessing_jni.cc	/^static webrtc::EchoCancellation::SuppressionLevel AECLevelConvert(int level)$/;"	f	file:
AECM_BAD_PARAMETER_ERROR	webrtc/modules/audio_processing/aecm/echo_control_mobile.h	/^#define AECM_BAD_PARAMETER_ERROR /;"	d
AECM_BAD_PARAMETER_WARNING	webrtc/modules/audio_processing/aecm/echo_control_mobile.h	/^#define AECM_BAD_PARAMETER_WARNING /;"	d
AECM_DYNAMIC_Q	webrtc/modules/audio_processing/aecm/aecm_defines.h	/^#define AECM_DYNAMIC_Q /;"	d
AECM_NULL_POINTER_ERROR	webrtc/modules/audio_processing/aecm/echo_control_mobile.h	/^#define AECM_NULL_POINTER_ERROR /;"	d
AECM_UNINITIALIZED_ERROR	webrtc/modules/audio_processing/aecm/echo_control_mobile.h	/^#define AECM_UNINITIALIZED_ERROR /;"	d
AECM_UNSPECIFIED_ERROR	webrtc/modules/audio_processing/aecm/echo_control_mobile.h	/^#define AECM_UNSPECIFIED_ERROR /;"	d
AECM_UNSUPPORTED_FUNCTION_ERROR	webrtc/modules/audio_processing/aecm/echo_control_mobile.h	/^#define AECM_UNSUPPORTED_FUNCTION_ERROR /;"	d
AEC_BAD_PARAMETER_ERROR	webrtc/modules/audio_processing/aec/echo_cancellation.h	/^#define AEC_BAD_PARAMETER_ERROR /;"	d
AEC_BAD_PARAMETER_WARNING	webrtc/modules/audio_processing/aec/echo_cancellation.h	/^#define AEC_BAD_PARAMETER_WARNING /;"	d
AEC_NULL_POINTER_ERROR	webrtc/modules/audio_processing/aec/echo_cancellation.h	/^#define AEC_NULL_POINTER_ERROR /;"	d
AEC_UNINITIALIZED_ERROR	webrtc/modules/audio_processing/aec/echo_cancellation.h	/^#define AEC_UNINITIALIZED_ERROR /;"	d
AEC_UNSPECIFIED_ERROR	webrtc/modules/audio_processing/aec/echo_cancellation.h	/^#define AEC_UNSPECIFIED_ERROR /;"	d
AEC_UNSUPPORTED_FUNCTION_ERROR	webrtc/modules/audio_processing/aec/echo_cancellation.h	/^#define AEC_UNSUPPORTED_FUNCTION_ERROR /;"	d
AGCModeConvert	WebRTCAudioProcessing_jni.cc	/^static webrtc::GainControl::Mode AGCModeConvert(int mode)$/;"	f	file:
AGC_BAD_PARAMETER_ERROR	webrtc/modules/audio_processing/agc/legacy/gain_control.h	/^#define AGC_BAD_PARAMETER_ERROR /;"	d
AGC_BAD_PARAMETER_WARNING	webrtc/modules/audio_processing/agc/legacy/gain_control.h	/^#define AGC_BAD_PARAMETER_WARNING /;"	d
AGC_DEFAULT_COMP_GAIN	webrtc/modules/audio_processing/agc/legacy/analog_agc.c	/^#define AGC_DEFAULT_COMP_GAIN /;"	d	file:
AGC_DEFAULT_TARGET_LEVEL	webrtc/modules/audio_processing/agc/legacy/analog_agc.c	/^#define AGC_DEFAULT_TARGET_LEVEL /;"	d	file:
AGC_MUL32	webrtc/modules/audio_processing/agc/legacy/digital_agc.h	/^#define AGC_MUL32(/;"	d
AGC_NULL_POINTER_ERROR	webrtc/modules/audio_processing/agc/legacy/gain_control.h	/^#define AGC_NULL_POINTER_ERROR /;"	d
AGC_SCALEDIFF32	webrtc/modules/audio_processing/agc/legacy/digital_agc.h	/^#define AGC_SCALEDIFF32(/;"	d
AGC_UNINITIALIZED_ERROR	webrtc/modules/audio_processing/agc/legacy/gain_control.h	/^#define AGC_UNINITIALIZED_ERROR /;"	d
AGC_UNSPECIFIED_ERROR	webrtc/modules/audio_processing/agc/legacy/gain_control.h	/^#define AGC_UNSPECIFIED_ERROR /;"	d
AGC_UNSUPPORTED_FUNCTION_ERROR	webrtc/modules/audio_processing/agc/legacy/gain_control.h	/^#define AGC_UNSUPPORTED_FUNCTION_ERROR /;"	d
ALIGN16_BEG	webrtc/modules/audio_processing/aec/aec_common.h	/^#define ALIGN16_BEG /;"	d
ALIGN16_BEG	webrtc/modules/audio_processing/aec/aec_common.h	/^#define ALIGN16_BEG$/;"	d
ALIGN16_BEG	webrtc/modules/audio_processing/utility/ooura_fft_tables_neon_sse2.h	/^#define ALIGN16_BEG /;"	d
ALIGN16_BEG	webrtc/modules/audio_processing/utility/ooura_fft_tables_neon_sse2.h	/^#define ALIGN16_BEG$/;"	d
ALIGN16_END	webrtc/modules/audio_processing/aec/aec_common.h	/^#define ALIGN16_END /;"	d
ALIGN16_END	webrtc/modules/audio_processing/aec/aec_common.h	/^#define ALIGN16_END$/;"	d
ALIGN16_END	webrtc/modules/audio_processing/utility/ooura_fft_tables_neon_sse2.h	/^#define ALIGN16_END /;"	d
ALIGN16_END	webrtc/modules/audio_processing/utility/ooura_fft_tables_neon_sse2.h	/^#define ALIGN16_END$/;"	d
ALIGN8_BEG	webrtc/modules/audio_processing/aecm/aecm_core.h	/^#define ALIGN8_BEG /;"	d
ALIGN8_BEG	webrtc/modules/audio_processing/aecm/aecm_core.h	/^#define ALIGN8_BEG$/;"	d
ALIGN8_END	webrtc/modules/audio_processing/aecm/aecm_core.h	/^#define ALIGN8_END /;"	d
ALIGN8_END	webrtc/modules/audio_processing/aecm/aecm_core.h	/^#define ALIGN8_END$/;"	d
ALIGN8_END	webrtc/modules/audio_processing/aecm/aecm_core_c.cc	/^static const ALIGN8_BEG int16_t WebRtcAecm_kSqrtHanning[] ALIGN8_END = {$/;"	v	file:
ALIGN8_END	webrtc/modules/audio_processing/aecm/aecm_core_mips.cc	/^static const ALIGN8_BEG int16_t WebRtcAecm_kSqrtHanning[] ALIGN8_END = {$/;"	v	file:
ALIGNP	webrtc/base/basictypes.h	/^#define ALIGNP(/;"	d
ALLPASSSECTIONS	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define ALLPASSSECTIONS /;"	d
ALOGD	WebRTCAudioProcessing_jni.h	/^#define ALOGD(/;"	d
ALOGE	WebRTCAudioProcessing_jni.h	/^#define ALOGE(/;"	d
ALOGE	webrtc/modules/audio_processing/audio_processing_impl.cc	/^#define ALOGE(/;"	d	file:
ALOGI	WebRTCAudioProcessing_jni.h	/^#define ALOGI(/;"	d
ANALOG_TARGET_LEVEL	webrtc/modules/audio_processing/agc/legacy/analog_agc.c	/^#define ANALOG_TARGET_LEVEL /;"	d	file:
ANALOG_TARGET_LEVEL_2	webrtc/modules/audio_processing/agc/legacy/analog_agc.c	/^#define ANALOG_TARGET_LEVEL_2 /;"	d	file:
ANAL_BLOCKL_MAX	webrtc/modules/audio_processing/ns/defines.h	/^#define ANAL_BLOCKL_MAX /;"	d
ANAL_BLOCKL_MAX	webrtc/modules/audio_processing/ns/nsx_defines.h	/^#define ANAL_BLOCKL_MAX /;"	d
APP_ABI	jni/Application.mk	/^APP_ABI	:= armeabi-v7a arm64-v8a$/;"	m
APP_CFLAGS	jni/Application.mk	/^APP_CFLAGS := -O3$/;"	m
APP_PLATFORM	jni/Application.mk	/^APP_PLATFORM := android-18$/;"	m
APP_STL	jni/Application.mk	/^APP_STL := c++_shared$/;"	m
APlower	webrtc/modules/audio_coding/codecs/isac/main/source/filter_functions.c	/^static const double APlower[ALLPASSSECTIONS] = {0.1544, 0.744};$/;"	v	file:
APupper	webrtc/modules/audio_coding/codecs/isac/main/source/filter_functions.c	/^static const double APupper[ALLPASSSECTIONS] = {0.0347, 0.3826};$/;"	v	file:
AR_ORDER	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define AR_ORDER /;"	d
ASCII_CLASS	webrtc/base/stringencode.cc	/^const unsigned char ASCII_CLASS[128] = {$/;"	m	namespace:rtc	file:
ASN1ReadInt	webrtc/base/sslidentity.cc	/^static inline int ASN1ReadInt(const unsigned char** pp, size_t* np, size_t n) {$/;"	f	namespace:rtc
ASN1TimeToSec	webrtc/base/sslidentity.cc	/^int64_t ASN1TimeToSec(const unsigned char* s, size_t length, bool long_format) {$/;"	f	namespace:rtc
ASSERT	webrtc/base/common.h	/^#define ASSERT(/;"	d
ASSERT_EQ_SIMULATED_WAIT	webrtc/base/gunit.h	/^#define ASSERT_EQ_SIMULATED_WAIT(/;"	d
ASSERT_EQ_WAIT	webrtc/base/gunit.h	/^#define ASSERT_EQ_WAIT(/;"	d
ASSERT_MEMEQ	webrtc/base/testutils.h	/^#define ASSERT_MEMEQ(/;"	d
ASSERT_TRUE_SIMULATED_WAIT	webrtc/base/gunit.h	/^#define ASSERT_TRUE_SIMULATED_WAIT(/;"	d
ASSERT_TRUE_WAIT	webrtc/base/gunit.h	/^#define ASSERT_TRUE_WAIT(/;"	d
ATTRIBUTE_UNUSED	webrtc/typedefs.h	/^#define ATTRIBUTE_UNUSED /;"	d
ATTRIBUTE_UNUSED	webrtc/typedefs.h	/^#define ATTRIBUTE_UNUSED$/;"	d
AUDIO_CODING_FILES	jni/audio_coding.mk	/^AUDIO_CODING_FILES := \\$/;"	m
AUDIO_CODING_INCLUDES	jni/audio_coding.mk	/^AUDIO_CODING_INCLUDES := \\$/;"	m
AUDIO_CODING_SOURCE_PATH	jni/audio_coding.mk	/^AUDIO_CODING_SOURCE_PATH	:= ..\/webrtc\/modules\/audio_coding$/;"	m
AUDIO_PROCESSING_INCLUDES	jni/audio_processing.mk	/^AUDIO_PROCESSING_INCLUDES	:= \\$/;"	m
AUDIO_PROCESSING_SOURCE_FILES	jni/audio_processing.mk	/^AUDIO_PROCESSING_SOURCE_FILES	:= \\$/;"	m
AUDIO_PROCESSING_SOURCE_PATH	jni/audio_processing.mk	/^AUDIO_PROCESSING_SOURCE_PATH	:= ..\/webrtc\/modules\/audio_processing$/;"	m
AUDIO_PROCESSING_UTILITY_OTHER_FILES	jni/common.mk	/^AUDIO_PROCESSING_UTILITY_OTHER_FILES	:= \\$/;"	m
Abort	webrtc/base/task.cc	/^void Task::Abort(bool nowake) {$/;"	f	class:rtc::Task
AbortAllChildren	webrtc/base/taskparent.cc	/^void TaskParent::AbortAllChildren() {$/;"	f	class:rtc::TaskParent
AbortShouldWakeTest	webrtc/base/task_unittest.cc	/^  AbortShouldWakeTest() {}$/;"	f	class:rtc::AbortShouldWakeTest
AbortShouldWakeTest	webrtc/base/task_unittest.cc	/^class AbortShouldWakeTest : public sigslot::has_slots<> {$/;"	c	namespace:rtc	file:
AbortTask	webrtc/base/task_unittest.cc	/^  explicit AbortTask(TaskParent *parent) : Task(parent) {$/;"	f	class:rtc::AbortTask
AbortTask	webrtc/base/task_unittest.cc	/^class AbortTask : public Task {$/;"	c	namespace:rtc	file:
AbsValue	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^T AbsValue(T a) {$/;"	f	namespace:webrtc::__anon183
Accept	webrtc/base/asyncsocket.cc	/^AsyncSocket* AsyncSocketAdapter::Accept(SocketAddress* paddr) {$/;"	f	class:rtc::AsyncSocketAdapter
Accept	webrtc/base/physicalsocketserver.cc	/^AsyncSocket* PhysicalSocket::Accept(SocketAddress* out_addr) {$/;"	f	class:rtc::PhysicalSocket
Accept	webrtc/base/virtualsocketserver.cc	/^VirtualSocket* VirtualSocket::Accept(SocketAddress* paddr) {$/;"	f	class:rtc::VirtualSocket
Accept	webrtc/base/win32socketserver.cc	/^Win32Socket* Win32Socket::Accept(SocketAddress* out_addr) {$/;"	f	class:rtc::Win32Socket
AcceptConnection	webrtc/base/ssladapter_unittest.cc	/^  void AcceptConnection(const rtc::SocketAddress& address) {$/;"	f	class:SSLAdapterTestDummyServer
Accumulate	webrtc/base/virtualsocketserver.cc	/^VirtualSocketServer::Function* VirtualSocketServer::Accumulate(Function* f) {$/;"	f	class:rtc::VirtualSocketServer
Acquire	webrtc/base/race_checker.cc	/^bool RaceChecker::Acquire() const {$/;"	f	class:rtc::RaceChecker
AcquireLoad	webrtc/base/atomicops.h	/^  static int AcquireLoad(volatile const int* i) {$/;"	f	class:rtc::AtomicOps
AcquireLoadPtr	webrtc/base/atomicops.h	/^  static T* AcquireLoadPtr(T* volatile* ptr) {$/;"	f	class:rtc::AtomicOps
Activity	webrtc/common_audio/vad/include/vad.h	/^  enum Activity { kPassive = 0, kActive = 1, kError = -1 };$/;"	g	class:webrtc::Vad
AdapterType	webrtc/base/networkmonitor.h	/^enum AdapterType {$/;"	g	namespace:rtc
AdapterTypeToString	webrtc/base/network.cc	/^std::string AdapterTypeToString(AdapterType type) {$/;"	f	namespace:rtc::__anon34
Add	webrtc/base/messagequeue.cc	/^void MessageQueueManager::Add(MessageQueue *message_queue) {$/;"	f	class:rtc::MessageQueueManager
Add	webrtc/base/mod_ops.h	/^inline unsigned long Add(unsigned long a, unsigned long b) {  \/\/ NOLINT$/;"	f	namespace:webrtc
Add	webrtc/base/natsocketfactory.cc	/^NATSocketServer::Translator* NATSocketServer::TranslatorMap::Add($/;"	f	class:rtc::NATSocketServer::TranslatorMap
Add	webrtc/base/physicalsocketserver.cc	/^void PhysicalSocketServer::Add(Dispatcher *pdispatcher) {$/;"	f	class:rtc::PhysicalSocketServer
Add	webrtc/base/proxydetect.cc	/^  void Add(const char * name, const char * value) { map_[name] = value; }$/;"	f	struct:StringMap
Add	webrtc/common_types.h	/^  void Add(const RtcpPacketTypeCounter& other) {$/;"	f	struct:webrtc::RtcpPacketTypeCounter
Add	webrtc/common_types.h	/^  void Add(const RtpPacketCounter& other) {$/;"	f	struct:webrtc::RtpPacketCounter
Add	webrtc/common_types.h	/^  void Add(const StreamDataCounters& other) {$/;"	f	struct:webrtc::StreamDataCounters
Add	webrtc/modules/audio_processing/beamformer/matrix.h	/^  Matrix& Add(const Matrix& lhs, const Matrix& rhs) {$/;"	f	class:webrtc::Matrix
Add	webrtc/modules/audio_processing/beamformer/matrix.h	/^  Matrix& Add(const Matrix& operand) {$/;"	f	class:webrtc::Matrix
Add	webrtc/system_wrappers/source/metrics_default.cc	/^  void Add(int sample) {$/;"	f	class:webrtc::metrics::__anon251::RtcHistogram
Add	webrtc/system_wrappers/source/trace_impl.cc	/^void Trace::Add(const TraceLevel level, const TraceModule module,$/;"	f	class:webrtc::Trace
Add33	webrtc/base/function_view_unittest.cc	/^int Add33(int x) {$/;"	f	namespace:rtc::__anon14
AddAudio	webrtc/modules/audio_processing/vad/standalone_vad.cc	/^int StandaloneVad::AddAudio(const int16_t* data, size_t length) {$/;"	f	class:webrtc::StandaloneVad
AddChild	webrtc/base/taskparent.cc	/^void TaskParent::AddChild(Task *child) {$/;"	f	class:rtc::TaskParent
AddClient	webrtc/base/natsocketfactory.cc	/^bool NATSocketServer::Translator::AddClient($/;"	f	class:rtc::NATSocketServer::Translator
AddConnection	webrtc/base/virtualsocketserver.cc	/^void VirtualSocketServer::AddConnection(const SocketAddress& local,$/;"	f	class:rtc::VirtualSocketServer
AddDateTimeInfo	webrtc/system_wrappers/source/trace_posix.cc	/^int32_t TracePosix::AddDateTimeInfo(char* trace_message) const {$/;"	f	class:webrtc::TracePosix
AddDuration	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^  void AddDuration(int64_t duration) {$/;"	f	class:webrtc::__anon182::TimedThreadApiProcessor
AddEventIfEnabled	webrtc/base/trace_event.h	/^  void AddEventIfEnabled() {$/;"	f	class:webrtc::trace_event_internal::TraceEndOnScopeClose
AddEvents	webrtc/base/testutils.h	/^  void AddEvents(void* obj, int events) {$/;"	f	class:testing::StreamSink
AddFilter	webrtc/base/dbus.cc	/^bool DBusMonitor::AddFilter(DBusSigFilter *filter) {$/;"	f	class:rtc::DBusMonitor
AddFrames	webrtc/common_audio/blocker.cc	/^void AddFrames(const float* const* a,$/;"	f	namespace:__anon77
AddIP	webrtc/base/network.h	/^  void AddIP(const InterfaceAddress& ip) { ips_.push_back(ip); }$/;"	f	class:rtc::Network
AddImpl	webrtc/system_wrappers/source/trace_impl.cc	/^void TraceImpl::AddImpl(const TraceLevel level,$/;"	f	class:webrtc::TraceImpl
AddInterface	webrtc/base/fakenetwork.h	/^  void AddInterface(const SocketAddress& iface) {$/;"	f	class:rtc::FakeNetworkManager
AddInterface	webrtc/base/fakenetwork.h	/^  void AddInterface(const SocketAddress& iface, const std::string& if_name) {$/;"	f	class:rtc::FakeNetworkManager
AddInterface	webrtc/base/fakenetwork.h	/^  void AddInterface(const SocketAddress& iface,$/;"	f	class:rtc::FakeNetworkManager
AddInternal	webrtc/base/messagequeue.cc	/^void MessageQueueManager::AddInternal(MessageQueue *message_queue) {$/;"	f	class:rtc::MessageQueueManager
AddIpv6Address	webrtc/base/network_unittest.cc	/^  struct ifaddrs* AddIpv6Address(struct ifaddrs* list,$/;"	f	class:rtc::NetworkTest
AddLanes	webrtc/modules/audio_processing/aecm/aecm_core_neon.cc	/^static inline void AddLanes(uint32_t* ptr, uint32x4_t v) {$/;"	f	file:
AddLevel	webrtc/system_wrappers/source/trace_impl.cc	/^int32_t TraceImpl::AddLevel(char* sz_message, const TraceLevel level) const {$/;"	f	class:webrtc::TraceImpl
AddLogToStream	webrtc/base/logging.cc	/^void LogMessage::AddLogToStream(LogSink* stream, LoggingSeverity min_sev) {$/;"	f	class:rtc::LogMessage
AddMessage	webrtc/system_wrappers/source/trace_impl.cc	/^int32_t TraceImpl::AddMessage($/;"	f	class:webrtc::TraceImpl
AddMessageToList	webrtc/system_wrappers/source/trace_impl.cc	/^void TraceImpl::AddMessageToList($/;"	f	class:webrtc::TraceImpl
AddModuleAndId	webrtc/system_wrappers/source/trace_impl.cc	/^int32_t TraceImpl::AddModuleAndId(char* trace_message,$/;"	f	class:webrtc::TraceImpl
AddObservation	webrtc/modules/audio_processing/aec/aec_core.cc	/^void DivergentFilterFraction::AddObservation(const PowerLevel& nearlevel,$/;"	f	class:webrtc::DivergentFilterFraction
AddPacket	webrtc/common_types.h	/^  void AddPacket(size_t packet_length, const RTPHeader& header) {$/;"	f	struct:webrtc::RtpPacketCounter
AddPacketToNetwork	webrtc/base/virtualsocketserver.cc	/^void VirtualSocketServer::AddPacketToNetwork(VirtualSocket* sender,$/;"	f	class:rtc::VirtualSocketServer
AddRef	webrtc/base/bind_unittest.cc	/^  void AddRef() { ++ref_count_; }$/;"	f	struct:rtc::__anon4::LifeTimeCheck
AddRef	webrtc/base/refcountedobject.h	/^  virtual int AddRef() const { return AtomicOps::Increment(&ref_count_); }$/;"	f	class:rtc::RefCountedObject
AddReference	webrtc/base/opensslidentity.cc	/^void OpenSSLCertificate::AddReference() const {$/;"	f	class:rtc::OpenSSLCertificate
AddReference	webrtc/base/opensslidentity.cc	/^void OpenSSLKeyPair::AddReference() {$/;"	f	class:rtc::OpenSSLKeyPair
AddReference	webrtc/base/stream.h	/^    void AddReference() {$/;"	f	class:rtc::StreamReference::StreamRefCount
AddRule	webrtc/base/firewallsocketserver.cc	/^void FirewallManager::AddRule(bool allow, FirewallProtocol p,$/;"	f	class:rtc::FirewallManager
AddRule	webrtc/base/firewallsocketserver.cc	/^void FirewallSocketServer::AddRule(bool allow, FirewallProtocol p,$/;"	f	class:rtc::FirewallSocketServer
AddSample	webrtc/base/rollingaccumulator.h	/^  void AddSample(T sample) {$/;"	f	class:rtc::RollingAccumulator
AddSamples	webrtc/base/ratetracker.cc	/^void RateTracker::AddSamples(size_t sample_count) {$/;"	f	class:rtc::RateTracker
AddServer	webrtc/base/firewallsocketserver.cc	/^void FirewallManager::AddServer(FirewallSocketServer* server) {$/;"	f	class:rtc::FirewallManager
AddThreadId	webrtc/system_wrappers/source/trace_impl.cc	/^int32_t TraceImpl::AddThreadId(char* trace_message) const {$/;"	f	class:webrtc::TraceImpl
AddTime	webrtc/system_wrappers/source/trace_posix.cc	/^int32_t TracePosix::AddTime(char* trace_message, const TraceLevel level) const {$/;"	f	class:webrtc::TracePosix
AddToCounter	webrtc/base/criticalsection_unittest.cc	/^  void AddToCounter(int add) {$/;"	f	class:rtc::PerfTestData
AddTraceEvent	webrtc/base/event_tracer.cc	/^  void AddTraceEvent(const char* name,$/;"	f	class:rtc::tracing::__anon12::final
AddTraceEvent	webrtc/base/event_tracer.cc	/^void EventTracer::AddTraceEvent(char phase,$/;"	f	class:webrtc::EventTracer
AddTraceEvent	webrtc/base/trace_event.h	/^static inline void AddTraceEvent(char phase,$/;"	f	namespace:webrtc::trace_event_internal
AddTraceEventHandler	webrtc/base/event_tracer_unittest.cc	/^static void AddTraceEventHandler(char phase,$/;"	f	namespace:__anon13
AddTraceEventPtr	webrtc/base/event_tracer.h	/^typedef void (*AddTraceEventPtr)(char phase,$/;"	t	namespace:webrtc
AddTranslator	webrtc/base/natsocketfactory.cc	/^NATSocketServer::Translator* NATSocketServer::AddTranslator($/;"	f	class:rtc::NATSocketServer
AddTranslator	webrtc/base/natsocketfactory.cc	/^NATSocketServer::Translator* NATSocketServer::Translator::AddTranslator($/;"	f	class:rtc::NATSocketServer::Translator
AddTrust_External_Root_certificate	webrtc/base/sslroots.h	/^const unsigned char AddTrust_External_Root_certificate[1082]={$/;"	v
AddTrust_Low_Value_Services_Root_certificate	webrtc/base/sslroots.h	/^const unsigned char AddTrust_Low_Value_Services_Root_certificate[1052]={$/;"	v
AddTrust_Public_Services_Root_certificate	webrtc/base/sslroots.h	/^const unsigned char AddTrust_Public_Services_Root_certificate[1049]={$/;"	v
AddTrust_Qualified_Certificates_Root_certificate	webrtc/base/sslroots.h	/^const unsigned char AddTrust_Qualified_Certificates_Root_certificate[1058]={$/;"	v
AddValue	webrtc/modules/audio_processing/utility/block_mean_calculator.cc	/^void BlockMeanCalculator::AddValue(float value) {$/;"	f	class:webrtc::BlockMeanCalculator
AddrCmp	webrtc/base/natserver.cc	/^AddrCmp::AddrCmp(NAT* nat)$/;"	f	class:rtc::AddrCmp
AddrCmp	webrtc/base/natserver.h	/^struct AddrCmp {$/;"	s	namespace:rtc
Address	webrtc/base/winping.cc	/^    ULONG   Address;            \/\/ Replying address$/;"	m	struct:rtc::icmp_echo_reply	file:
Address	webrtc/base/winping.cc	/^  sockaddr_in6    Address;$/;"	m	struct:rtc::icmpv6_echo_reply_lh	file:
AddressList	webrtc/base/network.cc	/^} AddressList;$/;"	t	namespace:rtc::__anon34	typeref:struct:rtc::__anon34::__anon35	file:
AddressMap	webrtc/base/virtualsocketserver.h	/^  typedef std::map<SocketAddress, VirtualSocket*> AddressMap;$/;"	t	class:rtc::VirtualSocketServer
AddressRestrictedNAT	webrtc/base/nattypes.cc	/^class AddressRestrictedNAT : public NAT {$/;"	c	namespace:rtc	file:
AddressSet	webrtc/base/natserver.h	/^  typedef std::set<SocketAddress, AddrCmp> AddressSet;$/;"	t	class:rtc::NATServer
AdjustCurrentProcessPrivilege	webrtc/base/win32regkey.cc	/^bool AdjustCurrentProcessPrivilege(const TCHAR* privilege, bool to_enable) {$/;"	f	namespace:rtc
AdjustSize	webrtc/modules/audio_processing/aec/aec_core.cc	/^int BlockBuffer::AdjustSize(int buffer_size_decrease) {$/;"	f	class:webrtc::BlockBuffer
AdvanceTime	webrtc/base/fakeclock.cc	/^void FakeClock::AdvanceTime(TimeDelta delta) {$/;"	f	class:rtc::FakeClock
AdvanceTime	webrtc/base/ratetracker_unittest.cc	/^  void AdvanceTime(int delta) { time_ += delta; }$/;"	f	class:rtc::RateTrackerForTest
Aec	webrtc/modules/audio_processing/aec/echo_cancellation.h	/^typedef struct Aec {$/;"	s	namespace:webrtc
Aec	webrtc/modules/audio_processing/aec/echo_cancellation.h	/^} Aec;$/;"	t	namespace:webrtc	typeref:struct:webrtc::Aec
AecConfig	webrtc/modules/audio_processing/aec/echo_cancellation.h	/^} AecConfig;$/;"	t	namespace:webrtc	typeref:struct:webrtc::__anon159
AecCore	webrtc/modules/audio_processing/aec/aec_core.cc	/^AecCore::AecCore(int instance_index)$/;"	f	class:webrtc::AecCore
AecCore	webrtc/modules/audio_processing/aec/aec_core.h	/^struct AecCore {$/;"	s	namespace:webrtc
AecDumpBasedSimulator	webrtc/modules/audio_processing/test/aec_dump_based_simulator.h	/^  explicit AecDumpBasedSimulator(const SimulationSettings& settings)$/;"	f	class:webrtc::test::final
AecLevel	webrtc/modules/audio_processing/aec/echo_cancellation.h	/^} AecLevel;$/;"	t	namespace:webrtc	typeref:struct:webrtc::__anon160
AecMetrics	webrtc/modules/audio_processing/aec/echo_cancellation.h	/^} AecMetrics;$/;"	t	namespace:webrtc	typeref:struct:webrtc::__anon161
AecMobile	webrtc/modules/audio_processing/aecm/echo_control_mobile.cc	/^} AecMobile;$/;"	t	typeref:struct:__anon165	file:
AecResampler	webrtc/modules/audio_processing/aec/aec_resampler.cc	/^} AecResampler;$/;"	t	namespace:webrtc	typeref:struct:webrtc::__anon154	file:
AecTurnedOff	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  AecTurnedOff,$/;"	m	class:webrtc::__anon181::AecType	file:
AecType	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^enum class AecType {$/;"	c	namespace:webrtc::__anon181	file:
AecmConfig	webrtc/modules/audio_processing/aecm/echo_control_mobile.h	/^} AecmConfig;$/;"	t	typeref:struct:__anon167
AecmCore	webrtc/modules/audio_processing/aecm/aecm_core.h	/^} AecmCore;$/;"	t	typeref:struct:__anon164
AecmFalse	webrtc/modules/audio_processing/aecm/echo_control_mobile.h	/^    AecmFalse = 0,$/;"	e	enum:__anon166
AecmModes	webrtc/common_types.h	/^enum AecmModes {$/;"	g	namespace:webrtc
AecmTrue	webrtc/modules/audio_processing/aecm/echo_control_mobile.h	/^    AecmTrue$/;"	e	enum:__anon166
AffirmTrust_Commercial_certificate	webrtc/base/sslroots.h	/^const unsigned char AffirmTrust_Commercial_certificate[848]={$/;"	v
AffirmTrust_Networking_certificate	webrtc/base/sslroots.h	/^const unsigned char AffirmTrust_Networking_certificate[848]={$/;"	v
AffirmTrust_Premium_ECC_certificate	webrtc/base/sslroots.h	/^const unsigned char AffirmTrust_Premium_ECC_certificate[514]={$/;"	v
AffirmTrust_Premium_certificate	webrtc/base/sslroots.h	/^const unsigned char AffirmTrust_Premium_certificate[1354]={$/;"	v
AfterEnd	webrtc/base/criticalsection_unittest.cc	/^  bool AfterEnd() {$/;"	f	class:rtc::__anon10::RunnerBase
Agc	webrtc/modules/audio_processing/agc/agc.cc	/^Agc::Agc()$/;"	f	class:webrtc::Agc
Agc	webrtc/modules/audio_processing/agc/agc.h	/^class Agc {$/;"	c	namespace:webrtc
AgcConfig	webrtc/common_types.h	/^struct AgcConfig {$/;"	s	namespace:webrtc
AgcManagerDirect	webrtc/modules/audio_processing/agc/agc_manager_direct.cc	/^AgcManagerDirect::AgcManagerDirect(Agc* agc,$/;"	f	class:webrtc::AgcManagerDirect
AgcManagerDirect	webrtc/modules/audio_processing/agc/agc_manager_direct.cc	/^AgcManagerDirect::AgcManagerDirect(GainControl* gctrl,$/;"	f	class:webrtc::AgcManagerDirect
AgcManagerDirectTest	webrtc/modules/audio_processing/agc/agc_manager_direct_unittest.cc	/^  AgcManagerDirectTest()$/;"	f	class:webrtc::AgcManagerDirectTest
AgcManagerDirectTest	webrtc/modules/audio_processing/agc/agc_manager_direct_unittest.cc	/^class AgcManagerDirectTest : public ::testing::Test {$/;"	c	namespace:webrtc	file:
AgcModes	webrtc/common_types.h	/^enum AgcModes {$/;"	g	namespace:webrtc
AgcVad	webrtc/modules/audio_processing/agc/legacy/digital_agc.h	/^} AgcVad;                     \/\/ total = 54 bytes$/;"	t	typeref:struct:__anon173
Aggressiveness	webrtc/common_audio/vad/include/vad.h	/^  enum Aggressiveness {$/;"	g	class:webrtc::Vad
AimAndVerify	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer_unittest.cc	/^void AimAndVerify(NonlinearBeamformer* bf, float target_azimuth_radians) {$/;"	f	namespace:webrtc::__anon190
AimAt	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.cc	/^void NonlinearBeamformer::AimAt(const SphericalPointf& target_direction) {$/;"	f	class:webrtc::NonlinearBeamformer
Algo1_CostFunction	webrtc/modules/audio_processing/config_unittest.cc	/^  Algo1_CostFunction() {}$/;"	f	struct:webrtc::__anon191::Algo1_CostFunction
Algo1_CostFunction	webrtc/modules/audio_processing/config_unittest.cc	/^struct Algo1_CostFunction {$/;"	s	namespace:webrtc::__anon191	file:
AlgorithmicDelaySeconds	webrtc/common_audio/resampler/push_sinc_resampler.h	/^  static float AlgorithmicDelaySeconds(int source_rate_hz) {$/;"	f	class:webrtc::PushSincResampler
AlignedArray	webrtc/system_wrappers/include/aligned_array.h	/^  AlignedArray(size_t rows, size_t cols, size_t alignment)$/;"	f	class:webrtc::AlignedArray
AlignedArray	webrtc/system_wrappers/include/aligned_array.h	/^template<typename T> class AlignedArray {$/;"	c	namespace:webrtc
AlignedFree	webrtc/system_wrappers/source/aligned_malloc.cc	/^void AlignedFree(void* mem_block) {$/;"	f	namespace:webrtc
AlignedFreeDeleter	webrtc/system_wrappers/include/aligned_malloc.h	/^struct AlignedFreeDeleter {$/;"	s	namespace:webrtc
AlignedMalloc	webrtc/system_wrappers/include/aligned_malloc.h	/^T* AlignedMalloc(size_t size, size_t alignment) {$/;"	f	namespace:webrtc
AlignedMalloc	webrtc/system_wrappers/source/aligned_malloc.cc	/^void* AlignedMalloc(size_t size, size_t alignment) {$/;"	f	namespace:webrtc
AllChildrenDone	webrtc/base/taskparent.cc	/^bool TaskParent::AllChildrenDone() {$/;"	f	class:rtc::TaskParent
AllPassFilter	webrtc/common_audio/vad/vad_filterbank.c	/^static void AllPassFilter(const int16_t* data_in, size_t data_length,$/;"	f	file:
AllocCplxBuffer	webrtc/common_audio/real_fourier.cc	/^RealFourier::fft_cplx_scoper RealFourier::AllocCplxBuffer(int count) {$/;"	f	class:webrtc::RealFourier
AllocRealBuffer	webrtc/common_audio/real_fourier.cc	/^RealFourier::fft_real_scoper RealFourier::AllocRealBuffer(int count) {$/;"	f	class:webrtc::RealFourier
AllocateRenderQueue	webrtc/modules/audio_processing/audio_processing_impl.cc	/^void AudioProcessingImpl::AllocateRenderQueue() {$/;"	f	class:webrtc::AudioProcessingImpl
Analysis	webrtc/modules/audio_processing/splitting_filter.cc	/^void SplittingFilter::Analysis(const IFChannelBuffer* data,$/;"	f	class:webrtc::SplittingFilter
Analysis	webrtc/modules/audio_processing/three_band_filter_bank.cc	/^void ThreeBandFilterBank::Analysis(const float* in,$/;"	f	class:webrtc::ThreeBandFilterBank
AnalysisUpdate	webrtc/modules/audio_processing/ns/nsx_core.h	/^typedef void (*AnalysisUpdate)(NoiseSuppressionFixedC* inst,$/;"	t
AnalysisUpdateC	webrtc/modules/audio_processing/ns/nsx_core.c	/^static void AnalysisUpdateC(NoiseSuppressionFixedC* inst,$/;"	f	file:
Analyze	webrtc/modules/audio_processing/level_controller/noise_level_estimator.cc	/^float NoiseLevelEstimator::Analyze(SignalClassifier::SignalType signal_type,$/;"	f	class:webrtc::NoiseLevelEstimator
Analyze	webrtc/modules/audio_processing/level_controller/peak_level_estimator.cc	/^float PeakLevelEstimator::Analyze(SignalClassifier::SignalType signal_type,$/;"	f	class:webrtc::PeakLevelEstimator
Analyze	webrtc/modules/audio_processing/level_controller/signal_classifier.cc	/^void SignalClassifier::Analyze(const AudioBuffer& audio,$/;"	f	class:webrtc::SignalClassifier
AnalyzeCaptureAudio	webrtc/modules/audio_processing/gain_control_impl.cc	/^int GainControlImpl::AnalyzeCaptureAudio(AudioBuffer* audio) {$/;"	f	class:webrtc::GainControlImpl
AnalyzeCaptureAudio	webrtc/modules/audio_processing/noise_suppression_impl.cc	/^void NoiseSuppressionImpl::AnalyzeCaptureAudio(AudioBuffer* audio) {$/;"	f	class:webrtc::NoiseSuppressionImpl
AnalyzeCaptureAudio	webrtc/modules/audio_processing/residual_echo_detector.cc	/^void ResidualEchoDetector::AnalyzeCaptureAudio($/;"	f	class:webrtc::ResidualEchoDetector
AnalyzeChunk	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.cc	/^void NonlinearBeamformer::AnalyzeChunk(const ChannelBuffer<float>& data) {$/;"	f	class:webrtc::NonlinearBeamformer
AnalyzePreProcess	webrtc/modules/audio_processing/agc/agc_manager_direct.cc	/^void AgcManagerDirect::AnalyzePreProcess(int16_t* audio,$/;"	f	class:webrtc::AgcManagerDirect
AnalyzePreproc	webrtc/modules/audio_processing/agc/agc.cc	/^float Agc::AnalyzePreproc(const int16_t* audio, size_t length) {$/;"	f	class:webrtc::Agc
AnalyzeRenderAudio	webrtc/modules/audio_processing/residual_echo_detector.cc	/^void ResidualEchoDetector::AnalyzeRenderAudio($/;"	f	class:webrtc::ResidualEchoDetector
AnalyzeReverseStream	webrtc/modules/audio_processing/audio_processing_impl.cc	/^int AudioProcessingImpl::AnalyzeReverseStream(const float* const* data,$/;"	f	class:webrtc::AudioProcessingImpl
AnalyzeReverseStreamChooser	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^int ApmTest::AnalyzeReverseStreamChooser(Format format) {$/;"	f	class:webrtc::__anon183::ApmTest
AnalyzeReverseStreamLocked	webrtc/modules/audio_processing/audio_processing_impl.cc	/^int AudioProcessingImpl::AnalyzeReverseStreamLocked($/;"	f	class:webrtc::AudioProcessingImpl
AngledCovarianceMatrix	webrtc/modules/audio_processing/beamformer/covariance_matrix_generator.cc	/^void CovarianceMatrixGenerator::AngledCovarianceMatrix($/;"	f	class:webrtc::CovarianceMatrixGenerator
AnnounceOnThread	webrtc/base/thread_checker.h	/^class SCOPED_LOCKABLE AnnounceOnThread {$/;"	c	namespace:rtc::internal
AnyChildError	webrtc/base/taskparent.cc	/^bool TaskParent::AnyChildError() {$/;"	f	class:rtc::TaskParent
ApmCaptureNonLockedState	webrtc/modules/audio_processing/audio_processing_impl.h	/^    ApmCaptureNonLockedState(bool beamformer_enabled,$/;"	f	struct:webrtc::AudioProcessingImpl::ApmCaptureNonLockedState
ApmCaptureNonLockedState	webrtc/modules/audio_processing/audio_processing_impl.h	/^  struct ApmCaptureNonLockedState {$/;"	s	class:webrtc::AudioProcessingImpl
ApmCaptureState	webrtc/modules/audio_processing/audio_processing_impl.cc	/^AudioProcessingImpl::ApmCaptureState::ApmCaptureState($/;"	f	class:webrtc::AudioProcessingImpl::ApmCaptureState
ApmCaptureState	webrtc/modules/audio_processing/audio_processing_impl.h	/^  struct ApmCaptureState {$/;"	s	class:webrtc::AudioProcessingImpl
ApmConstants	webrtc/modules/audio_processing/audio_processing_impl.h	/^    ApmConstants(int agc_startup_min_volume, bool use_experimental_agc)$/;"	f	struct:webrtc::AudioProcessingImpl::ApmConstants
ApmConstants	webrtc/modules/audio_processing/audio_processing_impl.h	/^  const struct ApmConstants {$/;"	s	class:webrtc::AudioProcessingImpl
ApmDataDumper	webrtc/modules/audio_processing/logging/apm_data_dumper.cc	/^ApmDataDumper::ApmDataDumper(int instance_index)$/;"	f	class:webrtc::ApmDataDumper
ApmDataDumper	webrtc/modules/audio_processing/logging/apm_data_dumper.h	/^class ApmDataDumper {$/;"	c	namespace:webrtc
ApmDebugDumpState	webrtc/modules/audio_processing/audio_processing_impl.cc	/^AudioProcessingImpl::ApmDebugDumpState::ApmDebugDumpState()$/;"	f	class:webrtc::AudioProcessingImpl::ApmDebugDumpState
ApmDebugDumpState	webrtc/modules/audio_processing/audio_processing_impl.h	/^  struct ApmDebugDumpState {$/;"	s	class:webrtc::AudioProcessingImpl
ApmDebugDumpThreadState	webrtc/modules/audio_processing/audio_processing_impl.cc	/^AudioProcessingImpl::ApmDebugDumpThreadState::ApmDebugDumpThreadState()$/;"	f	class:webrtc::AudioProcessingImpl::ApmDebugDumpThreadState
ApmDebugDumpThreadState	webrtc/modules/audio_processing/audio_processing_impl.h	/^  struct ApmDebugDumpThreadState {$/;"	s	class:webrtc::AudioProcessingImpl
ApmFormatState	webrtc/modules/audio_processing/audio_processing_impl.h	/^    ApmFormatState()$/;"	f	struct:webrtc::AudioProcessingImpl::ApmFormatState
ApmFormatState	webrtc/modules/audio_processing/audio_processing_impl.h	/^  struct ApmFormatState {$/;"	s	class:webrtc::AudioProcessingImpl
ApmPrivateSubmodules	webrtc/modules/audio_processing/audio_processing_impl.cc	/^  explicit ApmPrivateSubmodules(NonlinearBeamformer* beamformer)$/;"	f	struct:webrtc::AudioProcessingImpl::ApmPrivateSubmodules
ApmPrivateSubmodules	webrtc/modules/audio_processing/audio_processing_impl.cc	/^struct AudioProcessingImpl::ApmPrivateSubmodules {$/;"	s	class:webrtc::AudioProcessingImpl	file:
ApmPublicSubmodules	webrtc/modules/audio_processing/audio_processing_impl.cc	/^  ApmPublicSubmodules() {}$/;"	f	struct:webrtc::AudioProcessingImpl::ApmPublicSubmodules
ApmPublicSubmodules	webrtc/modules/audio_processing/audio_processing_impl.cc	/^struct AudioProcessingImpl::ApmPublicSubmodules {$/;"	s	class:webrtc::AudioProcessingImpl	file:
ApmRenderState	webrtc/modules/audio_processing/audio_processing_impl.h	/^  struct ApmRenderState {$/;"	s	class:webrtc::AudioProcessingImpl
ApmSubmoduleStates	webrtc/modules/audio_processing/audio_processing_impl.cc	/^AudioProcessingImpl::ApmSubmoduleStates::ApmSubmoduleStates() {}$/;"	f	class:webrtc::AudioProcessingImpl::ApmSubmoduleStates
ApmSubmoduleStates	webrtc/modules/audio_processing/audio_processing_impl.h	/^  class ApmSubmoduleStates {$/;"	c	class:webrtc::AudioProcessingImpl
ApmTest	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^ApmTest::ApmTest()$/;"	f	class:webrtc::__anon183::ApmTest
ApmTest	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^class ApmTest : public ::testing::Test {$/;"	c	namespace:webrtc::__anon183	file:
Append	webrtc/base/cryptstring.h	/^  void Append(const CryptString * password) {$/;"	f	class:rtc::FormatCryptString
Append	webrtc/base/cryptstring.h	/^  void Append(const char * data, size_t length) {$/;"	f	class:rtc::FormatCryptString
Append	webrtc/base/cryptstring.h	/^  void Append(const std::string & text) {$/;"	f	class:rtc::FormatCryptString
AppendData	webrtc/base/buffer.h	/^  size_t AppendData(size_t max_elements, F&& setter) {$/;"	f	class:rtc::BufferT
AppendData	webrtc/base/buffer.h	/^  void AppendData(const U& item) {$/;"	f	class:rtc::BufferT
AppendData	webrtc/base/buffer.h	/^  void AppendData(const U* data, size_t size) {$/;"	f	class:rtc::BufferT
AppendData	webrtc/base/buffer.h	/^  void AppendData(const W& w) {$/;"	f	class:rtc::BufferT
AppendData	webrtc/base/copyonwritebuffer.h	/^  void AppendData(const CopyOnWriteBuffer& buf) {$/;"	f	class:rtc::CopyOnWriteBuffer
AppendData	webrtc/base/copyonwritebuffer.h	/^  void AppendData(const T* data, size_t size) {$/;"	f	class:rtc::CopyOnWriteBuffer
AppendFolder	webrtc/base/pathutils.cc	/^void Pathname::AppendFolder(const std::string& folder) {$/;"	f	class:rtc::Pathname
AppendPathname	webrtc/base/pathutils.cc	/^void Pathname::AppendPathname(const std::string& pathname) {$/;"	f	class:rtc::Pathname
AppendToOutBuffer	webrtc/base/asynctcpsocket.cc	/^void AsyncTCPSocketBase::AppendToOutBuffer(const void* pv, size_t cb) {$/;"	f	class:rtc::AsyncTCPSocketBase
Apply	webrtc/base/exp_filter.cc	/^float ExpFilter::Apply(float exp, float sample) {$/;"	f	class:rtc::ExpFilter
Apply	webrtc/modules/audio_processing/intelligibility/intelligibility_utils.cc	/^void GainApplier::Apply(const std::complex<float>* in_block,$/;"	f	class:webrtc::intelligibility::GainApplier
ApplyConfig	webrtc/modules/audio_processing/audio_processing_impl.cc	/^void AudioProcessingImpl::ApplyConfig(const AudioProcessing::Config& config) {$/;"	f	class:webrtc::AudioProcessingImpl
ApplyConfig	webrtc/modules/audio_processing/level_controller/level_controller.cc	/^void LevelController::ApplyConfig($/;"	f	class:webrtc::LevelController
ApplyConstantGain	webrtc/modules/audio_processing/level_controller/gain_applier.cc	/^float ApplyConstantGain(float gain, rtc::ArrayView<float> x) {$/;"	f	namespace:webrtc::__anon207
ApplyDecreasingGain	webrtc/modules/audio_processing/level_controller/gain_applier.cc	/^float ApplyDecreasingGain(float new_gain,$/;"	f	namespace:webrtc::__anon207
ApplyGain	webrtc/modules/audio_processing/level_controller/gain_applier.cc	/^float ApplyGain(float new_gain,$/;"	f	namespace:webrtc::__anon207
ApplyHighFrequencyCorrection	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.cc	/^void NonlinearBeamformer::ApplyHighFrequencyCorrection() {$/;"	f	class:webrtc::NonlinearBeamformer
ApplyIncreasingGain	webrtc/modules/audio_processing/level_controller/gain_applier.cc	/^float ApplyIncreasingGain(float new_gain,$/;"	f	namespace:webrtc::__anon207
ApplyLowFrequencyCorrection	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.cc	/^void NonlinearBeamformer::ApplyLowFrequencyCorrection() {$/;"	f	class:webrtc::NonlinearBeamformer
ApplyMaskFrequencySmoothing	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.cc	/^void NonlinearBeamformer::ApplyMaskFrequencySmoothing() {$/;"	f	class:webrtc::NonlinearBeamformer
ApplyMaskTimeSmoothing	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.cc	/^void NonlinearBeamformer::ApplyMaskTimeSmoothing() {$/;"	f	class:webrtc::NonlinearBeamformer
ApplyRuntimeSettingScheme	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^void CaptureProcessor::ApplyRuntimeSettingScheme() {$/;"	f	class:webrtc::__anon181::CaptureProcessor
ApplyRuntimeSettingScheme	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^void RenderProcessor::ApplyRuntimeSettingScheme() {$/;"	f	class:webrtc::__anon181::RenderProcessor
ApplyWindow	webrtc/common_audio/blocker.cc	/^void ApplyWindow(const float* window,$/;"	f	namespace:__anon77
Architecture	webrtc/base/systeminfo.h	/^  enum Architecture {$/;"	g	class:rtc::SystemInfo
AreEqual	webrtc/base/ipaddress_unittest.cc	/^bool AreEqual(const IPAddress& addr,$/;"	f	namespace:rtc
AreEqual	webrtc/base/socketaddress_unittest.cc	/^bool AreEqual(const SocketAddress& addr1,$/;"	f	namespace:rtc
AreParallel	webrtc/modules/audio_processing/beamformer/array_util.cc	/^bool AreParallel(const Point& a, const Point& b) {$/;"	f	namespace:webrtc
ArePerpendicular	webrtc/modules/audio_processing/beamformer/array_util.cc	/^bool ArePerpendicular(const Point& a, const Point& b) {$/;"	f	namespace:webrtc
AreUnequal	webrtc/base/socketaddress_unittest.cc	/^bool AreUnequal(const SocketAddress& addr1,$/;"	f	namespace:rtc
ArgbToRgba	webrtc/base/x11windowpicker.cc	/^  uint8_t* ArgbToRgba(uint32_t* argb_data,$/;"	f	class:rtc::XWindowEnumerator	file:
Array	webrtc/system_wrappers/include/aligned_array.h	/^  T* const* Array() {$/;"	f	class:webrtc::AlignedArray
Array	webrtc/system_wrappers/include/aligned_array.h	/^  const T* const* Array() const {$/;"	f	class:webrtc::AlignedArray
ArrayView	webrtc/base/array_view.h	/^  ArrayView() : ArrayView(static_cast<T*>(nullptr), 0) {}$/;"	f	class:rtc::final
ArrayView	webrtc/base/array_view.h	/^  ArrayView(U& u) : ArrayView(u.data(), u.size()) {}$/;"	f	class:rtc::final
ArrayView	webrtc/base/array_view.h	/^  ArrayView(U* data, size_t size)$/;"	f	class:rtc::final
ArrayView	webrtc/base/array_view.h	/^  ArrayView(std::nullptr_t) : ArrayView() {}$/;"	f	class:rtc::final
Arrow	webrtc/base/weak_ptr_unittest.cc	/^struct Arrow {$/;"	s	namespace:rtc::__anon74	file:
AsIPv6Address	webrtc/base/ipaddress.cc	/^IPAddress IPAddress::AsIPv6Address() const {$/;"	f	class:rtc::IPAddress
AsanPoison	webrtc/base/sanitizer.h	/^inline void AsanPoison(const T& mem) {$/;"	f	namespace:rtc
AsanUnpoison	webrtc/base/sanitizer.h	/^inline void AsanUnpoison(const T& mem) {$/;"	f	namespace:rtc
Assert	webrtc/base/common.h	/^inline bool Assert(bool result, const char* function, const char* file,$/;"	f	namespace:rtc
AssertBlockingIsAllowedOnCurrentThread	webrtc/base/thread.cc	/^void Thread::AssertBlockingIsAllowedOnCurrentThread() {$/;"	f	class:rtc::Thread
AssertElementEq	webrtc/common_audio/ring_buffer_unittest.cc	/^static void AssertElementEq(int expected, int actual) {$/;"	f	namespace:webrtc
AssertLogger	webrtc/base/common.h	/^typedef void (*AssertLogger)(const char* function,$/;"	t	namespace:rtc
AssertNoBreak	webrtc/base/common.h	/^inline bool AssertNoBreak(bool result, const char* function, const char* file,$/;"	f	namespace:rtc
AsyncClosure	webrtc/base/asyncinvoker-inl.h	/^class AsyncClosure : public RefCountInterface {$/;"	c	namespace:rtc
AsyncFile	webrtc/base/asyncfile.cc	/^AsyncFile::AsyncFile() {$/;"	f	class:rtc::AsyncFile
AsyncFile	webrtc/base/asyncfile.h	/^class AsyncFile {$/;"	c	namespace:rtc
AsyncHttpsProxySocket	webrtc/base/socketadapters.cc	/^AsyncHttpsProxySocket::AsyncHttpsProxySocket(AsyncSocket* socket,$/;"	f	class:rtc::AsyncHttpsProxySocket
AsyncHttpsProxySocket	webrtc/base/socketadapters.h	/^class AsyncHttpsProxySocket : public BufferedReadAdapter {$/;"	c	namespace:rtc
AsyncInvoke	webrtc/base/asyncinvoker.h	/^  bool AsyncInvoke(const Location& posted_from,$/;"	f	class:rtc::GuardedAsyncInvoker
AsyncInvoke	webrtc/base/asyncinvoker.h	/^  void AsyncInvoke(const Location& posted_from,$/;"	f	class:rtc::AsyncInvoker
AsyncInvokeDelayed	webrtc/base/asyncinvoker.h	/^  bool AsyncInvokeDelayed(const Location& posted_from,$/;"	f	class:rtc::GuardedAsyncInvoker
AsyncInvokeDelayed	webrtc/base/asyncinvoker.h	/^  void AsyncInvokeDelayed(const Location& posted_from,$/;"	f	class:rtc::AsyncInvoker
AsyncInvokeIntCallback	webrtc/base/thread_unittest.cc	/^  void AsyncInvokeIntCallback(AsyncInvoker* invoker, Thread* thread) {$/;"	f	class:AsyncInvokeTest
AsyncInvokeIntCallback	webrtc/base/thread_unittest.cc	/^  void AsyncInvokeIntCallback(GuardedAsyncInvoker* invoker, Thread* thread) {$/;"	f	class:GuardedAsyncInvokeTest
AsyncInvokeTest	webrtc/base/thread_unittest.cc	/^  AsyncInvokeTest()$/;"	f	class:AsyncInvokeTest
AsyncInvokeTest	webrtc/base/thread_unittest.cc	/^class AsyncInvokeTest : public testing::Test {$/;"	c	file:
AsyncInvoker	webrtc/base/asyncinvoker.cc	/^AsyncInvoker::AsyncInvoker() : destroying_(false) {}$/;"	f	class:rtc::AsyncInvoker
AsyncInvoker	webrtc/base/asyncinvoker.h	/^class AsyncInvoker : public MessageHandler {$/;"	c	namespace:rtc
AsyncPacketSocket	webrtc/base/asyncpacketsocket.cc	/^AsyncPacketSocket::AsyncPacketSocket() {$/;"	f	class:rtc::AsyncPacketSocket
AsyncPacketSocket	webrtc/base/asyncpacketsocket.h	/^class AsyncPacketSocket : public sigslot::has_slots<> {$/;"	c	namespace:rtc
AsyncProxyServerSocket	webrtc/base/socketadapters.cc	/^AsyncProxyServerSocket::AsyncProxyServerSocket(AsyncSocket* socket,$/;"	f	class:rtc::AsyncProxyServerSocket
AsyncProxyServerSocket	webrtc/base/socketadapters.h	/^class AsyncProxyServerSocket : public BufferedReadAdapter {$/;"	c	namespace:rtc
AsyncResolver	webrtc/base/nethelpers.cc	/^AsyncResolver::AsyncResolver()$/;"	f	class:rtc::AsyncResolver
AsyncResolver	webrtc/base/nethelpers.h	/^class AsyncResolver : public SignalThread, public AsyncResolverInterface {$/;"	c	namespace:rtc
AsyncResolverInterface	webrtc/base/asyncresolverinterface.cc	/^AsyncResolverInterface::AsyncResolverInterface() {$/;"	f	class:rtc::AsyncResolverInterface
AsyncResolverInterface	webrtc/base/asyncresolverinterface.h	/^class AsyncResolverInterface {$/;"	c	namespace:rtc
AsyncSSLServerSocket	webrtc/base/socketadapters.cc	/^AsyncSSLServerSocket::AsyncSSLServerSocket(AsyncSocket* socket)$/;"	f	class:rtc::AsyncSSLServerSocket
AsyncSSLServerSocket	webrtc/base/socketadapters.h	/^class AsyncSSLServerSocket : public BufferedReadAdapter {$/;"	c	namespace:rtc
AsyncSSLSocket	webrtc/base/socketadapters.cc	/^AsyncSSLSocket::AsyncSSLSocket(AsyncSocket* socket)$/;"	f	class:rtc::AsyncSSLSocket
AsyncSSLSocket	webrtc/base/socketadapters.h	/^class AsyncSSLSocket : public BufferedReadAdapter {$/;"	c	namespace:rtc
AsyncSocket	webrtc/base/asyncsocket.cc	/^AsyncSocket::AsyncSocket() {$/;"	f	class:rtc::AsyncSocket
AsyncSocket	webrtc/base/asyncsocket.h	/^class AsyncSocket : public Socket {$/;"	c	namespace:rtc
AsyncSocketAdapter	webrtc/base/asyncsocket.cc	/^AsyncSocketAdapter::AsyncSocketAdapter(AsyncSocket* socket) : socket_(NULL) {$/;"	f	class:rtc::AsyncSocketAdapter
AsyncSocketAdapter	webrtc/base/asyncsocket.h	/^class AsyncSocketAdapter : public AsyncSocket, public sigslot::has_slots<> {$/;"	c	namespace:rtc
AsyncSocksProxyServerSocket	webrtc/base/socketadapters.cc	/^AsyncSocksProxyServerSocket::AsyncSocksProxyServerSocket(AsyncSocket* socket)$/;"	f	class:rtc::AsyncSocksProxyServerSocket
AsyncSocksProxyServerSocket	webrtc/base/socketadapters.h	/^class AsyncSocksProxyServerSocket : public AsyncProxyServerSocket {$/;"	c	namespace:rtc
AsyncSocksProxySocket	webrtc/base/socketadapters.cc	/^AsyncSocksProxySocket::AsyncSocksProxySocket(AsyncSocket* socket,$/;"	f	class:rtc::AsyncSocksProxySocket
AsyncSocksProxySocket	webrtc/base/socketadapters.h	/^class AsyncSocksProxySocket : public BufferedReadAdapter {$/;"	c	namespace:rtc
AsyncTCPSocket	webrtc/base/asynctcpsocket.cc	/^AsyncTCPSocket::AsyncTCPSocket(AsyncSocket* socket, bool listen)$/;"	f	class:rtc::AsyncTCPSocket
AsyncTCPSocket	webrtc/base/asynctcpsocket.h	/^class AsyncTCPSocket : public AsyncTCPSocketBase {$/;"	c	namespace:rtc
AsyncTCPSocketBase	webrtc/base/asynctcpsocket.cc	/^AsyncTCPSocketBase::AsyncTCPSocketBase(AsyncSocket* socket, bool listen,$/;"	f	class:rtc::AsyncTCPSocketBase
AsyncTCPSocketBase	webrtc/base/asynctcpsocket.h	/^class AsyncTCPSocketBase : public AsyncPacketSocket {$/;"	c	namespace:rtc
AsyncTCPSocketTest	webrtc/base/asynctcpsocket_unittest.cc	/^  AsyncTCPSocketTest()$/;"	f	class:rtc::AsyncTCPSocketTest
AsyncTCPSocketTest	webrtc/base/asynctcpsocket_unittest.cc	/^class AsyncTCPSocketTest$/;"	c	namespace:rtc	file:
AsyncUDPSocket	webrtc/base/asyncudpsocket.cc	/^AsyncUDPSocket::AsyncUDPSocket(AsyncSocket* socket)$/;"	f	class:rtc::AsyncUDPSocket
AsyncUDPSocket	webrtc/base/asyncudpsocket.h	/^class AsyncUDPSocket : public AsyncPacketSocket {$/;"	c	namespace:rtc
AsyncUdpSocketTest	webrtc/base/asyncudpsocket_unittest.cc	/^  AsyncUdpSocketTest()$/;"	f	class:rtc::AsyncUdpSocketTest
AsyncUdpSocketTest	webrtc/base/asyncudpsocket_unittest.cc	/^class AsyncUdpSocketTest$/;"	c	namespace:rtc	file:
At	webrtc/system_wrappers/include/aligned_array.h	/^  T& At(size_t row, size_t col) {$/;"	f	class:webrtc::AlignedArray
At	webrtc/system_wrappers/include/aligned_array.h	/^  const T& At(size_t row, size_t col) const {$/;"	f	class:webrtc::AlignedArray
Atomic32	webrtc/system_wrappers/include/atomic32.h	/^class Atomic32 {$/;"	c	namespace:webrtc
AtomicBool	webrtc/base/thread_unittest.cc	/^  explicit AtomicBool(bool value = false) : flag_(value) {}$/;"	f	class:AtomicBool
AtomicBool	webrtc/base/thread_unittest.cc	/^class AtomicBool {$/;"	c	file:
AtomicOp	webrtc/base/criticalsection_unittest.cc	/^  static int AtomicOp(int* i) { return AtomicOps::CompareAndSwap(i, 0, 1); }$/;"	f	struct:rtc::__anon10::CompareAndSwapOp
AtomicOp	webrtc/base/criticalsection_unittest.cc	/^  static int AtomicOp(int* i) { return AtomicOps::Decrement(i); }$/;"	f	struct:rtc::__anon10::DecrementOp
AtomicOp	webrtc/base/criticalsection_unittest.cc	/^  static int AtomicOp(int* i) { return AtomicOps::Increment(i); }$/;"	f	struct:rtc::__anon10::IncrementOp
AtomicOpRunner	webrtc/base/criticalsection_unittest.cc	/^  explicit AtomicOpRunner(int initial_value) : RunnerBase(initial_value) {}$/;"	f	class:rtc::__anon10::AtomicOpRunner
AtomicOpRunner	webrtc/base/criticalsection_unittest.cc	/^class AtomicOpRunner : public RunnerBase {$/;"	c	namespace:rtc::__anon10	file:
AtomicOps	webrtc/base/atomicops.h	/^class AtomicOps {$/;"	c	namespace:rtc
Attach	webrtc/base/asyncsocket.cc	/^void AsyncSocketAdapter::Attach(AsyncSocket* socket) {$/;"	f	class:rtc::AsyncSocketAdapter
Attach	webrtc/base/linux.cc	/^void ConfigParser::Attach(StreamInterface* stream) {$/;"	f	class:rtc::ConfigParser
Attach	webrtc/base/socketstream.cc	/^void SocketStream::Attach(AsyncSocket* socket) {$/;"	f	class:rtc::SocketStream
Attach	webrtc/base/stream.cc	/^void StreamAdapterInterface::Attach(StreamInterface* stream, bool owned) {$/;"	f	class:rtc::StreamAdapterInterface
Attach	webrtc/base/win32socketserver.cc	/^int Win32Socket::Attach(SOCKET s) {$/;"	f	class:rtc::Win32Socket
AttachTap	webrtc/base/stream.cc	/^void StreamTap::AttachTap(StreamInterface* tap) {$/;"	f	class:rtc::StreamTap
Audio	webrtc/modules/include/module_common_types.h	/^  RTPAudioHeader Audio;$/;"	m	union:webrtc::RTPTypeHeader
AudioBuffer	webrtc/modules/audio_processing/audio_buffer.cc	/^AudioBuffer::AudioBuffer(size_t input_num_frames,$/;"	f	class:webrtc::AudioBuffer
AudioBuffer	webrtc/modules/audio_processing/audio_buffer.h	/^class AudioBuffer {$/;"	c	namespace:webrtc
AudioContent	webrtc/modules/audio_processing/agc/loudness_histogram.cc	/^double LoudnessHistogram::AudioContent() const {$/;"	f	class:webrtc::LoudnessHistogram
AudioConverter	webrtc/common_audio/audio_converter.cc	/^AudioConverter::AudioConverter()$/;"	f	class:webrtc::AudioConverter
AudioConverter	webrtc/common_audio/audio_converter.cc	/^AudioConverter::AudioConverter(size_t src_channels, size_t src_frames,$/;"	f	class:webrtc::AudioConverter
AudioConverter	webrtc/common_audio/audio_converter.h	/^class AudioConverter {$/;"	c	namespace:webrtc
AudioDecodingCallStats	webrtc/common_types.h	/^  AudioDecodingCallStats()$/;"	f	struct:webrtc::AudioDecodingCallStats
AudioDecodingCallStats	webrtc/common_types.h	/^struct AudioDecodingCallStats {$/;"	s	namespace:webrtc
AudioFeatures	webrtc/modules/audio_processing/vad/common.h	/^struct AudioFeatures {$/;"	s
AudioFormat	webrtc/common_audio/wav_header.cc	/^  uint16_t AudioFormat;$/;"	m	struct:webrtc::__anon112::FmtSubchunk	file:
AudioFrame	webrtc/modules/include/module_common_types.h	/^class AudioFrame {$/;"	c	namespace:webrtc
AudioFrame	webrtc/modules/include/module_common_types.h	/^inline AudioFrame::AudioFrame()$/;"	f	class:webrtc::AudioFrame
AudioFrameData	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  explicit AudioFrameData(int max_frame_size) {$/;"	f	struct:webrtc::__anon181::AudioFrameData
AudioFrameData	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^struct AudioFrameData {$/;"	s	namespace:webrtc::__anon181	file:
AudioFrameData	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^  explicit AudioFrameData(size_t max_frame_size) {$/;"	f	struct:webrtc::__anon182::AudioFrameData
AudioFrameData	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^struct AudioFrameData {$/;"	s	namespace:webrtc::__anon182	file:
AudioFrameOperations	webrtc/modules/utility/include/audio_frame_operations.h	/^class AudioFrameOperations {$/;"	c	namespace:webrtc
AudioLayers	webrtc/common_types.h	/^enum AudioLayers {$/;"	g	namespace:webrtc
AudioProcessing	webrtc/modules/audio_processing/include/audio_processing.h	/^class AudioProcessing {$/;"	c	namespace:webrtc
AudioProcessingImpl	webrtc/modules/audio_processing/audio_processing_impl.cc	/^AudioProcessingImpl::AudioProcessingImpl(const webrtc::Config& config)$/;"	f	class:webrtc::AudioProcessingImpl
AudioProcessingImpl	webrtc/modules/audio_processing/audio_processing_impl.cc	/^AudioProcessingImpl::AudioProcessingImpl(const webrtc::Config& config,$/;"	f	class:webrtc::AudioProcessingImpl
AudioProcessingImpl	webrtc/modules/audio_processing/audio_processing_impl.h	/^class AudioProcessingImpl : public AudioProcessing {$/;"	c	namespace:webrtc
AudioProcessingImplLockTest	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^AudioProcessingImplLockTest::AudioProcessingImplLockTest()$/;"	f	class:webrtc::__anon181::AudioProcessingImplLockTest
AudioProcessingImplLockTest	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^class AudioProcessingImplLockTest$/;"	c	namespace:webrtc::__anon181	file:
AudioProcessingSimulator	webrtc/modules/audio_processing/test/audio_processing_simulator.cc	/^AudioProcessingSimulator::AudioProcessingSimulator($/;"	f	class:webrtc::test::AudioProcessingSimulator
AudioProcessingSimulator	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^class AudioProcessingSimulator {$/;"	c	namespace:webrtc::test
AudioProcessingStatistics	webrtc/modules/audio_processing/include/audio_processing.h	/^  struct AudioProcessingStatistics {$/;"	s	class:webrtc::AudioProcessing
AudioProcessingTest	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^  AudioProcessingTest()$/;"	f	class:webrtc::__anon183::AudioProcessingTest
AudioProcessingTest	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^class AudioProcessingTest$/;"	c	namespace:webrtc::__anon183	file:
AudioProcessingTestData	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^    AudioProcessingTestData;$/;"	t	namespace:webrtc::__anon183	file:
AudioRingBuffer	webrtc/common_audio/audio_ring_buffer.cc	/^AudioRingBuffer::AudioRingBuffer(size_t channels, size_t max_frames) {$/;"	f	class:webrtc::AudioRingBuffer
AudioRingBufferTest	webrtc/common_audio/audio_ring_buffer_unittest.cc	/^class AudioRingBufferTest :$/;"	c	namespace:webrtc	file:
AutoDetectProxy	webrtc/base/autodetectproxy.cc	/^AutoDetectProxy::AutoDetectProxy(const std::string& user_agent)$/;"	f	class:rtc::AutoDetectProxy
AutoDetectProxy	webrtc/base/autodetectproxy.h	/^class AutoDetectProxy : public SignalThread {$/;"	c	namespace:rtc
AutoDetectProxyRunner	webrtc/base/proxy_unittest.cc	/^  explicit AutoDetectProxyRunner(const std::string& agent)$/;"	f	class:AutoDetectProxyRunner
AutoDetectProxyRunner	webrtc/base/proxy_unittest.cc	/^class AutoDetectProxyRunner : public rtc::AutoDetectProxy {$/;"	c	file:
AutoDetectProxySettings	webrtc/base/proxydetect.cc	/^bool AutoDetectProxySettings(const char* agent, const char* url,$/;"	f	namespace:rtc
AutoDetectProxyTest	webrtc/base/autodetectproxy_unittest.cc	/^  AutoDetectProxyTest() : auto_detect_proxy_(NULL), done_(false) {}$/;"	f	class:rtc::AutoDetectProxyTest
AutoDetectProxyTest	webrtc/base/autodetectproxy_unittest.cc	/^class AutoDetectProxyTest : public testing::Test, public sigslot::has_slots<> {$/;"	c	namespace:rtc	file:
AutoSetCurrentQueuePtr	webrtc/base/task_queue_posix.cc	/^AutoSetCurrentQueuePtr::AutoSetCurrentQueuePtr(TaskQueue* q)$/;"	f	class:rtc::internal::AutoSetCurrentQueuePtr
AutoSetCurrentQueuePtr	webrtc/base/task_queue_posix.h	/^class AutoSetCurrentQueuePtr {$/;"	c	namespace:rtc::internal
AutoThread	webrtc/base/thread.cc	/^AutoThread::AutoThread() {$/;"	f	class:rtc::AutoThread
AutoThread	webrtc/base/thread.h	/^class AutoThread : public Thread {$/;"	c	namespace:rtc
AvaliableSpace	webrtc/modules/audio_processing/aec/aec_core.cc	/^size_t BlockBuffer::AvaliableSpace() {$/;"	f	class:webrtc::BlockBuffer
AvgPitchGain	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  int16_t AvgPitchGain[2];$/;"	m	struct:__anon134
AzimuthToPoint	webrtc/modules/audio_processing/beamformer/array_util.cc	/^Point AzimuthToPoint(float azimuth) {$/;"	f	namespace:webrtc
AzimuthToSphericalPoint	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer_unittest.cc	/^SphericalPointf AzimuthToSphericalPoint(float azimuth_radians) {$/;"	f	namespace:webrtc::__anon190
B	webrtc/base/bind_unittest.cc	/^struct B: public RefCountInterface { int dummy; };$/;"	s	namespace:rtc::__anon4	file:
BASE_INCLUDES	jni/common.mk	/^BASE_INCLUDES	:= ..\/webrtc\/base$/;"	m
BASE_NUMERIC_RANGE_CHECK_RESULT	webrtc/base/safe_conversions_impl.h	/^#define BASE_NUMERIC_RANGE_CHECK_RESULT(/;"	d
BASE_PATH	jni/common.mk	/^BASE_PATH	:= ..\/webrtc\/base$/;"	m
BASE_SOURCE_FILES	jni/common.mk	/^BASE_SOURCE_FILES	:= \\$/;"	m
BASE_THREAD_ANNOTATIONS_H_	webrtc/base/thread_annotations.h	/^#define BASE_THREAD_ANNOTATIONS_H_$/;"	d
BE16	webrtc/base/testutils.h	/^#define BE16(/;"	d
BE32	webrtc/base/testutils.h	/^#define BE32(/;"	d
BE64	webrtc/base/testutils.h	/^#define BE64(/;"	d
BIG_ENDIAN	webrtc/base/testutils.h	/^#define BIG_ENDIAN /;"	d
BIN_SIZE_LRT	webrtc/modules/audio_processing/ns/nsx_defines.h	/^#define BIN_SIZE_LRT /;"	d
BIO_new_socket	webrtc/base/openssladapter.cc	/^static BIO* BIO_new_socket(rtc::AsyncSocket* socket) {$/;"	f	file:
BIO_new_stream	webrtc/base/opensslstreamadapter.cc	/^static BIO* BIO_new_stream(StreamInterface* stream) {$/;"	f	namespace:rtc
BIO_s_socket2	webrtc/base/openssladapter.cc	/^static BIO_METHOD* BIO_s_socket2() { return(&methods_socket); }$/;"	f	file:
BIO_s_stream	webrtc/base/opensslstreamadapter.cc	/^static BIO_METHOD* BIO_s_stream() { return(&methods_stream); }$/;"	f	namespace:rtc
BIT_COUNTER_SIZE	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define BIT_COUNTER_SIZE /;"	d
BIT_MASK_DEC_INIT	webrtc/modules/audio_coding/codecs/isac/main/source/isac.c	/^#define BIT_MASK_DEC_INIT /;"	d	file:
BIT_MASK_ENC_INIT	webrtc/modules/audio_coding/codecs/isac/main/source/isac.c	/^#define BIT_MASK_ENC_INIT /;"	d	file:
BLOCKL_MAX	webrtc/modules/audio_processing/ns/defines.h	/^#define BLOCKL_MAX /;"	d
BOOL	webrtc/base/flags.h	/^  enum Type { BOOL, INT, FLOAT, STRING };$/;"	e	enum:rtc::Flag::Type
BUFFER_SIZE	webrtc/base/transformadapter.h	/^  enum { BUFFER_SIZE = 1024 };$/;"	e	enum:rtc::TransformAdapter::__anon72
BUF_SIZE	webrtc/base/asyncudpsocket.cc	/^static const int BUF_SIZE = 64 * 1024;$/;"	m	namespace:rtc	file:
BUF_SIZE_FRAMES	webrtc/modules/audio_processing/aecm/echo_control_mobile.cc	/^#define BUF_SIZE_FRAMES /;"	d	file:
BURST_INTERVAL	webrtc/modules/audio_coding/codecs/isac/main/source/bandwidth_estimator.h	/^#define BURST_INTERVAL /;"	d
BURST_LEN	webrtc/modules/audio_coding/codecs/isac/main/source/bandwidth_estimator.h	/^#define BURST_LEN /;"	d
BYTE_CAST	webrtc/base/testutils.h	/^#define BYTE_CAST(/;"	d
B_LIM	webrtc/modules/audio_processing/ns/defines.h	/^#define B_LIM /;"	d
Baltimore_CyberTrust_Root_certificate	webrtc/base/sslroots.h	/^const unsigned char Baltimore_CyberTrust_Root_certificate[891]={$/;"	v
Band	webrtc/modules/audio_processing/audio_buffer.h	/^enum Band {$/;"	g	namespace:webrtc
BandwidthTest	webrtc/base/virtualsocket_unittest.cc	/^  void BandwidthTest(const SocketAddress& initial_addr) {$/;"	f	class:VirtualSocketServerTest
Base	webrtc/base/weak_ptr_unittest.cc	/^struct Base {$/;"	s	namespace:rtc::__anon74	file:
Base64	webrtc/base/base64.h	/^class Base64$/;"	c	namespace:rtc
Base64Escape	webrtc/base/base64_unittest.cc	/^size_t Base64Escape(const unsigned char *src, size_t szsrc, char *dest,$/;"	f
Base64Table	webrtc/base/base64.cc	/^const char Base64::Base64Table[] =$/;"	m	class:rtc::Base64	file:
Base64Table	webrtc/base/base64.h	/^  static const char Base64Table[];$/;"	m	class:rtc::Base64
Base64Unescape	webrtc/base/base64_unittest.cc	/^size_t Base64Unescape(const char *src, size_t szsrc, char *dest,$/;"	f
Base64Unescape	webrtc/base/base64_unittest.cc	/^size_t Base64Unescape(const char *src, size_t szsrc, string *s) {$/;"	f
BaseOption	webrtc/modules/audio_processing/include/config.h	/^  struct BaseOption {$/;"	s	class:webrtc::Config
BasicNetworkManager	webrtc/base/network.cc	/^BasicNetworkManager::BasicNetworkManager()$/;"	f	class:rtc::BasicNetworkManager
BasicNetworkManager	webrtc/base/network.h	/^class BasicNetworkManager : public NetworkManagerBase,$/;"	c	namespace:rtc
BasicTest	webrtc/base/virtualsocket_unittest.cc	/^  void BasicTest(const SocketAddress& initial_addr) {$/;"	f	class:VirtualSocketServerTest
BasicWebRtcAecSettings	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  BasicWebRtcAecSettings,$/;"	m	class:webrtc::__anon181::AecType	file:
BasicWebRtcAecSettingsWithDelayAgnosticAec	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  BasicWebRtcAecSettingsWithDelayAgnosticAec,$/;"	m	class:webrtc::__anon181::AecType	file:
BasicWebRtcAecSettingsWithExtentedFilter	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  BasicWebRtcAecSettingsWithExtentedFilter,$/;"	m	class:webrtc::__anon181::AecType	file:
BeamformerSampleRate	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer_unittest.cc	/^int BeamformerSampleRate(int sample_rate_hz) {$/;"	f	namespace:webrtc::__anon190
Beamforming	webrtc/modules/audio_processing/include/audio_processing.cc	/^Beamforming::Beamforming()$/;"	f	class:webrtc::Beamforming
Beamforming	webrtc/modules/audio_processing/include/audio_processing.cc	/^Beamforming::Beamforming(bool enabled, const std::vector<Point>& array_geometry)$/;"	f	class:webrtc::Beamforming
Beamforming	webrtc/modules/audio_processing/include/audio_processing.cc	/^Beamforming::Beamforming(bool enabled,$/;"	f	class:webrtc::Beamforming
Beamforming	webrtc/modules/audio_processing/include/audio_processing.h	/^struct Beamforming {$/;"	s	namespace:webrtc
BeforeStart	webrtc/base/criticalsection_unittest.cc	/^  void BeforeStart() {$/;"	f	class:rtc::__anon10::RunnerBase
BeginCacheFile	webrtc/base/httpclient.cc	/^bool HttpClient::BeginCacheFile() {$/;"	f	class:rtc::HttpClient
BeginProcess	webrtc/base/httpserver.cc	/^HttpServer::Connection::BeginProcess(StreamInterface* stream) {$/;"	f	class:rtc::HttpServer::Connection
BeginSSL	webrtc/base/openssladapter.cc	/^OpenSSLAdapter::BeginSSL() {$/;"	f	class:rtc::OpenSSLAdapter
BeginSSL	webrtc/base/opensslstreamadapter.cc	/^int OpenSSLStreamAdapter::BeginSSL() {$/;"	f	class:rtc::OpenSSLStreamAdapter
BesselJ0	webrtc/modules/audio_processing/beamformer/covariance_matrix_generator.cc	/^float BesselJ0(float x) {$/;"	f	namespace:webrtc::__anon185
Better	webrtc/base/proxydetect.cc	/^bool Better(ProxyType lhs, const ProxyType rhs) {$/;"	f	namespace:rtc
BiQuadCoefficients	webrtc/modules/audio_processing/level_controller/biquad_filter.h	/^  struct BiQuadCoefficients {$/;"	s	class:webrtc::BiQuadFilter
BiQuadFilter	webrtc/modules/audio_processing/level_controller/biquad_filter.h	/^class BiQuadFilter {$/;"	c	namespace:webrtc
BiQuadState	webrtc/modules/audio_processing/level_controller/biquad_filter.h	/^    BiQuadState() {$/;"	f	struct:webrtc::BiQuadFilter::BiQuadState
BiQuadState	webrtc/modules/audio_processing/level_controller/biquad_filter.h	/^  struct BiQuadState {$/;"	s	class:webrtc::BiQuadFilter
BinaryDelayEstimator	webrtc/modules/audio_processing/utility/delay_estimator.h	/^} BinaryDelayEstimator;$/;"	t	typeref:struct:__anon228
BinaryDelayEstimatorFarend	webrtc/modules/audio_processing/utility/delay_estimator.h	/^} BinaryDelayEstimatorFarend;$/;"	t	typeref:struct:__anon227
BinarySpectrumFix	webrtc/modules/audio_processing/utility/delay_estimator_wrapper.cc	/^static uint32_t BinarySpectrumFix(const uint16_t* spectrum,$/;"	f	file:
BinarySpectrumFloat	webrtc/modules/audio_processing/utility/delay_estimator_wrapper.cc	/^static uint32_t BinarySpectrumFloat(const float* spectrum,$/;"	f	file:
Bind	webrtc/base/asyncsocket.cc	/^int AsyncSocketAdapter::Bind(const SocketAddress& addr) {$/;"	f	class:rtc::AsyncSocketAdapter
Bind	webrtc/base/physicalsocketserver.cc	/^int PhysicalSocket::Bind(const SocketAddress& bind_addr) {$/;"	f	class:rtc::PhysicalSocket
Bind	webrtc/base/virtualsocketserver.cc	/^int VirtualSocket::Bind(const SocketAddress& addr) {$/;"	f	class:rtc::VirtualSocket
Bind	webrtc/base/virtualsocketserver.cc	/^int VirtualSocketServer::Bind(VirtualSocket* socket, SocketAddress* addr) {$/;"	f	class:rtc::VirtualSocketServer
Bind	webrtc/base/virtualsocketserver.cc	/^int VirtualSocketServer::Bind(VirtualSocket* socket,$/;"	f	class:rtc::VirtualSocketServer
Bind	webrtc/base/win32socketserver.cc	/^int Win32Socket::Bind(const SocketAddress& addr) {$/;"	f	class:rtc::Win32Socket
BindTester	webrtc/base/callback_unittest.cc	/^struct BindTester {$/;"	s	namespace:rtc::__anon8	file:
BindingList	webrtc/base/proxyserver.h	/^  typedef std::list<ProxyBinding*> BindingList;$/;"	t	class:rtc::ProxyServer
BiquadFilter	webrtc/modules/audio_processing/high_pass_filter_impl.cc	/^  explicit BiquadFilter(int sample_rate_hz) :$/;"	f	class:webrtc::HighPassFilterImpl::BiquadFilter
BiquadFilter	webrtc/modules/audio_processing/high_pass_filter_impl.cc	/^class HighPassFilterImpl::BiquadFilter {$/;"	c	class:webrtc::HighPassFilterImpl	file:
BitBuffer	webrtc/base/bitbuffer.cc	/^BitBuffer::BitBuffer(const uint8_t* bytes, size_t byte_count)$/;"	f	class:rtc::BitBuffer
BitBuffer	webrtc/base/bitbuffer.h	/^class BitBuffer {$/;"	c	namespace:rtc
BitBufferWriter	webrtc/base/bitbuffer.cc	/^BitBufferWriter::BitBufferWriter(uint8_t* bytes, size_t byte_count)$/;"	f	class:rtc::BitBufferWriter
BitBufferWriter	webrtc/base/bitbuffer.h	/^class BitBufferWriter : public BitBuffer {$/;"	c	namespace:rtc
BitCount	webrtc/modules/audio_processing/utility/delay_estimator.cc	/^static int BitCount(uint32_t u32) {$/;"	f	file:
BitCountComparison	webrtc/modules/audio_processing/utility/delay_estimator.cc	/^static void BitCountComparison(uint32_t binary_vector,$/;"	f	file:
BitrateStatistics	webrtc/common_types.h	/^  BitrateStatistics() : bitrate_bps(0), packet_rate(0) {}$/;"	f	struct:webrtc::BitrateStatistics
BitrateStatistics	webrtc/common_types.h	/^struct BitrateStatistics {$/;"	s	namespace:webrtc
BitrateStatisticsObserver	webrtc/common_types.h	/^class BitrateStatisticsObserver {$/;"	c	namespace:webrtc
BitsPerSample	webrtc/common_audio/wav_header.cc	/^  uint16_t BitsPerSample;$/;"	m	struct:webrtc::__anon112::FmtSubchunk	file:
Bitstr	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^} Bitstr;$/;"	t	typeref:struct:Bitstreamstruct
Bitstreamstruct	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^typedef struct Bitstreamstruct {$/;"	s
BlockAlign	webrtc/common_audio/wav_header.cc	/^  uint16_t BlockAlign;$/;"	m	struct:webrtc::__anon112::FmtSubchunk	file:
BlockAlign	webrtc/common_audio/wav_header.cc	/^static inline uint16_t BlockAlign(size_t num_channels,$/;"	f	namespace:webrtc
BlockBuffer	webrtc/modules/audio_processing/aec/aec_core.cc	/^BlockBuffer::BlockBuffer() {$/;"	f	class:webrtc::BlockBuffer
BlockBuffer	webrtc/modules/audio_processing/aec/aec_core.h	/^class BlockBuffer {$/;"	c	namespace:webrtc
BlockMeanCalculator	webrtc/modules/audio_processing/utility/block_mean_calculator.cc	/^BlockMeanCalculator::BlockMeanCalculator(size_t block_length)$/;"	f	class:webrtc::BlockMeanCalculator
BlockMeanCalculator	webrtc/modules/audio_processing/utility/block_mean_calculator.h	/^class BlockMeanCalculator {$/;"	c	namespace:webrtc
BlockThunk	webrtc/common_audio/lapped_transform.h	/^    explicit BlockThunk(LappedTransform* parent) : parent_(parent) {}$/;"	f	class:webrtc::LappedTransform::BlockThunk
BlockThunk	webrtc/common_audio/lapped_transform.h	/^  class BlockThunk : public BlockerCallback {$/;"	c	class:webrtc::LappedTransform
Blocked	webrtc/base/task.h	/^  bool Blocked() const { return blocked_; }$/;"	f	class:rtc::Task
Blocker	webrtc/common_audio/blocker.cc	/^Blocker::Blocker(size_t chunk_size,$/;"	f	class:webrtc::Blocker
Blocker	webrtc/common_audio/blocker.h	/^class Blocker {$/;"	c	namespace:webrtc
BlockerCallback	webrtc/common_audio/blocker.h	/^class BlockerCallback {$/;"	c	namespace:webrtc
BlockerTest	webrtc/common_audio/blocker_unittest.cc	/^class BlockerTest : public ::testing::Test {$/;"	c	namespace:webrtc	file:
BlockingMemoryStream	webrtc/base/httpbase.cc	/^  BlockingMemoryStream(char* buffer, size_t size)$/;"	f	class:rtc::BlockingMemoryStream
BlockingMemoryStream	webrtc/base/httpbase.cc	/^class BlockingMemoryStream : public ExternalMemoryStream {$/;"	c	namespace:rtc	file:
BlockingOperation	webrtc/base/java/src/org/webrtc/ThreadUtils.java	/^  public interface BlockingOperation { void run() throws InterruptedException; }$/;"	i	class:ThreadUtils
Bool	webrtc/base/testutils.h	/^#undef Bool$/;"	d
BoolVectorToJsonArray	webrtc/base/json.cc	/^Json::Value BoolVectorToJsonArray(const std::vector<bool>& in) {$/;"	f	namespace:rtc
BothCountersExceedeThreshold	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  bool BothCountersExceedeThreshold(int threshold) {$/;"	f	class:webrtc::__anon181::FrameCounters
BothCountersExceedeThreshold	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^  bool BothCountersExceedeThreshold(int threshold) const {$/;"	f	class:webrtc::__anon182::FrameCounters
Break	webrtc/base/common.cc	/^void Break() {$/;"	f	namespace:rtc
BrokenIPStringFails	webrtc/base/ipaddress_unittest.cc	/^bool BrokenIPStringFails(const std::string& broken) {$/;"	f	namespace:rtc
Bucket	webrtc/base/rate_statistics.h	/^  struct Bucket {$/;"	s	class:webrtc::RateStatistics
BucketTestFloat	webrtc/base/random_unittest.cc	/^void BucketTestFloat(unsigned int bucket_count,$/;"	f	namespace:webrtc
BucketTestSignedInterval	webrtc/base/random_unittest.cc	/^void BucketTestSignedInterval(unsigned int bucket_count,$/;"	f	namespace:webrtc
BucketTestUnsignedInterval	webrtc/base/random_unittest.cc	/^void BucketTestUnsignedInterval(unsigned int bucket_count,$/;"	f	namespace:webrtc
Buffer	webrtc/base/testutils.h	/^  typedef std::vector<char> Buffer;$/;"	t	class:testing::SocketTestClient
Buffer	webrtc/base/testutils.h	/^  typedef std::vector<char> Buffer;$/;"	t	class:testing::StreamSource
BufferCompat	webrtc/base/buffer.h	/^struct BufferCompat {$/;"	s	namespace:rtc::internal
BufferFillUp	webrtc/modules/audio_processing/aec/system_delay_unittest.cc	/^size_t SystemDelayTest::BufferFillUp() {$/;"	f	class:webrtc::__anon162::SystemDelayTest
BufferInput	webrtc/base/socketadapters.cc	/^void BufferedReadAdapter::BufferInput(bool on) {$/;"	f	class:rtc::BufferedReadAdapter
BufferLevel	webrtc/modules/audio_processing/vad/vad_circular_buffer.cc	/^int VadCircularBuffer::BufferLevel() {$/;"	f	class:webrtc::VadCircularBuffer
BufferNearendFrame	webrtc/modules/audio_processing/aec/aec_core.cc	/^void BufferNearendFrame($/;"	f	namespace:webrtc
BufferOutputBlock	webrtc/modules/audio_processing/aec/aec_core.cc	/^void BufferOutputBlock(size_t num_bands,$/;"	f	namespace:webrtc
BufferQueue	webrtc/base/bufferqueue.cc	/^BufferQueue::BufferQueue(size_t capacity, size_t default_size)$/;"	f	class:rtc::BufferQueue
BufferQueue	webrtc/base/bufferqueue.h	/^class BufferQueue {$/;"	c	namespace:rtc
BufferQueueStream	webrtc/base/sslstreamadapter_unittest.cc	/^  BufferQueueStream(size_t capacity, size_t default_size)$/;"	f	class:BufferQueueStream
BufferQueueStream	webrtc/base/sslstreamadapter_unittest.cc	/^class BufferQueueStream : public rtc::BufferQueue,$/;"	c	file:
BufferT	webrtc/base/buffer.h	/^  BufferT() : size_(0), capacity_(0), data_(nullptr) {$/;"	f	class:rtc::BufferT
BufferT	webrtc/base/buffer.h	/^  BufferT(BufferT&& buf)$/;"	f	class:rtc::BufferT
BufferT	webrtc/base/buffer.h	/^  BufferT(U (&array)[N]) : BufferT(array, N) {}$/;"	f	class:rtc::BufferT
BufferT	webrtc/base/buffer.h	/^  BufferT(U* data, size_t size, size_t capacity) : BufferT(size, capacity) {$/;"	f	class:rtc::BufferT
BufferT	webrtc/base/buffer.h	/^  BufferT(const U* data, size_t size) : BufferT(data, size, size) {}$/;"	f	class:rtc::BufferT
BufferT	webrtc/base/buffer.h	/^  BufferT(size_t size, size_t capacity)$/;"	f	class:rtc::BufferT
BufferT	webrtc/base/buffer.h	/^  explicit BufferT(size_t size) : BufferT(size, size) {}$/;"	f	class:rtc::BufferT
BufferT	webrtc/base/buffer.h	/^class BufferT {$/;"	c	namespace:rtc
BufferedReadAdapter	webrtc/base/socketadapters.cc	/^BufferedReadAdapter::BufferedReadAdapter(AsyncSocket* socket, size_t size)$/;"	f	class:rtc::BufferedReadAdapter
BufferedReadAdapter	webrtc/base/socketadapters.h	/^class BufferedReadAdapter : public AsyncSocketAdapter {$/;"	c	namespace:rtc
BuildFilterString	webrtc/base/dbus.cc	/^std::string DBusSigFilter::BuildFilterString(const std::string &path,$/;"	f	class:rtc::DBusSigFilter
BurstCounter	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  int    BurstCounter;$/;"	m	struct:__anon132
BwEstimatorstr	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^} BwEstimatorstr;$/;"	t	typeref:struct:__anon131
ByteBuffer	webrtc/base/bytebuffer.h	/^  explicit ByteBuffer(ByteOrder byte_order) : byte_order_(byte_order) {}$/;"	f	class:rtc::ByteBuffer
ByteBuffer	webrtc/base/bytebuffer.h	/^class ByteBuffer {$/;"	c	namespace:rtc
ByteBufferReader	webrtc/base/bytebuffer.cc	/^ByteBufferReader::ByteBufferReader(const Buffer& buf)$/;"	f	class:rtc::ByteBufferReader
ByteBufferReader	webrtc/base/bytebuffer.cc	/^ByteBufferReader::ByteBufferReader(const ByteBufferWriter& buf)$/;"	f	class:rtc::ByteBufferReader
ByteBufferReader	webrtc/base/bytebuffer.cc	/^ByteBufferReader::ByteBufferReader(const char* bytes)$/;"	f	class:rtc::ByteBufferReader
ByteBufferReader	webrtc/base/bytebuffer.cc	/^ByteBufferReader::ByteBufferReader(const char* bytes, size_t len)$/;"	f	class:rtc::ByteBufferReader
ByteBufferReader	webrtc/base/bytebuffer.cc	/^ByteBufferReader::ByteBufferReader(const char* bytes, size_t len,$/;"	f	class:rtc::ByteBufferReader
ByteBufferReader	webrtc/base/bytebuffer.h	/^class ByteBufferReader : public ByteBuffer {$/;"	c	namespace:rtc
ByteBufferWriter	webrtc/base/bytebuffer.cc	/^ByteBufferWriter::ByteBufferWriter()$/;"	f	class:rtc::ByteBufferWriter
ByteBufferWriter	webrtc/base/bytebuffer.cc	/^ByteBufferWriter::ByteBufferWriter(ByteOrder byte_order)$/;"	f	class:rtc::ByteBufferWriter
ByteBufferWriter	webrtc/base/bytebuffer.cc	/^ByteBufferWriter::ByteBufferWriter(const char* bytes, size_t len)$/;"	f	class:rtc::ByteBufferWriter
ByteBufferWriter	webrtc/base/bytebuffer.cc	/^ByteBufferWriter::ByteBufferWriter(const char* bytes, size_t len,$/;"	f	class:rtc::ByteBufferWriter
ByteBufferWriter	webrtc/base/bytebuffer.h	/^class ByteBufferWriter : public ByteBuffer {$/;"	c	namespace:rtc
ByteOrder	webrtc/base/bytebuffer.h	/^  enum ByteOrder {$/;"	g	class:rtc::ByteBuffer
ByteRate	webrtc/common_audio/wav_header.cc	/^  uint32_t ByteRate;$/;"	m	struct:webrtc::__anon112::FmtSubchunk	file:
ByteRate	webrtc/common_audio/wav_header.cc	/^static inline uint32_t ByteRate(size_t num_channels, int sample_rate,$/;"	f	namespace:webrtc
ByteReverse	webrtc/base/md5.cc	/^#define ByteReverse(/;"	d	file:
C	webrtc/base/bind_unittest.cc	/^struct C: public A, B {};$/;"	s	namespace:rtc::__anon4	file:
CDEF	webrtc/base/opensslstreamadapter.cc	/^#define CDEF(/;"	d	file:
CDEF	webrtc/base/opensslstreamadapter.cc	/^#undef CDEF$/;"	d	file:
CFFTRND	webrtc/common_audio/signal_processing/complex_fft.c	/^#define CFFTRND /;"	d	file:
CFFTRND	webrtc/common_audio/signal_processing/complex_fft_mips.c	/^#define CFFTRND /;"	d	file:
CFFTRND2	webrtc/common_audio/signal_processing/complex_fft.c	/^#define CFFTRND2 /;"	d	file:
CFFTRND2	webrtc/common_audio/signal_processing/complex_fft_mips.c	/^#define CFFTRND2 /;"	d	file:
CFFTSFT	webrtc/common_audio/signal_processing/complex_fft.c	/^#define CFFTSFT /;"	d	file:
CFFTSFT	webrtc/common_audio/signal_processing/complex_fft_mips.c	/^#define CFFTSFT /;"	d	file:
CGDirectDisplayID	webrtc/base/window.h	/^typedef unsigned int CGDirectDisplayID;$/;"	t
CGWindowID	webrtc/base/window.h	/^typedef unsigned int CGWindowID;$/;"	t
CGWindowListCopyWindowInfoProc	webrtc/base/macwindowpicker.cc	/^typedef CFArrayRef(*CGWindowListCopyWindowInfoProc)(CGWindowListOption,$/;"	t	namespace:rtc	file:
CGWindowListCreateDescriptionFromArrayProc	webrtc/base/macwindowpicker.cc	/^typedef CFArrayRef(*CGWindowListCreateDescriptionFromArrayProc)(CFArrayRef);$/;"	t	namespace:rtc	file:
CHANNEL_VAD	webrtc/modules/audio_processing/aecm/aecm_defines.h	/^#define CHANNEL_VAD /;"	d
CHECK_AND_CAST	WebRTCAudioProcessing_jni.h	/^#define CHECK_AND_CAST /;"	d
CIFFTRND	webrtc/common_audio/signal_processing/complex_fft.c	/^#define CIFFTRND /;"	d	file:
CIFFTRND	webrtc/common_audio/signal_processing/complex_fft_mips.c	/^#define CIFFTRND /;"	d	file:
CIFFTSFT	webrtc/common_audio/signal_processing/complex_fft.c	/^#define CIFFTSFT /;"	d	file:
CIFFTSFT	webrtc/common_audio/signal_processing/complex_fft_mips.c	/^#define CIFFTSFT /;"	d	file:
COMMON_AUDIO_PATH	jni/common.mk	/^COMMON_AUDIO_PATH	:= ..\/webrtc\/common_audio$/;"	m
COMMON_INCLUDES	jni/common.mk	/^COMMON_INCLUDES	:= \\$/;"	m
COMMON_PATH	jni/common.mk	/^COMMON_PATH	:= ..\/webrtc$/;"	m
COMMON_SOURCE_FILES	jni/common.mk	/^COMMON_SOURCE_FILES	:= \\$/;"	m
COMODO_Certification_Authority_certificate	webrtc/base/sslroots.h	/^const unsigned char COMODO_Certification_Authority_certificate[1057]={$/;"	v
COMODO_ECC_Certification_Authority_certificate	webrtc/base/sslroots.h	/^const unsigned char COMODO_ECC_Certification_Authority_certificate[653]={$/;"	v
COMODO_RSA_Certification_Authority_certificate	webrtc/base/sslroots.h	/^const unsigned char COMODO_RSA_Certification_Authority_certificate[1500]={$/;"	v
COMPILE_ASSERT	webrtc/system_wrappers/include/compile_assert_c.h	/^#define COMPILE_ASSERT(/;"	d
COMPILE_TIME_ASSERT	webrtc/base/common.h	/^#define COMPILE_TIME_ASSERT(/;"	d
CONTAINS_RANGE	webrtc/base/safe_conversions_impl.h	/^  CONTAINS_RANGE$/;"	e	enum:rtc::internal::DstRange
CONVOLVE_FUNC	webrtc/common_audio/resampler/sinc_resampler.cc	/^#define CONVOLVE_FUNC /;"	d	file:
CONVOLVE_FUNC	webrtc/common_audio/resampler/sinc_resampler.cc	/^#undef CONVOLVE_FUNC$/;"	d	file:
CONVOLVE_FUNC	webrtc/common_audio/resampler/sinc_resampler_unittest.cc	/^#define CONVOLVE_FUNC /;"	d	file:
CONVOLVE_FUNC	webrtc/common_audio/resampler/sinc_resampler_unittest.cc	/^#undef CONVOLVE_FUNC$/;"	d	file:
CONV_LEN	webrtc/modules/audio_processing/aecm/aecm_defines.h	/^#define CONV_LEN /;"	d
CONV_LEN2	webrtc/modules/audio_processing/aecm/aecm_defines.h	/^#define CONV_LEN2 /;"	d
CORR_BUF_LEN	webrtc/modules/audio_processing/aecm/aecm_defines.h	/^#define CORR_BUF_LEN /;"	d
CORR_DEV	webrtc/modules/audio_processing/aecm/aecm_defines.h	/^#define CORR_DEV /;"	d
CORR_MAX	webrtc/modules/audio_processing/aecm/aecm_defines.h	/^#define CORR_MAX /;"	d
CORR_MAX_BUF	webrtc/modules/audio_processing/aecm/aecm_defines.h	/^#define CORR_MAX_BUF /;"	d
CORR_MAX_LEVEL	webrtc/modules/audio_processing/aecm/aecm_defines.h	/^#define CORR_MAX_LEVEL /;"	d
CORR_MAX_LOW	webrtc/modules/audio_processing/aecm/aecm_defines.h	/^#define CORR_MAX_LOW /;"	d
CORR_WIDTH	webrtc/modules/audio_processing/aecm/aecm_defines.h	/^#define CORR_WIDTH /;"	d
COS72	webrtc/modules/audio_coding/codecs/isac/main/source/fft.c	/^# define COS72 /;"	d	file:
CPUFeature	webrtc/system_wrappers/include/cpu_features_wrapper.h	/^} CPUFeature;$/;"	t	typeref:enum:__anon246
CPU_ARM	webrtc/base/basictypes.h	/^#define CPU_ARM /;"	d
CPU_X86	webrtc/base/basictypes.h	/^#define CPU_X86 /;"	d
CROS_PM_INTERFACE	webrtc/base/dbus.h	/^#define CROS_PM_INTERFACE /;"	d
CROS_PM_PATH	webrtc/base/dbus.h	/^#define CROS_PM_PATH /;"	d
CROS_SIG_POWERCHANGED	webrtc/base/dbus.h	/^#define CROS_SIG_POWERCHANGED /;"	d
CROS_VALUE_RESUME	webrtc/base/dbus.h	/^#define CROS_VALUE_RESUME /;"	d
CROS_VALUE_SLEEP	webrtc/base/dbus.h	/^#define CROS_VALUE_SLEEP /;"	d
CRYPTO_dynlock_value	webrtc/base/openssladapter.cc	/^struct CRYPTO_dynlock_value {$/;"	s	file:
CS_AEAD_AES_128_GCM	webrtc/base/sslstreamadapter.cc	/^const char CS_AEAD_AES_128_GCM[] = "AEAD_AES_128_GCM";$/;"	m	namespace:rtc	file:
CS_AEAD_AES_256_GCM	webrtc/base/sslstreamadapter.cc	/^const char CS_AEAD_AES_256_GCM[] = "AEAD_AES_256_GCM";$/;"	m	namespace:rtc	file:
CS_AES_CM_128_HMAC_SHA1_32	webrtc/base/sslstreamadapter.cc	/^const char CS_AES_CM_128_HMAC_SHA1_32[] = "AES_CM_128_HMAC_SHA1_32";$/;"	m	namespace:rtc	file:
CS_AES_CM_128_HMAC_SHA1_80	webrtc/base/sslstreamadapter.cc	/^const char CS_AES_CM_128_HMAC_SHA1_80[] = "AES_CM_128_HMAC_SHA1_80";$/;"	m	namespace:rtc	file:
CS_CLOSED	webrtc/base/socket.h	/^    CS_CLOSED,$/;"	e	enum:rtc::Socket::ConnState
CS_CONNECTED	webrtc/base/socket.h	/^    CS_CONNECTED$/;"	e	enum:rtc::Socket::ConnState
CS_CONNECTING	webrtc/base/socket.h	/^    CS_CONNECTING,$/;"	e	enum:rtc::Socket::ConnState
CS_DEBUG_CHECKS	webrtc/base/criticalsection.h	/^#define CS_DEBUG_CHECKS /;"	d
CS_DEBUG_CODE	webrtc/base/criticalsection.h	/^#define CS_DEBUG_CODE(/;"	d
CS_READING	webrtc/base/httpclient.h	/^  enum CacheState { CS_READY, CS_WRITING, CS_READING, CS_VALIDATING };$/;"	e	enum:rtc::HttpClient::CacheState
CS_READY	webrtc/base/httpclient.h	/^  enum CacheState { CS_READY, CS_WRITING, CS_READING, CS_VALIDATING };$/;"	e	enum:rtc::HttpClient::CacheState
CS_VALIDATING	webrtc/base/httpclient.h	/^  enum CacheState { CS_READY, CS_WRITING, CS_READING, CS_VALIDATING };$/;"	e	enum:rtc::HttpClient::CacheState
CS_WRITING	webrtc/base/httpclient.h	/^  enum CacheState { CS_READY, CS_WRITING, CS_READING, CS_VALIDATING };$/;"	e	enum:rtc::HttpClient::CacheState
CTA_MAKE_NAME	webrtc/base/common.h	/^#define CTA_MAKE_NAME(/;"	d
CTA_MAKE_NAME2	webrtc/base/common.h	/^#define CTA_MAKE_NAME2(/;"	d
CTA_UNIQUE_NAME	webrtc/base/common.h	/^#define CTA_UNIQUE_NAME /;"	d
CacheLock	webrtc/base/diskcache.h	/^  CacheLock(DiskCache* cache, const std::string& id, bool rollback = false)$/;"	f	class:rtc::CacheLock
CacheLock	webrtc/base/diskcache.h	/^class CacheLock {$/;"	c	namespace:rtc
CacheState	webrtc/base/httpclient.h	/^  enum CacheState { CS_READY, CS_WRITING, CS_READING, CS_VALIDATING };$/;"	g	class:rtc::HttpClient
CalcLinearEnergies	webrtc/modules/audio_processing/aecm/aecm_core.h	/^typedef void (*CalcLinearEnergies)(AecmCore* aecm,$/;"	t
CalcLinearEnergiesC	webrtc/modules/audio_processing/aecm/aecm_core.cc	/^static void CalcLinearEnergiesC(AecmCore* aecm,$/;"	f	file:
CalculateMoments	webrtc/modules/audio_processing/transient/moving_moments.cc	/^void MovingMoments::CalculateMoments(const float* in, size_t in_length,$/;"	f	class:webrtc::MovingMoments
CalculateMomentsAndVerify	webrtc/modules/audio_processing/transient/moving_moments_unittest.cc	/^void MovingMomentsTest::CalculateMomentsAndVerify($/;"	f	class:webrtc::MovingMomentsTest
CalculatePostfilterMask	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.cc	/^float NonlinearBeamformer::CalculatePostfilterMask($/;"	f	class:webrtc::NonlinearBeamformer
CalculatePower	webrtc/modules/audio_processing/aec/aec_core.cc	/^static float CalculatePower(const float* in, size_t num_samples) {$/;"	f	namespace:webrtc
Call	webrtc/base/array_view_unittest.cc	/^void Call(ArrayView<T>) {}$/;"	f	namespace:rtc::__anon1
CallApmCaptureSide	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^void CaptureProcessor::CallApmCaptureSide() {$/;"	f	class:webrtc::__anon181::CaptureProcessor
CallApmRenderSide	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^void RenderProcessor::CallApmRenderSide() {$/;"	f	class:webrtc::__anon181::RenderProcessor
CallCalledSequentiallyOnThread	webrtc/base/sequenced_task_checker_unittest.cc	/^  CallCalledSequentiallyOnThread(bool expect_true,$/;"	f	class:rtc::__anon56::CallCalledSequentiallyOnThread
CallCalledSequentiallyOnThread	webrtc/base/sequenced_task_checker_unittest.cc	/^class CallCalledSequentiallyOnThread {$/;"	c	namespace:rtc::__anon56	file:
CallConvertIfAddrs	webrtc/base/network_unittest.cc	/^  static void CallConvertIfAddrs(const BasicNetworkManager& network_manager,$/;"	f	class:rtc::NetworkTest
CallDoStuffOnThread	webrtc/base/thread_checker_unittest.cc	/^  explicit CallDoStuffOnThread(ThreadCheckerClass* thread_checker_class)$/;"	f	class:rtc::__anon69::CallDoStuffOnThread
CallDoStuffOnThread	webrtc/base/thread_checker_unittest.cc	/^class CallDoStuffOnThread : public Thread {$/;"	c	namespace:rtc::__anon69	file:
CallFunPtr	webrtc/base/function_view.h	/^  static RetT CallFunPtr(VoidUnion vu, ArgT... args) {$/;"	f	class:rtc::final
CallPreProc	webrtc/modules/audio_processing/agc/agc_manager_direct_unittest.cc	/^  void CallPreProc(int num_calls) {$/;"	f	class:webrtc::AgcManagerDirectTest
CallProcess	webrtc/modules/audio_processing/agc/agc_manager_direct_unittest.cc	/^  void CallProcess(int num_calls) {$/;"	f	class:webrtc::AgcManagerDirectTest
CallReadProtectedFunction	webrtc/base/thread_annotations_unittest.cc	/^  void CallReadProtectedFunction() {$/;"	f	class:__anon68::ThreadSafe
CallSessionFileRotatingLogSink	webrtc/base/logsinks.cc	/^CallSessionFileRotatingLogSink::CallSessionFileRotatingLogSink($/;"	f	class:rtc::CallSessionFileRotatingLogSink
CallSessionFileRotatingLogSink	webrtc/base/logsinks.h	/^class CallSessionFileRotatingLogSink : public FileRotatingLogSink {$/;"	c	namespace:rtc
CallSessionFileRotatingStream	webrtc/base/filerotatingstream.cc	/^CallSessionFileRotatingStream::CallSessionFileRotatingStream($/;"	f	class:rtc::CallSessionFileRotatingStream
CallSessionFileRotatingStream	webrtc/base/filerotatingstream.h	/^class CallSessionFileRotatingStream : public FileRotatingStream {$/;"	c	namespace:rtc
CallSimulator	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^  CallSimulator()$/;"	f	class:webrtc::__anon182::CallSimulator
CallSimulator	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^class CallSimulator : public ::testing::TestWithParam<SimulationConfig> {$/;"	c	namespace:webrtc::__anon182	file:
CallStatsObserver	webrtc/modules/include/module_common_types.h	/^class CallStatsObserver {$/;"	c	namespace:webrtc
CallVoidPtr	webrtc/base/function_view.h	/^  static RetT CallVoidPtr(VoidUnion vu, ArgT... args) {$/;"	f	class:rtc::final
CallWith33	webrtc/base/function_view_unittest.cc	/^int CallWith33(rtc::FunctionView<int(int)> fv) {$/;"	f	namespace:rtc::__anon14
CallWriteProtectedFunction	webrtc/base/thread_annotations_unittest.cc	/^  void CallWriteProtectedFunction() {$/;"	f	class:__anon68::ThreadSafe
Callback	webrtc/base/dbus.cc	/^DBusHandlerResult DBusSigFilter::Callback(DBusMessage *message) {$/;"	f	class:rtc::DBusSigFilter
Callback	webrtc/common_audio/lapped_transform.h	/^  class Callback {$/;"	c	class:webrtc::LappedTransform
Callback0	webrtc/base/callback.h	/^  Callback0() {}$/;"	f	class:rtc::Callback0
Callback0	webrtc/base/callback.h	/^  template <class T> Callback0(const T& functor)$/;"	f	class:rtc::Callback0
Callback0	webrtc/base/callback.h	/^class Callback0 {$/;"	c	namespace:rtc
Callback1	webrtc/base/callback.h	/^  Callback1() {}$/;"	f	class:rtc::Callback1
Callback1	webrtc/base/callback.h	/^  template <class T> Callback1(const T& functor)$/;"	f	class:rtc::Callback1
Callback1	webrtc/base/callback.h	/^class Callback1 {$/;"	c	namespace:rtc
Callback2	webrtc/base/callback.h	/^  Callback2() {}$/;"	f	class:rtc::Callback2
Callback2	webrtc/base/callback.h	/^  template <class T> Callback2(const T& functor)$/;"	f	class:rtc::Callback2
Callback2	webrtc/base/callback.h	/^class Callback2 {$/;"	c	namespace:rtc
Callback3	webrtc/base/callback.h	/^  Callback3() {}$/;"	f	class:rtc::Callback3
Callback3	webrtc/base/callback.h	/^  template <class T> Callback3(const T& functor)$/;"	f	class:rtc::Callback3
Callback3	webrtc/base/callback.h	/^class Callback3 {$/;"	c	namespace:rtc
Callback4	webrtc/base/callback.h	/^  Callback4() {}$/;"	f	class:rtc::Callback4
Callback4	webrtc/base/callback.h	/^  template <class T> Callback4(const T& functor)$/;"	f	class:rtc::Callback4
Callback4	webrtc/base/callback.h	/^class Callback4 {$/;"	c	namespace:rtc
Callback5	webrtc/base/callback.h	/^  Callback5() {}$/;"	f	class:rtc::Callback5
Callback5	webrtc/base/callback.h	/^  template <class T> Callback5(const T& functor)$/;"	f	class:rtc::Callback5
Callback5	webrtc/base/callback.h	/^class Callback5 {$/;"	c	namespace:rtc
CallbackCanceled	webrtc/base/asyncinvoker-inl.h	/^  bool CallbackCanceled() const { return calling_thread_ == NULL; }$/;"	f	class:rtc::NotifyingAsyncClosureBase
CalledOnValidThread	webrtc/base/thread_checker.h	/^  bool CalledOnValidThread() const {$/;"	f	class:rtc::ThreadCheckerDoNothing
CalledOnValidThread	webrtc/base/thread_checker_impl.cc	/^bool ThreadCheckerImpl::CalledOnValidThread() const {$/;"	f	class:rtc::ThreadCheckerImpl
CalledSequentially	webrtc/base/sequenced_task_checker.h	/^  bool CalledSequentially() const { return true; }$/;"	f	class:rtc::SequencedTaskCheckerDoNothing
CalledSequentially	webrtc/base/sequenced_task_checker_impl.cc	/^bool SequencedTaskCheckerImpl::CalledSequentially() const {$/;"	f	class:rtc::SequencedTaskCheckerImpl
CanInteractWith	webrtc/base/virtualsocketserver.cc	/^bool VirtualSocketServer::CanInteractWith(VirtualSocket* local,$/;"	f	class:rtc::VirtualSocketServer
CanUse	webrtc/base/ratelimiter.cc	/^bool RateLimiter::CanUse(size_t desired, double time) {$/;"	f	class:rtc::RateLimiter
CancelCallback	webrtc/base/asyncinvoker.cc	/^void NotifyingAsyncClosureBase::CancelCallback() {$/;"	f	class:rtc::NotifyingAsyncClosureBase
Canceller	webrtc/modules/audio_processing/echo_cancellation_impl.cc	/^  Canceller() {$/;"	f	class:webrtc::EchoCancellationImpl::Canceller
Canceller	webrtc/modules/audio_processing/echo_cancellation_impl.cc	/^class EchoCancellationImpl::Canceller {$/;"	c	class:webrtc::EchoCancellationImpl	file:
Canceller	webrtc/modules/audio_processing/echo_control_mobile_impl.cc	/^  Canceller() {$/;"	f	class:webrtc::EchoControlMobileImpl::Canceller
Canceller	webrtc/modules/audio_processing/echo_control_mobile_impl.cc	/^class EchoControlMobileImpl::Canceller {$/;"	c	class:webrtc::EchoControlMobileImpl	file:
Capacity	webrtc/base/bytebuffer.h	/^  size_t Capacity() const { return size_; }$/;"	f	class:rtc::ByteBufferWriter
CaptureApiImpl	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^enum class CaptureApiImpl {$/;"	c	namespace:webrtc::__anon181	file:
CaptureMinusRenderCounters	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  int CaptureMinusRenderCounters() const {$/;"	f	class:webrtc::__anon181::FrameCounters
CaptureMinusRenderCounters	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^  int CaptureMinusRenderCounters() const {$/;"	f	class:webrtc::__anon182::FrameCounters
CaptureMultiBandProcessingActive	webrtc/modules/audio_processing/audio_processing_impl.cc	/^bool AudioProcessingImpl::ApmSubmoduleStates::CaptureMultiBandProcessingActive()$/;"	f	class:webrtc::AudioProcessingImpl::ApmSubmoduleStates
CaptureMultiBandSubModulesActive	webrtc/modules/audio_processing/audio_processing_impl.cc	/^bool AudioProcessingImpl::ApmSubmoduleStates::CaptureMultiBandSubModulesActive()$/;"	f	class:webrtc::AudioProcessingImpl::ApmSubmoduleStates
CaptureProcessor	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^CaptureProcessor::CaptureProcessor(int max_frame_size,$/;"	f	class:webrtc::__anon181::CaptureProcessor
CaptureProcessor	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^class CaptureProcessor {$/;"	c	namespace:webrtc::__anon181	file:
CaptureProcessorThreadFunc	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  static bool CaptureProcessorThreadFunc(void* context) {$/;"	f	class:webrtc::__anon181::AudioProcessingImplLockTest	file:
CaptureProcessorThreadFunc	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^  static bool CaptureProcessorThreadFunc(void* context) {$/;"	f	class:webrtc::__anon182::CallSimulator	file:
CartesianPoint	webrtc/modules/audio_processing/beamformer/array_util.h	/^  CartesianPoint() {$/;"	f	struct:webrtc::CartesianPoint
CartesianPoint	webrtc/modules/audio_processing/beamformer/array_util.h	/^  CartesianPoint(T x, T y, T z) {$/;"	f	struct:webrtc::CartesianPoint
CartesianPoint	webrtc/modules/audio_processing/beamformer/array_util.h	/^struct CartesianPoint {$/;"	s	namespace:webrtc
Cast	webrtc/base/window.h	/^  static DesktopId Cast(int id, int index) {$/;"	f	class:rtc::DesktopId
Cast	webrtc/base/window.h	/^  static WindowId Cast(uint64_t id) {$/;"	f	class:rtc::WindowId
CertificateExpirationTime	webrtc/base/opensslidentity.cc	/^int64_t OpenSSLCertificate::CertificateExpirationTime() const {$/;"	f	class:rtc::OpenSSLCertificate
ChannelBuffer	webrtc/common_audio/channel_buffer.h	/^  ChannelBuffer(size_t num_frames,$/;"	f	class:webrtc::ChannelBuffer
ChannelBuffer	webrtc/common_audio/channel_buffer.h	/^class ChannelBuffer {$/;"	c	namespace:webrtc
ChannelBufferWavReader	webrtc/modules/audio_processing/test/test_utils.cc	/^ChannelBufferWavReader::ChannelBufferWavReader(std::unique_ptr<WavReader> file)$/;"	f	class:webrtc::ChannelBufferWavReader
ChannelBufferWavWriter	webrtc/modules/audio_processing/test/test_utils.cc	/^ChannelBufferWavWriter::ChannelBufferWavWriter(std::unique_ptr<WavWriter> file)$/;"	f	class:webrtc::ChannelBufferWavWriter
ChannelLayout	webrtc/modules/audio_processing/include/audio_processing.h	/^  enum ChannelLayout {$/;"	g	class:webrtc::AudioProcessing
ChannelsFromLayout	webrtc/modules/audio_processing/common.h	/^static inline size_t ChannelsFromLayout(AudioProcessing::ChannelLayout layout) {$/;"	f	namespace:webrtc
CharacterTransformation	webrtc/base/stringutils.h	/^typedef wchar_t(*CharacterTransformation)(wchar_t);$/;"	t	namespace:rtc
Check	webrtc/base/firewallsocketserver.cc	/^bool FirewallSocketServer::Check(FirewallProtocol p,$/;"	f	class:rtc::FirewallSocketServer
Check	webrtc/base/safe_conversions_impl.h	/^  static RangeCheckResult Check(Src value) {$/;"	f	struct:rtc::internal::RangeCheckImpl
Check	webrtc/base/testutils.h	/^  bool Check(AsyncSocket* socket, StreamSinkEvent event, bool reset = true) {$/;"	f	class:testing::StreamSink
Check	webrtc/base/testutils.h	/^  bool Check(StreamInterface* stream, StreamSinkEvent event, bool reset = true) {$/;"	f	class:testing::StreamSink
CheckCache	webrtc/base/httpclient.cc	/^bool HttpClient::CheckCache() {$/;"	f	class:rtc::HttpClient
CheckConnState	webrtc/base/testclient.cc	/^bool TestClient::CheckConnState(AsyncPacketSocket::State state) {$/;"	f	class:rtc::TestClient
CheckConnected	webrtc/base/testclient.h	/^  bool CheckConnected() {$/;"	f	class:rtc::TestClient
CheckCurrent	webrtc/base/task_queue_unittest.cc	/^void CheckCurrent(const char* expected_queue, Event* signal, TaskQueue* queue) {$/;"	f	namespace:rtc::__anon66
CheckExpectedBufferSizes	webrtc/common_audio/resampler/push_resampler.cc	/^void CheckExpectedBufferSizes(size_t src_length,$/;"	f	namespace:webrtc::__anon84
CheckForTimeoutChange	webrtc/base/taskrunner.cc	/^void TaskRunner::CheckForTimeoutChange(int64_t previous_timeout_time) {$/;"	f	class:rtc::TaskRunner
CheckIncrementingData	webrtc/common_audio/ring_buffer_unittest.cc	/^static int CheckIncrementingData(int* data, int num_elements,$/;"	f	namespace:webrtc
CheckInvariant	webrtc/base/array_view.h	/^  void CheckInvariant() const { RTC_DCHECK_EQ(!data_, size_ == 0); }$/;"	f	class:rtc::final
CheckLimit	webrtc/base/diskcache.cc	/^bool DiskCache::CheckLimit() {$/;"	f	class:rtc::DiskCache
CheckMaskCount	webrtc/base/ipaddress_unittest.cc	/^bool CheckMaskCount(const std::string& mask, int expected_length) {$/;"	f	namespace:rtc
CheckNextPacket	webrtc/base/testclient.cc	/^bool TestClient::CheckNextPacket(const char* buf, size_t size,$/;"	f	class:rtc::TestClient
CheckNoPacket	webrtc/base/testclient.cc	/^bool TestClient::CheckNoPacket() {$/;"	f	class:rtc::TestClient
CheckOpenFdList	webrtc/base/linuxfdwalk_unittest.cc	/^static void CheckOpenFdList(std::set<int> fds) {$/;"	f	file:
CheckPortIncrementalization	webrtc/base/virtualsocket_unittest.cc	/^  void CheckPortIncrementalization(const SocketAddress& post,$/;"	f	class:VirtualSocketServerTest
CheckReceive	webrtc/base/nat_unittest.cc	/^bool CheckReceive($/;"	f
CheckSignalClose	webrtc/base/physicalsocketserver.cc	/^  virtual bool CheckSignalClose() { return false; }$/;"	f	class:rtc::EventDispatcher
CheckSignalClose	webrtc/base/physicalsocketserver.cc	/^bool SocketDispatcher::CheckSignalClose() {$/;"	f	class:rtc::SocketDispatcher
CheckSizes	webrtc/common_audio/audio_converter.cc	/^void AudioConverter::CheckSizes(size_t src_size, size_t dst_capacity) const {$/;"	f	class:webrtc::AudioConverter
CheckTimestamp	webrtc/base/testclient.cc	/^bool TestClient::CheckTimestamp(int64_t packet_timestamp) {$/;"	f	class:rtc::TestClient
CheckTruncateIP	webrtc/base/ipaddress_unittest.cc	/^bool CheckTruncateIP(const std::string& initial, int truncate_length,$/;"	f	namespace:rtc
CheckUpdate	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer_unittest.cc	/^  bool CheckUpdate() {$/;"	f	class:webrtc::IntelligibilityEnhancerTest
CheckValidInitParams	webrtc/common_audio/resampler/push_resampler.cc	/^void CheckValidInitParams(int src_sample_rate_hz, int dst_sample_rate_hz,$/;"	f	namespace:webrtc::__anon84
CheckVolumeAndReset	webrtc/modules/audio_processing/agc/agc_manager_direct.cc	/^int AgcManagerDirect::CheckVolumeAndReset() {$/;"	f	class:webrtc::AgcManagerDirect
CheckWavParameters	webrtc/common_audio/wav_header.cc	/^bool CheckWavParameters(size_t num_channels,$/;"	f	namespace:webrtc
CheckedDivExact	webrtc/base/checks.h	/^inline T CheckedDivExact(T a, T b) {$/;"	f	namespace:rtc
ChildSet	webrtc/base/taskparent.h	/^  typedef std::set<Task *> ChildSet;$/;"	t	class:rtc::TaskParent
ChunkHeader	webrtc/common_audio/wav_header.cc	/^struct ChunkHeader {$/;"	s	namespace:webrtc::__anon112	file:
ChunkSize	webrtc/common_audio/resampler/sinc_resampler.cc	/^size_t SincResampler::ChunkSize() const {$/;"	f	class:webrtc::SincResampler
CircularBuffer	webrtc/modules/audio_processing/echo_detector/circular_buffer.cc	/^CircularBuffer::CircularBuffer(size_t size) : buffer_(size) {}$/;"	f	class:webrtc::CircularBuffer
CircularBuffer	webrtc/modules/audio_processing/echo_detector/circular_buffer.h	/^struct CircularBuffer {$/;"	s	namespace:webrtc
ClampLevel	webrtc/modules/audio_processing/agc/agc_manager_direct.cc	/^int ClampLevel(int mic_level) {$/;"	f	namespace:webrtc::__anon169
ClampToInt16	webrtc/modules/include/module_common_types.h	/^inline int16_t ClampToInt16(int32_t input) {$/;"	f	namespace:webrtc::__anon245
ClassifySignal	webrtc/modules/audio_processing/level_controller/signal_classifier.cc	/^webrtc::SignalClassifier::SignalType ClassifySignal($/;"	f	namespace:webrtc::__anon213
CleanUp	webrtc/base/dbus.cc	/^  void CleanUp() {$/;"	f	class:rtc::DBusMonitor::DBusMonitoringThread	file:
Cleanup	webrtc/base/openssladapter.cc	/^OpenSSLAdapter::Cleanup() {$/;"	f	class:rtc::OpenSSLAdapter
Cleanup	webrtc/base/opensslstreamadapter.cc	/^void OpenSSLStreamAdapter::Cleanup(uint8_t alert) {$/;"	f	class:rtc::OpenSSLStreamAdapter
CleanupSSL	webrtc/base/openssladapter.cc	/^bool OpenSSLAdapter::CleanupSSL() {$/;"	f	class:rtc::OpenSSLAdapter
CleanupSSL	webrtc/base/ssladapter.cc	/^bool CleanupSSL() {$/;"	f	namespace:rtc
CleanupTempFiles	webrtc/modules/audio_processing/transient/file_utils_unittest.cc	/^  void CleanupTempFiles() {$/;"	f	class:webrtc::TransientFileUtilsTest
CleanupTemporaryFolder	webrtc/base/pathutils.h	/^inline bool CleanupTemporaryFolder() {$/;"	f	namespace:rtc
Clear	webrtc/base/buffer.h	/^  void Clear() {$/;"	f	class:rtc::BufferT
Clear	webrtc/base/bufferqueue.cc	/^void BufferQueue::Clear() {$/;"	f	class:rtc::BufferQueue
Clear	webrtc/base/bytebuffer.cc	/^void ByteBufferWriter::Clear() {$/;"	f	class:rtc::ByteBufferWriter
Clear	webrtc/base/copyonwritebuffer.cc	/^void CopyOnWriteBuffer::Clear() {$/;"	f	class:rtc::CopyOnWriteBuffer
Clear	webrtc/base/cryptstring.h	/^  void Clear() { impl_.reset(new EmptyCryptStringImpl()); }$/;"	f	class:rtc::CryptString
Clear	webrtc/base/messagequeue.cc	/^void MessageQueue::Clear(MessageHandler* phandler,$/;"	f	class:rtc::MessageQueue
Clear	webrtc/base/messagequeue.cc	/^void MessageQueueManager::Clear(MessageHandler *handler) {$/;"	f	class:rtc::MessageQueueManager
Clear	webrtc/base/socketaddress.cc	/^void SocketAddress::Clear() {$/;"	f	class:rtc::SocketAddress
Clear	webrtc/base/swap_queue.h	/^  void Clear() {$/;"	f	class:webrtc::SwapQueue
Clear	webrtc/base/testutils.h	/^  void Clear() {$/;"	f	class:testing::StreamSource
Clear	webrtc/base/thread.cc	/^void Thread::Clear(MessageHandler* phandler,$/;"	f	class:rtc::Thread
Clear	webrtc/modules/audio_processing/aec/aec_core.cc	/^void DivergentFilterFraction::Clear() {$/;"	f	class:webrtc::DivergentFilterFraction
Clear	webrtc/modules/audio_processing/echo_detector/circular_buffer.cc	/^void CircularBuffer::Clear() {$/;"	f	class:webrtc::CircularBuffer
Clear	webrtc/modules/audio_processing/echo_detector/mean_variance_estimator.cc	/^void MeanVarianceEstimator::Clear() {$/;"	f	class:webrtc::MeanVarianceEstimator
Clear	webrtc/modules/audio_processing/echo_detector/normalized_covariance_estimator.cc	/^void NormalizedCovarianceEstimator::Clear() {$/;"	f	class:webrtc::NormalizedCovarianceEstimator
Clear	webrtc/modules/audio_processing/utility/block_mean_calculator.cc	/^void BlockMeanCalculator::Clear() {$/;"	f	class:webrtc::BlockMeanCalculator
ClearHandler	webrtc/base/physicalsocketserver.cc	/^  void ClearHandler(int signum) {$/;"	f	class:rtc::PosixSignalDispatcher
ClearIPs	webrtc/base/network.h	/^  void ClearIPs() { ips_.clear(); }$/;"	f	class:rtc::Network
ClearInternal	webrtc/base/messagequeue.cc	/^void MessageQueueManager::ClearInternal(MessageHandler *handler) {$/;"	f	class:rtc::MessageQueueManager
ClearNetworks	webrtc/base/network_unittest.cc	/^  void ClearNetworks(BasicNetworkManager& network_manager) {$/;"	f	class:rtc::NetworkTest
ClearOutBuffer	webrtc/base/asynctcpsocket.h	/^  void ClearOutBuffer() { outbuf_.Clear(); }$/;"	f	class:rtc::AsyncTCPSocketBase
ClearRules	webrtc/base/firewallsocketserver.cc	/^void FirewallManager::ClearRules() {$/;"	f	class:rtc::FirewallManager
ClearRules	webrtc/base/firewallsocketserver.cc	/^void FirewallSocketServer::ClearRules() {$/;"	f	class:rtc::FirewallSocketServer
ClearSignal	webrtc/base/physicalsocketserver.cc	/^  void ClearSignal(int signum) {$/;"	f	class:rtc::PosixSignalHandler
ClearSymbols	webrtc/base/latebindingsymboltable.cc	/^void LateBindingSymbolTable::ClearSymbols() {$/;"	f	class:rtc::LateBindingSymbolTable
ClearTempFiles	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^void ClearTempFiles() {$/;"	f	namespace:webrtc::__anon183
ClearTimeout	webrtc/base/task.cc	/^void Task::ClearTimeout() {$/;"	f	class:rtc::Task
ClientCloseDuringConnectInternal	webrtc/base/socket_unittest.cc	/^void SocketTest::ClientCloseDuringConnectInternal(const IPAddress& loopback) {$/;"	f	class:rtc::SocketTest
ClientList	webrtc/base/testechoserver.h	/^  typedef std::list<AsyncTCPSocket*> ClientList;$/;"	t	class:rtc::TestEchoServer
ClipTimestamp	webrtc/base/timestampaligner.cc	/^int64_t TimestampAligner::ClipTimestamp(int64_t filtered_time_us,$/;"	f	class:rtc::TimestampAligner
Clock	webrtc/system_wrappers/include/clock.h	/^class Clock {$/;"	c	namespace:webrtc
ClockInterface	webrtc/base/timeutils.h	/^class ClockInterface {$/;"	c	namespace:rtc
CloneDataIfReferenced	webrtc/base/copyonwritebuffer.cc	/^void CopyOnWriteBuffer::CloneDataIfReferenced(size_t new_capacity) {$/;"	f	class:rtc::CopyOnWriteBuffer
Close	webrtc/base/asyncsocket.cc	/^int AsyncSocketAdapter::Close() {$/;"	f	class:rtc::AsyncSocketAdapter
Close	webrtc/base/asynctcpsocket.cc	/^int AsyncTCPSocketBase::Close() {$/;"	f	class:rtc::AsyncTCPSocketBase
Close	webrtc/base/asyncudpsocket.cc	/^int AsyncUDPSocket::Close() {$/;"	f	class:rtc::AsyncUDPSocket
Close	webrtc/base/file_posix.cc	/^bool File::Close() {$/;"	f	class:rtc::File
Close	webrtc/base/file_win.cc	/^bool File::Close() {$/;"	f	class:rtc::File
Close	webrtc/base/filerotatingstream.cc	/^void FileRotatingStream::Close() {$/;"	f	class:rtc::FileRotatingStream
Close	webrtc/base/fileutils_mock.h	/^    virtual void Close() {$/;"	f	class:rtc::FakeFileStream
Close	webrtc/base/httpserver.cc	/^HttpServer::Close(int connection_id, bool force) {$/;"	f	class:rtc::HttpServer
Close	webrtc/base/openssladapter.cc	/^OpenSSLAdapter::Close() {$/;"	f	class:rtc::OpenSSLAdapter
Close	webrtc/base/opensslstreamadapter.cc	/^void OpenSSLStreamAdapter::Close() {$/;"	f	class:rtc::OpenSSLStreamAdapter
Close	webrtc/base/physicalsocketserver.cc	/^int PhysicalSocket::Close() {$/;"	f	class:rtc::PhysicalSocket
Close	webrtc/base/physicalsocketserver.cc	/^int SocketDispatcher::Close() {$/;"	f	class:rtc::SocketDispatcher
Close	webrtc/base/socketadapters.cc	/^int AsyncHttpsProxySocket::Close() {$/;"	f	class:rtc::AsyncHttpsProxySocket
Close	webrtc/base/socketadapters.cc	/^int AsyncSocksProxySocket::Close() {$/;"	f	class:rtc::AsyncSocksProxySocket
Close	webrtc/base/socketadapters.cc	/^int LoggingSocketAdapter::Close() {$/;"	f	class:rtc::LoggingSocketAdapter
Close	webrtc/base/socketstream.cc	/^void SocketStream::Close() {$/;"	f	class:rtc::SocketStream
Close	webrtc/base/ssladapter_unittest.cc	/^  int Close() {$/;"	f	class:SSLAdapterTestDummyClient
Close	webrtc/base/stream.cc	/^void FifoBuffer::Close() {$/;"	f	class:rtc::FifoBuffer
Close	webrtc/base/stream.cc	/^void FileStream::Close() {$/;"	f	class:rtc::FileStream
Close	webrtc/base/stream.cc	/^void LoggingAdapter::Close() {$/;"	f	class:rtc::LoggingAdapter
Close	webrtc/base/stream.cc	/^void MemoryStreamBase::Close() {$/;"	f	class:rtc::MemoryStreamBase
Close	webrtc/base/stream.cc	/^void NullStream::Close() {$/;"	f	class:rtc::NullStream
Close	webrtc/base/stream.cc	/^void StreamAdapterInterface::Close() {$/;"	f	class:rtc::StreamAdapterInterface
Close	webrtc/base/stream.cc	/^void StringStream::Close() {$/;"	f	class:rtc::StringStream
Close	webrtc/base/stream_unittest.cc	/^  virtual void Close() { }$/;"	f	class:rtc::TestStream
Close	webrtc/base/testutils.h	/^  virtual void Close() { state_ = SS_CLOSED; }$/;"	f	class:testing::StreamSource
Close	webrtc/base/transformadapter.cc	/^TransformAdapter::Close() {$/;"	f	class:rtc::TransformAdapter
Close	webrtc/base/virtualsocketserver.cc	/^int VirtualSocket::Close() {$/;"	f	class:rtc::VirtualSocket
Close	webrtc/base/win32regkey.cc	/^HRESULT RegKey::Close() {$/;"	f	class:rtc::RegKey
Close	webrtc/base/win32socketserver.cc	/^int Win32Socket::Close() {$/;"	f	class:rtc::Win32Socket
Close	webrtc/common_audio/wav_file.cc	/^void WavReader::Close() {$/;"	f	class:webrtc::WavReader
Close	webrtc/common_audio/wav_file.cc	/^void WavWriter::Close() {$/;"	f	class:webrtc::WavWriter
CloseAll	webrtc/base/httpserver.cc	/^HttpServer::CloseAll(bool force) {$/;"	f	class:rtc::HttpServer
CloseCurrentFile	webrtc/base/filerotatingstream.cc	/^void FileRotatingStream::CloseCurrentFile() {$/;"	f	class:rtc::FileRotatingStream
CloseDuringConnectTest	webrtc/base/virtualsocket_unittest.cc	/^  void CloseDuringConnectTest(const SocketAddress& initial_addr) {$/;"	f	class:VirtualSocketServerTest
CloseFile	webrtc/system_wrappers/source/file_impl.cc	/^void FileWrapper::CloseFile() {$/;"	f	class:webrtc::FileWrapper
CloseFileImpl	webrtc/system_wrappers/source/file_impl.cc	/^void FileWrapper::CloseFileImpl() {$/;"	f	class:webrtc::FileWrapper
CloseInClosedCallbackInternal	webrtc/base/socket_unittest.cc	/^void SocketTest::CloseInClosedCallbackInternal(const IPAddress& loopback) {$/;"	f	class:rtc::SocketTest
ClosePlatformFile	webrtc/base/platform_file.cc	/^bool ClosePlatformFile(PlatformFile file) {$/;"	f	namespace:rtc
CloseTcpConnections	webrtc/base/virtualsocketserver.cc	/^bool VirtualSocketServer::CloseTcpConnections($/;"	f	class:rtc::VirtualSocketServer
CloseTest	webrtc/base/virtualsocket_unittest.cc	/^  void CloseTest(const SocketAddress& initial_addr) {$/;"	f	class:VirtualSocketServerTest
ClosureTask	webrtc/base/task_queue.h	/^  explicit ClosureTask(const Closure& closure) : closure_(closure) {}$/;"	f	class:rtc::ClosureTask
ClosureTask	webrtc/base/task_queue.h	/^class ClosureTask : public QueuedTask {$/;"	c	namespace:rtc
ClosureTaskWithCleanup	webrtc/base/task_queue.h	/^  ClosureTaskWithCleanup(const Closure& closure, Cleanup cleanup)$/;"	f	class:rtc::ClosureTaskWithCleanup
ClosureTaskWithCleanup	webrtc/base/task_queue.h	/^class ClosureTaskWithCleanup : public ClosureTask<Closure> {$/;"	c	namespace:rtc
CmpFloat	webrtc/modules/audio_processing/aec/aec_core.cc	/^static int CmpFloat(const void* a, const void* b) {$/;"	f	namespace:webrtc
CmpHelperMemEq	webrtc/base/testutils.h	/^inline AssertionResult CmpHelperMemEq(const char* expected_expression,$/;"	f	namespace:testing
CodecInst	webrtc/common_types.h	/^struct CodecInst {$/;"	s	namespace:webrtc
CoherenceState	webrtc/modules/audio_processing/aec/aec_core.h	/^typedef struct CoherenceState {$/;"	s	namespace:webrtc
CoherenceState	webrtc/modules/audio_processing/aec/aec_core.h	/^} CoherenceState;$/;"	t	namespace:webrtc	typeref:struct:webrtc::CoherenceState
ComThread	webrtc/base/thread.h	/^  ComThread() {}$/;"	f	class:rtc::ComThread
ComThread	webrtc/base/thread.h	/^class ComThread : public Thread {$/;"	c	namespace:rtc
ComThreadTest	webrtc/base/thread_unittest.cc	/^  ComThreadTest() : done_(false) {}$/;"	f	class:ComThreadTest
ComThreadTest	webrtc/base/thread_unittest.cc	/^class ComThreadTest : public testing::Test, public MessageHandler {$/;"	c	file:
ComfortNoise	webrtc/modules/audio_processing/aec/aec_core.cc	/^static void ComfortNoise(bool generate_high_frequency_noise,$/;"	f	namespace:webrtc
ComfortNoise	webrtc/modules/audio_processing/aecm/aecm_core_c.cc	/^static void ComfortNoise(AecmCore* aecm,$/;"	f	file:
ComfortNoise	webrtc/modules/audio_processing/aecm/aecm_core_mips.cc	/^static void ComfortNoise(AecmCore* aecm,$/;"	f	file:
Commit	webrtc/base/diskcache.h	/^  void Commit() { rollback_ = false; }$/;"	f	class:rtc::CacheLock
Comodo_AAA_Services_root_certificate	webrtc/base/sslroots.h	/^const unsigned char Comodo_AAA_Services_root_certificate[1078]={$/;"	v
Comodo_Secure_Services_root_certificate	webrtc/base/sslroots.h	/^const unsigned char Comodo_Secure_Services_root_certificate[1091]={$/;"	v
Comodo_Trusted_Services_root_certificate	webrtc/base/sslroots.h	/^const unsigned char Comodo_Trusted_Services_root_certificate[1095]={$/;"	v
CompareAndSwap	webrtc/base/atomicops.h	/^  static int CompareAndSwap(volatile int* i, int old_value, int new_value) {$/;"	f	class:rtc::AtomicOps
CompareAndSwapOp	webrtc/base/criticalsection_unittest.cc	/^struct CompareAndSwapOp {$/;"	s	namespace:rtc::__anon10	file:
CompareAndSwapPtr	webrtc/base/atomicops.h	/^  static T* CompareAndSwapPtr(T* volatile* ptr, T* old_value, T* new_value) {$/;"	f	class:rtc::AtomicOps
CompareAndSwapVerifier	webrtc/base/criticalsection_unittest.cc	/^  CompareAndSwapVerifier() : zero_count_(0) {}$/;"	f	class:rtc::__anon10::CompareAndSwapVerifier
CompareAndSwapVerifier	webrtc/base/criticalsection_unittest.cc	/^class CompareAndSwapVerifier {$/;"	c	namespace:rtc::__anon10	file:
CompareNetworks	webrtc/base/network.cc	/^bool CompareNetworks(const Network* a, const Network* b) {$/;"	f	namespace:rtc::__anon34
Complete	webrtc/base/autodetectproxy.cc	/^void AutoDetectProxy::Complete(ProxyType type) {$/;"	f	class:rtc::AutoDetectProxy
CompleteCacheFile	webrtc/base/httpclient.cc	/^void HttpClient::CompleteCacheFile() {$/;"	f	class:rtc::HttpClient
CompleteConnect	webrtc/base/virtualsocketserver.cc	/^void VirtualSocket::CompleteConnect(const SocketAddress& addr, bool notify) {$/;"	f	class:rtc::VirtualSocket
CompleteValidate	webrtc/base/httpclient.cc	/^HttpError HttpClient::CompleteValidate() {$/;"	f	class:rtc::HttpClient
ComplexInt16	webrtc/modules/audio_processing/aecm/aecm_core.h	/^} ComplexInt16;$/;"	t	typeref:struct:__anon163
ComplexLength	webrtc/common_audio/real_fourier.cc	/^size_t RealFourier::ComplexLength(int order) {$/;"	f	class:webrtc::RealFourier
ComplexMagnitude	webrtc/modules/audio_processing/transient/transient_suppressor.cc	/^float ComplexMagnitude(float a, float b) {$/;"	f	namespace:webrtc::__anon226
ComplexMatrix	webrtc/modules/audio_processing/beamformer/complex_matrix.h	/^  ComplexMatrix() : Matrix<complex<T> >() {}$/;"	f	class:webrtc::ComplexMatrix
ComplexMatrix	webrtc/modules/audio_processing/beamformer/complex_matrix.h	/^  ComplexMatrix(const complex<T>* data, size_t num_rows, size_t num_columns)$/;"	f	class:webrtc::ComplexMatrix
ComplexMatrix	webrtc/modules/audio_processing/beamformer/complex_matrix.h	/^  ComplexMatrix(size_t num_rows, size_t num_columns)$/;"	f	class:webrtc::ComplexMatrix
ComplexMatrix	webrtc/modules/audio_processing/beamformer/complex_matrix.h	/^class ComplexMatrix : public Matrix<complex<T> > {$/;"	c	namespace:webrtc
ComplexMatrixF	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.h	/^  typedef ComplexMatrix<float> ComplexMatrixF;$/;"	t	class:webrtc::NonlinearBeamformer
CompositionConverter	webrtc/common_audio/audio_converter.cc	/^  CompositionConverter(std::vector<std::unique_ptr<AudioConverter>> converters)$/;"	f	class:webrtc::CompositionConverter
CompositionConverter	webrtc/common_audio/audio_converter.cc	/^class CompositionConverter : public AudioConverter {$/;"	c	namespace:webrtc	file:
ComputeCoherence	webrtc/modules/audio_processing/aec/aec_core.cc	/^static void ComputeCoherence(const CoherenceState* coherence_state,$/;"	f	namespace:webrtc
ComputeCoherenceNEON	webrtc/modules/audio_processing/aec/aec_core_neon.cc	/^static void ComputeCoherenceNEON(const CoherenceState* coherence_state,$/;"	f	namespace:webrtc
ComputeCoherenceSSE2	webrtc/modules/audio_processing/aec/aec_core_sse2.cc	/^static void ComputeCoherenceSSE2(const CoherenceState* coherence_state,$/;"	f	namespace:webrtc
ComputeCrc32	webrtc/base/crc32.h	/^inline uint32_t ComputeCrc32(const std::string& str) {$/;"	f	namespace:rtc
ComputeCrc32	webrtc/base/crc32.h	/^inline uint32_t ComputeCrc32(const void* buf, size_t len) {$/;"	f	namespace:rtc
ComputeDdBasedWienerFilter	webrtc/modules/audio_processing/ns/ns_core.c	/^static void ComputeDdBasedWienerFilter(const NoiseSuppressionC* self,$/;"	f	file:
ComputeDigest	webrtc/base/messagedigest.cc	/^bool ComputeDigest(const std::string& alg, const std::string& input,$/;"	f	namespace:rtc
ComputeDigest	webrtc/base/messagedigest.cc	/^size_t ComputeDigest(MessageDigest* digest, const void* input, size_t in_len,$/;"	f	namespace:rtc
ComputeDigest	webrtc/base/messagedigest.cc	/^size_t ComputeDigest(const std::string& alg, const void* input, size_t in_len,$/;"	f	namespace:rtc
ComputeDigest	webrtc/base/messagedigest.cc	/^std::string ComputeDigest(MessageDigest* digest, const std::string& input) {$/;"	f	namespace:rtc
ComputeDigest	webrtc/base/messagedigest.cc	/^std::string ComputeDigest(const std::string& alg, const std::string& input) {$/;"	f	namespace:rtc
ComputeDigest	webrtc/base/opensslidentity.cc	/^bool OpenSSLCertificate::ComputeDigest(const X509* x509,$/;"	f	class:rtc::OpenSSLCertificate
ComputeDigest	webrtc/base/opensslidentity.cc	/^bool OpenSSLCertificate::ComputeDigest(const std::string& algorithm,$/;"	f	class:rtc::OpenSSLCertificate
ComputeExponent	webrtc/modules/audio_processing/vad/gmm.cc	/^static double ComputeExponent(const double* in,$/;"	f	namespace:webrtc
ComputeHmac	webrtc/base/messagedigest.cc	/^bool ComputeHmac(const std::string& alg, const std::string& key,$/;"	f	namespace:rtc
ComputeHmac	webrtc/base/messagedigest.cc	/^size_t ComputeHmac(MessageDigest* digest,$/;"	f	namespace:rtc
ComputeHmac	webrtc/base/messagedigest.cc	/^size_t ComputeHmac(const std::string& alg, const void* key, size_t key_len,$/;"	f	namespace:rtc
ComputeHmac	webrtc/base/messagedigest.cc	/^std::string ComputeHmac(MessageDigest* digest, const std::string& key,$/;"	f	namespace:rtc
ComputeHmac	webrtc/base/messagedigest.cc	/^std::string ComputeHmac(const std::string& alg, const std::string& key,$/;"	f	namespace:rtc
ComputeMax	webrtc/base/rollingaccumulator.h	/^  T ComputeMax() const {$/;"	f	class:rtc::RollingAccumulator
ComputeMean	webrtc/base/rollingaccumulator.h	/^  double ComputeMean() const {$/;"	f	class:rtc::RollingAccumulator
ComputeMin	webrtc/base/rollingaccumulator.h	/^  T ComputeMin() const {$/;"	f	class:rtc::RollingAccumulator
ComputeRate	webrtc/base/ratetracker.h	/^  double ComputeRate() const {$/;"	f	class:rtc::RateTracker
ComputeRateForInterval	webrtc/base/ratetracker.cc	/^double RateTracker::ComputeRateForInterval($/;"	f	class:rtc::RateTracker
ComputeSNR	webrtc/common_audio/audio_converter_unittest.cc	/^float ComputeSNR(const ChannelBuffer<float>& ref,$/;"	f	namespace:webrtc
ComputeSNR	webrtc/modules/audio_processing/test/test_utils.h	/^float ComputeSNR(const T* ref, const T* test, size_t length, float* variance) {$/;"	f	namespace:webrtc
ComputeSnr	webrtc/modules/audio_processing/ns/ns_core.c	/^static void ComputeSnr(const NoiseSuppressionC* self,$/;"	f	file:
ComputeSpectralDifference	webrtc/modules/audio_processing/ns/ns_core.c	/^static void ComputeSpectralDifference(NoiseSuppressionC* self,$/;"	f	file:
ComputeSpectralFlatness	webrtc/modules/audio_processing/ns/ns_core.c	/^static void ComputeSpectralFlatness(NoiseSuppressionC* self,$/;"	f	file:
ComputeSum	webrtc/base/rollingaccumulator.h	/^  T ComputeSum() const {$/;"	f	class:rtc::RollingAccumulator
ComputeTotalRate	webrtc/base/ratetracker.cc	/^double RateTracker::ComputeTotalRate() const {$/;"	f	class:rtc::RateTracker
ComputeVariance	webrtc/base/rollingaccumulator.h	/^  double ComputeVariance() const {$/;"	f	class:rtc::RollingAccumulator
ComputeWeightedMean	webrtc/base/rollingaccumulator.h	/^  double ComputeWeightedMean(double learning_rate) const {$/;"	f	class:rtc::RollingAccumulator
ComputeWorkIpSize	webrtc/common_audio/real_fourier_ooura.cc	/^size_t ComputeWorkIpSize(size_t fft_length) {$/;"	f	namespace:webrtc::__anon82
Config	webrtc/modules/audio_processing/include/audio_processing.h	/^  struct Config {$/;"	s	class:webrtc::AudioProcessing
Config	webrtc/modules/audio_processing/include/config.cc	/^Config::Config() {}$/;"	f	class:webrtc::Config
Config	webrtc/modules/audio_processing/include/config.h	/^class Config {$/;"	c	namespace:webrtc
ConfigOptionID	webrtc/modules/audio_processing/include/config.h	/^enum class ConfigOptionID {$/;"	c	namespace:webrtc
ConfigParser	webrtc/base/linux.cc	/^ConfigParser::ConfigParser() {}$/;"	f	class:rtc::ConfigParser
ConfigParser	webrtc/base/linux.h	/^class ConfigParser {$/;"	c	namespace:rtc
Configure	webrtc/modules/audio_processing/echo_cancellation_impl.cc	/^int EchoCancellationImpl::Configure() {$/;"	f	class:webrtc::EchoCancellationImpl
Configure	webrtc/modules/audio_processing/echo_control_mobile_impl.cc	/^int EchoControlMobileImpl::Configure() {$/;"	f	class:webrtc::EchoControlMobileImpl
Configure	webrtc/modules/audio_processing/gain_control_impl.cc	/^int GainControlImpl::Configure() {$/;"	f	class:webrtc::GainControlImpl
ConfigureApm	webrtc/modules/audio_processing/test/debug_dump_replayer.cc	/^void DebugDumpReplayer::ConfigureApm(const audioproc::Config& msg) {$/;"	f	class:webrtc::test::DebugDumpReplayer
ConfigureIdentity	webrtc/base/opensslidentity.cc	/^bool OpenSSLIdentity::ConfigureIdentity(SSL_CTX* ctx) {$/;"	f	class:rtc::OpenSSLIdentity
ConfigureLogging	webrtc/base/logging.cc	/^void LogMessage::ConfigureLogging(const char* params) {$/;"	f	class:rtc::LogMessage
ConfigureTrustedRootCertificates	webrtc/base/openssladapter.cc	/^bool OpenSSLAdapter::ConfigureTrustedRootCertificates(SSL_CTX* ctx) {$/;"	f	class:rtc::OpenSSLAdapter
Conjugate	webrtc/common_audio/real_fourier_ooura.cc	/^void Conjugate(complex<float>* array, size_t complex_length) {$/;"	f	namespace:webrtc::__anon82
ConjugateDotProduct	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.cc	/^complex<float> ConjugateDotProduct(const ComplexMatrix<float>& lhs,$/;"	f	namespace:webrtc::__anon188
ConjugateTranspose	webrtc/modules/audio_processing/beamformer/complex_matrix.h	/^  ComplexMatrix& ConjugateTranspose() {$/;"	f	class:webrtc::ComplexMatrix
ConjugateTranspose	webrtc/modules/audio_processing/beamformer/complex_matrix.h	/^  ComplexMatrix& ConjugateTranspose(const ComplexMatrix& operand) {$/;"	f	class:webrtc::ComplexMatrix
ConjugateTranspose	webrtc/modules/audio_processing/beamformer/complex_matrix.h	/^  ComplexMatrix& ConjugateTranspose(const complex<T>* const* src) {$/;"	f	class:webrtc::ComplexMatrix
ConnState	webrtc/base/socket.h	/^  enum ConnState {$/;"	g	class:rtc::Socket
Connect	webrtc/base/asyncsocket.cc	/^int AsyncSocketAdapter::Connect(const SocketAddress& addr) {$/;"	f	class:rtc::AsyncSocketAdapter
Connect	webrtc/base/httprequest.cc	/^void HttpMonitor::Connect(HttpClient *http) {$/;"	f	class:HttpMonitor
Connect	webrtc/base/physicalsocketserver.cc	/^int PhysicalSocket::Connect(const SocketAddress& addr) {$/;"	f	class:rtc::PhysicalSocket
Connect	webrtc/base/sigslot_unittest.cc	/^  void Connect() {$/;"	f	class:SigslotSlotTest
Connect	webrtc/base/sigslot_unittest.cc	/^  void Connect(sigslot::signal0<signal_policy>* signal) {$/;"	f	class:SigslotReceiver
Connect	webrtc/base/socketadapters.cc	/^int AsyncHttpsProxySocket::Connect(const SocketAddress& addr) {$/;"	f	class:rtc::AsyncHttpsProxySocket
Connect	webrtc/base/socketadapters.cc	/^int AsyncSSLSocket::Connect(const SocketAddress& addr) {$/;"	f	class:rtc::AsyncSSLSocket
Connect	webrtc/base/socketadapters.cc	/^int AsyncSocksProxySocket::Connect(const SocketAddress& addr) {$/;"	f	class:rtc::AsyncSocksProxySocket
Connect	webrtc/base/ssladapter_unittest.cc	/^  int Connect(const std::string& hostname, const rtc::SocketAddress& address) {$/;"	f	class:SSLAdapterTestDummyClient
Connect	webrtc/base/virtualsocketserver.cc	/^int VirtualSocket::Connect(const SocketAddress& addr) {$/;"	f	class:rtc::VirtualSocket
Connect	webrtc/base/virtualsocketserver.cc	/^int VirtualSocketServer::Connect(VirtualSocket* socket,$/;"	f	class:rtc::VirtualSocketServer
Connect	webrtc/base/win32socketserver.cc	/^int Win32Socket::Connect(const SocketAddress& addr) {$/;"	f	class:rtc::Win32Socket
ConnectEvents	webrtc/base/nat_unittest.cc	/^  void ConnectEvents() {$/;"	f	class:NatTcpTest
ConnectFailInternal	webrtc/base/socket_unittest.cc	/^void SocketTest::ConnectFailInternal(const IPAddress& loopback) {$/;"	f	class:rtc::SocketTest
ConnectInternal	webrtc/base/socket_unittest.cc	/^void SocketTest::ConnectInternal(const IPAddress& loopback) {$/;"	f	class:rtc::SocketTest
ConnectInternalAcceptError	webrtc/base/physicalsocketserver_unittest.cc	/^void PhysicalSocketTest::ConnectInternalAcceptError(const IPAddress& loopback) {$/;"	f	class:rtc::PhysicalSocketTest
ConnectSocket	webrtc/base/asynctcpsocket.cc	/^AsyncSocket* AsyncTCPSocketBase::ConnectSocket($/;"	f	class:rtc::AsyncTCPSocketBase
ConnectTest	webrtc/base/virtualsocket_unittest.cc	/^  void ConnectTest(const SocketAddress& initial_addr) {$/;"	f	class:VirtualSocketServerTest
ConnectToNonListenerTest	webrtc/base/virtualsocket_unittest.cc	/^  void ConnectToNonListenerTest(const SocketAddress& initial_addr) {$/;"	f	class:VirtualSocketServerTest
ConnectWhileNotClosedInternal	webrtc/base/socket_unittest.cc	/^void SocketTest::ConnectWhileNotClosedInternal(const IPAddress& loopback) {$/;"	f	class:rtc::SocketTest
ConnectWithClosedSocketInternal	webrtc/base/socket_unittest.cc	/^void SocketTest::ConnectWithClosedSocketInternal(const IPAddress& loopback) {$/;"	f	class:rtc::SocketTest
ConnectWithDnsLookupFailInternal	webrtc/base/socket_unittest.cc	/^void SocketTest::ConnectWithDnsLookupFailInternal(const IPAddress& loopback) {$/;"	f	class:rtc::SocketTest
ConnectWithDnsLookupInternal	webrtc/base/socket_unittest.cc	/^void SocketTest::ConnectWithDnsLookupInternal(const IPAddress& loopback,$/;"	f	class:rtc::SocketTest
ConnectedList	webrtc/base/socketpool.h	/^  typedef std::list<ConnectedStream> ConnectedList;$/;"	t	class:rtc::StreamCache
ConnectedStream	webrtc/base/socketpool.h	/^  typedef std::pair<SocketAddress, StreamInterface*> ConnectedStream;$/;"	t	class:rtc::StreamCache
Connection	webrtc/base/httpserver.cc	/^HttpServer::Connection::Connection(int connection_id, HttpServer* server)$/;"	f	class:rtc::HttpServer::Connection
Connection	webrtc/base/httpserver.h	/^  class Connection : private IHttpNotify {$/;"	c	class:rtc::HttpServer
ConnectionMap	webrtc/base/httpserver.h	/^  typedef std::map<int,Connection*> ConnectionMap;$/;"	t	class:rtc::HttpServer
ConnectionMap	webrtc/base/virtualsocketserver.h	/^  typedef std::map<SocketAddressPair, VirtualSocket*> ConnectionMap;$/;"	t	class:rtc::VirtualSocketServer
ConstantLabel	webrtc/base/logging.h	/^struct ConstantLabel { int value; const char * label; };$/;"	s	namespace:rtc
Construct	webrtc/base/bytebuffer.cc	/^void ByteBufferReader::Construct(const char* bytes, size_t len) {$/;"	f	class:rtc::ByteBufferReader
Construct	webrtc/base/bytebuffer.cc	/^void ByteBufferWriter::Construct(const char* bytes, size_t len) {$/;"	f	class:rtc::ByteBufferWriter
Consume	webrtc/base/bytebuffer.cc	/^bool ByteBufferReader::Consume(size_t size) {$/;"	f	class:rtc::ByteBufferReader
Consume	webrtc/base/virtualsocketserver.cc	/^  void Consume(size_t size) {$/;"	f	class:rtc::Packet
ConsumeBits	webrtc/base/bitbuffer.cc	/^bool BitBuffer::ConsumeBits(size_t bit_count) {$/;"	f	class:rtc::BitBuffer
ConsumeBytes	webrtc/base/bitbuffer.cc	/^bool BitBuffer::ConsumeBytes(size_t byte_count) {$/;"	f	class:rtc::BitBuffer
ConsumeReadData	webrtc/base/stream.cc	/^void FifoBuffer::ConsumeReadData(size_t size) {$/;"	f	class:rtc::FifoBuffer
ConsumeReadData	webrtc/base/stream.h	/^  virtual void ConsumeReadData(size_t used) {}$/;"	f	class:rtc::StreamInterface
ConsumeWriteBuffer	webrtc/base/stream.cc	/^void FifoBuffer::ConsumeWriteBuffer(size_t size) {$/;"	f	class:rtc::FifoBuffer
ConsumeWriteBuffer	webrtc/base/stream.h	/^  virtual void ConsumeWriteBuffer(size_t used) {}$/;"	f	class:rtc::StreamInterface
ContainsKey	webrtc/system_wrappers/include/stl_util.h	/^bool ContainsKey(const Collection& collection, const Key& key) {$/;"	f	namespace:webrtc
ContentType	webrtc/config.h	/^  enum class ContentType {$/;"	c	class:webrtc::VideoEncoderConfig
ContinueSSL	webrtc/base/openssladapter.cc	/^OpenSSLAdapter::ContinueSSL() {$/;"	f	class:rtc::OpenSSLAdapter
ContinueSSL	webrtc/base/opensslstreamadapter.cc	/^int OpenSSLStreamAdapter::ContinueSSL() {$/;"	f	class:rtc::OpenSSLStreamAdapter
ContinueWork	webrtc/base/signalthread.cc	/^bool SignalThread::ContinueWork() {$/;"	f	class:rtc::SignalThread
ControlLb	webrtc/modules/audio_coding/codecs/isac/main/source/isac.c	/^static int16_t ControlLb(ISACLBStruct* instISAC, double rate,$/;"	f	file:
ControlUb	webrtc/modules/audio_coding/codecs/isac/main/source/isac.c	/^static int16_t ControlUb(ISACUBStruct* instISAC, double rate) {$/;"	f	file:
ConvertByteArrayToDouble	webrtc/modules/audio_processing/transient/file_utils.cc	/^int ConvertByteArrayToDouble(const uint8_t bytes[8], double* out) {$/;"	f	namespace:webrtc
ConvertByteArrayToFloat	webrtc/modules/audio_processing/transient/file_utils.cc	/^int ConvertByteArrayToFloat(const uint8_t bytes[4], float* out) {$/;"	f	namespace:webrtc
ConvertDoubleToByteArray	webrtc/modules/audio_processing/transient/file_utils.cc	/^int ConvertDoubleToByteArray(double value, uint8_t out_bytes[8]) {$/;"	f	namespace:webrtc
ConvertFloatToByteArray	webrtc/modules/audio_processing/transient/file_utils.cc	/^int ConvertFloatToByteArray(float value, uint8_t out_bytes[4]) {$/;"	f	namespace:webrtc
ConvertHelper	webrtc/base/template_util.h	/^struct ConvertHelper {$/;"	s	namespace:rtc::internal
ConvertIfAddrs	webrtc/base/network.cc	/^void BasicNetworkManager::ConvertIfAddrs(struct ifaddrs* interfaces,$/;"	f	class:rtc::BasicNetworkManager
ConvertIfAddrsToIPAddress	webrtc/base/ifaddrs_converter.cc	/^bool IfAddrsConverter::ConvertIfAddrsToIPAddress($/;"	f	class:rtc::IfAddrsConverter
ConvertNativeAttributesToIPAttributes	webrtc/base/ifaddrs_converter.cc	/^bool IfAddrsConverter::ConvertNativeAttributesToIPAttributes($/;"	f	class:rtc::IfAddrsConverter
ConvertNativeToIPAttributes	webrtc/base/macifaddrs_converter.cc	/^bool ConvertNativeToIPAttributes(int native_attributes, int* net_attributes) {$/;"	f	namespace:rtc::__anon29
ConvertToFloat	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^void ConvertToFloat(const AudioFrame& frame, ChannelBuffer<float>* cb) {$/;"	f	namespace:webrtc::__anon183
ConvertToFloat	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^void ConvertToFloat(const int16_t* int_data, ChannelBuffer<float>* cb) {$/;"	f	namespace:webrtc::__anon183
ConvertToLinearIndex	webrtc/modules/audio_processing/vad/vad_circular_buffer.cc	/^int VadCircularBuffer::ConvertToLinearIndex(int* index) const {$/;"	f	class:webrtc::VadCircularBuffer
ConvolveProc	webrtc/common_audio/resampler/sinc_resampler.h	/^  typedef float (*ConvolveProc)(const float*, const float*, const float*,$/;"	t	class:webrtc::SincResampler
Convolve_C	webrtc/common_audio/resampler/sinc_resampler.cc	/^float SincResampler::Convolve_C(const float* input_ptr, const float* k1,$/;"	f	class:webrtc::SincResampler
Convolve_NEON	webrtc/common_audio/resampler/sinc_resampler_neon.cc	/^float SincResampler::Convolve_NEON(const float* input_ptr, const float* k1,$/;"	f	class:webrtc::SincResampler
Convolve_SSE	webrtc/common_audio/resampler/sinc_resampler_sse.cc	/^float SincResampler::Convolve_SSE(const float* input_ptr, const float* k1,$/;"	f	class:webrtc::SincResampler
Copy	webrtc/base/cryptstring.cc	/^CryptStringImpl* EmptyCryptStringImpl::Copy() const {$/;"	f	class:rtc::EmptyCryptStringImpl
Copy	webrtc/base/cryptstring.cc	/^CryptStringImpl* InsecureCryptStringImpl::Copy() const {$/;"	f	class:rtc::InsecureCryptStringImpl
Copy	webrtc/base/sslidentity.h	/^  SSLCertChain* Copy() const {$/;"	f	class:rtc::SSLCertChain
Copy	webrtc/config.h	/^  VideoEncoderConfig Copy() const { return VideoEncoderConfig(*this); }$/;"	f	class:webrtc::VideoEncoderConfig
CopyAudioIfNeeded	webrtc/common_audio/include/audio_util.h	/^void CopyAudioIfNeeded(const T* const* src,$/;"	f	namespace:webrtc
CopyBlockerCallback	webrtc/common_audio/blocker_unittest.cc	/^class CopyBlockerCallback : public webrtc::BlockerCallback {$/;"	c	namespace:__anon78	file:
CopyConverter	webrtc/common_audio/audio_converter.cc	/^  CopyConverter(size_t src_channels, size_t src_frames, size_t dst_channels,$/;"	f	class:webrtc::CopyConverter
CopyConverter	webrtc/common_audio/audio_converter.cc	/^class CopyConverter : public AudioConverter {$/;"	c	namespace:webrtc	file:
CopyDataToScratch	webrtc/modules/audio_processing/beamformer/matrix.h	/^  void CopyDataToScratch() {$/;"	f	class:webrtc::Matrix
CopyFile	webrtc/base/fileutils.h	/^  static bool CopyFile(const Pathname &old_path, const Pathname &new_path) {$/;"	f	class:rtc::Filesystem
CopyFile	webrtc/base/fileutils_mock.h	/^    bool CopyFile(const Pathname &old_path, const Pathname &new_path) {$/;"	f	class:rtc::FakeFileSystem
CopyFile	webrtc/base/unixfilesystem.cc	/^bool UnixFilesystem::CopyFile(const Pathname &old_path,$/;"	f	class:rtc::UnixFilesystem
CopyFile	webrtc/base/win32filesystem.cc	/^bool Win32Filesystem::CopyFile(const Pathname &old_path,$/;"	f	class:rtc::Win32Filesystem
CopyFrames	webrtc/common_audio/blocker.cc	/^void CopyFrames(const float* const* src,$/;"	f	namespace:__anon77
CopyFrom	webrtc/modules/audio_processing/audio_buffer.cc	/^void AudioBuffer::CopyFrom(const float* const* data,$/;"	f	class:webrtc::AudioBuffer
CopyFrom	webrtc/modules/audio_processing/beamformer/matrix.h	/^  void CopyFrom(const Matrix& other) {$/;"	f	class:webrtc::Matrix
CopyFrom	webrtc/modules/audio_processing/beamformer/matrix.h	/^  void CopyFrom(const T* const data, size_t num_rows, size_t num_columns) {$/;"	f	class:webrtc::Matrix
CopyFrom	webrtc/modules/include/module_common_types.h	/^  void CopyFrom(const RTPFragmentationHeader& src) {$/;"	f	class:webrtc::RTPFragmentationHeader
CopyFrom	webrtc/modules/include/module_common_types.h	/^inline void AudioFrame::CopyFrom(const AudioFrame& src) {$/;"	f	class:webrtc::AudioFrame
CopyFromAudioFrame	webrtc/modules/audio_processing/test/audio_processing_simulator.cc	/^void CopyFromAudioFrame(const AudioFrame& src, ChannelBuffer<float>* dest) {$/;"	f	namespace:webrtc::test::__anon220
CopyFromColumn	webrtc/modules/audio_processing/beamformer/matrix.h	/^  Matrix& CopyFromColumn(const T* const* src,$/;"	f	class:webrtc::Matrix
CopyGofInfoVP9	webrtc/modules/include/module_common_types.h	/^  void CopyGofInfoVP9(const GofInfoVP9& src) {$/;"	f	struct:webrtc::GofInfoVP9
CopyLeftToRightChannel	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^void CopyLeftToRightChannel(int16_t* stereo, size_t samples_per_channel) {$/;"	f	namespace:webrtc::__anon183
CopyLowPassToReference	webrtc/modules/audio_processing/audio_buffer.cc	/^void AudioBuffer::CopyLowPassToReference() {$/;"	f	class:webrtc::AudioBuffer
CopyOnWriteBuffer	webrtc/base/copyonwritebuffer.cc	/^CopyOnWriteBuffer::CopyOnWriteBuffer() {$/;"	f	class:rtc::CopyOnWriteBuffer
CopyOnWriteBuffer	webrtc/base/copyonwritebuffer.cc	/^CopyOnWriteBuffer::CopyOnWriteBuffer(CopyOnWriteBuffer&& buf)$/;"	f	class:rtc::CopyOnWriteBuffer
CopyOnWriteBuffer	webrtc/base/copyonwritebuffer.cc	/^CopyOnWriteBuffer::CopyOnWriteBuffer(const CopyOnWriteBuffer& buf)$/;"	f	class:rtc::CopyOnWriteBuffer
CopyOnWriteBuffer	webrtc/base/copyonwritebuffer.cc	/^CopyOnWriteBuffer::CopyOnWriteBuffer(size_t size)$/;"	f	class:rtc::CopyOnWriteBuffer
CopyOnWriteBuffer	webrtc/base/copyonwritebuffer.cc	/^CopyOnWriteBuffer::CopyOnWriteBuffer(size_t size, size_t capacity)$/;"	f	class:rtc::CopyOnWriteBuffer
CopyOnWriteBuffer	webrtc/base/copyonwritebuffer.h	/^      : CopyOnWriteBuffer(array, N) {}$/;"	f	class:rtc::CopyOnWriteBuffer
CopyOnWriteBuffer	webrtc/base/copyonwritebuffer.h	/^  CopyOnWriteBuffer(const T* data, size_t size)$/;"	f	class:rtc::CopyOnWriteBuffer
CopyOnWriteBuffer	webrtc/base/copyonwritebuffer.h	/^  CopyOnWriteBuffer(const T* data, size_t size, size_t capacity)$/;"	f	class:rtc::CopyOnWriteBuffer
CopyOnWriteBuffer	webrtc/base/copyonwritebuffer.h	/^class CopyOnWriteBuffer {$/;"	c	namespace:rtc
CopyRawTo	webrtc/base/cryptstring.cc	/^void EmptyCryptStringImpl::CopyRawTo(std::vector<unsigned char>* dest) const {$/;"	f	class:rtc::EmptyCryptStringImpl
CopyRawTo	webrtc/base/cryptstring.cc	/^void InsecureCryptStringImpl::CopyRawTo($/;"	f	class:rtc::InsecureCryptStringImpl
CopyRawTo	webrtc/base/cryptstring.h	/^  void CopyRawTo(std::vector<unsigned char> * dest) const {$/;"	f	class:rtc::CryptString
CopyString	webrtc/base/unixfilesystem.cc	/^char* UnixFilesystem::CopyString(const std::string& str) {$/;"	f	class:rtc::UnixFilesystem
CopyTo	webrtc/base/cryptstring.cc	/^void EmptyCryptStringImpl::CopyTo(char* dest, bool nullterminate) const {$/;"	f	class:rtc::EmptyCryptStringImpl
CopyTo	webrtc/base/cryptstring.cc	/^void InsecureCryptStringImpl::CopyTo(char* dest, bool nullterminate) const {$/;"	f	class:rtc::InsecureCryptStringImpl
CopyTo	webrtc/base/cryptstring.h	/^  void CopyTo(char * dest, bool nullterminate) const { impl_->CopyTo(dest, nullterminate); }$/;"	f	class:rtc::CryptString
CopyTo	webrtc/common_audio/blocker_unittest.cc	/^  static void CopyTo(float* const* dst,$/;"	f	class:webrtc::BlockerTest
CopyTo	webrtc/modules/audio_processing/audio_buffer.cc	/^void AudioBuffer::CopyTo(const StreamConfig& stream_config,$/;"	f	class:webrtc::AudioBuffer
CopyToAudioFrame	webrtc/modules/audio_processing/test/audio_processing_simulator.cc	/^void CopyToAudioFrame(const ChannelBuffer<float>& src, AudioFrame* dest) {$/;"	f	namespace:webrtc::test
CopyVectorToAudioBuffer	webrtc/modules/audio_processing/test/audio_buffer_tools.cc	/^void CopyVectorToAudioBuffer(const StreamConfig& stream_config,$/;"	f	namespace:webrtc::test
CorrBufHi	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  double    CorrBufHi[ORDERHI+1];$/;"	m	struct:__anon125
CorrBufLo	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  double    CorrBufLo[ORDERLO+1];$/;"	m	struct:__anon125
Count	webrtc/base/event_tracer_unittest.cc	/^  int Count() const { return events_logged_; }$/;"	f	class:__anon13::TestStatistics
CountBits	webrtc/base/bitbuffer.cc	/^size_t CountBits(uint64_t val) {$/;"	f	namespace:__anon6
CountIPMaskBits	webrtc/base/ipaddress.cc	/^int CountIPMaskBits(IPAddress mask) {$/;"	f	namespace:rtc
CountOperation	webrtc/system_wrappers/include/static_instance.h	/^enum CountOperation {$/;"	g	namespace:webrtc
CountSaturations	webrtc/modules/audio_processing/level_controller/gain_applier.cc	/^int CountSaturations(const AudioBuffer& audio) {$/;"	f	namespace:webrtc::__anon207
CountSaturations	webrtc/modules/audio_processing/level_controller/gain_applier.cc	/^int CountSaturations(rtc::ArrayView<const float> in) {$/;"	f	namespace:webrtc::__anon207
CovarianceMatrixGenerator	webrtc/modules/audio_processing/beamformer/covariance_matrix_generator.h	/^class CovarianceMatrixGenerator {$/;"	c	namespace:webrtc
CpuInfo	webrtc/system_wrappers/include/cpu_info.h	/^  CpuInfo() {}$/;"	f	class:webrtc::CpuInfo
CpuInfo	webrtc/system_wrappers/include/cpu_info.h	/^class CpuInfo {$/;"	c	namespace:webrtc
Create	webrtc/base/asynctcpsocket.cc	/^AsyncTCPSocket* AsyncTCPSocket::Create($/;"	f	class:rtc::AsyncTCPSocket
Create	webrtc/base/asyncudpsocket.cc	/^AsyncUDPSocket* AsyncUDPSocket::Create($/;"	f	class:rtc::AsyncUDPSocket
Create	webrtc/base/asyncudpsocket.cc	/^AsyncUDPSocket* AsyncUDPSocket::Create(SocketFactory* factory,$/;"	f	class:rtc::AsyncUDPSocket
Create	webrtc/base/autodetectproxy_unittest.cc	/^  bool Create(const std::string& user_agent,$/;"	f	class:rtc::AutoDetectProxyTest
Create	webrtc/base/dbus.cc	/^DBusMonitor *DBusMonitor::Create(DBusBusType type) {$/;"	f	class:rtc::DBusMonitor
Create	webrtc/base/file.cc	/^File File::Create(const std::string& path) {$/;"	f	class:rtc::File
Create	webrtc/base/messagedigest.cc	/^MessageDigest* MessageDigestFactory::Create(const std::string& alg) {$/;"	f	class:rtc::MessageDigestFactory
Create	webrtc/base/nattypes.cc	/^NAT* NAT::Create(NATType type) {$/;"	f	class:rtc::NAT
Create	webrtc/base/physicalsocketserver.cc	/^bool PhysicalSocket::Create(int family, int type) {$/;"	f	class:rtc::PhysicalSocket
Create	webrtc/base/physicalsocketserver.cc	/^bool SocketDispatcher::Create(int family, int type) {$/;"	f	class:rtc::SocketDispatcher
Create	webrtc/base/physicalsocketserver.cc	/^bool SocketDispatcher::Create(int type) {$/;"	f	class:rtc::SocketDispatcher
Create	webrtc/base/rtccertificate.cc	/^scoped_refptr<RTCCertificate> RTCCertificate::Create($/;"	f	class:rtc::RTCCertificate
Create	webrtc/base/ssladapter.cc	/^SSLAdapter::Create(AsyncSocket* socket) {$/;"	f	class:rtc::SSLAdapter
Create	webrtc/base/sslfingerprint.cc	/^SSLFingerprint* SSLFingerprint::Create($/;"	f	class:rtc::SSLFingerprint
Create	webrtc/base/sslstreamadapter.cc	/^SSLStreamAdapter* SSLStreamAdapter::Create(StreamInterface* stream) {$/;"	f	class:rtc::SSLStreamAdapter
Create	webrtc/base/thread.cc	/^std::unique_ptr<Thread> Thread::Create() {$/;"	f	class:rtc::Thread
Create	webrtc/base/win32regkey.cc	/^HRESULT RegKey::Create(HKEY parent_key, const wchar_t* key_name) {$/;"	f	class:rtc::RegKey
Create	webrtc/base/win32regkey.cc	/^HRESULT RegKey::Create(HKEY parent_key,$/;"	f	class:rtc::RegKey
Create	webrtc/base/win32window.cc	/^bool Win32Window::Create(HWND parent, const wchar_t* title, DWORD style,$/;"	f	class:rtc::Win32Window
Create	webrtc/base/windowpickerfactory.h	/^  virtual WindowPicker* Create() {$/;"	f	class:rtc::WindowPickerFactory
Create	webrtc/common_audio/audio_converter.cc	/^std::unique_ptr<AudioConverter> AudioConverter::Create(size_t src_channels,$/;"	f	class:webrtc::AudioConverter
Create	webrtc/common_audio/fir_filter.cc	/^FIRFilter* FIRFilter::Create(const float* coefficients,$/;"	f	class:webrtc::FIRFilter
Create	webrtc/common_audio/real_fourier.cc	/^std::unique_ptr<RealFourier> RealFourier::Create(int fft_order) {$/;"	f	class:webrtc::RealFourier
Create	webrtc/modules/audio_processing/agc/loudness_histogram.cc	/^LoudnessHistogram* LoudnessHistogram::Create() {$/;"	f	class:webrtc::LoudnessHistogram
Create	webrtc/modules/audio_processing/agc/loudness_histogram.cc	/^LoudnessHistogram* LoudnessHistogram::Create(int window_size) {$/;"	f	class:webrtc::LoudnessHistogram
Create	webrtc/modules/audio_processing/audio_processing_impl.cc	/^AudioProcessing* AudioProcessing::Create() {$/;"	f	class:webrtc::AudioProcessing
Create	webrtc/modules/audio_processing/audio_processing_impl.cc	/^AudioProcessing* AudioProcessing::Create(const webrtc::Config& config) {$/;"	f	class:webrtc::AudioProcessing
Create	webrtc/modules/audio_processing/audio_processing_impl.cc	/^AudioProcessing* AudioProcessing::Create(const webrtc::Config& config,$/;"	f	class:webrtc::AudioProcessing
Create	webrtc/modules/audio_processing/vad/pole_zero_filter.cc	/^PoleZeroFilter* PoleZeroFilter::Create(const float* numerator_coefficients,$/;"	f	class:webrtc::PoleZeroFilter
Create	webrtc/modules/audio_processing/vad/standalone_vad.cc	/^StandaloneVad* StandaloneVad::Create() {$/;"	f	class:webrtc::StandaloneVad
Create	webrtc/modules/audio_processing/vad/vad_circular_buffer.cc	/^VadCircularBuffer* VadCircularBuffer::Create(int buffer_size) {$/;"	f	class:webrtc::VadCircularBuffer
Create	webrtc/system_wrappers/source/file_impl.cc	/^FileWrapper* FileWrapper::Create() {$/;"	f	class:webrtc::FileWrapper
CreateArrayGeometry	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer_unittest.cc	/^std::vector<Point> CreateArrayGeometry(int variant) {$/;"	f	namespace:webrtc::__anon190
CreateAsyncSocket	webrtc/base/firewallsocketserver.cc	/^AsyncSocket* FirewallSocketServer::CreateAsyncSocket(int family, int type) {$/;"	f	class:rtc::FirewallSocketServer
CreateAsyncSocket	webrtc/base/firewallsocketserver.cc	/^AsyncSocket* FirewallSocketServer::CreateAsyncSocket(int type) {$/;"	f	class:rtc::FirewallSocketServer
CreateAsyncSocket	webrtc/base/natsocketfactory.cc	/^AsyncSocket* NATSocketFactory::CreateAsyncSocket(int family, int type) {$/;"	f	class:rtc::NATSocketFactory
CreateAsyncSocket	webrtc/base/natsocketfactory.cc	/^AsyncSocket* NATSocketFactory::CreateAsyncSocket(int type) {$/;"	f	class:rtc::NATSocketFactory
CreateAsyncSocket	webrtc/base/natsocketfactory.cc	/^AsyncSocket* NATSocketServer::CreateAsyncSocket(int family, int type) {$/;"	f	class:rtc::NATSocketServer
CreateAsyncSocket	webrtc/base/natsocketfactory.cc	/^AsyncSocket* NATSocketServer::CreateAsyncSocket(int type) {$/;"	f	class:rtc::NATSocketServer
CreateAsyncSocket	webrtc/base/nullsocketserver.cc	/^rtc::AsyncSocket* NullSocketServer::CreateAsyncSocket(int \/* family *\/,$/;"	f	class:rtc::NullSocketServer
CreateAsyncSocket	webrtc/base/nullsocketserver.cc	/^rtc::AsyncSocket* NullSocketServer::CreateAsyncSocket(int \/* type *\/) {$/;"	f	class:rtc::NullSocketServer
CreateAsyncSocket	webrtc/base/physicalsocketserver.cc	/^AsyncSocket* PhysicalSocketServer::CreateAsyncSocket(int family, int type) {$/;"	f	class:rtc::PhysicalSocketServer
CreateAsyncSocket	webrtc/base/physicalsocketserver.cc	/^AsyncSocket* PhysicalSocketServer::CreateAsyncSocket(int type) {$/;"	f	class:rtc::PhysicalSocketServer
CreateAsyncSocket	webrtc/base/sslsocketfactory.cc	/^AsyncSocket* SslSocketFactory::CreateAsyncSocket(int family, int type) {$/;"	f	class:rtc::SslSocketFactory
CreateAsyncSocket	webrtc/base/sslsocketfactory.cc	/^AsyncSocket* SslSocketFactory::CreateAsyncSocket(int type) {$/;"	f	class:rtc::SslSocketFactory
CreateAsyncSocket	webrtc/base/virtualsocketserver.cc	/^AsyncSocket* VirtualSocketServer::CreateAsyncSocket(int family, int type) {$/;"	f	class:rtc::VirtualSocketServer
CreateAsyncSocket	webrtc/base/virtualsocketserver.cc	/^AsyncSocket* VirtualSocketServer::CreateAsyncSocket(int type) {$/;"	f	class:rtc::VirtualSocketServer
CreateAsyncSocket	webrtc/base/win32socketserver.cc	/^AsyncSocket* Win32SocketServer::CreateAsyncSocket(int family, int type) {$/;"	f	class:rtc::Win32SocketServer
CreateAsyncSocket	webrtc/base/win32socketserver.cc	/^AsyncSocket* Win32SocketServer::CreateAsyncSocket(int type) {$/;"	f	class:rtc::Win32SocketServer
CreateAudioProcessor	webrtc/modules/audio_processing/test/audio_processing_simulator.cc	/^void AudioProcessingSimulator::CreateAudioProcessor() {$/;"	f	class:webrtc::test::AudioProcessingSimulator
CreateBuffer	webrtc/common_audio/audio_converter_unittest.cc	/^ScopedBuffer CreateBuffer(const std::vector<float>& data, size_t frames) {$/;"	f	namespace:webrtc
CreateClientConnection	webrtc/base/httpserver_unittest.cc	/^  void CreateClientConnection(HttpServer& server,$/;"	f	namespace:rtc::__anon20
CreateConfigAndBuffer	webrtc/modules/audio_processing/level_controller/level_controller_complexity_unittest.cc	/^  void CreateConfigAndBuffer(int sample_rate_hz,$/;"	f	struct:webrtc::__anon209::SimulatorBuffers
CreateCriticalSection	webrtc/system_wrappers/include/critical_section_wrapper.h	/^  static CriticalSectionWrapper* CreateCriticalSection() {$/;"	f	class:webrtc::CriticalSectionWrapper
CreateDefault	webrtc/base/physicalsocketserver.cc	/^std::unique_ptr<SocketServer> SocketServer::CreateDefault() {$/;"	f	class:rtc::SocketServer
CreateDistribution	webrtc/base/virtualsocketserver.cc	/^VirtualSocketServer::Function* VirtualSocketServer::CreateDistribution($/;"	f	class:rtc::VirtualSocketServer
CreateErbBank	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer.cc	/^std::vector<std::vector<float>> IntelligibilityEnhancer::CreateErbBank($/;"	f	class:webrtc::IntelligibilityEnhancer
CreateFakeIdentityAndInfoFromDers	webrtc/base/sslidentity_unittest.cc	/^IdentityAndInfo CreateFakeIdentityAndInfoFromDers($/;"	f
CreateFile	webrtc/base/physicalsocketserver.cc	/^AsyncFile* PhysicalSocketServer::CreateFile(int fd) {$/;"	f	class:rtc::PhysicalSocketServer
CreateFileName	webrtc/system_wrappers/source/trace_impl.cc	/^bool TraceImpl::CreateFileName($/;"	f	class:webrtc::TraceImpl
CreateFolder	webrtc/base/fileutils.h	/^  static bool CreateFolder(const Pathname &pathname) {$/;"	f	class:rtc::Filesystem
CreateFolder	webrtc/base/fileutils_mock.h	/^    bool CreateFolder(const Pathname &pathname) {$/;"	f	class:rtc::FakeFileSystem
CreateFolder	webrtc/base/pathutils.h	/^inline bool CreateFolder(const Pathname& path) {$/;"	f	namespace:rtc
CreateFolder	webrtc/base/unixfilesystem.cc	/^bool UnixFilesystem::CreateFolder(const Pathname &path) {$/;"	f	class:rtc::UnixFilesystem
CreateFolder	webrtc/base/unixfilesystem.cc	/^bool UnixFilesystem::CreateFolder(const Pathname &path, mode_t mode) {$/;"	f	class:rtc::UnixFilesystem
CreateFolder	webrtc/base/win32filesystem.cc	/^bool Win32Filesystem::CreateFolder(const Pathname &pathname) {$/;"	f	class:rtc::Win32Filesystem
CreateFromRfc4572	webrtc/base/sslfingerprint.cc	/^SSLFingerprint* SSLFingerprint::CreateFromRfc4572($/;"	f	class:rtc::SSLFingerprint
CreateIfAddrsConverter	webrtc/base/ifaddrs_converter.cc	/^IfAddrsConverter* CreateIfAddrsConverter() {$/;"	f	namespace:rtc
CreateIfAddrsConverter	webrtc/base/macifaddrs_converter.cc	/^IfAddrsConverter* CreateIfAddrsConverter() {$/;"	f	namespace:rtc
CreateInstance	webrtc/system_wrappers/source/trace_impl.cc	/^TraceImpl* TraceImpl::CreateInstance() {$/;"	f	class:webrtc::TraceImpl
CreateInternalSocket	webrtc/base/natsocketfactory.cc	/^AsyncSocket* NATSocketFactory::CreateInternalSocket(int family, int type,$/;"	f	class:rtc::NATSocketFactory
CreateInternalSocket	webrtc/base/natsocketfactory.cc	/^AsyncSocket* NATSocketServer::CreateInternalSocket(int family, int type,$/;"	f	class:rtc::NATSocketServer
CreateInvoker	webrtc/base/thread_unittest.cc	/^  CreateInvoker(std::unique_ptr<GuardedAsyncInvoker>* invoker)$/;"	f	struct:CreateInvoker
CreateInvoker	webrtc/base/thread_unittest.cc	/^struct CreateInvoker {$/;"	s	file:
CreateIpv6Addr	webrtc/base/network_unittest.cc	/^  struct sockaddr_in6* CreateIpv6Addr(const std::string& ip_string,$/;"	f	class:rtc::NetworkTest
CreateMap	webrtc/system_wrappers/source/metrics_default.cc	/^void CreateMap() {$/;"	f	namespace:webrtc::metrics::__anon251
CreateNetworks	webrtc/base/network.cc	/^bool BasicNetworkManager::CreateNetworks(bool include_ignored,$/;"	f	class:rtc::BasicNetworkManager
CreateOpenmaxState	webrtc/common_audio/real_fourier_openmax.cc	/^OMXFFTSpec_R_F32* CreateOpenmaxState(int order) {$/;"	f	namespace:webrtc::__anon83
CreateOperation	webrtc/system_wrappers/include/static_instance.h	/^enum CreateOperation {$/;"	g	namespace:webrtc
CreatePacketTime	webrtc/base/asyncpacketsocket.h	/^inline PacketTime CreatePacketTime(int64_t not_before) {$/;"	f	namespace:rtc
CreatePlatformFile	webrtc/base/platform_file.cc	/^PlatformFile CreatePlatformFile(const std::string& path) {$/;"	f	namespace:rtc
CreateProxySocket	webrtc/base/sslsocketfactory.cc	/^AsyncSocket* SslSocketFactory::CreateProxySocket(const ProxyInfo& proxy,$/;"	f	class:rtc::SslSocketFactory
CreateRandomData	webrtc/base/helpers.cc	/^bool CreateRandomData(size_t length, std::string* data) {$/;"	f	namespace:rtc
CreateRandomDouble	webrtc/base/helpers.cc	/^double CreateRandomDouble() {$/;"	f	namespace:rtc
CreateRandomId	webrtc/base/helpers.cc	/^uint32_t CreateRandomId() {$/;"	f	namespace:rtc
CreateRandomId64	webrtc/base/helpers.cc	/^uint64_t CreateRandomId64() {$/;"	f	namespace:rtc
CreateRandomNonZeroId	webrtc/base/helpers.cc	/^uint32_t CreateRandomNonZeroId() {$/;"	f	namespace:rtc
CreateRandomString	webrtc/base/helpers.cc	/^bool CreateRandomString(size_t len, const std::string& table,$/;"	f	namespace:rtc
CreateRandomString	webrtc/base/helpers.cc	/^bool CreateRandomString(size_t len, std::string* str) {$/;"	f	namespace:rtc
CreateRandomString	webrtc/base/helpers.cc	/^static bool CreateRandomString(size_t len,$/;"	f	namespace:rtc
CreateRandomString	webrtc/base/helpers.cc	/^std::string CreateRandomString(size_t len) {$/;"	f	namespace:rtc
CreateRandomUuid	webrtc/base/helpers.cc	/^std::string CreateRandomUuid() {$/;"	f	namespace:rtc
CreateSettings	webrtc/modules/audio_processing/test/audioproc_float.cc	/^SimulationSettings CreateSettings() {$/;"	f	namespace:webrtc::test::__anon221
CreateSink	webrtc/base/win32socketserver.cc	/^void Win32Socket::CreateSink() {$/;"	f	class:rtc::Win32Socket
CreateSocket	webrtc/base/firewallsocketserver.cc	/^Socket* FirewallSocketServer::CreateSocket(int family, int type) {$/;"	f	class:rtc::FirewallSocketServer
CreateSocket	webrtc/base/firewallsocketserver.cc	/^Socket* FirewallSocketServer::CreateSocket(int type) {$/;"	f	class:rtc::FirewallSocketServer
CreateSocket	webrtc/base/natsocketfactory.cc	/^Socket* NATSocketFactory::CreateSocket(int family, int type) {$/;"	f	class:rtc::NATSocketFactory
CreateSocket	webrtc/base/natsocketfactory.cc	/^Socket* NATSocketFactory::CreateSocket(int type) {$/;"	f	class:rtc::NATSocketFactory
CreateSocket	webrtc/base/natsocketfactory.cc	/^Socket* NATSocketServer::CreateSocket(int family, int type) {$/;"	f	class:rtc::NATSocketServer
CreateSocket	webrtc/base/natsocketfactory.cc	/^Socket* NATSocketServer::CreateSocket(int type) {$/;"	f	class:rtc::NATSocketServer
CreateSocket	webrtc/base/nullsocketserver.cc	/^rtc::Socket* NullSocketServer::CreateSocket(int \/* family *\/, int \/* type *\/) {$/;"	f	class:rtc::NullSocketServer
CreateSocket	webrtc/base/nullsocketserver.cc	/^rtc::Socket* NullSocketServer::CreateSocket(int \/* type *\/) {$/;"	f	class:rtc::NullSocketServer
CreateSocket	webrtc/base/physicalsocketserver.cc	/^Socket* PhysicalSocketServer::CreateSocket(int family, int type) {$/;"	f	class:rtc::PhysicalSocketServer
CreateSocket	webrtc/base/physicalsocketserver.cc	/^Socket* PhysicalSocketServer::CreateSocket(int type) {$/;"	f	class:rtc::PhysicalSocketServer
CreateSocket	webrtc/base/ssladapter_unittest.cc	/^static rtc::AsyncSocket* CreateSocket(const rtc::SSLMode& ssl_mode) {$/;"	f	file:
CreateSocket	webrtc/base/sslsocketfactory.cc	/^Socket* SslSocketFactory::CreateSocket(int family, int type) {$/;"	f	class:rtc::SslSocketFactory
CreateSocket	webrtc/base/sslsocketfactory.cc	/^Socket* SslSocketFactory::CreateSocket(int type) {$/;"	f	class:rtc::SslSocketFactory
CreateSocket	webrtc/base/virtualsocketserver.cc	/^Socket* VirtualSocketServer::CreateSocket(int family, int type) {$/;"	f	class:rtc::VirtualSocketServer
CreateSocket	webrtc/base/virtualsocketserver.cc	/^Socket* VirtualSocketServer::CreateSocket(int type) {$/;"	f	class:rtc::VirtualSocketServer
CreateSocket	webrtc/base/win32socketserver.cc	/^Socket* Win32SocketServer::CreateSocket(int family, int type) {$/;"	f	class:rtc::Win32SocketServer
CreateSocket	webrtc/base/win32socketserver.cc	/^Socket* Win32SocketServer::CreateSocket(int type) {$/;"	f	class:rtc::Win32SocketServer
CreateSocketInternal	webrtc/base/virtualsocketserver.cc	/^VirtualSocket* VirtualSocketServer::CreateSocketInternal(int family, int type) {$/;"	f	class:rtc::VirtualSocketServer
CreateT	webrtc/base/win32socketserver.cc	/^bool Win32Socket::CreateT(int family, int type) {$/;"	f	class:rtc::Win32Socket
CreateTCPTestClient	webrtc/base/nat_unittest.cc	/^TestClient* CreateTCPTestClient(AsyncSocket* socket) {$/;"	f
CreateTempFilename	webrtc/modules/audio_processing/transient/file_utils_unittest.cc	/^  std::string CreateTempFilename(const std::string& dir,$/;"	f	class:webrtc::TransientFileUtilsTest
CreateTestClient	webrtc/base/nat_unittest.cc	/^TestClient* CreateTestClient($/;"	f
CreateTrace	webrtc/system_wrappers/source/trace_impl.cc	/^void Trace::CreateTrace() {$/;"	f	class:webrtc::Trace
CreateVad	webrtc/common_audio/vad/vad.cc	/^std::unique_ptr<Vad> CreateVad(Vad::Aggressiveness aggressiveness) {$/;"	f	namespace:webrtc
CreateVector	webrtc/modules/audio_processing/high_pass_filter_unittest.cc	/^std::vector<float> CreateVector(const rtc::ArrayView<const float>& array_view) {$/;"	f	namespace:webrtc::__anon201
CreateWindowPicker	webrtc/base/windowpickerfactory.h	/^  static WindowPicker* CreateWindowPicker() {$/;"	f	class:rtc::WindowPickerFactory
CreateWithSocketServer	webrtc/base/thread.cc	/^std::unique_ptr<Thread> Thread::CreateWithSocketServer() {$/;"	f	class:rtc::Thread
CritScope	webrtc/base/criticalsection.cc	/^CritScope::CritScope(const CriticalSection* cs) : cs_(cs) { cs_->Enter(); }$/;"	f	class:rtc::CritScope
CritScope	webrtc/base/criticalsection.h	/^class SCOPED_LOCKABLE CritScope {$/;"	c	namespace:rtc
CriticalSection	webrtc/base/criticalsection.cc	/^CriticalSection::CriticalSection() {$/;"	f	class:rtc::CriticalSection
CriticalSection	webrtc/base/criticalsection.h	/^class LOCKABLE CriticalSection {$/;"	c	namespace:rtc
CriticalSectionLock	webrtc/base/criticalsection_unittest.cc	/^class LOCKABLE CriticalSectionLock {$/;"	c	namespace:rtc::__anon10	file:
CriticalSectionScoped	webrtc/system_wrappers/include/critical_section_wrapper.h	/^class SCOPED_LOCKABLE CriticalSectionScoped {$/;"	c	namespace:webrtc
CriticalSectionWrapper	webrtc/system_wrappers/include/critical_section_wrapper.h	/^  CriticalSectionWrapper() {}$/;"	f	class:webrtc::CriticalSectionWrapper
CriticalSectionWrapper	webrtc/system_wrappers/include/critical_section_wrapper.h	/^class LOCKABLE CriticalSectionWrapper {$/;"	c	namespace:webrtc
CrossCorrelation	webrtc/common_audio/signal_processing/include/signal_processing_library.h	/^typedef void (*CrossCorrelation)(int32_t* cross_correlation,$/;"	t
CrossFamilyConnectionTest	webrtc/base/virtualsocket_unittest.cc	/^  void CrossFamilyConnectionTest(const SocketAddress& client_addr,$/;"	f	class:VirtualSocketServerTest
CrossFamilyDatagramTest	webrtc/base/virtualsocket_unittest.cc	/^  void CrossFamilyDatagramTest(const SocketAddress& client_addr,$/;"	f	class:VirtualSocketServerTest
CrossProduct	webrtc/modules/audio_processing/beamformer/array_util.cc	/^Point CrossProduct(const Point& a, const Point& b) {$/;"	f	namespace:webrtc
CryptString	webrtc/base/cryptstring.cc	/^CryptString::CryptString() : impl_(new EmptyCryptStringImpl()) {$/;"	f	class:rtc::CryptString
CryptString	webrtc/base/cryptstring.cc	/^CryptString::CryptString(const CryptString& other)$/;"	f	class:rtc::CryptString
CryptString	webrtc/base/cryptstring.cc	/^CryptString::CryptString(const CryptStringImpl& impl) : impl_(impl.Copy()) {$/;"	f	class:rtc::CryptString
CryptString	webrtc/base/cryptstring.h	/^class CryptString {$/;"	c	namespace:rtc
CryptStringImpl	webrtc/base/cryptstring.h	/^class CryptStringImpl {$/;"	c	namespace:rtc
CryptoOptions	webrtc/base/sslstreamadapter.h	/^  CryptoOptions() {}$/;"	f	struct:rtc::CryptoOptions
CryptoOptions	webrtc/base/sslstreamadapter.h	/^struct CryptoOptions {$/;"	s	namespace:rtc
Current	webrtc/base/task_queue_gcd.cc	/^TaskQueue* TaskQueue::Current() {$/;"	f	class:rtc::TaskQueue
Current	webrtc/base/task_queue_libevent.cc	/^TaskQueue* TaskQueue::Current() {$/;"	f	class:rtc::TaskQueue
Current	webrtc/base/task_queue_win.cc	/^TaskQueue* TaskQueue::Current() {$/;"	f	class:rtc::TaskQueue
Current	webrtc/base/thread.cc	/^Thread* Thread::Current() {$/;"	f	class:rtc::Thread
CurrentRms	webrtc/modules/audio_processing/agc/loudness_histogram.cc	/^double LoudnessHistogram::CurrentRms() const {$/;"	f	class:webrtc::LoudnessHistogram
CurrentThread	webrtc/base/thread.cc	/^Thread *ThreadManager::CurrentThread() {$/;"	f	class:rtc::ThreadManager
CurrentThreadId	webrtc/base/platform_thread.cc	/^PlatformThreadId CurrentThreadId() {$/;"	f	namespace:rtc
CurrentThreadIsOwner	webrtc/base/criticalsection.cc	/^bool CriticalSection::CurrentThreadIsOwner() const {$/;"	f	class:rtc::CriticalSection
CurrentThreadRef	webrtc/base/platform_thread.cc	/^PlatformThreadRef CurrentThreadRef() {$/;"	f	namespace:rtc
CurrentTime	webrtc/base/faketaskrunner.h	/^  virtual int64_t CurrentTime() {$/;"	f	class:rtc::FakeTaskRunner
CurrentTime	webrtc/base/task.cc	/^int64_t Task::CurrentTime() {$/;"	f	class:rtc::Task
CurrentTime	webrtc/base/task_unittest.cc	/^  virtual int64_t CurrentTime() { return GetCurrentTime(); }$/;"	f	class:rtc::DeleteTestTaskRunner
CurrentTime	webrtc/base/task_unittest.cc	/^  virtual int64_t CurrentTime() { return GetCurrentTime(); }$/;"	f	class:rtc::MyTaskRunner
CustomThread	webrtc/base/thread_unittest.cc	/^  CustomThread() {}$/;"	f	class:CustomThread
CustomThread	webrtc/base/thread_unittest.cc	/^class CustomThread : public rtc::Thread {$/;"	c	file:
Cybertrust_Global_Root_certificate	webrtc/base/sslroots.h	/^const unsigned char Cybertrust_Global_Root_certificate[933]={$/;"	v
D	webrtc/base/bind_unittest.cc	/^struct D {$/;"	s	namespace:rtc::__anon4	file:
DBFS	webrtc/common_audio/resampler/push_sinc_resampler_unittest.cc	/^T DBFS(T x) {$/;"	f	namespace:webrtc::__anon85
DBFS	webrtc/common_audio/resampler/sinc_resampler_unittest.cc	/^  #define DBFS(/;"	d	file:
DBUS_INTERFACE	webrtc/base/dbus.h	/^#define DBUS_INTERFACE /;"	d
DBUS_MEMBER	webrtc/base/dbus.h	/^#define DBUS_MEMBER /;"	d
DBUS_PATH	webrtc/base/dbus.h	/^#define DBUS_PATH /;"	d
DBUS_SIGNAL	webrtc/base/dbus.h	/^#define DBUS_SIGNAL /;"	d
DBUS_TYPE	webrtc/base/dbus.h	/^#define DBUS_TYPE /;"	d
DBusCallback	webrtc/base/dbus.cc	/^DBusHandlerResult DBusSigFilter::DBusCallback(DBusConnection *dbus_conn,$/;"	f	class:rtc::DBusSigFilter
DBusMonitor	webrtc/base/dbus.cc	/^DBusMonitor::DBusMonitor(DBusBusType type)$/;"	f	class:rtc::DBusMonitor
DBusMonitor	webrtc/base/dbus.h	/^class DBusMonitor {$/;"	c	namespace:rtc
DBusMonitorStatus	webrtc/base/dbus.h	/^  enum DBusMonitorStatus {$/;"	g	class:rtc::DBusMonitor
DBusMonitoringThread	webrtc/base/dbus.cc	/^  explicit DBusMonitoringThread(DBusMonitor *monitor,$/;"	f	class:rtc::DBusMonitor::DBusMonitoringThread
DBusMonitoringThread	webrtc/base/dbus.cc	/^class DBusMonitor::DBusMonitoringThread : public rtc::Thread {$/;"	c	class:rtc::DBusMonitor	file:
DBusSigFilter	webrtc/base/dbus.h	/^  explicit DBusSigFilter(const std::string &filter)$/;"	f	class:rtc::DBusSigFilter
DBusSigFilter	webrtc/base/dbus.h	/^class DBusSigFilter : protected MessageHandler {$/;"	c	namespace:rtc
DBusSigFilterTest	webrtc/base/dbus_unittest.cc	/^  DBusSigFilterTest()$/;"	f	class:rtc::DBusSigFilterTest
DBusSigFilterTest	webrtc/base/dbus_unittest.cc	/^class DBusSigFilterTest : public DBusSigFilter {$/;"	c	namespace:rtc	file:
DBusSigMessage	webrtc/base/dbus.h	/^  enum DBusSigMessage { DSM_SIGNAL };$/;"	g	class:rtc::DBusSigFilter
DBusSigMessageData	webrtc/base/dbus.cc	/^DBusSigMessageData::DBusSigMessageData(DBusMessage *message)$/;"	f	class:rtc::DBusSigMessageData
DBusSigMessageData	webrtc/base/dbus.h	/^class DBusSigMessageData : public TypedMessageData<DBusMessage *> {$/;"	c	namespace:rtc
DD_PR_SNR	webrtc/modules/audio_processing/ns/defines.h	/^#define DD_PR_SNR /;"	d
DD_PR_SNR_Q11	webrtc/modules/audio_processing/ns/nsx_defines.h	/^#define DD_PR_SNR_Q11 /;"	d
DECLARE_FLAG	webrtc/base/flags.h	/^#define DECLARE_FLAG(/;"	d
DECLARE_bool	webrtc/base/flags.h	/^#define DECLARE_bool(/;"	d
DECLARE_float	webrtc/base/flags.h	/^#define DECLARE_float(/;"	d
DECLARE_int	webrtc/base/flags.h	/^#define DECLARE_int(/;"	d
DECLARE_string	webrtc/base/flags.h	/^#define DECLARE_string(/;"	d
DEFAULT_FOLDER_DELIM	webrtc/base/pathutils.cc	/^const char DEFAULT_FOLDER_DELIM = '\/';$/;"	m	namespace:rtc	file:
DEFAULT_FOLDER_DELIM	webrtc/base/pathutils.cc	/^const char DEFAULT_FOLDER_DELIM = '\\\\';$/;"	m	namespace:rtc	file:
DEFAULT_SIZE	webrtc/base/bytebuffer.cc	/^static const int DEFAULT_SIZE = 4096;$/;"	m	namespace:rtc	file:
DEFINE_CIPHER_ENTRY_SSL3	webrtc/base/opensslstreamadapter.cc	/^#define DEFINE_CIPHER_ENTRY_SSL3(/;"	d	file:
DEFINE_CIPHER_ENTRY_TLS1	webrtc/base/opensslstreamadapter.cc	/^#define DEFINE_CIPHER_ENTRY_TLS1(/;"	d	file:
DEFINE_FLAG	webrtc/base/flags.h	/^#define DEFINE_FLAG(/;"	d
DEFINE_FUNCTION	webrtc/common_audio/signal_processing/complex_bit_reverse_arm.S	/^DEFINE_FUNCTION WebRtcSpl_ComplexBitReverse$/;"	l
DEFINE_FUNCTION	webrtc/common_audio/signal_processing/filter_ar_fast_q12_armv7.S	/^DEFINE_FUNCTION WebRtcSpl_FilterARFastQ12$/;"	l
DEFINE_FUNCTION	webrtc/common_audio/signal_processing/spl_sqrt_floor_arm.S	/^DEFINE_FUNCTION WebRtcSpl_SqrtFloor$/;"	l
DEFINE_RTC_CHECK_OP_IMPL	webrtc/base/checks.h	/^#define DEFINE_RTC_CHECK_OP_IMPL(/;"	d
DEFINE_RTC_CHECK_OP_IMPL	webrtc/base/checks.h	/^#undef DEFINE_RTC_CHECK_OP_IMPL$/;"	d
DEFINE_bool	webrtc/base/flags.h	/^#define DEFINE_bool(/;"	d
DEFINE_float	webrtc/base/flags.h	/^#define DEFINE_float(/;"	d
DEFINE_int	webrtc/base/flags.h	/^#define DEFINE_int(/;"	d
DEFINE_string	webrtc/base/flags.h	/^#define DEFINE_string(/;"	d
DE_ACCEPT	webrtc/base/physicalsocketserver.h	/^  DE_ACCEPT  = 0x0010,$/;"	e	enum:rtc::DispatcherEvent
DE_CLOSE	webrtc/base/physicalsocketserver.h	/^  DE_CLOSE   = 0x0008,$/;"	e	enum:rtc::DispatcherEvent
DE_CONNECT	webrtc/base/physicalsocketserver.h	/^  DE_CONNECT = 0x0004,$/;"	e	enum:rtc::DispatcherEvent
DE_READ	webrtc/base/physicalsocketserver.h	/^  DE_READ    = 0x0001,$/;"	e	enum:rtc::DispatcherEvent
DE_WRITE	webrtc/base/physicalsocketserver.h	/^  DE_WRITE   = 0x0002,$/;"	e	enum:rtc::DispatcherEvent
DIFF_REF_TO_ANALOG	webrtc/modules/audio_processing/agc/legacy/analog_agc.c	/^#define DIFF_REF_TO_ANALOG /;"	d	file:
DIFF_WRAP	webrtc/common_audio/ring_buffer.h	/^enum Wrap { SAME_WRAP, DIFF_WRAP };$/;"	e	enum:Wrap
DIGEST_CHALLENGE	webrtc/base/httpcommon.cc	/^const char * const DIGEST_CHALLENGE =$/;"	m	namespace:rtc	file:
DIGEST_CNONCE	webrtc/base/httpcommon.cc	/^const char * const DIGEST_CNONCE =$/;"	m	namespace:rtc	file:
DIGEST_MD5	webrtc/base/messagedigest.cc	/^const char DIGEST_MD5[]     = "md5";$/;"	m	namespace:rtc	file:
DIGEST_RESPONSE	webrtc/base/httpcommon.cc	/^const char * const DIGEST_RESPONSE =$/;"	m	namespace:rtc	file:
DIGEST_SHA_1	webrtc/base/messagedigest.cc	/^const char DIGEST_SHA_1[]   = "sha-1";$/;"	m	namespace:rtc	file:
DIGEST_SHA_224	webrtc/base/messagedigest.cc	/^const char DIGEST_SHA_224[] = "sha-224";$/;"	m	namespace:rtc	file:
DIGEST_SHA_256	webrtc/base/messagedigest.cc	/^const char DIGEST_SHA_256[] = "sha-256";$/;"	m	namespace:rtc	file:
DIGEST_SHA_384	webrtc/base/messagedigest.cc	/^const char DIGEST_SHA_384[] = "sha-384";$/;"	m	namespace:rtc	file:
DIGEST_SHA_512	webrtc/base/messagedigest.cc	/^const char DIGEST_SHA_512[] = "sha-512";$/;"	m	namespace:rtc	file:
DIGEST_URI	webrtc/base/httpcommon.cc	/^const char * const DIGEST_URI =$/;"	m	namespace:rtc	file:
DIGITAL_REF_AT_0_COMP_GAIN	webrtc/modules/audio_processing/agc/legacy/analog_agc.c	/^#define DIGITAL_REF_AT_0_COMP_GAIN /;"	d	file:
DISABLE_ON_MAC	webrtc/base/windowpicker_unittest.cc	/^#  define DISABLE_ON_MAC(/;"	d	file:
DMS_FAILED	webrtc/base/dbus.h	/^    DMS_FAILED,           \/\/ Not monitoring. Failed.$/;"	e	enum:rtc::DBusMonitor::DBusMonitorStatus
DMS_INITIALIZING	webrtc/base/dbus.h	/^    DMS_INITIALIZING,     \/\/ Initializing the monitoring thread.$/;"	e	enum:rtc::DBusMonitor::DBusMonitorStatus
DMS_NOT_INITIALIZED	webrtc/base/dbus.h	/^    DMS_NOT_INITIALIZED,  \/\/ Not initialized.$/;"	e	enum:rtc::DBusMonitor::DBusMonitorStatus
DMS_RUNNING	webrtc/base/dbus.h	/^    DMS_RUNNING,          \/\/ Monitoring.$/;"	e	enum:rtc::DBusMonitor::DBusMonitorStatus
DMS_STOPPED	webrtc/base/dbus.h	/^    DMS_STOPPED,          \/\/ Not monitoring. Stopped normally.$/;"	e	enum:rtc::DBusMonitor::DBusMonitorStatus
DO_LAX	webrtc/base/base64.h	/^    DO_LAX    = DO_PARSE_ANY | DO_PAD_ANY | DO_TERM_CHAR,$/;"	e	enum:rtc::Base64::DecodeOption
DO_PAD_ANY	webrtc/base/base64.h	/^    DO_PAD_ANY      =  8,  \/\/ Padding is optional$/;"	e	enum:rtc::Base64::DecodeOption
DO_PAD_MASK	webrtc/base/base64.h	/^    DO_PAD_MASK     = 12,$/;"	e	enum:rtc::Base64::DecodeOption
DO_PAD_NO	webrtc/base/base64.h	/^    DO_PAD_NO       = 12,  \/\/ Padding is disallowed$/;"	e	enum:rtc::Base64::DecodeOption
DO_PAD_YES	webrtc/base/base64.h	/^    DO_PAD_YES      =  4,  \/\/ Padding is required$/;"	e	enum:rtc::Base64::DecodeOption
DO_PARSE_ANY	webrtc/base/base64.h	/^    DO_PARSE_ANY    =  3,  \/\/ Parse all characters$/;"	e	enum:rtc::Base64::DecodeOption
DO_PARSE_MASK	webrtc/base/base64.h	/^    DO_PARSE_MASK   =  3,$/;"	e	enum:rtc::Base64::DecodeOption
DO_PARSE_STRICT	webrtc/base/base64.h	/^    DO_PARSE_STRICT =  1,  \/\/ Parse only base64 characters$/;"	e	enum:rtc::Base64::DecodeOption
DO_PARSE_WHITE	webrtc/base/base64.h	/^    DO_PARSE_WHITE  =  2,  \/\/ Parse only base64 and whitespace characters$/;"	e	enum:rtc::Base64::DecodeOption
DO_STRICT	webrtc/base/base64.h	/^    DO_STRICT = DO_PARSE_STRICT | DO_PAD_YES | DO_TERM_BUFFER,$/;"	e	enum:rtc::Base64::DecodeOption
DO_TERM_ANY	webrtc/base/base64.h	/^    DO_TERM_ANY     = 48,  \/\/ May terminate at a sub-character bit offset$/;"	e	enum:rtc::Base64::DecodeOption
DO_TERM_BUFFER	webrtc/base/base64.h	/^    DO_TERM_BUFFER  = 16,  \/\/ Must termiante at end of buffer$/;"	e	enum:rtc::Base64::DecodeOption
DO_TERM_CHAR	webrtc/base/base64.h	/^    DO_TERM_CHAR    = 32,  \/\/ May terminate at any character boundary$/;"	e	enum:rtc::Base64::DecodeOption
DO_TERM_MASK	webrtc/base/base64.h	/^    DO_TERM_MASK    = 48,$/;"	e	enum:rtc::Base64::DecodeOption
DSCP_AF11	webrtc/base/dscp.h	/^  DSCP_AF11 = 10,$/;"	e	enum:rtc::DiffServCodePoint
DSCP_AF12	webrtc/base/dscp.h	/^  DSCP_AF12 = 12,$/;"	e	enum:rtc::DiffServCodePoint
DSCP_AF13	webrtc/base/dscp.h	/^  DSCP_AF13 = 14,$/;"	e	enum:rtc::DiffServCodePoint
DSCP_AF21	webrtc/base/dscp.h	/^  DSCP_AF21 = 18,$/;"	e	enum:rtc::DiffServCodePoint
DSCP_AF22	webrtc/base/dscp.h	/^  DSCP_AF22 = 20,$/;"	e	enum:rtc::DiffServCodePoint
DSCP_AF23	webrtc/base/dscp.h	/^  DSCP_AF23 = 22,$/;"	e	enum:rtc::DiffServCodePoint
DSCP_AF31	webrtc/base/dscp.h	/^  DSCP_AF31 = 26,$/;"	e	enum:rtc::DiffServCodePoint
DSCP_AF32	webrtc/base/dscp.h	/^  DSCP_AF32 = 28,$/;"	e	enum:rtc::DiffServCodePoint
DSCP_AF33	webrtc/base/dscp.h	/^  DSCP_AF33 = 30,$/;"	e	enum:rtc::DiffServCodePoint
DSCP_AF41	webrtc/base/dscp.h	/^  DSCP_AF41 = 34,  \/\/ Video$/;"	e	enum:rtc::DiffServCodePoint
DSCP_AF42	webrtc/base/dscp.h	/^  DSCP_AF42 = 36,  \/\/ Video$/;"	e	enum:rtc::DiffServCodePoint
DSCP_AF43	webrtc/base/dscp.h	/^  DSCP_AF43 = 38,  \/\/ Video$/;"	e	enum:rtc::DiffServCodePoint
DSCP_CS0	webrtc/base/dscp.h	/^  DSCP_CS0  = 0,   \/\/ The default$/;"	e	enum:rtc::DiffServCodePoint
DSCP_CS1	webrtc/base/dscp.h	/^  DSCP_CS1  = 8,   \/\/ Bulk\/background traffic$/;"	e	enum:rtc::DiffServCodePoint
DSCP_CS2	webrtc/base/dscp.h	/^  DSCP_CS2  = 16,$/;"	e	enum:rtc::DiffServCodePoint
DSCP_CS3	webrtc/base/dscp.h	/^  DSCP_CS3  = 24,$/;"	e	enum:rtc::DiffServCodePoint
DSCP_CS4	webrtc/base/dscp.h	/^  DSCP_CS4  = 32,$/;"	e	enum:rtc::DiffServCodePoint
DSCP_CS5	webrtc/base/dscp.h	/^  DSCP_CS5  = 40,  \/\/ Video$/;"	e	enum:rtc::DiffServCodePoint
DSCP_CS6	webrtc/base/dscp.h	/^  DSCP_CS6  = 48,  \/\/ Voice$/;"	e	enum:rtc::DiffServCodePoint
DSCP_CS7	webrtc/base/dscp.h	/^  DSCP_CS7  = 56,  \/\/ Control messages$/;"	e	enum:rtc::DiffServCodePoint
DSCP_DEFAULT	webrtc/base/dscp.h	/^  DSCP_DEFAULT = 0,  \/\/ Same as DSCP_CS0$/;"	e	enum:rtc::DiffServCodePoint
DSCP_EF	webrtc/base/dscp.h	/^  DSCP_EF   = 46,  \/\/ Voice$/;"	e	enum:rtc::DiffServCodePoint
DSCP_NO_CHANGE	webrtc/base/dscp.h	/^  DSCP_NO_CHANGE = -1,$/;"	e	enum:rtc::DiffServCodePoint
DSM_SIGNAL	webrtc/base/dbus.h	/^  enum DBusSigMessage { DSM_SIGNAL };$/;"	e	enum:rtc::DBusSigFilter::DBusSigMessage
DST_SIGNED	webrtc/base/safe_conversions_impl.h	/^  DST_SIGNED$/;"	e	enum:rtc::internal::DstSign
DST_UNSIGNED	webrtc/base/safe_conversions_impl.h	/^  DST_UNSIGNED,$/;"	e	enum:rtc::internal::DstSign
Data	webrtc/base/bytebuffer.h	/^  const char* Data() const { return bytes_ + start_; }$/;"	f	class:rtc::ByteBufferReader
Data	webrtc/base/bytebuffer.h	/^  const char* Data() const { return bytes_; }$/;"	f	class:rtc::ByteBufferWriter
Data	webrtc/base/trace_event.h	/^  struct Data {$/;"	s	class:webrtc::trace_event_internal::TraceEndOnScopeClose
Data	webrtc/base/winping.cc	/^    PVOID   Data;               \/\/ Pointer to the reply data$/;"	m	struct:rtc::icmp_echo_reply	file:
DataBufferHi	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  double    DataBufferHi[WINLEN];$/;"	m	struct:__anon125
DataBufferLo	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  double    DataBufferLo[WINLEN];$/;"	m	struct:__anon125
DataSize	webrtc/base/winping.cc	/^    USHORT  DataSize;           \/\/ Reply data size in bytes$/;"	m	struct:rtc::icmp_echo_reply	file:
DataWritten	webrtc/base/sslstreamadapter_unittest.cc	/^  rtc::StreamResult DataWritten(SSLDummyStreamBase *from, const void *data,$/;"	f	class:SSLStreamAdapterTestBase
Db2Loudness	webrtc/modules/audio_processing/agc/utility.cc	/^double Db2Loudness(double db) {$/;"	f
Dbfs2Loudness	webrtc/modules/audio_processing/agc/utility.cc	/^double Dbfs2Loudness(double dbfs) {$/;"	f
DebugDumpGenerator	webrtc/modules/audio_processing/test/debug_dump_test.cc	/^DebugDumpGenerator::DebugDumpGenerator($/;"	f	class:webrtc::test::__anon223::DebugDumpGenerator
DebugDumpGenerator	webrtc/modules/audio_processing/test/debug_dump_test.cc	/^DebugDumpGenerator::DebugDumpGenerator(const std::string& input_file_name,$/;"	f	class:webrtc::test::__anon223::DebugDumpGenerator
DebugDumpGenerator	webrtc/modules/audio_processing/test/debug_dump_test.cc	/^class DebugDumpGenerator {$/;"	c	namespace:webrtc::test::__anon223	file:
DebugDumpReplayer	webrtc/modules/audio_processing/test/debug_dump_replayer.cc	/^DebugDumpReplayer::DebugDumpReplayer()$/;"	f	class:webrtc::test::DebugDumpReplayer
DebugDumpReplayer	webrtc/modules/audio_processing/test/debug_dump_replayer.h	/^class DebugDumpReplayer {$/;"	c	namespace:webrtc::test
DebugDumpTest	webrtc/modules/audio_processing/test/debug_dump_test.cc	/^class DebugDumpTest : public ::testing::Test {$/;"	c	namespace:webrtc::test	file:
DebugFile	webrtc/modules/audio_processing/agc/agc_manager_direct.cc	/^  explicit DebugFile(const char* filename)$/;"	f	class:webrtc::DebugFile
DebugFile	webrtc/modules/audio_processing/agc/agc_manager_direct.cc	/^class DebugFile {$/;"	c	namespace:webrtc	file:
DebugNonReentrantCritScope	webrtc/base/messagequeue.cc	/^class SCOPED_LOCKABLE DebugNonReentrantCritScope {$/;"	c	namespace:rtc::__anon32	file:
Decode	webrtc/base/base64.h	/^  static inline bool Decode(const std::string& data, DecodeFlags flags,$/;"	f	class:rtc::Base64
Decode	webrtc/base/base64.h	/^  static inline std::string Decode(const std::string& data, DecodeFlags flags) {$/;"	f	class:rtc::Base64
Decode	webrtc/modules/audio_coding/codecs/isac/main/source/isac.c	/^static int Decode(ISACStruct* ISAC_main_inst,$/;"	f	file:
DecodeFlags	webrtc/base/base64.h	/^  typedef int DecodeFlags;$/;"	t	class:rtc::Base64
DecodeFourChar	webrtc/base/macutils.cc	/^void DecodeFourChar(UInt32 fc, std::string* out) {$/;"	f	namespace:rtc
DecodeFromArray	webrtc/base/base64.cc	/^bool Base64::DecodeFromArray(const char* data, size_t len, DecodeFlags flags,$/;"	f	class:rtc::Base64
DecodeFromArrayTemplate	webrtc/base/base64.cc	/^bool Base64::DecodeFromArrayTemplate(const char* data, size_t len,$/;"	f	class:rtc::Base64
DecodeOption	webrtc/base/base64.h	/^  enum DecodeOption {$/;"	g	class:rtc::Base64
DecodeTable	webrtc/base/base64.cc	/^const unsigned char Base64::DecodeTable[] = {$/;"	m	class:rtc::Base64	file:
DecodeTable	webrtc/base/base64.h	/^  static const unsigned char DecodeTable[];$/;"	m	class:rtc::Base64
DecodeTest	webrtc/base/base64_unittest.cc	/^bool DecodeTest(const char* encoded, size_t expect_unparsed,$/;"	f
DecoderInitLb	webrtc/modules/audio_coding/codecs/isac/main/source/isac.c	/^static void DecoderInitLb(ISACLBStruct* instISAC) {$/;"	f	file:
DecoderInitUb	webrtc/modules/audio_coding/codecs/isac/main/source/isac.c	/^static void DecoderInitUb(ISACUBStruct* instISAC) {$/;"	f	file:
DecoderSpecificSettings	webrtc/config.h	/^class DecoderSpecificSettings {$/;"	c	namespace:webrtc
Decrement	webrtc/base/atomicops.h	/^  static int Decrement(volatile int* i) {$/;"	f	class:rtc::AtomicOps
DecrementAbortCount	webrtc/base/taskrunner.h	/^  void DecrementAbortCount() {$/;"	f	class:rtc::TaskRunner
DecrementOp	webrtc/base/criticalsection_unittest.cc	/^struct DecrementOp {$/;"	s	namespace:rtc::__anon10	file:
DefaultFolderDelimiter	webrtc/base/pathutils.cc	/^char Pathname::DefaultFolderDelimiter() {$/;"	f	class:rtc::Pathname
DefaultLocalAddressProvider	webrtc/base/network.h	/^class DefaultLocalAddressProvider {$/;"	c	namespace:rtc
DegreesToRadians	webrtc/modules/audio_processing/beamformer/array_util.h	/^T DegreesToRadians(T angle_degrees) {$/;"	f	namespace:webrtc
Deinterleave	webrtc/common_audio/include/audio_util.h	/^void Deinterleave(const T* interleaved,$/;"	f	namespace:webrtc
DeinterleaveFrom	webrtc/modules/audio_processing/audio_buffer.cc	/^void AudioBuffer::DeinterleaveFrom(AudioFrame* frame) {$/;"	f	class:webrtc::AudioBuffer
Delay	webrtc/modules/audio_processing/intelligibility/intelligibility_utils.cc	/^void DelayBuffer::Delay(float* const* data, size_t length) {$/;"	f	class:webrtc::intelligibility::DelayBuffer
DelayAgnostic	webrtc/modules/audio_processing/include/audio_processing.h	/^  DelayAgnostic() : enabled(false) {}$/;"	f	struct:webrtc::DelayAgnostic
DelayAgnostic	webrtc/modules/audio_processing/include/audio_processing.h	/^  explicit DelayAgnostic(bool enabled) : enabled(enabled) {}$/;"	f	struct:webrtc::DelayAgnostic
DelayAgnostic	webrtc/modules/audio_processing/include/audio_processing.h	/^struct DelayAgnostic {$/;"	s	namespace:webrtc
DelayBuffer	webrtc/modules/audio_processing/intelligibility/intelligibility_utils.cc	/^DelayBuffer::DelayBuffer(size_t delay, size_t num_channels)$/;"	f	class:webrtc::intelligibility::DelayBuffer
DelayBuffer	webrtc/modules/audio_processing/intelligibility/intelligibility_utils.h	/^class DelayBuffer {$/;"	c	namespace:webrtc::intelligibility
DelayEstimator	webrtc/modules/audio_processing/utility/delay_estimator_internal.h	/^} DelayEstimator;$/;"	t	typeref:struct:__anon231
DelayEstimatorFarend	webrtc/modules/audio_processing/utility/delay_estimator_internal.h	/^} DelayEstimatorFarend;$/;"	t	typeref:struct:__anon230
DelayEstimatorTest	webrtc/modules/audio_processing/utility/delay_estimator_unittest.cc	/^DelayEstimatorTest::DelayEstimatorTest()$/;"	f	class:__anon232::DelayEstimatorTest
DelayEstimatorTest	webrtc/modules/audio_processing/utility/delay_estimator_unittest.cc	/^class DelayEstimatorTest : public ::testing::Test {$/;"	c	namespace:__anon232	file:
DelayHighBands	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer.cc	/^void IntelligibilityEnhancer::DelayHighBands(AudioBuffer* audio) {$/;"	f	class:webrtc::IntelligibilityEnhancer
DelaySource	webrtc/modules/audio_processing/aec/aec_core.cc	/^enum class DelaySource {$/;"	c	namespace:webrtc::__anon145	file:
DelayTest	webrtc/base/virtualsocket_unittest.cc	/^  void DelayTest(const SocketAddress& initial_addr) {$/;"	f	class:VirtualSocketServerTest
DelayedMessage	webrtc/base/messagequeue.h	/^  DelayedMessage(int64_t delay,$/;"	f	class:rtc::DelayedMessage
DelayedMessage	webrtc/base/messagequeue.h	/^class DelayedMessage {$/;"	c	namespace:rtc
DelayedPostsWithIdenticalTimesAreProcessedInFifoOrder	webrtc/base/messagequeue_unittest.cc	/^static void DelayedPostsWithIdenticalTimesAreProcessedInFifoOrder($/;"	f	file:
DelayedTasks	webrtc/base/task_queue.h	/^      DelayedTasks;$/;"	t	class:rtc::TaskQueue
DeleteCert	webrtc/base/fakesslidentity.h	/^  static void DeleteCert(SSLCertificate* cert) { delete cert; }$/;"	f	class:rtc::FakeSSLCertificate
DeleteCert	webrtc/base/sslidentity.h	/^  static void DeleteCert(SSLCertificate* cert) { delete cert; }$/;"	f	class:rtc::SSLCertChain
DeleteContext	webrtc/base/task_queue_gcd.cc	/^  static void DeleteContext(void* context) {$/;"	f	struct:rtc::TaskQueue::QueueContext
DeleteEmptyFolder	webrtc/base/fileutils_mock.h	/^    bool DeleteEmptyFolder(const Pathname &folder) {$/;"	f	class:rtc::FakeFileSystem
DeleteEmptyFolder	webrtc/base/unixfilesystem.cc	/^bool UnixFilesystem::DeleteEmptyFolder(const Pathname &folder) {$/;"	f	class:rtc::UnixFilesystem
DeleteEmptyFolder	webrtc/base/win32filesystem.cc	/^bool Win32Filesystem::DeleteEmptyFolder(const Pathname &folder) {$/;"	f	class:rtc::Win32Filesystem
DeleteFile	webrtc/base/diskcache_win32.cc	/^bool DiskCacheWin32::DeleteFile(const std::string& filename) const {$/;"	f	class:rtc::DiskCacheWin32
DeleteFile	webrtc/base/fileutils.h	/^  static bool DeleteFile(const Pathname &filename) {$/;"	f	class:rtc::Filesystem
DeleteFile	webrtc/base/fileutils_mock.h	/^    bool DeleteFile(const Pathname &filename) {$/;"	f	class:rtc::FakeFileSystem
DeleteFile	webrtc/base/unixfilesystem.cc	/^bool UnixFilesystem::DeleteFile(const Pathname &filename) {$/;"	f	class:rtc::UnixFilesystem
DeleteFile	webrtc/base/win32filesystem.cc	/^bool Win32Filesystem::DeleteFile(const Pathname &filename) {$/;"	f	class:rtc::Win32Filesystem
DeleteFolderAndContents	webrtc/base/fileutils.cc	/^bool FilesystemInterface::DeleteFolderAndContents(const Pathname& folder) {$/;"	f	class:rtc::FilesystemInterface
DeleteFolderAndContents	webrtc/base/fileutils.h	/^  static bool DeleteFolderAndContents(const Pathname &folder) {$/;"	f	class:rtc::Filesystem
DeleteFolderAndContents	webrtc/base/fileutils_mock.h	/^    bool DeleteFolderAndContents(const Pathname &folder) {$/;"	f	class:rtc::FakeFileSystem
DeleteFolderContents	webrtc/base/fileutils.cc	/^bool FilesystemInterface::DeleteFolderContents(const Pathname &folder) {$/;"	f	class:rtc::FilesystemInterface
DeleteFolderContents	webrtc/base/fileutils.h	/^  static bool DeleteFolderContents(const Pathname &folder) {$/;"	f	class:rtc::Filesystem
DeleteFolderContents	webrtc/base/fileutils_mock.h	/^    bool DeleteFolderContents(const Pathname &folder) {$/;"	f	class:rtc::FakeFileSystem
DeleteKey	webrtc/base/win32regkey.cc	/^HRESULT RegKey::DeleteKey(const wchar_t* full_key_name) {$/;"	f	class:rtc::RegKey
DeleteKey	webrtc/base/win32regkey.cc	/^HRESULT RegKey::DeleteKey(const wchar_t* full_key_name, bool recursively) {$/;"	f	class:rtc::RegKey
DeleteResource	webrtc/base/diskcache.cc	/^bool DiskCache::DeleteResource(const std::string& id) {$/;"	f	class:rtc::DiskCache
DeleteSequencedCheckerOnThread	webrtc/base/sequenced_task_checker_unittest.cc	/^  explicit DeleteSequencedCheckerOnThread($/;"	f	class:rtc::__anon56::DeleteSequencedCheckerOnThread
DeleteSequencedCheckerOnThread	webrtc/base/sequenced_task_checker_unittest.cc	/^class DeleteSequencedCheckerOnThread {$/;"	c	namespace:rtc::__anon56	file:
DeleteSubKey	webrtc/base/win32regkey.cc	/^HRESULT RegKey::DeleteSubKey(const wchar_t* key_name) {$/;"	f	class:rtc::RegKey
DeleteTestTaskRunner	webrtc/base/task_unittest.cc	/^  DeleteTestTaskRunner() {$/;"	f	class:rtc::DeleteTestTaskRunner
DeleteTestTaskRunner	webrtc/base/task_unittest.cc	/^class DeleteTestTaskRunner : public TaskRunner {$/;"	c	namespace:rtc	file:
DeleteThreadCheckerClassOnThread	webrtc/base/thread_checker_unittest.cc	/^  explicit DeleteThreadCheckerClassOnThread($/;"	f	class:rtc::__anon69::DeleteThreadCheckerClassOnThread
DeleteThreadCheckerClassOnThread	webrtc/base/thread_checker_unittest.cc	/^class DeleteThreadCheckerClassOnThread : public Thread {$/;"	c	namespace:rtc::__anon69	file:
DeleteValue	webrtc/base/win32regkey.cc	/^HRESULT RegKey::DeleteValue(const wchar_t* full_key_name,$/;"	f	class:rtc::RegKey
DeleteValue	webrtc/base/win32regkey.cc	/^HRESULT RegKey::DeleteValue(const wchar_t* value_name) {$/;"	f	class:rtc::RegKey
DeletedLockChecker	webrtc/base/messagequeue_unittest.cc	/^  DeletedLockChecker(MessageQueueTest* test, bool* was_locked, bool* deleted)$/;"	f	struct:DeletedLockChecker
DeletedLockChecker	webrtc/base/messagequeue_unittest.cc	/^struct DeletedLockChecker {$/;"	s	file:
DeletedMessageHandler	webrtc/base/messagequeue_unittest.cc	/^  explicit DeletedMessageHandler(bool* deleted) : deleted_(deleted) { }$/;"	f	class:DeletedMessageHandler
DeletedMessageHandler	webrtc/base/messagequeue_unittest.cc	/^class DeletedMessageHandler : public MessageHandler {$/;"	c	file:
Denormalize	webrtc/modules/audio_processing/ns/nsx_core.h	/^typedef void (*Denormalize)(NoiseSuppressionFixedC* inst,$/;"	t
DenormalizeC	webrtc/modules/audio_processing/ns/nsx_core.c	/^static void DenormalizeC(NoiseSuppressionFixedC* inst,$/;"	f	file:
DerToPem	webrtc/base/sslidentity.cc	/^std::string SSLIdentity::DerToPem(const std::string& pem_type,$/;"	f	class:rtc::SSLIdentity
Derived	webrtc/base/weak_ptr_unittest.cc	/^struct Derived : public Base {};$/;"	s	namespace:rtc::__anon74	file:
DesktopDescription	webrtc/base/windowpicker.h	/^  DesktopDescription() : id_() {}$/;"	f	class:rtc::DesktopDescription
DesktopDescription	webrtc/base/windowpicker.h	/^  DesktopDescription(const DesktopId& id, const std::string& title)$/;"	f	class:rtc::DesktopDescription
DesktopDescription	webrtc/base/windowpicker.h	/^class DesktopDescription {$/;"	c	namespace:rtc
DesktopDescriptionList	webrtc/base/windowpicker.h	/^typedef std::vector<DesktopDescription> DesktopDescriptionList;$/;"	t	namespace:rtc
DesktopId	webrtc/base/window.h	/^  DesktopId() : id_(0), index_(-1) {}$/;"	f	class:rtc::DesktopId
DesktopId	webrtc/base/window.h	/^  DesktopId(const DesktopT& id, int index)  \/\/ NOLINT$/;"	f	class:rtc::DesktopId
DesktopId	webrtc/base/window.h	/^class DesktopId {$/;"	c	namespace:rtc
DesktopT	webrtc/base/window.h	/^  typedef Window DesktopT;$/;"	t	class:rtc::DesktopId
Destroy	webrtc/base/nethelpers.cc	/^void AsyncResolver::Destroy(bool wait) {$/;"	f	class:rtc::AsyncResolver
Destroy	webrtc/base/proxyserver.cc	/^void ProxyBinding::Destroy() {$/;"	f	class:rtc::ProxyBinding
Destroy	webrtc/base/signalthread.cc	/^void SignalThread::Destroy(bool wait) {$/;"	f	class:rtc::SignalThread
Destroy	webrtc/base/win32window.cc	/^void Win32Window::Destroy() {$/;"	f	class:rtc::Win32Window
DestroyAudioProcessor	webrtc/modules/audio_processing/test/audio_processing_simulator.cc	/^void AudioProcessingSimulator::DestroyAudioProcessor() {$/;"	f	class:webrtc::test::AudioProcessingSimulator
Detach	webrtc/base/sequenced_task_checker.h	/^  void Detach() {}$/;"	f	class:rtc::SequencedTaskCheckerDoNothing
Detach	webrtc/base/sequenced_task_checker_impl.cc	/^void SequencedTaskCheckerImpl::Detach() {$/;"	f	class:rtc::SequencedTaskCheckerImpl
Detach	webrtc/base/socketstream.cc	/^AsyncSocket* SocketStream::Detach() {$/;"	f	class:rtc::SocketStream
Detach	webrtc/base/stream.cc	/^StreamInterface* StreamAdapterInterface::Detach() {$/;"	f	class:rtc::StreamAdapterInterface
DetachFromThread	webrtc/base/thread_checker.h	/^  void DetachFromThread() {}$/;"	f	class:rtc::ThreadCheckerDoNothing
DetachFromThread	webrtc/base/thread_checker_impl.cc	/^void ThreadCheckerImpl::DetachFromThread() {$/;"	f	class:rtc::ThreadCheckerImpl
DetachFromThread	webrtc/base/thread_checker_unittest.cc	/^  void DetachFromThread() {$/;"	f	class:rtc::__anon69::ThreadCheckerClass
DetachTap	webrtc/base/stream.cc	/^StreamInterface* StreamTap::DetachTap() {$/;"	f	class:rtc::StreamTap
DetachThenCallFromDifferentTaskQueue	webrtc/base/sequenced_task_checker_unittest.cc	/^void DetachThenCallFromDifferentTaskQueue(bool expect_true) {$/;"	f	namespace:rtc::__anon56
DetachThenCallFromDifferentThreadImpl	webrtc/base/thread_checker_unittest.cc	/^void ThreadCheckerClass::DetachThenCallFromDifferentThreadImpl() {$/;"	f	class:rtc::ThreadCheckerClass
Detect	webrtc/modules/audio_processing/transient/transient_detector.cc	/^float TransientDetector::Detect(const float* data,$/;"	f	class:webrtc::TransientDetector
DetectNumberOfCores	webrtc/base/systeminfo.cc	/^static int DetectNumberOfCores() {$/;"	f	namespace:rtc
DetectProxyType	webrtc/base/proxy_unittest.cc	/^  rtc::ProxyType DetectProxyType(const SocketAddress& address) {$/;"	f	class:ProxyTest
DiffServCodePoint	webrtc/base/dscp.h	/^enum DiffServCodePoint {$/;"	g	namespace:rtc
DigestType	webrtc/base/sslidentity_unittest.cc	/^  typedef unsigned char DigestType[rtc::MessageDigest::kMaxSize];$/;"	t	class:SSLIdentityTest	file:
DigiCert_Assured_ID_Root_CA_certificate	webrtc/base/sslroots.h	/^const unsigned char DigiCert_Assured_ID_Root_CA_certificate[955]={$/;"	v
DigiCert_Assured_ID_Root_G2_certificate	webrtc/base/sslroots.h	/^const unsigned char DigiCert_Assured_ID_Root_G2_certificate[922]={$/;"	v
DigiCert_Assured_ID_Root_G3_certificate	webrtc/base/sslroots.h	/^const unsigned char DigiCert_Assured_ID_Root_G3_certificate[586]={$/;"	v
DigiCert_Global_Root_CA_certificate	webrtc/base/sslroots.h	/^const unsigned char DigiCert_Global_Root_CA_certificate[947]={$/;"	v
DigiCert_Global_Root_G2_certificate	webrtc/base/sslroots.h	/^const unsigned char DigiCert_Global_Root_G2_certificate[914]={$/;"	v
DigiCert_Global_Root_G3_certificate	webrtc/base/sslroots.h	/^const unsigned char DigiCert_Global_Root_G3_certificate[579]={$/;"	v
DigiCert_High_Assurance_EV_Root_CA_certificate	webrtc/base/sslroots.h	/^const unsigned char DigiCert_High_Assurance_EV_Root_CA_certificate[969]={$/;"	v
DigiCert_Trusted_Root_G4_certificate	webrtc/base/sslroots.h	/^const unsigned char DigiCert_Trusted_Root_G4_certificate[1428]={$/;"	v
DigitalAgc	webrtc/modules/audio_processing/agc/legacy/digital_agc.h	/^} DigitalAgc;$/;"	t	typeref:struct:__anon174
DirectSend	webrtc/base/socketadapters.cc	/^void AsyncSocksProxyServerSocket::DirectSend(const ByteBufferWriter& buf) {$/;"	f	class:rtc::AsyncSocksProxyServerSocket
DirectSend	webrtc/base/socketadapters.h	/^  int DirectSend(const void* pv, size_t cb) {$/;"	f	class:rtc::BufferedReadAdapter
DirectoryIterator	webrtc/base/fileutils.cc	/^DirectoryIterator::DirectoryIterator()$/;"	f	class:rtc::DirectoryIterator
DirectoryIterator	webrtc/base/fileutils.h	/^class DirectoryIterator {$/;"	c	namespace:rtc
DisableBuffering	webrtc/base/filerotatingstream.cc	/^bool FileRotatingStream::DisableBuffering() {$/;"	f	class:rtc::FileRotatingStream
DisableBuffering	webrtc/base/logsinks.cc	/^bool FileRotatingLogSink::DisableBuffering() {$/;"	f	class:rtc::FileRotatingLogSink
DisableBuffering	webrtc/base/stream.cc	/^bool FileStream::DisableBuffering() {$/;"	f	class:rtc::FileStream
DisableSSL	webrtc/base/sslsocketfactory.h	/^  void DisableSSL() { hostname_.clear(); }$/;"	f	class:rtc::SslSocketFactory
Disconnect	webrtc/base/httpbase.cc	/^  HttpBase* Disconnect(HttpError error) {$/;"	f	class:rtc::HttpBase::DocumentStream
Disconnect	webrtc/base/sigslot_unittest.cc	/^  void Disconnect() {$/;"	f	class:SigslotReceiver
Disconnect	webrtc/base/sigslot_unittest.cc	/^  void Disconnect() {$/;"	f	class:SigslotSlotTest
Disconnect	webrtc/base/virtualsocketserver.cc	/^bool VirtualSocketServer::Disconnect(VirtualSocket* socket) {$/;"	f	class:rtc::VirtualSocketServer
DiskCache	webrtc/base/diskcache.cc	/^DiskCache::DiskCache() : max_cache_(0), total_size_(0), total_accessors_(0) {$/;"	f	class:rtc::DiskCache
DiskCache	webrtc/base/diskcache.h	/^class DiskCache {$/;"	c	namespace:rtc
DiskCacheAdapter	webrtc/base/diskcache.cc	/^  DiskCacheAdapter(const DiskCache* cache, const std::string& id, size_t index,$/;"	f	class:rtc::DiskCacheAdapter
DiskCacheAdapter	webrtc/base/diskcache.cc	/^class DiskCacheAdapter : public StreamAdapterInterface {$/;"	c	namespace:rtc	file:
DiskCacheWin32	webrtc/base/diskcache_win32.h	/^class DiskCacheWin32 : public DiskCache {$/;"	c	namespace:rtc
Dispatch	webrtc/base/messagequeue.cc	/^void MessageQueue::Dispatch(Message *pmsg) {$/;"	f	class:rtc::MessageQueue
Dispatcher	webrtc/base/physicalsocketserver.h	/^class Dispatcher {$/;"	c	namespace:rtc
DispatcherEvent	webrtc/base/physicalsocketserver.h	/^enum DispatcherEvent {$/;"	g	namespace:rtc
DispatcherList	webrtc/base/physicalsocketserver.h	/^  typedef std::vector<Dispatcher*> DispatcherList;$/;"	t	class:rtc::PhysicalSocketServer
Dispose	webrtc/base/messagequeue.h	/^  template<class T> void Dispose(T* doomed) {$/;"	f	class:rtc::MessageQueue
Dispose	webrtc/base/win32socketserver.cc	/^void Win32Socket::EventSink::Dispose() {$/;"	f	class:rtc::Win32Socket::EventSink
DisposeData	webrtc/base/messagequeue.h	/^  explicit DisposeData(T* data) : data_(data) { }$/;"	f	class:rtc::DisposeData
DisposeData	webrtc/base/messagequeue.h	/^class DisposeData : public MessageData {$/;"	c	namespace:rtc
Distance	webrtc/modules/audio_processing/beamformer/array_util.h	/^float Distance(CartesianPoint<T> a, CartesianPoint<T> b) {$/;"	f	namespace:webrtc
DivergentFilterFraction	webrtc/modules/audio_processing/aec/aec_core.cc	/^DivergentFilterFraction::DivergentFilterFraction()$/;"	f	class:webrtc::DivergentFilterFraction
DivergentFilterFraction	webrtc/modules/audio_processing/aec/aec_core.h	/^class DivergentFilterFraction {$/;"	c	namespace:webrtc
DllHandle	webrtc/base/latebindingsymboltable.h	/^typedef void *DllHandle;$/;"	t	namespace:rtc
DnsLookup	webrtc/base/win32socketserver.cc	/^struct Win32Socket::DnsLookup {$/;"	s	class:rtc::Win32Socket	file:
DoAccept	webrtc/base/physicalsocketserver.cc	/^SOCKET PhysicalSocket::DoAccept(SOCKET socket,$/;"	f	class:rtc::PhysicalSocket
DoAccept	webrtc/base/physicalsocketserver_unittest.cc	/^SOCKET FakeSocketDispatcher::DoAccept(SOCKET socket,$/;"	f	class:rtc::FakeSocketDispatcher
DoCheck	webrtc/base/testutils.h	/^  bool DoCheck(void* obj, StreamSinkEvent event, bool reset) {$/;"	f	class:testing::StreamSink
DoClose	webrtc/base/stream.cc	/^void FileStream::DoClose() {$/;"	f	class:rtc::FileStream
DoConnect	webrtc/base/autodetectproxy.cc	/^bool AutoDetectProxy::DoConnect() {$/;"	f	class:rtc::AutoDetectProxy
DoConnect	webrtc/base/physicalsocketserver.cc	/^int PhysicalSocket::DoConnect(const SocketAddress& connect_addr) {$/;"	f	class:rtc::PhysicalSocket
DoConnect	webrtc/base/win32socketserver.cc	/^int Win32Socket::DoConnect(const SocketAddress& addr) {$/;"	f	class:rtc::Win32Socket
DoDelayPost	webrtc/base/messagequeue.cc	/^void MessageQueue::DoDelayPost(const Location& posted_from,$/;"	f	class:rtc::MessageQueue
DoDestroy	webrtc/base/messagequeue.cc	/^void MessageQueue::DoDestroy() {$/;"	f	class:rtc::MessageQueue
DoEvents	webrtc/base/testutils.h	/^  int DoEvents(void* obj, bool reset) {$/;"	f	class:testing::StreamSink
DoHandshake	webrtc/base/ssladapter_unittest.cc	/^  void DoHandshake(rtc::AsyncSocket* socket) {$/;"	f	class:SSLAdapterTestDummyServer	file:
DoInit	webrtc/base/messagequeue.cc	/^void MessageQueue::DoInit() {$/;"	f	class:rtc::MessageQueue
DoInvoke	webrtc/base/asyncinvoker.cc	/^void AsyncInvoker::DoInvoke(const Location& posted_from,$/;"	f	class:rtc::AsyncInvoker
DoInvokeDelayed	webrtc/base/asyncinvoker.cc	/^void AsyncInvoker::DoInvokeDelayed(const Location& posted_from,$/;"	f	class:rtc::AsyncInvoker
DoNothing	webrtc/base/keep_ref_until_done.h	/^static inline void DoNothing(const scoped_refptr<T>& object) {}$/;"	f	namespace:rtc::impl
DoReceiveLoop	webrtc/base/httpbase.cc	/^bool HttpBase::DoReceiveLoop(HttpError* error) {$/;"	f	class:rtc::HttpBase
DoReserve	webrtc/base/stream.cc	/^StreamResult MemoryStream::DoReserve(size_t size, int* error) {$/;"	f	class:rtc::MemoryStream
DoReserve	webrtc/base/stream.cc	/^StreamResult MemoryStreamBase::DoReserve(size_t size, int* error) {$/;"	f	class:rtc::MemoryStreamBase
DoSend	webrtc/base/physicalsocketserver.cc	/^int PhysicalSocket::DoSend(SOCKET socket, const char* buf, int len, int flags) {$/;"	f	class:rtc::PhysicalSocket
DoSend	webrtc/base/physicalsocketserver_unittest.cc	/^int FakeSocketDispatcher::DoSend(SOCKET socket, const char* buf, int len,$/;"	f	class:rtc::FakeSocketDispatcher
DoSendTo	webrtc/base/physicalsocketserver.cc	/^int PhysicalSocket::DoSendTo(SOCKET socket,$/;"	f	class:rtc::PhysicalSocket
DoSendTo	webrtc/base/physicalsocketserver_unittest.cc	/^int FakeSocketDispatcher::DoSendTo(SOCKET socket, const char* buf, int len,$/;"	f	class:rtc::FakeSocketDispatcher
DoStuff	webrtc/base/thread_checker_unittest.cc	/^  void DoStuff() { RTC_DCHECK(CalledOnValidThread()); }$/;"	f	class:rtc::__anon69::ThreadCheckerClass
DoUpdateNetworks	webrtc/base/fakenetwork.h	/^  void DoUpdateNetworks() {$/;"	f	class:rtc::FakeNetworkManager
DoWork	webrtc/base/autodetectproxy.cc	/^void AutoDetectProxy::DoWork() {$/;"	f	class:rtc::AutoDetectProxy
DoWork	webrtc/base/nethelpers.cc	/^void AsyncResolver::DoWork() {$/;"	f	class:rtc::AsyncResolver
DoWork	webrtc/base/signalthread_unittest.cc	/^    virtual void DoWork() {$/;"	f	class:SignalThreadTest::SlowSignalThread
DocumentStream	webrtc/base/httpbase.cc	/^  DocumentStream(HttpBase* base) : base_(base), error_(HE_DEFAULT) { }$/;"	f	class:rtc::HttpBase::DocumentStream
DocumentStream	webrtc/base/httpbase.cc	/^class HttpBase::DocumentStream : public StreamInterface {$/;"	c	class:rtc::HttpBase	file:
DotProduct	webrtc/modules/audio_processing/beamformer/array_util.cc	/^float DotProduct(const Point& a, const Point& b) {$/;"	f	namespace:webrtc
DotProduct	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer.cc	/^float DotProduct(const float* a, const float* b, size_t length) {$/;"	f	namespace:webrtc::__anon202
DotProductWithScaleNeon	webrtc/common_audio/signal_processing/cross_correlation_neon.c	/^static inline void DotProductWithScaleNeon(int32_t* cross_correlation,$/;"	f	file:
DoubleVectorToJsonArray	webrtc/base/json.cc	/^Json::Value DoubleVectorToJsonArray(const std::vector<double>& in) {$/;"	f	namespace:rtc
DownModulate	webrtc/modules/audio_processing/three_band_filter_bank.cc	/^void ThreeBandFilterBank::DownModulate(const float* in,$/;"	f	class:webrtc::ThreeBandFilterBank
DownSample	webrtc/modules/audio_processing/level_controller/down_sampler.cc	/^void DownSampler::DownSample(rtc::ArrayView<const float> in,$/;"	f	class:webrtc::DownSampler
DownSampler	webrtc/modules/audio_processing/level_controller/down_sampler.cc	/^DownSampler::DownSampler(ApmDataDumper* data_dumper)$/;"	f	class:webrtc::DownSampler
DownSampler	webrtc/modules/audio_processing/level_controller/down_sampler.h	/^class DownSampler {$/;"	c	namespace:webrtc
DownmixConverter	webrtc/common_audio/audio_converter.cc	/^  DownmixConverter(size_t src_channels, size_t src_frames, size_t dst_channels,$/;"	f	class:webrtc::DownmixConverter
DownmixConverter	webrtc/common_audio/audio_converter.cc	/^class DownmixConverter : public AudioConverter {$/;"	c	namespace:webrtc	file:
DownmixInterleavedToMono	webrtc/common_audio/audio_util.cc	/^void DownmixInterleavedToMono<int16_t>(const int16_t* interleaved,$/;"	f	namespace:webrtc
DownmixInterleavedToMonoImpl	webrtc/common_audio/include/audio_util.h	/^void DownmixInterleavedToMonoImpl(const T* interleaved,$/;"	f	namespace:webrtc
DownmixToMono	webrtc/common_audio/include/audio_util.h	/^void DownmixToMono(const T* const* input_channels,$/;"	f	namespace:webrtc
Downsample	webrtc/modules/audio_processing/three_band_filter_bank.cc	/^void Downsample(const float* in,$/;"	f	namespace:webrtc::__anon224
DownsampleFast	webrtc/common_audio/signal_processing/include/signal_processing_library.h	/^typedef int (*DownsampleFast)(const int16_t* data_in,$/;"	t
DstLimits	webrtc/base/safe_conversions_impl.h	/^  typedef std::numeric_limits<Dst> DstLimits;$/;"	t	struct:rtc::internal::StaticRangeCheck
DstRange	webrtc/base/safe_conversions_impl.h	/^enum DstRange {$/;"	g	namespace:rtc::internal
DstSign	webrtc/base/safe_conversions_impl.h	/^enum DstSign {$/;"	g	namespace:rtc::internal
DumpBacktrace	webrtc/base/checks.cc	/^void DumpBacktrace() {$/;"	f	namespace:rtc
DumpNetworks	webrtc/base/network.cc	/^void BasicNetworkManager::DumpNetworks() {$/;"	f	class:rtc::BasicNetworkManager
DumpNetworks	webrtc/base/network.h	/^  virtual void DumpNetworks() {}$/;"	f	class:rtc::NetworkManager
DumpRaw	webrtc/modules/audio_processing/logging/apm_data_dumper.h	/^  void DumpRaw(const char* name, int v_length, const bool* v) {$/;"	f	class:webrtc::ApmDataDumper
DumpRaw	webrtc/modules/audio_processing/logging/apm_data_dumper.h	/^  void DumpRaw(const char* name, int v_length, const float* v) {$/;"	f	class:webrtc::ApmDataDumper
DumpRaw	webrtc/modules/audio_processing/logging/apm_data_dumper.h	/^  void DumpRaw(const char* name, int v_length, const int16_t* v) {$/;"	f	class:webrtc::ApmDataDumper
DumpRaw	webrtc/modules/audio_processing/logging/apm_data_dumper.h	/^  void DumpRaw(const char* name, int v_length, const int32_t* v) {$/;"	f	class:webrtc::ApmDataDumper
DumpRaw	webrtc/modules/audio_processing/logging/apm_data_dumper.h	/^  void DumpRaw(const char* name, rtc::ArrayView<const bool> v) {$/;"	f	class:webrtc::ApmDataDumper
DumpRaw	webrtc/modules/audio_processing/logging/apm_data_dumper.h	/^  void DumpRaw(const char* name, rtc::ArrayView<const float> v) {$/;"	f	class:webrtc::ApmDataDumper
DumpRaw	webrtc/modules/audio_processing/logging/apm_data_dumper.h	/^  void DumpRaw(const char* name, rtc::ArrayView<const int16_t> v) {$/;"	f	class:webrtc::ApmDataDumper
DumpRaw	webrtc/modules/audio_processing/logging/apm_data_dumper.h	/^  void DumpRaw(const char* name, rtc::ArrayView<const int32_t> v) {$/;"	f	class:webrtc::ApmDataDumper
DumpWav	webrtc/modules/audio_processing/logging/apm_data_dumper.h	/^  void DumpWav(const char* name,$/;"	f	class:webrtc::ApmDataDumper
DupCert	webrtc/base/fakesslidentity.h	/^  static FakeSSLCertificate* DupCert(FakeSSLCertificate cert) {$/;"	f	class:rtc::FakeSSLCertificate
DupCert	webrtc/base/sslidentity.h	/^  static SSLCertificate* DupCert(const SSLCertificate* cert) {$/;"	f	class:rtc::SSLCertChain
DyadicDecimate	webrtc/modules/audio_processing/transient/dyadic_decimator.h	/^static size_t DyadicDecimate(const T* in,$/;"	f	namespace:webrtc
E	webrtc/base/bind_unittest.cc	/^struct E: public D {$/;"	s	namespace:rtc::__anon4	file:
EACCES	webrtc/base/socket.h	/^#undef EACCES$/;"	d
EADDRINUSE	webrtc/base/socket.h	/^#define EADDRINUSE /;"	d
EADDRINUSE	webrtc/base/socket.h	/^#undef EADDRINUSE$/;"	d
EADDRNOTAVAIL	webrtc/base/socket.h	/^#define EADDRNOTAVAIL /;"	d
EADDRNOTAVAIL	webrtc/base/socket.h	/^#undef EADDRNOTAVAIL$/;"	d
EAFNOSUPPORT	webrtc/base/socket.h	/^#define EAFNOSUPPORT /;"	d
EAFNOSUPPORT	webrtc/base/socket.h	/^#undef EAFNOSUPPORT$/;"	d
EALREADY	webrtc/base/socket.h	/^#define EALREADY /;"	d
EALREADY	webrtc/base/socket.h	/^#undef EALREADY$/;"	d
ECCurve	webrtc/base/sslidentity.h	/^enum ECCurve { EC_NIST_P256, \/* EC_FANCY, *\/ EC_LAST };$/;"	g	namespace:rtc
ECDSA	webrtc/base/sslidentity.cc	/^KeyParams KeyParams::ECDSA(ECCurve curve) {$/;"	f	class:rtc::KeyParams
ECONNABORTED	webrtc/base/socket.h	/^#define ECONNABORTED /;"	d
ECONNABORTED	webrtc/base/socket.h	/^#undef ECONNABORTED$/;"	d
ECONNREFUSED	webrtc/base/socket.h	/^#define ECONNREFUSED /;"	d
ECONNREFUSED	webrtc/base/socket.h	/^#undef ECONNREFUSED$/;"	d
ECONNRESET	webrtc/base/socket.h	/^#define ECONNRESET /;"	d
ECONNRESET	webrtc/base/socket.h	/^#undef ECONNRESET$/;"	d
EC_LAST	webrtc/base/sslidentity.h	/^enum ECCurve { EC_NIST_P256, \/* EC_FANCY, *\/ EC_LAST };$/;"	e	enum:rtc::ECCurve
EC_NIST_P256	webrtc/base/sslidentity.h	/^enum ECCurve { EC_NIST_P256, \/* EC_FANCY, *\/ EC_LAST };$/;"	e	enum:rtc::ECCurve
ECstartup	webrtc/modules/audio_processing/aecm/echo_control_mobile.cc	/^    int ECstartup;$/;"	m	struct:__anon165	file:
EDESTADDRREQ	webrtc/base/socket.h	/^#define EDESTADDRREQ /;"	d
EDESTADDRREQ	webrtc/base/socket.h	/^#undef EDESTADDRREQ$/;"	d
EDQUOT	webrtc/base/socket.h	/^#define EDQUOT /;"	d
EDQUOT	webrtc/base/socket.h	/^#undef EDQUOT$/;"	d
EHOSTDOWN	webrtc/base/socket.h	/^#define EHOSTDOWN /;"	d
EHOSTDOWN	webrtc/base/socket.h	/^#undef EHOSTDOWN$/;"	d
EHOSTUNREACH	webrtc/base/socket.h	/^#define EHOSTUNREACH /;"	d
EHOSTUNREACH	webrtc/base/socket.h	/^#undef EHOSTUNREACH$/;"	d
EINPROGRESS	webrtc/base/socket.h	/^#define EINPROGRESS /;"	d
EINPROGRESS	webrtc/base/socket.h	/^#undef EINPROGRESS$/;"	d
EISCONN	webrtc/base/socket.h	/^#define EISCONN /;"	d
EISCONN	webrtc/base/socket.h	/^#undef EISCONN$/;"	d
ELOOP	webrtc/base/socket.h	/^#define ELOOP /;"	d
ELOOP	webrtc/base/socket.h	/^#undef ELOOP$/;"	d
EMPTY_STR	webrtc/base/pathutils.cc	/^static const char EMPTY_STR[] = "";$/;"	m	namespace:rtc	file:
EMSGSIZE	webrtc/base/socket.h	/^#define EMSGSIZE /;"	d
EMSGSIZE	webrtc/base/socket.h	/^#undef EMSGSIZE$/;"	d
ENABLE_DEBUG	webrtc/base/common.h	/^#define ENABLE_DEBUG /;"	d
ENABLE_SEQUENCED_TASK_CHECKER	webrtc/base/sequenced_task_checker.h	/^#define ENABLE_SEQUENCED_TASK_CHECKER /;"	d
ENABLE_SEQUENCED_TASK_CHECKER	webrtc/base/sequenced_task_checker.h	/^#undef ENABLE_SEQUENCED_TASK_CHECKER$/;"	d
ENABLE_THREAD_CHECKER	webrtc/base/thread_checker.h	/^#define ENABLE_THREAD_CHECKER /;"	d
ENABLE_THREAD_CHECKER	webrtc/base/thread_checker.h	/^#undef ENABLE_THREAD_CHECKER$/;"	d
ENABLE_THREAD_CHECKER	webrtc/base/thread_checker_unittest.cc	/^#define ENABLE_THREAD_CHECKER /;"	d	file:
ENABLE_THREAD_CHECKER	webrtc/base/thread_checker_unittest.cc	/^#undef ENABLE_THREAD_CHECKER$/;"	d	file:
ENAMETOOLONG	webrtc/base/socket.h	/^#define ENAMETOOLONG /;"	d
ENAMETOOLONG	webrtc/base/socket.h	/^#undef ENAMETOOLONG$/;"	d
END_STARTUP_LONG	webrtc/modules/audio_processing/ns/defines.h	/^#define END_STARTUP_LONG /;"	d
END_STARTUP_LONG	webrtc/modules/audio_processing/ns/nsx_defines.h	/^#define END_STARTUP_LONG /;"	d
END_STARTUP_SHORT	webrtc/modules/audio_processing/ns/defines.h	/^#define END_STARTUP_SHORT /;"	d
END_STARTUP_SHORT	webrtc/modules/audio_processing/ns/nsx_defines.h	/^#define END_STARTUP_SHORT /;"	d
ENERGY_DEV_OFFSET	webrtc/modules/audio_processing/aecm/aecm_defines.h	/^#define ENERGY_DEV_OFFSET /;"	d
ENERGY_DEV_TOL	webrtc/modules/audio_processing/aecm/aecm_defines.h	/^#define ENERGY_DEV_TOL /;"	d
ENETDOWN	webrtc/base/socket.h	/^#define ENETDOWN /;"	d
ENETDOWN	webrtc/base/socket.h	/^#undef ENETDOWN$/;"	d
ENETRESET	webrtc/base/socket.h	/^#define ENETRESET /;"	d
ENETRESET	webrtc/base/socket.h	/^#undef ENETRESET$/;"	d
ENETUNREACH	webrtc/base/socket.h	/^#define ENETUNREACH /;"	d
ENETUNREACH	webrtc/base/socket.h	/^#undef ENETUNREACH$/;"	d
ENOBUFS	webrtc/base/socket.h	/^#define ENOBUFS /;"	d
ENOBUFS	webrtc/base/socket.h	/^#undef ENOBUFS$/;"	d
ENOPROTOOPT	webrtc/base/socket.h	/^#define ENOPROTOOPT /;"	d
ENOPROTOOPT	webrtc/base/socket.h	/^#undef ENOPROTOOPT$/;"	d
ENOTCONN	webrtc/base/socket.h	/^#define ENOTCONN /;"	d
ENOTCONN	webrtc/base/socket.h	/^#undef ENOTCONN$/;"	d
ENOTEMPTY	webrtc/base/socket.h	/^#define ENOTEMPTY /;"	d
ENOTEMPTY	webrtc/base/socket.h	/^#undef ENOTEMPTY$/;"	d
ENOTSOCK	webrtc/base/socket.h	/^#define ENOTSOCK /;"	d
ENOTSOCK	webrtc/base/socket.h	/^#undef ENOTSOCK$/;"	d
ENUM	webrtc/base/httpcommon.cc	/^#define ENUM(/;"	d	file:
ENUMERATION_ALLOWED	webrtc/base/network.h	/^    ENUMERATION_ALLOWED,  \/\/ Adapter enumeration is allowed. Getting 0 network$/;"	e	enum:rtc::NetworkManager::EnumerationPermission
ENUMERATION_BLOCKED	webrtc/base/network.h	/^    ENUMERATION_BLOCKED,  \/\/ Adapter enumeration is disabled.$/;"	e	enum:rtc::NetworkManager::EnumerationPermission
EOPNOTSUPP	webrtc/base/socket.h	/^#define EOPNOTSUPP /;"	d
EOPNOTSUPP	webrtc/base/socket.h	/^#undef EOPNOTSUPP$/;"	d
EPFNOSUPPORT	webrtc/base/socket.h	/^#define EPFNOSUPPORT /;"	d
EPFNOSUPPORT	webrtc/base/socket.h	/^#undef EPFNOSUPPORT$/;"	d
EPROCLIM	webrtc/base/socket.h	/^#define EPROCLIM /;"	d
EPROCLIM	webrtc/base/socket.h	/^#undef EPROCLIM$/;"	d
EPROTONOSUPPORT	webrtc/base/socket.h	/^#define EPROTONOSUPPORT /;"	d
EPROTONOSUPPORT	webrtc/base/socket.h	/^#undef EPROTONOSUPPORT$/;"	d
EPROTOTYPE	webrtc/base/socket.h	/^#define EPROTOTYPE /;"	d
EPROTOTYPE	webrtc/base/socket.h	/^#undef EPROTOTYPE$/;"	d
EREMOTE	webrtc/base/socket.h	/^#define EREMOTE /;"	d
EREMOTE	webrtc/base/socket.h	/^#undef EREMOTE$/;"	d
ERRCTX_EN	webrtc/base/logging.h	/^  ERRCTX_EN = ERRCTX_ERRNO,     \/\/ LOG_E(sev, EN, x)$/;"	e	enum:rtc::LogErrorContext
ERRCTX_ERRNO	webrtc/base/logging.h	/^  ERRCTX_ERRNO,     \/\/ System-local errno$/;"	e	enum:rtc::LogErrorContext
ERRCTX_HR	webrtc/base/logging.h	/^  ERRCTX_HR = ERRCTX_HRESULT,   \/\/ LOG_E(sev, HR, x)$/;"	e	enum:rtc::LogErrorContext
ERRCTX_HRESULT	webrtc/base/logging.h	/^  ERRCTX_HRESULT,   \/\/ Windows HRESULT$/;"	e	enum:rtc::LogErrorContext
ERRCTX_NONE	webrtc/base/logging.h	/^  ERRCTX_NONE,$/;"	e	enum:rtc::LogErrorContext
ERRCTX_OS	webrtc/base/logging.h	/^  ERRCTX_OS = ERRCTX_OSSTATUS,  \/\/ LOG_E(sev, OS, x)$/;"	e	enum:rtc::LogErrorContext
ERRCTX_OSSTATUS	webrtc/base/logging.h	/^  ERRCTX_OSSTATUS,  \/\/ MacOS OSStatus$/;"	e	enum:rtc::LogErrorContext
ERROR	webrtc/base/logging.cc	/^#undef ERROR /;"	d	file:
ERROR_JAVA_ENV	WebRTCAudioProcessing_jni.h	/^	ERROR_JAVA_ENV = -32,$/;"	e	enum:Error
ERROR_MEMORY	WebRTCAudioProcessing_jni.h	/^	ERROR_MEMORY = -30,$/;"	e	enum:Error
ERROR_OPERATION	WebRTCAudioProcessing_jni.h	/^	ERROR_OPERATION = -34,$/;"	e	enum:Error
ERROR_PARAMETER	WebRTCAudioProcessing_jni.h	/^	ERROR_PARAMETER = -35,$/;"	e	enum:Error
ERROR_POINTER	WebRTCAudioProcessing_jni.h	/^	ERROR_POINTER = -31,$/;"	e	enum:Error
ERROR_WEBRTC	WebRTCAudioProcessing_jni.h	/^	ERROR_WEBRTC = -33,$/;"	e	enum:Error
ESHUTDOWN	webrtc/base/socket.h	/^#define ESHUTDOWN /;"	d
ESHUTDOWN	webrtc/base/socket.h	/^#undef ESHUTDOWN$/;"	d
ESOCKTNOSUPPORT	webrtc/base/socket.h	/^#define ESOCKTNOSUPPORT /;"	d
ESOCKTNOSUPPORT	webrtc/base/socket.h	/^#undef ESOCKTNOSUPPORT$/;"	d
ESTALE	webrtc/base/socket.h	/^#define ESTALE /;"	d
ESTALE	webrtc/base/socket.h	/^#undef ESTALE$/;"	d
ETIMEDOUT	webrtc/base/socket.h	/^#define ETIMEDOUT /;"	d
ETIMEDOUT	webrtc/base/socket.h	/^#undef ETIMEDOUT$/;"	d
ETOOMANYREFS	webrtc/base/socket.h	/^#define ETOOMANYREFS /;"	d
ETOOMANYREFS	webrtc/base/socket.h	/^#undef ETOOMANYREFS$/;"	d
EUSERS	webrtc/base/socket.h	/^#define EUSERS /;"	d
EUSERS	webrtc/base/socket.h	/^#undef EUSERS$/;"	d
EVEN_A_LENGTH	webrtc/common_audio/signal_processing/filter_ar_fast_q12_armv7.S	/^EVEN_A_LENGTH:$/;"	l
EWOULDBLOCK	webrtc/base/socket.h	/^#define EWOULDBLOCK /;"	d
EWOULDBLOCK	webrtc/base/socket.h	/^#undef EWOULDBLOCK /;"	d
EXCLUSIVE_LOCKS_REQUIRED	webrtc/base/logging.cc	/^void LogMessage::UpdateMinLogSeverity() EXCLUSIVE_LOCKS_REQUIRED(g_log_crit) {$/;"	f	namespace:rtc
EXCLUSIVE_LOCKS_REQUIRED	webrtc/base/thread_annotations.h	/^#define EXCLUSIVE_LOCKS_REQUIRED(/;"	d
EXCLUSIVE_LOCKS_REQUIRED	webrtc/base/thread_annotations_unittest.cc	/^  void WriteProtectedFunction() EXCLUSIVE_LOCKS_REQUIRED(lock_, pt_lock_) {$/;"	f	class:__anon68::ThreadSafe	file:
EXCLUSIVE_LOCK_FUNCTION	webrtc/base/criticalsection.cc	/^void CriticalSection::Enter() const EXCLUSIVE_LOCK_FUNCTION() {$/;"	f	namespace:rtc
EXCLUSIVE_LOCK_FUNCTION	webrtc/base/criticalsection_unittest.cc	/^  void Lock() EXCLUSIVE_LOCK_FUNCTION() {$/;"	f	class:rtc::__anon10::CriticalSectionLock
EXCLUSIVE_LOCK_FUNCTION	webrtc/base/messagequeue.cc	/^      EXCLUSIVE_LOCK_FUNCTION(cs)$/;"	f	class:rtc::__anon32::DebugNonReentrantCritScope
EXCLUSIVE_LOCK_FUNCTION	webrtc/base/race_checker.h	/^      EXCLUSIVE_LOCK_FUNCTION(race_checker) {}$/;"	f	class:rtc::internal::RaceCheckerScopeDoNothing
EXCLUSIVE_LOCK_FUNCTION	webrtc/base/sharedexclusivelock.h	/^      EXCLUSIVE_LOCK_FUNCTION(lock)$/;"	f	class:rtc::ExclusiveScope
EXCLUSIVE_LOCK_FUNCTION	webrtc/base/thread_annotations.h	/^#define EXCLUSIVE_LOCK_FUNCTION(/;"	d
EXCLUSIVE_LOCK_FUNCTION	webrtc/base/thread_annotations_unittest.cc	/^  explicit ScopeLock(const Lock& lock) EXCLUSIVE_LOCK_FUNCTION(lock) {}$/;"	f	class:__anon68::ScopeLock
EXCLUSIVE_LOCK_FUNCTION	webrtc/base/thread_annotations_unittest.cc	/^  void EnterWrite() const EXCLUSIVE_LOCK_FUNCTION() {}$/;"	f	class:__anon68::Lock
EXCLUSIVE_LOCK_FUNCTION	webrtc/base/thread_checker.h	/^      EXCLUSIVE_LOCK_FUNCTION(thread_like_object) {}$/;"	f	class:rtc::internal::AnnounceOnThread
EXCLUSIVE_LOCK_FUNCTION	webrtc/system_wrappers/include/critical_section_wrapper.h	/^      EXCLUSIVE_LOCK_FUNCTION(critsec)$/;"	f	class:webrtc::CriticalSectionScoped
EXCLUSIVE_LOCK_FUNCTION	webrtc/system_wrappers/include/critical_section_wrapper.h	/^  void Enter() EXCLUSIVE_LOCK_FUNCTION() { lock_.Enter(); }$/;"	f	class:webrtc::CriticalSectionWrapper
EXCLUSIVE_LOCK_FUNCTION	webrtc/system_wrappers/include/rw_lock_wrapper.h	/^  WriteLockScoped(RWLockWrapper& rw_lock) EXCLUSIVE_LOCK_FUNCTION(rw_lock)$/;"	f	class:webrtc::WriteLockScoped
EXCLUSIVE_TRYLOCK_FUNCTION	webrtc/base/criticalsection.cc	/^bool CriticalSection::TryEnter() const EXCLUSIVE_TRYLOCK_FUNCTION(true) {$/;"	f	namespace:rtc
EXCLUSIVE_TRYLOCK_FUNCTION	webrtc/base/thread_annotations.h	/^#define EXCLUSIVE_TRYLOCK_FUNCTION(/;"	d
EXCLUSIVE_TRYLOCK_FUNCTION	webrtc/base/thread_annotations_unittest.cc	/^  bool TryEnterWrite() const EXCLUSIVE_TRYLOCK_FUNCTION(true) { return true; }$/;"	f	class:__anon68::Lock
EXPECT_EQ_ARRAY	webrtc/base/base64_unittest.cc	/^#define EXPECT_EQ_ARRAY(/;"	d	file:
EXPECT_EQ_SIMULATED_WAIT	webrtc/base/gunit.h	/^#define EXPECT_EQ_SIMULATED_WAIT(/;"	d
EXPECT_EQ_WAIT	webrtc/base/gunit.h	/^#define EXPECT_EQ_WAIT(/;"	d
EXPECT_FAILED	webrtc/base/win32regkey_unittest.cc	/^#define EXPECT_FAILED(/;"	d	file:
EXPECT_IS_CAPTURED_AS_PTR	webrtc/base/bind_unittest.cc	/^#define EXPECT_IS_CAPTURED_AS_PTR(/;"	d	file:
EXPECT_IS_CAPTURED_AS_SCOPED_REFPTR	webrtc/base/bind_unittest.cc	/^#define EXPECT_IS_CAPTURED_AS_SCOPED_REFPTR(/;"	d	file:
EXPECT_MEMEQ	webrtc/base/testutils.h	/^#define EXPECT_MEMEQ(/;"	d
EXPECT_NOERR	webrtc/modules/audio_processing/test/test_utils.h	/^#define EXPECT_NOERR(/;"	d
EXPECT_STATE	webrtc/base/signalthread_unittest.cc	/^#define EXPECT_STATE(/;"	d	file:
EXPECT_STATE_WAIT	webrtc/base/signalthread_unittest.cc	/^#define EXPECT_STATE_WAIT(/;"	d	file:
EXPECT_SUCCEEDED	webrtc/base/win32regkey_unittest.cc	/^#define EXPECT_SUCCEEDED(/;"	d	file:
EXPECT_TRUE_SIMULATED_WAIT	webrtc/base/gunit.h	/^#define EXPECT_TRUE_SIMULATED_WAIT(/;"	d
EXPECT_TRUE_WAIT	webrtc/base/gunit.h	/^#define EXPECT_TRUE_WAIT(/;"	d
EXPECT_TRUE_WAIT_MARGIN	webrtc/base/gunit.h	/^#define EXPECT_TRUE_WAIT_MARGIN(/;"	d
EXT_DELIM	webrtc/base/pathutils.cc	/^const char EXT_DELIM = '.';$/;"	m	namespace:rtc	file:
E_CLOSED	webrtc/base/httpbase_unittest.cc	/^  enum EventType { E_HEADER_COMPLETE, E_COMPLETE, E_CLOSED };$/;"	e	enum:rtc::HttpBaseTest::EventType	file:
E_COMPLETE	webrtc/base/httpbase_unittest.cc	/^  enum EventType { E_HEADER_COMPLETE, E_COMPLETE, E_CLOSED };$/;"	e	enum:rtc::HttpBaseTest::EventType	file:
E_HEADER_COMPLETE	webrtc/base/httpbase_unittest.cc	/^  enum EventType { E_HEADER_COMPLETE, E_COMPLETE, E_CLOSED };$/;"	e	enum:rtc::HttpBaseTest::EventType	file:
EcModes	webrtc/common_types.h	/^enum EcModes {$/;"	g	namespace:webrtc
EchoCancellation	webrtc/modules/audio_processing/include/audio_processing.h	/^class EchoCancellation {$/;"	c	namespace:webrtc
EchoCancellationImpl	webrtc/modules/audio_processing/echo_cancellation_impl.cc	/^EchoCancellationImpl::EchoCancellationImpl(rtc::CriticalSection* crit_render,$/;"	f	class:webrtc::EchoCancellationImpl
EchoCancellationImpl	webrtc/modules/audio_processing/echo_cancellation_impl.h	/^class EchoCancellationImpl : public EchoCancellation {$/;"	c	namespace:webrtc
EchoCanceller3	webrtc/modules/audio_processing/include/audio_processing.h	/^  EchoCanceller3() : enabled(false) {}$/;"	f	struct:webrtc::EchoCanceller3
EchoCanceller3	webrtc/modules/audio_processing/include/audio_processing.h	/^  explicit EchoCanceller3(bool enabled) : enabled(enabled) {}$/;"	f	struct:webrtc::EchoCanceller3
EchoCanceller3	webrtc/modules/audio_processing/include/audio_processing.h	/^struct EchoCanceller3 {$/;"	s	namespace:webrtc
EchoControlMobile	webrtc/modules/audio_processing/include/audio_processing.h	/^class EchoControlMobile {$/;"	c	namespace:webrtc
EchoControlMobileImpl	webrtc/modules/audio_processing/echo_control_mobile_impl.cc	/^EchoControlMobileImpl::EchoControlMobileImpl(rtc::CriticalSection* crit_render,$/;"	f	class:webrtc::EchoControlMobileImpl
EchoControlMobileImpl	webrtc/modules/audio_processing/echo_control_mobile_impl.h	/^class EchoControlMobileImpl : public EchoControlMobile {$/;"	c	namespace:webrtc
EchoSubtraction	webrtc/modules/audio_processing/aec/aec_core.cc	/^static void EchoSubtraction(const OouraFft& ooura_fft,$/;"	f	namespace:webrtc
EchoSuppression	webrtc/modules/audio_processing/aec/aec_core.cc	/^static void EchoSuppression(const OouraFft& ooura_fft,$/;"	f	namespace:webrtc
ElapsedTime	webrtc/base/task.cc	/^int64_t Task::ElapsedTime() {$/;"	f	class:rtc::Task
EmptyCryptStringImpl	webrtc/base/cryptstring.h	/^class EmptyCryptStringImpl : public CryptStringImpl {$/;"	c	namespace:rtc
EmptyQueuedRenderAudio	webrtc/modules/audio_processing/audio_processing_impl.cc	/^void AudioProcessingImpl::EmptyQueuedRenderAudio() {$/;"	f	class:webrtc::AudioProcessingImpl
EmptySocketAddressWithFamily	webrtc/base/socketaddress.cc	/^SocketAddress EmptySocketAddressWithFamily(int family) {$/;"	f	namespace:rtc
Enable	webrtc/modules/audio_processing/echo_cancellation_impl.cc	/^int EchoCancellationImpl::Enable(bool enable) {$/;"	f	class:webrtc::EchoCancellationImpl
Enable	webrtc/modules/audio_processing/echo_control_mobile_impl.cc	/^int EchoControlMobileImpl::Enable(bool enable) {$/;"	f	class:webrtc::EchoControlMobileImpl
Enable	webrtc/modules/audio_processing/gain_control_for_experimental_agc.cc	/^int GainControlForExperimentalAgc::Enable(bool enable) {$/;"	f	class:webrtc::GainControlForExperimentalAgc
Enable	webrtc/modules/audio_processing/gain_control_impl.cc	/^int GainControlImpl::Enable(bool enable) {$/;"	f	class:webrtc::GainControlImpl
Enable	webrtc/modules/audio_processing/high_pass_filter_impl.cc	/^int HighPassFilterImpl::Enable(bool enable) {$/;"	f	class:webrtc::HighPassFilterImpl
Enable	webrtc/modules/audio_processing/level_estimator_impl.cc	/^int LevelEstimatorImpl::Enable(bool enable) {$/;"	f	class:webrtc::LevelEstimatorImpl
Enable	webrtc/modules/audio_processing/noise_suppression_impl.cc	/^int NoiseSuppressionImpl::Enable(bool enable) {$/;"	f	class:webrtc::NoiseSuppressionImpl
Enable	webrtc/modules/audio_processing/voice_detection_impl.cc	/^int VoiceDetectionImpl::Enable(bool enable) {$/;"	f	class:webrtc::VoiceDetectionImpl
Enable	webrtc/system_wrappers/source/metrics_default.cc	/^void Enable() {$/;"	f	namespace:webrtc::metrics
EnableAllAPComponents	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^void EnableAllAPComponents(AudioProcessing* ap) {$/;"	f	namespace:webrtc::__anon183
EnableAllComponents	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^void ApmTest::EnableAllComponents() {$/;"	f	class:webrtc::__anon183::ApmTest
Encode	webrtc/base/base64.h	/^  static inline std::string Encode(const std::string& data) {$/;"	f	class:rtc::Base64
EncodeFromArray	webrtc/base/base64.cc	/^void Base64::EncodeFromArray(const void* data, size_t len,$/;"	f	class:rtc::Base64
EncoderInitLb	webrtc/modules/audio_coding/codecs/isac/main/source/isac.c	/^static int16_t EncoderInitLb(ISACLBStruct* instLB,$/;"	f	file:
EncoderInitUb	webrtc/modules/audio_coding/codecs/isac/main/source/isac.c	/^static int16_t EncoderInitUb(ISACUBStruct* instUB,$/;"	f	file:
EncoderSpecificSettings	webrtc/config.h	/^  class EncoderSpecificSettings : public rtc::RefCountInterface {$/;"	c	class:webrtc::VideoEncoderConfig
EndOfBlock	webrtc/modules/audio_processing/utility/block_mean_calculator.cc	/^bool BlockMeanCalculator::EndOfBlock() const {$/;"	f	class:webrtc::BlockMeanCalculator
EndProcess	webrtc/base/httpserver.cc	/^HttpServer::Connection::EndProcess() {$/;"	f	class:rtc::HttpServer::Connection
EndResponse	webrtc/base/socketadapters.cc	/^void AsyncHttpsProxySocket::EndResponse() {$/;"	f	class:rtc::AsyncHttpsProxySocket
EndsWith	webrtc/base/proxydetect.cc	/^bool EndsWith(const std::string& a, const std::string& b) {$/;"	f	namespace:rtc
Energy	webrtc/modules/audio_processing/ns/ns_core.c	/^static float Energy(const float* buffer, size_t length) {$/;"	f	file:
EnsureBuffersDontShareData	webrtc/base/copyonwritebuffer_unittest.cc	/^void EnsureBuffersDontShareData(const CopyOnWriteBuffer& buf1,$/;"	f	namespace:rtc
EnsureBuffersShareData	webrtc/base/copyonwritebuffer_unittest.cc	/^void EnsureBuffersShareData(const CopyOnWriteBuffer& buf1,$/;"	f	namespace:rtc
EnsureCapacity	webrtc/base/buffer.h	/^  void EnsureCapacity(size_t capacity) {$/;"	f	class:rtc::BufferT
EnsureCapacity	webrtc/base/copyonwritebuffer.cc	/^void CopyOnWriteBuffer::EnsureCapacity(size_t capacity) {$/;"	f	class:rtc::CopyOnWriteBuffer
EnsureCapacityWithHeadroom	webrtc/base/buffer.h	/^  void EnsureCapacityWithHeadroom(size_t capacity, bool extra_headroom) {$/;"	f	class:rtc::BufferT
EnsureCrc32TableInited	webrtc/base/crc32.cc	/^static void EnsureCrc32TableInited() {$/;"	f	namespace:rtc
EnsureDefaultFilesystem	webrtc/base/fileutils.cc	/^FilesystemInterface *Filesystem::EnsureDefaultFilesystem() {$/;"	f	class:rtc::Filesystem
EnsureInitialized	webrtc/base/ratetracker.cc	/^void RateTracker::EnsureInitialized() {$/;"	f	class:rtc::RateTracker
EnsureStorage	webrtc/base/cryptstring.h	/^  void EnsureStorage(size_t n) {$/;"	f	class:rtc::FormatCryptString
EnsureWinsockInit	webrtc/base/win32socketinit.cc	/^void EnsureWinsockInit() {$/;"	f	namespace:rtc
EnterExit	webrtc/base/signalthread.h	/^  class SCOPED_LOCKABLE EnterExit {$/;"	c	class:rtc::SignalThread
Entrust_Root_Certification_Authority___EC1_certificate	webrtc/base/sslroots.h	/^const unsigned char Entrust_Root_Certification_Authority___EC1_certificate[765]={$/;"	v
Entrust_Root_Certification_Authority___G2_certificate	webrtc/base/sslroots.h	/^const unsigned char Entrust_Root_Certification_Authority___G2_certificate[1090]={$/;"	v
Entrust_Root_Certification_Authority_certificate	webrtc/base/sslroots.h	/^const unsigned char Entrust_Root_Certification_Authority_certificate[1173]={$/;"	v
Entrust_net_Premium_2048_Secure_Server_CA_certificate	webrtc/base/sslroots.h	/^const unsigned char Entrust_net_Premium_2048_Secure_Server_CA_certificate[1120]={$/;"	v
Entry	webrtc/base/diskcache.h	/^  struct Entry {$/;"	s	class:rtc::DiskCache
EntryMap	webrtc/base/diskcache.h	/^  typedef std::map<std::string, Entry> EntryMap;$/;"	t	class:rtc::DiskCache
Enum	webrtc/base/httpcommon.cc	/^struct Enum {$/;"	s	namespace:rtc	file:
EnumProc	webrtc/base/win32windowpicker.cc	/^BOOL CALLBACK Win32WindowPicker::EnumProc(HWND hwnd, LPARAM l_param) {$/;"	f	class:rtc::Win32WindowPicker
EnumerateDesktops	webrtc/base/x11windowpicker.cc	/^  bool EnumerateDesktops(DesktopDescriptionList* descriptions) {$/;"	f	class:rtc::XWindowEnumerator
EnumerateScreenWindows	webrtc/base/x11windowpicker.cc	/^  bool EnumerateScreenWindows(WindowDescriptionList* descriptions, int screen) {$/;"	f	class:rtc::XWindowEnumerator	file:
EnumerateWindows	webrtc/base/x11windowpicker.cc	/^  bool EnumerateWindows(WindowDescriptionList* descriptions) {$/;"	f	class:rtc::XWindowEnumerator
EnumerationPermission	webrtc/base/network.h	/^  enum EnumerationPermission {$/;"	g	class:rtc::NetworkManager
EqualIPs	webrtc/base/socketaddress.cc	/^bool SocketAddress::EqualIPs(const SocketAddress& addr) const {$/;"	f	class:rtc::SocketAddress
EqualPorts	webrtc/base/socketaddress.cc	/^bool SocketAddress::EqualPorts(const SocketAddress& addr) const {$/;"	f	class:rtc::SocketAddress
Equals	webrtc/base/window.h	/^  bool Equals(const DesktopId& other) const {$/;"	f	class:rtc::DesktopId
Equals	webrtc/base/window.h	/^  bool Equals(const WindowId& other) const {$/;"	f	class:rtc::WindowId
Equifax_Secure_CA_certificate	webrtc/base/sslroots.h	/^const unsigned char Equifax_Secure_CA_certificate[804]={$/;"	v
EraseOld	webrtc/base/rate_statistics.cc	/^void RateStatistics::EraseOld(int64_t now_ms) {$/;"	f	class:webrtc::RateStatistics
Error	WebRTCAudioProcessing_jni.h	/^enum Error {$/;"	g
Error	webrtc/base/openssladapter.cc	/^OpenSSLAdapter::Error(const char* context, int err, bool signal) {$/;"	f	class:rtc::OpenSSLAdapter
Error	webrtc/base/opensslstreamadapter.cc	/^void OpenSSLStreamAdapter::Error(const char* context,$/;"	f	class:rtc::OpenSSLStreamAdapter
Error	webrtc/base/socketadapters.cc	/^void AsyncHttpsProxySocket::Error(int error) {$/;"	f	class:rtc::AsyncHttpsProxySocket
Error	webrtc/base/socketadapters.cc	/^void AsyncSocksProxyServerSocket::Error(int error) {$/;"	f	class:rtc::AsyncSocksProxyServerSocket
Error	webrtc/base/socketadapters.cc	/^void AsyncSocksProxySocket::Error(int error) {$/;"	f	class:rtc::AsyncSocksProxySocket
Error	webrtc/base/task.cc	/^void Task::Error() {$/;"	f	class:rtc::Task
Error	webrtc/modules/audio_processing/include/audio_processing.h	/^  enum Error {$/;"	g	class:webrtc::AudioProcessing
ErrorHandler	webrtc/base/x11windowpicker.cc	/^  static int ErrorHandler(Display* display, XErrorEvent* e) {$/;"	f	class:rtc::XErrorSuppressor	file:
ErrorName	webrtc/base/logging.cc	/^std::string ErrorName(int err, const ConstantLabel* err_table) {$/;"	f	namespace:rtc
EscapeAttribute	webrtc/base/httpcommon.cc	/^std::string EscapeAttribute(const std::string& attribute) {$/;"	f	namespace:rtc::__anon19
EstBufDelayExtended	webrtc/modules/audio_processing/aec/echo_cancellation.cc	/^static void EstBufDelayExtended(Aec* self) {$/;"	f	namespace:webrtc
EstBufDelayNormal	webrtc/modules/audio_processing/aec/echo_cancellation.cc	/^static void EstBufDelayNormal(Aec* aecpc) {$/;"	f	namespace:webrtc
EstimateMTU	webrtc/base/asyncsocket.cc	/^int AsyncSocketAdapter::EstimateMTU(uint16_t* mtu) {$/;"	f	class:rtc::AsyncSocketAdapter
EstimateMTU	webrtc/base/physicalsocketserver.cc	/^int PhysicalSocket::EstimateMTU(uint16_t* mtu) {$/;"	f	class:rtc::PhysicalSocket
EstimateMTU	webrtc/base/virtualsocketserver.cc	/^int VirtualSocket::EstimateMTU(uint16_t* mtu) {$/;"	f	class:rtc::VirtualSocket
EstimateMTU	webrtc/base/win32socketserver.cc	/^int Win32Socket::EstimateMTU(uint16_t* mtu) {$/;"	f	class:rtc::Win32Socket
EstimateSkew	webrtc/modules/audio_processing/aec/aec_resampler.cc	/^int EstimateSkew(const int* rawSkew,$/;"	f	namespace:webrtc
EstimateTargetPresence	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.cc	/^void NonlinearBeamformer::EstimateTargetPresence() {$/;"	f	class:webrtc::NonlinearBeamformer
Evaluate	webrtc/base/virtualsocketserver.cc	/^double VirtualSocketServer::Evaluate(Function* f, double x) {$/;"	f	class:rtc::VirtualSocketServer
EvaluateGmm	webrtc/modules/audio_processing/vad/gmm.cc	/^double EvaluateGmm(const double* x, const GmmParameters& gmm_parameters) {$/;"	f	namespace:webrtc
Event	webrtc/base/event.cc	/^Event::Event(bool manual_reset, bool initially_signaled) {$/;"	f	class:rtc::Event
Event	webrtc/base/event.h	/^class Event {$/;"	c	namespace:rtc
Event	webrtc/base/httpbase_unittest.cc	/^  struct Event {$/;"	s	class:rtc::HttpBaseTest	file:
EventAssign	webrtc/base/task_queue_libevent.cc	/^void EventAssign(struct event* ev,$/;"	f	namespace:rtc::__anon65
EventDispatcher	webrtc/base/physicalsocketserver.cc	/^  EventDispatcher(PhysicalSocketServer *ss) : ss_(ss) {$/;"	f	class:rtc::EventDispatcher
EventDispatcher	webrtc/base/physicalsocketserver.cc	/^  EventDispatcher(PhysicalSocketServer* ss) : ss_(ss), fSignaled_(false) {$/;"	f	class:rtc::EventDispatcher
EventDispatcher	webrtc/base/physicalsocketserver.cc	/^class EventDispatcher : public Dispatcher {$/;"	c	namespace:rtc	file:
EventLogger	webrtc/base/event_tracer.cc	/^  EventLogger()$/;"	f	class:rtc::tracing::__anon12::final
EventMap	webrtc/base/testutils.h	/^  typedef std::map<void*,int> EventMap;$/;"	t	class:testing::StreamSink
EventSink	webrtc/base/win32socketserver.cc	/^  explicit EventSink(Win32Socket * parent) : parent_(parent) { }$/;"	f	class:rtc::Win32Socket::EventSink
EventSink	webrtc/base/win32socketserver.cc	/^class Win32Socket::EventSink : public Win32Window {$/;"	c	class:rtc::Win32Socket	file:
EventTimerWrapper	webrtc/system_wrappers/include/event_wrapper.h	/^class EventTimerWrapper : public EventWrapper {$/;"	c	namespace:webrtc
EventTracer	webrtc/base/event_tracer.h	/^class EventTracer {$/;"	c	namespace:webrtc
EventTracingThreadFunc	webrtc/base/event_tracer.cc	/^static bool EventTracingThreadFunc(void* params) {$/;"	f	namespace:rtc::tracing::__anon12
EventType	webrtc/base/httpbase_unittest.cc	/^  enum EventType { E_HEADER_COMPLETE, E_COMPLETE, E_CLOSED };$/;"	g	class:rtc::HttpBaseTest	file:
EventTypeWrapper	webrtc/system_wrappers/include/event_wrapper.h	/^enum EventTypeWrapper {$/;"	g	namespace:webrtc
EventWrapper	webrtc/system_wrappers/include/event_wrapper.h	/^class EventWrapper {$/;"	c	namespace:webrtc
Events	webrtc/base/testutils.h	/^  int Events(AsyncSocket* socket, bool reset = true) {$/;"	f	class:testing::StreamSink
Events	webrtc/base/testutils.h	/^  int Events(StreamInterface* stream, bool reset = true) {$/;"	f	class:testing::StreamSink
ExceedAgo	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  int    ExceedAgo;$/;"	m	struct:__anon132
ExclusiveScope	webrtc/base/sharedexclusivelock.h	/^class SCOPED_LOCKABLE ExclusiveScope {$/;"	c	namespace:rtc
Execute	webrtc/base/asyncinvoker-inl.h	/^  virtual void Execute() {$/;"	f	class:rtc::FireAndForgetAsyncClosure
Execute	webrtc/base/asyncinvoker-inl.h	/^  virtual void Execute() {$/;"	f	class:rtc::NotifyingAsyncClosure
ExpFilter	webrtc/base/exp_filter.h	/^  explicit ExpFilter(float alpha, float max = kValueUndefined)$/;"	f	class:rtc::ExpFilter
ExpFilter	webrtc/base/exp_filter.h	/^class ExpFilter {$/;"	c	namespace:rtc
ExpectArraysEq	webrtc/common_audio/audio_util_unittest.cc	/^void ExpectArraysEq(const float* ref, const float* test, size_t length) {$/;"	f	namespace:webrtc::__anon76
ExpectArraysEq	webrtc/common_audio/audio_util_unittest.cc	/^void ExpectArraysEq(const int16_t* ref, const int16_t* test, size_t length) {$/;"	f	namespace:webrtc::__anon76
ExpectCheckVolumeAndReset	webrtc/modules/audio_processing/agc/agc_manager_direct_unittest.cc	/^  void ExpectCheckVolumeAndReset(int volume) {$/;"	f	class:webrtc::AgcManagerDirectTest
ExpectInitialize	webrtc/modules/audio_processing/agc/agc_manager_direct_unittest.cc	/^  void ExpectInitialize() {$/;"	f	class:webrtc::AgcManagerDirectTest
ExpectNone	webrtc/base/physicalsocketserver_unittest.cc	/^  bool ExpectNone() {$/;"	f	class:rtc::PosixSignalDeliveryTest
ExpectNumChannels	webrtc/common_audio/channel_buffer_unittest.cc	/^void ExpectNumChannels(const IFChannelBuffer& ifchb, size_t num_channels) {$/;"	f	namespace:webrtc::__anon79
ExpectNumChannels	webrtc/modules/audio_processing/audio_buffer_unittest.cc	/^void ExpectNumChannels(const AudioBuffer& ab, size_t num_channels) {$/;"	f	namespace:webrtc::__anon179
ExpectSignal	webrtc/base/physicalsocketserver_unittest.cc	/^  bool ExpectSignal(int signum) {$/;"	f	class:rtc::PosixSignalDeliveryTest
ExperimentalAgc	webrtc/modules/audio_processing/include/audio_processing.h	/^  ExperimentalAgc() : enabled(true), startup_min_volume(kAgcStartupMinVolume) {}$/;"	f	struct:webrtc::ExperimentalAgc
ExperimentalAgc	webrtc/modules/audio_processing/include/audio_processing.h	/^  ExperimentalAgc(bool enabled, int startup_min_volume)$/;"	f	struct:webrtc::ExperimentalAgc
ExperimentalAgc	webrtc/modules/audio_processing/include/audio_processing.h	/^  explicit ExperimentalAgc(bool enabled)$/;"	f	struct:webrtc::ExperimentalAgc
ExperimentalAgc	webrtc/modules/audio_processing/include/audio_processing.h	/^struct ExperimentalAgc {$/;"	s	namespace:webrtc
ExperimentalNs	webrtc/modules/audio_processing/include/audio_processing.h	/^  ExperimentalNs() : enabled(false) {}$/;"	f	struct:webrtc::ExperimentalNs
ExperimentalNs	webrtc/modules/audio_processing/include/audio_processing.h	/^  explicit ExperimentalNs(bool enabled) : enabled(enabled) {}$/;"	f	struct:webrtc::ExperimentalNs
ExperimentalNs	webrtc/modules/audio_processing/include/audio_processing.h	/^struct ExperimentalNs {$/;"	s	namespace:webrtc
Expires	webrtc/base/rtccertificate.cc	/^uint64_t RTCCertificate::Expires() const {$/;"	f	class:rtc::RTCCertificate
ExpiresSeconds	webrtc/base/rtccertificate_unittest.cc	/^  uint64_t ExpiresSeconds(const scoped_refptr<RTCCertificate>& cert) const {$/;"	f	class:rtc::RTCCertificateTest
Exponential	webrtc/base/random.cc	/^double Random::Exponential(double lambda) {$/;"	f	class:webrtc::Random
ExportKeyingMaterial	webrtc/base/opensslstreamadapter.cc	/^bool OpenSSLStreamAdapter::ExportKeyingMaterial(const std::string& label,$/;"	f	class:rtc::OpenSSLStreamAdapter
ExportKeyingMaterial	webrtc/base/sslstreamadapter.cc	/^bool SSLStreamAdapter::ExportKeyingMaterial(const std::string& label,$/;"	f	class:rtc::SSLStreamAdapter
ExportKeyingMaterial	webrtc/base/sslstreamadapter_unittest.cc	/^  bool ExportKeyingMaterial(const char *label,$/;"	f	class:SSLStreamAdapterTestBase
ExtendFrame	webrtc/modules/audio_processing/level_controller/signal_classifier.cc	/^void SignalClassifier::FrameExtender::ExtendFrame($/;"	f	class:webrtc::SignalClassifier::FrameExtender
ExtendedFilter	webrtc/modules/audio_processing/include/audio_processing.h	/^  ExtendedFilter() : enabled(false) {}$/;"	f	struct:webrtc::ExtendedFilter
ExtendedFilter	webrtc/modules/audio_processing/include/audio_processing.h	/^  explicit ExtendedFilter(bool enabled) : enabled(enabled) {}$/;"	f	struct:webrtc::ExtendedFilter
ExtendedFilter	webrtc/modules/audio_processing/include/audio_processing.h	/^struct ExtendedFilter {$/;"	s	namespace:webrtc
ExternalMap	webrtc/base/natserver.h	/^  typedef std::map<SocketAddress, TransEntry*> ExternalMap;$/;"	t	class:rtc::NATServer
ExternalMemoryStream	webrtc/base/stream.cc	/^ExternalMemoryStream::ExternalMemoryStream() {$/;"	f	class:rtc::ExternalMemoryStream
ExternalMemoryStream	webrtc/base/stream.cc	/^ExternalMemoryStream::ExternalMemoryStream(void* data, size_t length) {$/;"	f	class:rtc::ExternalMemoryStream
ExternalMemoryStream	webrtc/base/stream.h	/^class ExternalMemoryStream : public MemoryStreamBase {$/;"	c	namespace:rtc
ExtractExtendedBlock	webrtc/modules/audio_processing/aec/aec_core.cc	/^void BlockBuffer::ExtractExtendedBlock(float extended_block[PART_LEN2]) {$/;"	f	class:webrtc::BlockBuffer
ExtractFeatures	webrtc/modules/audio_processing/vad/vad_audio_proc.cc	/^int VadAudioProc::ExtractFeatures(const int16_t* frame,$/;"	f	class:webrtc::VadAudioProc
ExtractFractionPart	webrtc/modules/audio_processing/aecm/aecm_core.cc	/^static int16_t ExtractFractionPart(uint32_t a, int zeros) {$/;"	f	file:
ExtractMappedAddress	webrtc/base/ipaddress.cc	/^in_addr ExtractMappedAddress(const in6_addr& in6) {$/;"	f	namespace:rtc
ExtractVectorFromAudioBuffer	webrtc/modules/audio_processing/test/audio_buffer_tools.cc	/^void ExtractVectorFromAudioBuffer(const StreamConfig& stream_config,$/;"	f	namespace:webrtc::test
ExtremeStreamMetadataChangeScheme	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  ExtremeStreamMetadataChangeScheme,$/;"	m	class:webrtc::__anon181::RuntimeParameterSettingScheme	file:
F	webrtc/base/bind_unittest.cc	/^struct F {$/;"	s	namespace:rtc::__anon4	file:
F1	webrtc/base/md5.cc	/^#define F1(/;"	d	file:
F2	webrtc/base/md5.cc	/^#define F2(/;"	d	file:
F3	webrtc/base/md5.cc	/^#define F3(/;"	d	file:
F4	webrtc/base/md5.cc	/^#define F4(/;"	d	file:
FACTOR	webrtc/modules/audio_processing/ns/defines.h	/^#define FACTOR /;"	d
FACTOR_1_LRT_DIFF	webrtc/modules/audio_processing/ns/nsx_defines.h	/^#define FACTOR_1_LRT_DIFF /;"	d
FACTOR_2_FLAT_Q10	webrtc/modules/audio_processing/ns/nsx_defines.h	/^#define FACTOR_2_FLAT_Q10 /;"	d
FACTOR_Q16	webrtc/modules/audio_processing/ns/nsx_defines.h	/^#define FACTOR_Q16 /;"	d
FACTOR_Q7	webrtc/modules/audio_processing/ns/nsx_defines.h	/^#define FACTOR_Q7 /;"	d
FACTOR_Q7_STARTUP	webrtc/modules/audio_processing/ns/nsx_defines.h	/^#define FACTOR_Q7_STARTUP /;"	d
FALLTHROUGH	webrtc/typedefs.h	/^#define FALLTHROUGH(/;"	d
FAR_BUF_LEN	webrtc/modules/audio_processing/aecm/aecm_defines.h	/^#define FAR_BUF_LEN /;"	d
FAR_ENERGY_DIFF	webrtc/modules/audio_processing/aecm/aecm_defines.h	/^#define FAR_ENERGY_DIFF /;"	d
FAR_ENERGY_MIN	webrtc/modules/audio_processing/aecm/aecm_defines.h	/^#define FAR_ENERGY_MIN /;"	d
FAR_ENERGY_VAD_REGION	webrtc/modules/audio_processing/aecm/aecm_defines.h	/^#define FAR_ENERGY_VAD_REGION /;"	d
FATAL	webrtc/base/checks.h	/^#define FATAL(/;"	d
FB_STATE_SIZE_WORD32	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define FB_STATE_SIZE_WORD32 /;"	d
FD_ANY	webrtc/base/firewallsocketserver.h	/^enum FirewallDirection { FD_IN, FD_OUT, FD_ANY };$/;"	e	enum:rtc::FirewallDirection
FD_IN	webrtc/base/firewallsocketserver.h	/^enum FirewallDirection { FD_IN, FD_OUT, FD_ANY };$/;"	e	enum:rtc::FirewallDirection
FD_OUT	webrtc/base/firewallsocketserver.h	/^enum FirewallDirection { FD_IN, FD_OUT, FD_ANY };$/;"	e	enum:rtc::FirewallDirection
FFT	webrtc/modules/audio_processing/ns/ns_core.c	/^static void FFT(NoiseSuppressionC* self,$/;"	f	file:
FFTN	webrtc/modules/audio_coding/codecs/isac/main/source/fft.c	/^# define FFTN /;"	d	file:
FFTNS	webrtc/modules/audio_coding/codecs/isac/main/source/fft.c	/^# define FFTNS /;"	d	file:
FFTRADIX	webrtc/modules/audio_coding/codecs/isac/main/source/fft.c	/^# define FFTRADIX /;"	d	file:
FFTRADIX	webrtc/modules/audio_coding/codecs/isac/main/source/fft.c	/^static int   FFTRADIX (REAL Re[],$/;"	f	file:
FFTRADIXS	webrtc/modules/audio_coding/codecs/isac/main/source/fft.c	/^# define FFTRADIXS /;"	d	file:
FFTstr	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^} FFTstr;$/;"	t	typeref:struct:__anon133
FIRFilter	webrtc/common_audio/fir_filter.h	/^class FIRFilter {$/;"	c	namespace:webrtc
FIRFilterC	webrtc/common_audio/fir_filter.cc	/^FIRFilterC::FIRFilterC(const float* coefficients, size_t coefficients_length)$/;"	f	class:webrtc::FIRFilterC
FIRFilterC	webrtc/common_audio/fir_filter.cc	/^class FIRFilterC : public FIRFilter {$/;"	c	namespace:webrtc	file:
FIRFilterNEON	webrtc/common_audio/fir_filter_neon.cc	/^FIRFilterNEON::FIRFilterNEON(const float* coefficients,$/;"	f	class:webrtc::FIRFilterNEON
FIRFilterNEON	webrtc/common_audio/fir_filter_neon.h	/^class FIRFilterNEON : public FIRFilter {$/;"	c	namespace:webrtc
FIRFilterSSE2	webrtc/common_audio/fir_filter_sse.cc	/^FIRFilterSSE2::FIRFilterSSE2(const float* coefficients,$/;"	f	class:webrtc::FIRFilterSSE2
FIRFilterSSE2	webrtc/common_audio/fir_filter_sse.h	/^class FIRFilterSSE2 : public FIRFilter {$/;"	c	namespace:webrtc
FLOAT	webrtc/base/flags.h	/^  enum Type { BOOL, INT, FLOAT, STRING };$/;"	e	enum:rtc::Flag::Type
FOLDER_DELIMS	webrtc/base/pathutils.cc	/^const char* const FOLDER_DELIMS = "\/\\\\";$/;"	m	namespace:rtc	file:
FORCE_INLINE	webrtc/base/common.h	/^#define FORCE_INLINE /;"	d
FP_ANY	webrtc/base/firewallsocketserver.h	/^enum FirewallProtocol { FP_UDP, FP_TCP, FP_ANY };$/;"	e	enum:rtc::FirewallProtocol
FP_T	webrtc/base/bind.h	/^#define FP_T(/;"	d
FP_T	webrtc/base/bind.h	/^#undef FP_T$/;"	d
FP_T	webrtc/base/bind.h	/^Bind(FP_T(function)) {$/;"	f	namespace:rtc
FP_TCP	webrtc/base/firewallsocketserver.h	/^enum FirewallProtocol { FP_UDP, FP_TCP, FP_ANY };$/;"	e	enum:rtc::FirewallProtocol
FP_UDP	webrtc/base/firewallsocketserver.h	/^enum FirewallProtocol { FP_UDP, FP_TCP, FP_ANY };$/;"	e	enum:rtc::FirewallProtocol
FRAMESAMPLES	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define FRAMESAMPLES /;"	d
FRAMESAMPLES_10ms	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define FRAMESAMPLES_10ms /;"	d
FRAMESAMPLES_30ms	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define FRAMESAMPLES_30ms /;"	d
FRAMESAMPLES_HALF	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define FRAMESAMPLES_HALF /;"	d
FRAMESAMPLES_QUARTER	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define FRAMESAMPLES_QUARTER /;"	d
FRAMESIZE	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define FRAMESIZE /;"	d
FRAME_LEN	webrtc/modules/audio_processing/aec/aec_core.h	/^#define FRAME_LEN /;"	d
FRAME_LEN	webrtc/modules/audio_processing/aecm/aecm_defines.h	/^#define FRAME_LEN /;"	d
FRIEND_TEST_ALL_PREFIXES	webrtc/base/gtest_prod_util.h	/^#define FRIEND_TEST_ALL_PREFIXES(/;"	d
FRIEND_TEST_WEBRTC	webrtc/base/gtest_prod_util.h	/^#define FRIEND_TEST_WEBRTC(/;"	d
FS	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define FS /;"	d
FTT_ACCESSED	webrtc/base/fileutils.h	/^enum FileTimeType { FTT_CREATED, FTT_MODIFIED, FTT_ACCESSED };$/;"	e	enum:rtc::FileTimeType
FTT_CREATED	webrtc/base/fileutils.h	/^enum FileTimeType { FTT_CREATED, FTT_MODIFIED, FTT_ACCESSED };$/;"	e	enum:rtc::FileTimeType
FTT_MODIFIED	webrtc/base/fileutils.h	/^enum FileTimeType { FTT_CREATED, FTT_MODIFIED, FTT_ACCESSED };$/;"	e	enum:rtc::FileTimeType
FailAccept	webrtc/base/physicalsocketserver_unittest.cc	/^  bool FailAccept() const { return fail_accept_; }$/;"	f	class:rtc::PhysicalSocketTest
FakeClock	webrtc/base/fakeclock.h	/^class FakeClock : public ClockInterface {$/;"	c	namespace:rtc
FakeDirectoryIterator	webrtc/base/fileutils_mock.h	/^    explicit FakeDirectoryIterator(const std::vector<File>& all_files) :$/;"	f	class:rtc::FakeDirectoryIterator
FakeDirectoryIterator	webrtc/base/fileutils_mock.h	/^class FakeDirectoryIterator : public DirectoryIterator {$/;"	c	namespace:rtc
FakeFileStream	webrtc/base/fileutils_mock.h	/^    explicit FakeFileStream(const std::string & contents) :$/;"	f	class:rtc::FakeFileStream
FakeFileStream	webrtc/base/fileutils_mock.h	/^class FakeFileStream : public FileStream {$/;"	c	namespace:rtc
FakeFileSystem	webrtc/base/fileutils_mock.h	/^    explicit FakeFileSystem(const std::vector<File>& all_files) :$/;"	f	class:rtc::FakeFileSystem
FakeFileSystem	webrtc/base/fileutils_mock.h	/^class FakeFileSystem : public FilesystemInterface {$/;"	c	namespace:rtc
FakeNetworkManager	webrtc/base/fakenetwork.h	/^  FakeNetworkManager() {}$/;"	f	class:rtc::FakeNetworkManager
FakeNetworkManager	webrtc/base/fakenetwork.h	/^class FakeNetworkManager : public NetworkManagerBase,$/;"	c	namespace:rtc
FakeNetworkMonitor	webrtc/base/network_unittest.cc	/^class FakeNetworkMonitor : public NetworkMonitorBase {$/;"	c	namespace:rtc::__anon36	file:
FakeNetworkMonitorFactory	webrtc/base/network_unittest.cc	/^  FakeNetworkMonitorFactory() {}$/;"	f	class:rtc::__anon36::FakeNetworkMonitorFactory
FakeNetworkMonitorFactory	webrtc/base/network_unittest.cc	/^class FakeNetworkMonitorFactory : public NetworkMonitorFactory {$/;"	c	namespace:rtc::__anon36	file:
FakePhysicalSocketServer	webrtc/base/physicalsocketserver_unittest.cc	/^  explicit FakePhysicalSocketServer(PhysicalSocketTest* test)$/;"	f	class:rtc::FakePhysicalSocketServer
FakePhysicalSocketServer	webrtc/base/physicalsocketserver_unittest.cc	/^class FakePhysicalSocketServer : public PhysicalSocketServer {$/;"	c	namespace:rtc	file:
FakeSSLCertificate	webrtc/base/fakesslidentity.h	/^  explicit FakeSSLCertificate(const std::string& data)$/;"	f	class:rtc::FakeSSLCertificate
FakeSSLCertificate	webrtc/base/fakesslidentity.h	/^  explicit FakeSSLCertificate(const std::vector<std::string>& certs)$/;"	f	class:rtc::FakeSSLCertificate
FakeSSLCertificate	webrtc/base/fakesslidentity.h	/^class FakeSSLCertificate : public rtc::SSLCertificate {$/;"	c	namespace:rtc
FakeSSLIdentity	webrtc/base/fakesslidentity.h	/^  explicit FakeSSLIdentity(const FakeSSLCertificate& cert) : cert_(cert) {}$/;"	f	class:rtc::FakeSSLIdentity
FakeSSLIdentity	webrtc/base/fakesslidentity.h	/^  explicit FakeSSLIdentity(const std::string& data) : cert_(data) {}$/;"	f	class:rtc::FakeSSLIdentity
FakeSSLIdentity	webrtc/base/fakesslidentity.h	/^class FakeSSLIdentity : public rtc::SSLIdentity {$/;"	c	namespace:rtc
FakeSocketDispatcher	webrtc/base/physicalsocketserver_unittest.cc	/^  FakeSocketDispatcher(SOCKET s, PhysicalSocketServer* ss)$/;"	f	class:rtc::FakeSocketDispatcher
FakeSocketDispatcher	webrtc/base/physicalsocketserver_unittest.cc	/^  explicit FakeSocketDispatcher(PhysicalSocketServer* ss)$/;"	f	class:rtc::FakeSocketDispatcher
FakeSocketDispatcher	webrtc/base/physicalsocketserver_unittest.cc	/^class FakeSocketDispatcher : public SocketDispatcher {$/;"	c	namespace:rtc	file:
FakeTaskRunner	webrtc/base/faketaskrunner.h	/^  FakeTaskRunner() : current_time_(0) {}$/;"	f	class:rtc::FakeTaskRunner
FakeTaskRunner	webrtc/base/faketaskrunner.h	/^class FakeTaskRunner : public TaskRunner {$/;"	c	namespace:rtc
FatalMessage	webrtc/base/checks.cc	/^FatalMessage::FatalMessage(const char* file, int line) {$/;"	f	class:rtc::FatalMessage
FatalMessage	webrtc/base/checks.cc	/^FatalMessage::FatalMessage(const char* file, int line, std::string* result) {$/;"	f	class:rtc::FatalMessage
FatalMessage	webrtc/base/checks.h	/^class FatalMessage {$/;"	c	namespace:rtc
FatalMessageVoidify	webrtc/base/checks.h	/^  FatalMessageVoidify() { }$/;"	f	class:rtc::FatalMessageVoidify
FatalMessageVoidify	webrtc/base/checks.h	/^class FatalMessageVoidify {$/;"	c	namespace:rtc
FdCheckVisitor	webrtc/base/linuxfdwalk_unittest.cc	/^static void FdCheckVisitor(void *data, int fd) {$/;"	f	file:
FdEnumVisitor	webrtc/base/linuxfdwalk_unittest.cc	/^static void FdEnumVisitor(void *data, int fd) {$/;"	f	file:
FdopenPlatformFileForWriting	webrtc/base/platform_file.cc	/^FILE* FdopenPlatformFileForWriting(PlatformFile file) {$/;"	f	namespace:rtc
FeatureParameterExtraction	webrtc/modules/audio_processing/ns/ns_core.c	/^static void FeatureParameterExtraction(NoiseSuppressionC* self, int flag) {$/;"	f	file:
FeatureUpdate	webrtc/modules/audio_processing/ns/ns_core.c	/^static void FeatureUpdate(NoiseSuppressionC* self,$/;"	f	file:
FecMaskType	webrtc/modules/include/module_common_types.h	/^enum FecMaskType {$/;"	g	namespace:webrtc
FecProtectionParams	webrtc/modules/include/module_common_types.h	/^struct FecProtectionParams {$/;"	s	namespace:webrtc
Fft	webrtc/modules/audio_processing/aec/aec_core.cc	/^static void Fft(const OouraFft& ooura_fft,$/;"	f	namespace:webrtc
Fft	webrtc/modules/audio_processing/utility/ooura_fft.cc	/^void OouraFft::Fft(float* a) const {$/;"	f	class:webrtc::OouraFft
FftCheckerCallback	webrtc/common_audio/lapped_transform_unittest.cc	/^  FftCheckerCallback() : block_num_(0) {}$/;"	f	class:__anon81::FftCheckerCallback
FftCheckerCallback	webrtc/common_audio/lapped_transform_unittest.cc	/^class FftCheckerCallback : public webrtc::LappedTransform::Callback {$/;"	c	namespace:__anon81	file:
FftLength	webrtc/common_audio/real_fourier.cc	/^size_t RealFourier::FftLength(int order) {$/;"	f	class:webrtc::RealFourier
FftOrder	webrtc/common_audio/real_fourier.cc	/^int RealFourier::FftOrder(size_t length) {$/;"	f	class:webrtc::RealFourier
FifoBuffer	webrtc/base/stream.cc	/^FifoBuffer::FifoBuffer(size_t size)$/;"	f	class:rtc::FifoBuffer
FifoBuffer	webrtc/base/stream.cc	/^FifoBuffer::FifoBuffer(size_t size, Thread* owner)$/;"	f	class:rtc::FifoBuffer
FifoBuffer	webrtc/base/stream.h	/^class FifoBuffer : public StreamInterface {$/;"	c	namespace:rtc
File	webrtc/base/file.cc	/^File::File() : file_(kInvalidPlatformFileValue) {}$/;"	f	class:rtc::File
File	webrtc/base/file.cc	/^File::File(File&& other) : file_(other.file_) {$/;"	f	class:rtc::File
File	webrtc/base/file.cc	/^File::File(PlatformFile file) : file_(file) {}$/;"	f	class:rtc::File
File	webrtc/base/file.h	/^class File {$/;"	c	namespace:rtc
File	webrtc/base/fileutils_mock.h	/^    typedef std::pair<std::string, std::string> File;$/;"	t	class:rtc::FakeDirectoryIterator
File	webrtc/base/fileutils_mock.h	/^    typedef std::pair<std::string, std::string> File;$/;"	t	class:rtc::FakeFileSystem
FileDispatcher	webrtc/base/physicalsocketserver.cc	/^  FileDispatcher(int fd, PhysicalSocketServer *ss) : ss_(ss), fd_(fd) {$/;"	f	class:rtc::FileDispatcher
FileDispatcher	webrtc/base/physicalsocketserver.cc	/^class FileDispatcher: public Dispatcher, public AsyncFile {$/;"	c	namespace:rtc	file:
FileExists	webrtc/base/diskcache_win32.cc	/^bool DiskCacheWin32::FileExists(const std::string& filename) const {$/;"	f	class:rtc::DiskCacheWin32
FileFormats	webrtc/common_types.h	/^enum FileFormats {$/;"	g	namespace:webrtc
FileOpen	webrtc/system_wrappers/source/file_impl.cc	/^FILE* FileOpen(const char* file_name_utf8, bool read_only) {$/;"	f	namespace:webrtc::__anon249
FileRotatingLogSink	webrtc/base/logsinks.cc	/^FileRotatingLogSink::FileRotatingLogSink(FileRotatingStream* stream)$/;"	f	class:rtc::FileRotatingLogSink
FileRotatingLogSink	webrtc/base/logsinks.cc	/^FileRotatingLogSink::FileRotatingLogSink(const std::string& log_dir_path,$/;"	f	class:rtc::FileRotatingLogSink
FileRotatingLogSink	webrtc/base/logsinks.h	/^class FileRotatingLogSink : public LogSink {$/;"	c	namespace:rtc
FileRotatingStream	webrtc/base/filerotatingstream.cc	/^FileRotatingStream::FileRotatingStream(const std::string& dir_path,$/;"	f	class:rtc::FileRotatingStream
FileRotatingStream	webrtc/base/filerotatingstream.h	/^class FileRotatingStream : public StreamInterface {$/;"	c	namespace:rtc
FileStream	webrtc/base/stream.cc	/^FileStream::FileStream() : file_(NULL) {$/;"	f	class:rtc::FileStream
FileStream	webrtc/base/stream.h	/^class FileStream : public StreamInterface {$/;"	c	namespace:rtc
FileTest	webrtc/base/file_unittest.cc	/^class FileTest : public ::testing::Test {$/;"	c	namespace:rtc	file:
FileTimeToUnixTime	webrtc/base/win32.cc	/^void FileTimeToUnixTime(const FILETIME& ft, time_t* ut) {$/;"	f	namespace:rtc
FileTimeType	webrtc/base/fileutils.h	/^enum FileTimeType { FTT_CREATED, FTT_MODIFIED, FTT_ACCESSED };$/;"	g	namespace:rtc
FileWrapper	webrtc/system_wrappers/include/file_wrapper.h	/^class FileWrapper : public InStream, public OutStream {$/;"	c	namespace:webrtc
FileWrapper	webrtc/system_wrappers/source/file_impl.cc	/^FileWrapper::FileWrapper() {}$/;"	f	class:webrtc::FileWrapper
FileWrapper	webrtc/system_wrappers/source/file_impl.cc	/^FileWrapper::FileWrapper(FILE* file, size_t max_size)$/;"	f	class:webrtc::FileWrapper
FileWrapper	webrtc/system_wrappers/source/file_impl.cc	/^FileWrapper::FileWrapper(FileWrapper&& other) {$/;"	f	class:webrtc::FileWrapper
FilenameFromPath	webrtc/base/logging.cc	/^const char* FilenameFromPath(const char* file) {$/;"	f	namespace:rtc::__anon26
FilenameFromPath	webrtc/system_wrappers/source/logging.cc	/^const char* FilenameFromPath(const char* file) {$/;"	f	namespace:webrtc::__anon250
FilenameToId	webrtc/base/diskcache.cc	/^bool DiskCache::FilenameToId(const std::string& filename, std::string* id,$/;"	f	class:rtc::DiskCache
Filesystem	webrtc/base/fileutils.h	/^class Filesystem {$/;"	c	namespace:rtc
FilesystemInterface	webrtc/base/fileutils.h	/^class FilesystemInterface {$/;"	c	namespace:rtc
FilesystemScope	webrtc/base/fileutils.h	/^  explicit FilesystemScope(FilesystemInterface *new_fs) {$/;"	f	class:rtc::FilesystemScope
FilesystemScope	webrtc/base/fileutils.h	/^class FilesystemScope{$/;"	c	namespace:rtc
FillEncoderSpecificSettings	webrtc/config.cc	/^void VideoEncoderConfig::EncoderSpecificSettings::FillEncoderSpecificSettings($/;"	f	class:webrtc::VideoEncoderConfig::EncoderSpecificSettings
FillVideoCodecH264	webrtc/config.cc	/^void VideoEncoderConfig::EncoderSpecificSettings::FillVideoCodecH264($/;"	f	class:webrtc::VideoEncoderConfig::EncoderSpecificSettings
FillVideoCodecH264	webrtc/config.cc	/^void VideoEncoderConfig::H264EncoderSpecificSettings::FillVideoCodecH264($/;"	f	class:webrtc::VideoEncoderConfig::H264EncoderSpecificSettings
FillVideoCodecVp8	webrtc/config.cc	/^void VideoEncoderConfig::EncoderSpecificSettings::FillVideoCodecVp8($/;"	f	class:webrtc::VideoEncoderConfig::EncoderSpecificSettings
FillVideoCodecVp8	webrtc/config.cc	/^void VideoEncoderConfig::Vp8EncoderSpecificSettings::FillVideoCodecVp8($/;"	f	class:webrtc::VideoEncoderConfig::Vp8EncoderSpecificSettings
FillVideoCodecVp9	webrtc/config.cc	/^void VideoEncoderConfig::EncoderSpecificSettings::FillVideoCodecVp9($/;"	f	class:webrtc::VideoEncoderConfig::EncoderSpecificSettings
FillVideoCodecVp9	webrtc/config.cc	/^void VideoEncoderConfig::Vp9EncoderSpecificSettings::FillVideoCodecVp9($/;"	f	class:webrtc::VideoEncoderConfig::Vp9EncoderSpecificSettings
Filter	webrtc/common_audio/fir_filter.cc	/^void FIRFilterC::Filter(const float* in, size_t length, float* out) {$/;"	f	class:webrtc::FIRFilterC
Filter	webrtc/common_audio/fir_filter_neon.cc	/^void FIRFilterNEON::Filter(const float* in, size_t length, float* out) {$/;"	f	class:webrtc::FIRFilterNEON
Filter	webrtc/common_audio/fir_filter_sse.cc	/^void FIRFilterSSE2::Filter(const float* in, size_t length, float* out) {$/;"	f	class:webrtc::FIRFilterSSE2
Filter	webrtc/common_audio/sparse_fir_filter.cc	/^void SparseFIRFilter::Filter(const float* in, size_t length, float* out) {$/;"	f	class:webrtc::SparseFIRFilter
Filter	webrtc/modules/audio_processing/vad/pole_zero_filter.cc	/^int PoleZeroFilter::Filter(const int16_t* in,$/;"	f	class:webrtc::PoleZeroFilter
FilterAdaptation	webrtc/modules/audio_processing/aec/aec_core.cc	/^static void FilterAdaptation($/;"	f	namespace:webrtc
FilterAdaptationNEON	webrtc/modules/audio_processing/aec/aec_core_neon.cc	/^static void FilterAdaptationNEON($/;"	f	namespace:webrtc
FilterAdaptationSSE2	webrtc/modules/audio_processing/aec/aec_core_sse2.cc	/^static void FilterAdaptationSSE2($/;"	f	namespace:webrtc
FilterArPast	webrtc/modules/audio_processing/vad/pole_zero_filter.cc	/^static float FilterArPast(const T* past, size_t order,$/;"	f	namespace:webrtc
FilterFar	webrtc/modules/audio_processing/aec/aec_core.cc	/^static void FilterFar(int num_partitions,$/;"	f	namespace:webrtc
FilterFarNEON	webrtc/modules/audio_processing/aec/aec_core_neon.cc	/^static void FilterFarNEON(int num_partitions,$/;"	f	namespace:webrtc
FilterFarSSE2	webrtc/modules/audio_processing/aec/aec_core_sse2.cc	/^static void FilterFarSSE2(int num_partitions,$/;"	f	namespace:webrtc
FilterFrame	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_filter.c	/^static void FilterFrame(const double* in_data, PitchFiltstr* filter_state,$/;"	f	file:
FilterSegment	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_filter.c	/^static void FilterSegment(const double* in_data, PitchFilterParam* parameters,$/;"	f	file:
FilterSubframes	webrtc/modules/audio_processing/vad/pole_zero_filter_unittest.cc	/^void PoleZeroFilterTest::FilterSubframes(int num_subframes) {$/;"	f	class:webrtc::PoleZeroFilterTest
Finalize	webrtc/base/criticalsection_unittest.cc	/^  void Finalize() {$/;"	f	class:rtc::__anon10::CompareAndSwapVerifier
Finalize	webrtc/base/criticalsection_unittest.cc	/^  void Finalize() {}$/;"	f	class:rtc::__anon10::UniqueValueVerifier
Find	webrtc/base/httpserver.cc	/^HttpServer::Find(int connection_id) {$/;"	f	class:rtc::HttpServer
FindClient	webrtc/base/natsocketfactory.cc	/^NATSocketServer::Translator* NATSocketServer::Translator::FindClient($/;"	f	class:rtc::NATSocketServer::Translator
FindClient	webrtc/base/natsocketfactory.cc	/^NATSocketServer::Translator* NATSocketServer::TranslatorMap::FindClient($/;"	f	class:rtc::NATSocketServer::TranslatorMap
FindCorrelation	webrtc/modules/audio_coding/codecs/isac/main/source/entropy_coding.c	/^static void FindCorrelation(int32_t* PSpecQ12, int32_t* CorrQ7) {$/;"	f	file:
FindFirstSpectralPeaks	webrtc/modules/audio_processing/vad/vad_audio_proc.cc	/^void VadAudioProc::FindFirstSpectralPeaks(double* f_peak,$/;"	f	class:webrtc::VadAudioProc
FindInvArSpec	webrtc/modules/audio_coding/codecs/isac/main/source/entropy_coding.c	/^static void FindInvArSpec(const int16_t* ARCoefQ12,$/;"	f	file:
FindLabel	webrtc/base/logging.cc	/^const char* FindLabel(int value, const ConstantLabel entries[]) {$/;"	f	namespace:rtc
FindNativeProcessRateToUse	webrtc/modules/audio_processing/audio_processing_impl.cc	/^int FindNativeProcessRateToUse(int minimum_rate, bool band_splitting_required) {$/;"	f	namespace:webrtc::__anon180
Finish	webrtc/base/md5digest.cc	/^size_t Md5Digest::Finish(void* buf, size_t len) {$/;"	f	class:rtc::Md5Digest
Finish	webrtc/base/openssldigest.cc	/^size_t OpenSSLDigest::Finish(void* buf, size_t len) {$/;"	f	class:rtc::OpenSSLDigest
Finish	webrtc/base/sha1digest.cc	/^size_t Sha1Digest::Finish(void* buf, size_t len) {$/;"	f	class:rtc::Sha1Digest
FinishPath	webrtc/base/pathutils.h	/^inline bool FinishPath(Pathname& path, bool create, const std::string& append) {$/;"	f	namespace:rtc
FireAndForgetAsyncClosure	webrtc/base/asyncinvoker-inl.h	/^  explicit FireAndForgetAsyncClosure(const FunctorT& functor)$/;"	f	class:rtc::FireAndForgetAsyncClosure
FireAndForgetAsyncClosure	webrtc/base/asyncinvoker-inl.h	/^class FireAndForgetAsyncClosure : public AsyncClosure {$/;"	c	namespace:rtc
FirefoxPrefsFileSystem	webrtc/base/proxydetect_unittest.cc	/^  explicit FirefoxPrefsFileSystem(const std::vector<File>& all_files) :$/;"	f	class:rtc::FirefoxPrefsFileSystem
FirefoxPrefsFileSystem	webrtc/base/proxydetect_unittest.cc	/^class FirefoxPrefsFileSystem : public FakeFileSystem {$/;"	c	namespace:rtc	file:
FirewallDirection	webrtc/base/firewallsocketserver.h	/^enum FirewallDirection { FD_IN, FD_OUT, FD_ANY };$/;"	g	namespace:rtc
FirewallManager	webrtc/base/firewallsocketserver.cc	/^FirewallManager::FirewallManager() {$/;"	f	class:rtc::FirewallManager
FirewallManager	webrtc/base/firewallsocketserver.h	/^class FirewallManager {$/;"	c	namespace:rtc
FirewallProtocol	webrtc/base/firewallsocketserver.h	/^enum FirewallProtocol { FP_UDP, FP_TCP, FP_ANY };$/;"	g	namespace:rtc
FirewallSocket	webrtc/base/firewallsocketserver.cc	/^  FirewallSocket(FirewallSocketServer* server, AsyncSocket* socket, int type)$/;"	f	class:rtc::FirewallSocket
FirewallSocket	webrtc/base/firewallsocketserver.cc	/^class FirewallSocket : public AsyncSocketAdapter {$/;"	c	namespace:rtc	file:
FirewallSocketServer	webrtc/base/firewallsocketserver.cc	/^FirewallSocketServer::FirewallSocketServer(SocketServer* server,$/;"	f	class:rtc::FirewallSocketServer
FirewallSocketServer	webrtc/base/firewallsocketserver.h	/^class FirewallSocketServer : public SocketServer {$/;"	c	namespace:rtc
FirstProcess	webrtc/modules/audio_processing/agc/agc_manager_direct_unittest.cc	/^  void FirstProcess() {$/;"	f	class:webrtc::AgcManagerDirectTest
FixedMonoStreamMetadataScheme	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  FixedMonoStreamMetadataScheme,$/;"	m	class:webrtc::__anon181::RuntimeParameterSettingScheme	file:
Flag	webrtc/base/flags.cc	/^Flag::Flag(const char* file, const char* name, const char* comment,$/;"	f	class:rtc::Flag
Flag	webrtc/base/flags.h	/^class Flag {$/;"	c	namespace:rtc
Flag	webrtc/base/weak_ptr.cc	/^WeakReference::Flag::Flag() : is_valid_(true) {$/;"	f	class:rtc::internal::WeakReference::Flag
Flag	webrtc/base/weak_ptr.h	/^  class Flag : public RefCountInterface {$/;"	c	class:rtc::internal::WeakReference
FlagList	webrtc/base/flags.cc	/^FlagList::FlagList() {$/;"	f	class:rtc::FlagList
FlagList	webrtc/base/flags.h	/^class FlagList {$/;"	c	namespace:rtc
FlagValue	webrtc/base/flags.h	/^union FlagValue {$/;"	u	namespace:rtc
Flags	webrtc/base/base64_unittest.cc	/^#define Flags(/;"	d	file:
Flags	webrtc/base/winping.h	/^    UCHAR   Flags;              \/\/ IP header flags$/;"	m	struct:rtc::ip_option_information
FlagsToEvents	webrtc/base/physicalsocketserver.cc	/^static uint32_t FlagsToEvents(uint32_t events) {$/;"	f	namespace:rtc
FlexfecConfig	webrtc/config.cc	/^FlexfecConfig::FlexfecConfig()$/;"	f	class:webrtc::FlexfecConfig
FlexfecConfig	webrtc/config.h	/^struct FlexfecConfig {$/;"	s	namespace:webrtc
FloatS16ToFloat	webrtc/common_audio/audio_util.cc	/^void FloatS16ToFloat(const float* src, size_t size, float* dest) {$/;"	f	namespace:webrtc
FloatS16ToFloat	webrtc/common_audio/include/audio_util.h	/^static inline float FloatS16ToFloat(float v) {$/;"	f	namespace:webrtc
FloatS16ToS16	webrtc/common_audio/audio_util.cc	/^void FloatS16ToS16(const float* src, size_t size, int16_t* dest) {$/;"	f	namespace:webrtc
FloatS16ToS16	webrtc/common_audio/include/audio_util.h	/^static inline int16_t FloatS16ToS16(float v) {$/;"	f	namespace:webrtc
FloatToFloatS16	webrtc/common_audio/audio_util.cc	/^void FloatToFloatS16(const float* src, size_t size, float* dest) {$/;"	f	namespace:webrtc
FloatToFloatS16	webrtc/common_audio/include/audio_util.h	/^static inline float FloatToFloatS16(float v) {$/;"	f	namespace:webrtc
FloatToS16	webrtc/common_audio/audio_util.cc	/^void FloatToS16(const float* src, size_t size, int16_t* dest) {$/;"	f	namespace:webrtc
FloatToS16	webrtc/common_audio/include/audio_util.h	/^static inline int16_t FloatToS16(float v) {$/;"	f	namespace:webrtc
Flow	webrtc/base/stream.cc	/^StreamResult Flow(StreamInterface* source,$/;"	f	namespace:rtc
Flush	webrtc/base/asyncinvoker.cc	/^bool GuardedAsyncInvoker::Flush(uint32_t id) {$/;"	f	class:rtc::GuardedAsyncInvoker
Flush	webrtc/base/asyncinvoker.cc	/^void AsyncInvoker::Flush(Thread* thread, uint32_t id \/*= MQID_ANY*\/) {$/;"	f	class:rtc::AsyncInvoker
Flush	webrtc/base/filerotatingstream.cc	/^bool FileRotatingStream::Flush() {$/;"	f	class:rtc::FileRotatingStream
Flush	webrtc/base/stream.cc	/^bool FileStream::Flush() {$/;"	f	class:rtc::FileStream
Flush	webrtc/base/stream.cc	/^bool StreamAdapterInterface::Flush() {$/;"	f	class:rtc::StreamAdapterInterface
Flush	webrtc/base/stream.cc	/^bool StreamInterface::Flush() {$/;"	f	class:rtc::StreamInterface
Flush	webrtc/base/testutils.h	/^  void Flush() {$/;"	f	class:testing::SocketTestClient
Flush	webrtc/common_audio/resampler/sinc_resampler.cc	/^void SincResampler::Flush() {$/;"	f	class:webrtc::SincResampler
Flush	webrtc/system_wrappers/source/file_impl.cc	/^int FileWrapper::Flush() {$/;"	f	class:webrtc::FileWrapper
FlushImpl	webrtc/system_wrappers/source/file_impl.cc	/^int FileWrapper::FlushImpl() {$/;"	f	class:webrtc::FileWrapper
FlushInput	webrtc/base/opensslstreamadapter.cc	/^void OpenSSLStreamAdapter::FlushInput(unsigned int left) {$/;"	f	class:rtc::OpenSSLStreamAdapter
FlushKey	webrtc/base/win32regkey.cc	/^HRESULT RegKey::FlushKey(const wchar_t* full_key_name) {$/;"	f	class:rtc::RegKey
FlushOutBuffer	webrtc/base/asynctcpsocket.cc	/^int AsyncTCPSocketBase::FlushOutBuffer() {$/;"	f	class:rtc::AsyncTCPSocketBase
FmtSubchunk	webrtc/common_audio/wav_header.cc	/^struct FmtSubchunk {$/;"	s	namespace:webrtc::__anon112	file:
Foo	webrtc/base/optional_unittest.cc	/^  void Foo() const { Log("Foo() const"); }$/;"	f	class:rtc::__anon41::Logger
Foo	webrtc/base/optional_unittest.cc	/^  void Foo() { Log("Foo()"); }$/;"	f	class:rtc::__anon41::Logger
ForceInputMono	webrtc/modules/audio_processing/test/debug_dump_test.cc	/^void DebugDumpGenerator::ForceInputMono(bool mono) {$/;"	f	class:webrtc::test::__anon223::DebugDumpGenerator
ForceMangle	webrtc/base/trace_event.h	/^     explicit ForceMangle(int id)$/;"	f	class:webrtc::trace_event_internal::TraceID::ForceMangle
ForceMangle	webrtc/base/trace_event.h	/^     explicit ForceMangle(long id)$/;"	f	class:webrtc::trace_event_internal::TraceID::ForceMangle
ForceMangle	webrtc/base/trace_event.h	/^     explicit ForceMangle(long long id)$/;"	f	class:webrtc::trace_event_internal::TraceID::ForceMangle
ForceMangle	webrtc/base/trace_event.h	/^     explicit ForceMangle(short id)$/;"	f	class:webrtc::trace_event_internal::TraceID::ForceMangle
ForceMangle	webrtc/base/trace_event.h	/^     explicit ForceMangle(signed char id)$/;"	f	class:webrtc::trace_event_internal::TraceID::ForceMangle
ForceMangle	webrtc/base/trace_event.h	/^     explicit ForceMangle(unsigned char id) : data_(id) {}$/;"	f	class:webrtc::trace_event_internal::TraceID::ForceMangle
ForceMangle	webrtc/base/trace_event.h	/^     explicit ForceMangle(unsigned int id) : data_(id) {}$/;"	f	class:webrtc::trace_event_internal::TraceID::ForceMangle
ForceMangle	webrtc/base/trace_event.h	/^     explicit ForceMangle(unsigned long id) : data_(id) {}$/;"	f	class:webrtc::trace_event_internal::TraceID::ForceMangle
ForceMangle	webrtc/base/trace_event.h	/^     explicit ForceMangle(unsigned long long id) : data_(id) {}$/;"	f	class:webrtc::trace_event_internal::TraceID::ForceMangle
ForceMangle	webrtc/base/trace_event.h	/^     explicit ForceMangle(unsigned short id) : data_(id) {}$/;"	f	class:webrtc::trace_event_internal::TraceID::ForceMangle
ForceMangle	webrtc/base/trace_event.h	/^  class ForceMangle {$/;"	c	class:webrtc::trace_event_internal::TraceID
ForceReverseMono	webrtc/modules/audio_processing/test/debug_dump_test.cc	/^void DebugDumpGenerator::ForceReverseMono(bool mono) {$/;"	f	class:webrtc::test::__anon223::DebugDumpGenerator
FormFileName	webrtc/modules/audio_processing/logging/apm_data_dumper.cc	/^std::string FormFileName(const char* name,$/;"	f	namespace:webrtc::__anon215
FormNearendBlock	webrtc/modules/audio_processing/aec/aec_core.cc	/^void FormNearendBlock($/;"	f	namespace:webrtc
FormOutputFrame	webrtc/modules/audio_processing/aec/aec_core.cc	/^void FormOutputFrame(size_t output_start_index,$/;"	f	namespace:webrtc
FormPerformanceMeasureString	webrtc/modules/audio_processing/level_controller/level_controller_complexity_unittest.cc	/^std::string FormPerformanceMeasureString($/;"	f	namespace:webrtc::__anon209
FormSuppressionGain	webrtc/modules/audio_processing/aec/aec_core.cc	/^static void FormSuppressionGain(AecCore* aec,$/;"	f	namespace:webrtc
Format	webrtc/base/window.h	/^  static uint64_t Format(const WindowT& id) {$/;"	f	class:rtc::WindowId
Format	webrtc/common_audio/wav_header.cc	/^    uint32_t Format;$/;"	m	struct:webrtc::__anon112::WavHeader::__anon113	file:
Format	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^  enum Format {$/;"	g	class:webrtc::__anon183::ApmTest	file:
FormatAsString	webrtc/common_audio/wav_file.cc	/^std::string WavFile::FormatAsString() const {$/;"	f	class:webrtc::WavFile
FormatCryptString	webrtc/base/cryptstring.h	/^  FormatCryptString() {$/;"	f	class:rtc::FormatCryptString
FormatCryptString	webrtc/base/cryptstring.h	/^class FormatCryptString {$/;"	c	namespace:rtc
Forward	webrtc/common_audio/real_fourier_ooura.cc	/^void RealFourierOoura::Forward(const float* src, complex<float>* dest) const {$/;"	f	class:webrtc::RealFourierOoura
Forward	webrtc/common_audio/real_fourier_openmax.cc	/^void RealFourierOpenmax::Forward(const float* src, complex<float>* dest) const {$/;"	f	class:webrtc::RealFourierOpenmax
ForwardDiff	webrtc/base/mod_ops.h	/^inline T ForwardDiff(T a, T b) {$/;"	f	namespace:webrtc
FrameCountObserver	webrtc/common_types.h	/^class FrameCountObserver {$/;"	c	namespace:webrtc
FrameCounters	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^class FrameCounters {$/;"	c	namespace:webrtc::__anon181	file:
FrameCounters	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^class FrameCounters {$/;"	c	namespace:webrtc::__anon182	file:
FrameCounts	webrtc/common_types.h	/^  FrameCounts() : key_frames(0), delta_frames(0) {}$/;"	f	struct:webrtc::FrameCounts
FrameCounts	webrtc/common_types.h	/^struct FrameCounts {$/;"	s	namespace:webrtc
FrameDataAreEqual	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^bool FrameDataAreEqual(const AudioFrame& frame1, const AudioFrame& frame2) {$/;"	f	namespace:webrtc::__anon183
FrameEnergy	webrtc/modules/audio_processing/level_controller/level_controller.cc	/^float FrameEnergy(const AudioBuffer& audio) {$/;"	f	namespace:webrtc::__anon208
FrameExtender	webrtc/modules/audio_processing/level_controller/signal_classifier.cc	/^SignalClassifier::FrameExtender::FrameExtender(size_t frame_size,$/;"	f	class:webrtc::SignalClassifier::FrameExtender
FrameExtender	webrtc/modules/audio_processing/level_controller/signal_classifier.h	/^  class FrameExtender {$/;"	c	class:webrtc::SignalClassifier
FrameType	webrtc/common_types.h	/^enum FrameType {$/;"	g	namespace:webrtc
FreeBufferDeleter	webrtc/common_audio/ring_buffer_unittest.cc	/^struct FreeBufferDeleter {$/;"	s	namespace:webrtc	file:
Frequency	webrtc/common_audio/resampler/sinusoidal_linear_chirp_source.cc	/^double SinusoidalLinearChirpSource::Frequency(size_t position) {$/;"	f	class:webrtc::SinusoidalLinearChirpSource
FromMicroseconds	webrtc/base/timedelta.h	/^  static constexpr TimeDelta FromMicroseconds(int64_t us) {$/;"	f	class:rtc::TimeDelta
FromMilliseconds	webrtc/base/timedelta.h	/^  static constexpr TimeDelta FromMilliseconds(int64_t ms) {$/;"	f	class:rtc::TimeDelta
FromNanoseconds	webrtc/base/timedelta.h	/^  static constexpr TimeDelta FromNanoseconds(int64_t ns) {$/;"	f	class:rtc::TimeDelta
FromPEM	webrtc/base/rtccertificate.cc	/^scoped_refptr<RTCCertificate> RTCCertificate::FromPEM($/;"	f	class:rtc::RTCCertificate
FromPEMString	webrtc/base/opensslidentity.cc	/^OpenSSLCertificate* OpenSSLCertificate::FromPEMString($/;"	f	class:rtc::OpenSSLCertificate
FromPEMString	webrtc/base/sslidentity.cc	/^SSLCertificate* SSLCertificate::FromPEMString(const std::string& pem_string) {$/;"	f	class:rtc::SSLCertificate
FromPEMStrings	webrtc/base/opensslidentity.cc	/^SSLIdentity* OpenSSLIdentity::FromPEMStrings($/;"	f	class:rtc::OpenSSLIdentity
FromPEMStrings	webrtc/base/sslidentity.cc	/^SSLIdentity* SSLIdentity::FromPEMStrings(const std::string& private_key,$/;"	f	class:rtc::SSLIdentity
FromPrivateKeyPEMString	webrtc/base/opensslidentity.cc	/^OpenSSLKeyPair* OpenSSLKeyPair::FromPrivateKeyPEMString($/;"	f	class:rtc::OpenSSLKeyPair
FromSeconds	webrtc/base/timedelta.h	/^  static constexpr TimeDelta FromSeconds(int64_t secs) {$/;"	f	class:rtc::TimeDelta
FromSockAddr	webrtc/base/socketaddress.cc	/^bool SocketAddress::FromSockAddr(const sockaddr_in& saddr) {$/;"	f	class:rtc::SocketAddress
FromString	webrtc/base/httpcommon.cc	/^bool FromString(HttpHeader& header, const std::string& str) {$/;"	f	namespace:rtc
FromString	webrtc/base/httpcommon.cc	/^bool FromString(HttpVerb& verb, const std::string& str) {$/;"	f	namespace:rtc
FromString	webrtc/base/httpcommon.cc	/^bool FromString(HttpVersion& version, const std::string& str) {$/;"	f	namespace:rtc
FromString	webrtc/base/socketaddress.cc	/^bool SocketAddress::FromString(const std::string& str) {$/;"	f	class:rtc::SocketAddress
FromString	webrtc/base/stringencode.h	/^static bool FromString(const std::string& s, T* t) {$/;"	f	namespace:rtc
FromString	webrtc/base/stringencode.h	/^static inline T FromString(const T& defaultValue, const std::string& str) {$/;"	f	namespace:rtc
FromString	webrtc/base/stringencode.h	/^static inline T FromString(const std::string& str) {$/;"	f	namespace:rtc
Function	webrtc/base/virtualsocketserver.h	/^  typedef std::vector<Point> Function;$/;"	t	class:rtc::VirtualSocketServer
FunctionDomainCmp	webrtc/base/virtualsocketserver.cc	/^struct FunctionDomainCmp {$/;"	s	namespace:rtc	file:
FunctionThatDoesNothing	webrtc/base/optional.h	/^inline T* FunctionThatDoesNothing(T* x) {$/;"	f	namespace:rtc::optional_internal
FunctionThatDoesNothingImpl	webrtc/base/optional.cc	/^void* FunctionThatDoesNothingImpl(void* x) { return x; }$/;"	f	namespace:rtc::optional_internal
FunctionView	webrtc/base/function_view.h	/^  FunctionView() : call_(nullptr) {}$/;"	f	class:rtc::final
FunctionView	webrtc/base/function_view.h	/^  FunctionView(F&& f) : call_(nullptr) {}$/;"	f	class:rtc::final
FunctionView	webrtc/base/function_view.h	/^  FunctionView(F&& f)$/;"	f	class:rtc::final
Functor0	webrtc/base/bind.h	/^  explicit Functor0(const FunctorT& functor)$/;"	f	class:rtc::Functor0
Functor0	webrtc/base/bind.h	/^class Functor0 {$/;"	c	namespace:rtc
Functor1	webrtc/base/bind.h	/^  Functor1(const FunctorT& functor, P1 p1)$/;"	f	class:rtc::Functor1
Functor1	webrtc/base/bind.h	/^class Functor1 {$/;"	c	namespace:rtc
Functor2	webrtc/base/bind.h	/^  Functor2(const FunctorT& functor, P1 p1, P2 p2)$/;"	f	class:rtc::Functor2
Functor2	webrtc/base/bind.h	/^class Functor2 {$/;"	c	namespace:rtc
Functor3	webrtc/base/bind.h	/^  Functor3(const FunctorT& functor, P1 p1, P2 p2, P3 p3)$/;"	f	class:rtc::Functor3
Functor3	webrtc/base/bind.h	/^class Functor3 {$/;"	c	namespace:rtc
Functor4	webrtc/base/bind.h	/^  Functor4(const FunctorT& functor, P1 p1, P2 p2, P3 p3, P4 p4)$/;"	f	class:rtc::Functor4
Functor4	webrtc/base/bind.h	/^class Functor4 {$/;"	c	namespace:rtc
Functor5	webrtc/base/bind.h	/^  Functor5(const FunctorT& functor, P1 p1, P2 p2, P3 p3, P4 p4, P5 p5)$/;"	f	class:rtc::Functor5
Functor5	webrtc/base/bind.h	/^class Functor5 {$/;"	c	namespace:rtc
Functor6	webrtc/base/bind.h	/^  Functor6(const FunctorT& functor, P1 p1, P2 p2, P3 p3, P4 p4, P5 p5, P6 p6)$/;"	f	class:rtc::Functor6
Functor6	webrtc/base/bind.h	/^class Functor6 {$/;"	c	namespace:rtc
Functor7	webrtc/base/bind.h	/^  Functor7(const FunctorT& functor,$/;"	f	class:rtc::Functor7
Functor7	webrtc/base/bind.h	/^class Functor7 {$/;"	c	namespace:rtc
Functor8	webrtc/base/bind.h	/^  Functor8(const FunctorT& functor,$/;"	f	class:rtc::Functor8
Functor8	webrtc/base/bind.h	/^class Functor8 {$/;"	c	namespace:rtc
Functor9	webrtc/base/bind.h	/^  Functor9(const FunctorT& functor,$/;"	f	class:rtc::Functor9
Functor9	webrtc/base/bind.h	/^class Functor9 {$/;"	c	namespace:rtc
FunctorA	webrtc/base/thread_unittest.cc	/^struct FunctorA {$/;"	s	file:
FunctorB	webrtc/base/thread_unittest.cc	/^  explicit FunctorB(AtomicBool* flag) : flag_(flag) {}$/;"	f	class:FunctorB
FunctorB	webrtc/base/thread_unittest.cc	/^class FunctorB {$/;"	c	file:
FunctorC	webrtc/base/thread_unittest.cc	/^struct FunctorC {$/;"	s	file:
FunctorMessageHandler	webrtc/base/messagehandler.h	/^  explicit FunctorMessageHandler(const FunctorT& functor) : functor_(functor) {}$/;"	f	class:rtc::FunctorMessageHandler
FunctorMessageHandler	webrtc/base/messagehandler.h	/^  explicit FunctorMessageHandler(const FunctorT& functor)$/;"	f	class:rtc::FunctorMessageHandler
FunctorMessageHandler	webrtc/base/messagehandler.h	/^class FunctorMessageHandler : public MessageHandler {$/;"	c	namespace:rtc
FunctorMessageHandler	webrtc/base/messagehandler.h	/^class FunctorMessageHandler<class std::unique_ptr<ReturnT>, FunctorT>$/;"	c	namespace:rtc
FunctorMessageHandler	webrtc/base/messagehandler.h	/^class FunctorMessageHandler<void, FunctorT> : public MessageHandler {$/;"	c	namespace:rtc
GAIN_TBL_LEN	webrtc/modules/audio_processing/agc/legacy/analog_agc.c	/^#define GAIN_TBL_LEN /;"	d	file:
GAMMA_NOISE_TRANS_AND_SPEECH_Q8	webrtc/modules/audio_processing/ns/nsx_defines.h	/^#define GAMMA_NOISE_TRANS_AND_SPEECH_Q8 /;"	d
GAMMA_PAUSE	webrtc/modules/audio_processing/ns/defines.h	/^#define GAMMA_PAUSE /;"	d
GLOBAL_FUNCTION	webrtc/common_audio/signal_processing/complex_bit_reverse_arm.S	/^GLOBAL_FUNCTION WebRtcSpl_ComplexBitReverse$/;"	l
GLOBAL_FUNCTION	webrtc/common_audio/signal_processing/filter_ar_fast_q12_armv7.S	/^GLOBAL_FUNCTION WebRtcSpl_FilterARFastQ12$/;"	l
GLOBAL_FUNCTION	webrtc/common_audio/signal_processing/spl_sqrt_floor_arm.S	/^GLOBAL_FUNCTION WebRtcSpl_SqrtFloor$/;"	l
GUARDED_BY	webrtc/base/thread_annotations.h	/^#define GUARDED_BY(/;"	d
GUARDED_VAR	webrtc/base/thread_annotations.h	/^#define GUARDED_VAR /;"	d
GUARDED_VAR	webrtc/base/thread_annotations_unittest.cc	/^  int protected_by_anything_ GUARDED_VAR = 0;$/;"	m	class:__anon68::ThreadSafe	file:
GainApplier	webrtc/modules/audio_processing/intelligibility/intelligibility_utils.cc	/^GainApplier::GainApplier(size_t freqs, float relative_change_limit)$/;"	f	class:webrtc::intelligibility::GainApplier
GainApplier	webrtc/modules/audio_processing/intelligibility/intelligibility_utils.h	/^class GainApplier {$/;"	c	namespace:webrtc::intelligibility
GainApplier	webrtc/modules/audio_processing/level_controller/gain_applier.cc	/^GainApplier::GainApplier(ApmDataDumper* data_dumper)$/;"	f	class:webrtc::GainApplier
GainApplier	webrtc/modules/audio_processing/level_controller/gain_applier.h	/^class GainApplier {$/;"	c	namespace:webrtc
GainControl	webrtc/modules/audio_processing/include/audio_processing.h	/^class GainControl {$/;"	c	namespace:webrtc
GainControlForExperimentalAgc	webrtc/modules/audio_processing/gain_control_for_experimental_agc.cc	/^GainControlForExperimentalAgc::GainControlForExperimentalAgc($/;"	f	class:webrtc::GainControlForExperimentalAgc
GainControlForExperimentalAgc	webrtc/modules/audio_processing/gain_control_for_experimental_agc.h	/^class GainControlForExperimentalAgc : public GainControl,$/;"	c	namespace:webrtc
GainControlImpl	webrtc/modules/audio_processing/gain_control_impl.cc	/^GainControlImpl::GainControlImpl(rtc::CriticalSection* crit_render,$/;"	f	class:webrtc::GainControlImpl
GainControlImpl	webrtc/modules/audio_processing/gain_control_impl.h	/^class GainControlImpl : public GainControl {$/;"	c	namespace:webrtc
GainController	webrtc/modules/audio_processing/gain_control_impl.cc	/^  explicit GainController() {$/;"	f	class:webrtc::GainControlImpl::GainController
GainController	webrtc/modules/audio_processing/gain_control_impl.cc	/^class GainControlImpl::GainController {$/;"	c	class:webrtc::GainControlImpl	file:
GainSelector	webrtc/modules/audio_processing/level_controller/gain_selector.cc	/^GainSelector::GainSelector() {$/;"	f	class:webrtc::GainSelector
GainSelector	webrtc/modules/audio_processing/level_controller/gain_selector.h	/^class GainSelector {$/;"	c	namespace:webrtc
Gaussian	webrtc/base/random.cc	/^double Random::Gaussian(double mean, double standard_deviation) {$/;"	f	class:webrtc::Random
Generate	webrtc/base/helpers.cc	/^  virtual bool Generate(void* buf, size_t len) {$/;"	f	class:rtc::SecureRandomGenerator
Generate	webrtc/base/opensslidentity.cc	/^OpenSSLCertificate* OpenSSLCertificate::Generate($/;"	f	class:rtc::OpenSSLCertificate
Generate	webrtc/base/opensslidentity.cc	/^OpenSSLKeyPair* OpenSSLKeyPair::Generate(const KeyParams& key_params) {$/;"	f	class:rtc::OpenSSLKeyPair
Generate	webrtc/base/sslidentity.cc	/^SSLIdentity* SSLIdentity::Generate(const std::string& common_name,$/;"	f	class:rtc::SSLIdentity
GenerateAsyncCompleted	webrtc/base/rtccertificategenerator_unittest.cc	/^  bool GenerateAsyncCompleted() {$/;"	f	class:rtc::RTCCertificateGeneratorFixture
GenerateBriefTestConfigs	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  static std::vector<TestConfig> GenerateBriefTestConfigs() {$/;"	f	struct:webrtc::__anon181::TestConfig
GenerateCertificate	webrtc/base/rtccertificategenerator.cc	/^RTCCertificateGenerator::GenerateCertificate($/;"	f	class:rtc::RTCCertificateGenerator
GenerateCertificateAsync	webrtc/base/rtccertificategenerator.cc	/^void RTCCertificateGenerator::GenerateCertificateAsync($/;"	f	class:rtc::RTCCertificateGenerator
GenerateCertificateWithExpires	webrtc/base/rtccertificate_unittest.cc	/^  scoped_refptr<RTCCertificate> GenerateCertificateWithExpires($/;"	f	class:rtc::RTCCertificateTest
GenerateComplexNoise	webrtc/modules/audio_processing/aec/aec_core.cc	/^static void GenerateComplexNoise(uint32_t* seed, float noise[2][PART_LEN1]) {$/;"	f	namespace:webrtc
GenerateDitherQ7Lb	webrtc/modules/audio_coding/codecs/isac/main/source/entropy_coding.c	/^static void GenerateDitherQ7Lb(int16_t* bufQ7, uint32_t seed,$/;"	f	file:
GenerateDitherQ7LbUB	webrtc/modules/audio_coding/codecs/isac/main/source/entropy_coding.c	/^static void GenerateDitherQ7LbUB($/;"	f	file:
GenerateECDSA	webrtc/base/rtccertificate_unittest.cc	/^  scoped_refptr<RTCCertificate> GenerateECDSA() {$/;"	f	class:rtc::RTCCertificateTest
GenerateExtensiveTestConfigs	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  static std::vector<TestConfig> GenerateExtensiveTestConfigs() {$/;"	f	struct:webrtc::__anon181::TestConfig
GenerateForTest	webrtc/base/opensslidentity.cc	/^OpenSSLIdentity* OpenSSLIdentity::GenerateForTest($/;"	f	class:rtc::OpenSSLIdentity
GenerateForTest	webrtc/base/sslidentity.cc	/^SSLIdentity* SSLIdentity::GenerateForTest(const SSLIdentityParams& params) {$/;"	f	class:rtc::SSLIdentity
GenerateInternal	webrtc/base/opensslidentity.cc	/^OpenSSLIdentity* OpenSSLIdentity::GenerateInternal($/;"	f	class:rtc::OpenSSLIdentity
GenerateNoise	webrtc/modules/audio_processing/vad/voice_activity_detector_unittest.cc	/^void GenerateNoise(std::vector<int16_t>* data) {$/;"	f	namespace:webrtc::__anon243
GenerateSimulationConfigs	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^  static std::vector<SimulationConfig> GenerateSimulationConfigs() {$/;"	f	struct:webrtc::__anon182::SimulationConfig
GenerateTestData	webrtc/modules/audio_processing/intelligibility/intelligibility_utils_unittest.cc	/^std::vector<std::vector<std::complex<float>>> GenerateTestData(size_t freqs,$/;"	f	namespace:webrtc::intelligibility
GenerateWithExpiration	webrtc/base/opensslidentity.cc	/^OpenSSLIdentity* OpenSSLIdentity::GenerateWithExpiration($/;"	f	class:rtc::OpenSSLIdentity
GenerateWithExpiration	webrtc/base/sslidentity.cc	/^SSLIdentity* SSLIdentity::GenerateWithExpiration(const std::string& common_name,$/;"	f	class:rtc::SSLIdentity
GeoTrust_Global_CA_2_certificate	webrtc/base/sslroots.h	/^const unsigned char GeoTrust_Global_CA_2_certificate[874]={$/;"	v
GeoTrust_Global_CA_certificate	webrtc/base/sslroots.h	/^const unsigned char GeoTrust_Global_CA_certificate[856]={$/;"	v
GeoTrust_Primary_Certification_Authority___G2_certificate	webrtc/base/sslroots.h	/^const unsigned char GeoTrust_Primary_Certification_Authority___G2_certificate[690]={$/;"	v
GeoTrust_Primary_Certification_Authority___G3_certificate	webrtc/base/sslroots.h	/^const unsigned char GeoTrust_Primary_Certification_Authority___G3_certificate[1026]={$/;"	v
GeoTrust_Primary_Certification_Authority_certificate	webrtc/base/sslroots.h	/^const unsigned char GeoTrust_Primary_Certification_Authority_certificate[896]={$/;"	v
GeoTrust_Universal_CA_2_certificate	webrtc/base/sslroots.h	/^const unsigned char GeoTrust_Universal_CA_2_certificate[1392]={$/;"	v
GeoTrust_Universal_CA_certificate	webrtc/base/sslroots.h	/^const unsigned char GeoTrust_Universal_CA_certificate[1388]={$/;"	v
Get	webrtc/base/event_tracer_unittest.cc	/^  static TestStatistics* Get() {$/;"	f	class:__anon13::TestStatistics
Get	webrtc/base/messagequeue.cc	/^bool MessageQueue::Get(Message *pmsg, int cmsWait, bool process_io) {$/;"	f	class:rtc::MessageQueue
Get	webrtc/base/natsocketfactory.cc	/^NATSocketServer::Translator* NATSocketServer::TranslatorMap::Get($/;"	f	class:rtc::NATSocketServer::TranslatorMap
Get	webrtc/base/proxydetect.cc	/^  const std::string& Get(const char * name, const char * def = "") const {$/;"	f	struct:StringMap
Get	webrtc/base/sslidentity.h	/^  const SSLCertificate& Get(size_t pos) const { return *(certs_[pos]); }$/;"	f	class:rtc::SSLCertChain
Get	webrtc/modules/audio_processing/include/config.h	/^const T& Config::Get() const {$/;"	f	class:webrtc::Config
Get	webrtc/modules/audio_processing/vad/vad_circular_buffer.cc	/^int VadCircularBuffer::Get(int index, double* value) const {$/;"	f	class:webrtc::VadCircularBuffer
Get8	webrtc/base/byteorder.h	/^inline uint8_t Get8(const void* memory, size_t offset) {$/;"	f	namespace:rtc
GetActivity	webrtc/modules/audio_processing/vad/standalone_vad.cc	/^int StandaloneVad::GetActivity(double* p, size_t length_p) {$/;"	f	class:webrtc::StandaloneVad
GetAdapterType	webrtc/base/network_unittest.cc	/^  AdapterType GetAdapterType(BasicNetworkManager& network_manager) {$/;"	f	class:rtc::NetworkTest
GetAdapterTypeFromName	webrtc/base/network.cc	/^AdapterType BasicNetworkManager::GetAdapterTypeFromName($/;"	f	class:rtc::BasicNetworkManager
GetAddress	webrtc/base/httpserver.cc	/^bool HttpListenServer::GetAddress(SocketAddress* address) const {$/;"	f	class:rtc::HttpListenServer
GetAddress	webrtc/base/ssladapter_unittest.cc	/^  rtc::SocketAddress GetAddress() const {$/;"	f	class:SSLAdapterTestDummyClient
GetAddress	webrtc/base/ssladapter_unittest.cc	/^  rtc::SocketAddress GetAddress() const {$/;"	f	class:SSLAdapterTestDummyServer
GetAgent	webrtc/base/proxydetect.cc	/^UserAgent GetAgent(const char* agent) {$/;"	f	namespace:rtc
GetAndReset	webrtc/system_wrappers/source/metrics_default.cc	/^  std::unique_ptr<SampleInfo> GetAndReset() {$/;"	f	class:webrtc::metrics::__anon251::RtcHistogram
GetAndReset	webrtc/system_wrappers/source/metrics_default.cc	/^  void GetAndReset($/;"	f	class:webrtc::metrics::__anon251::RtcHistogramMap
GetAndReset	webrtc/system_wrappers/source/metrics_default.cc	/^void GetAndReset($/;"	f	namespace:webrtc::metrics
GetAnyAddressNetworks	webrtc/base/network.cc	/^void NetworkManagerBase::GetAnyAddressNetworks(NetworkList* networks) {$/;"	f	class:rtc::NetworkManagerBase
GetAnyAddressNetworks	webrtc/base/network.h	/^  virtual void GetAnyAddressNetworks(NetworkList* networks) {}$/;"	f	class:rtc::NetworkManager
GetAnyIP	webrtc/base/ipaddress.cc	/^IPAddress GetAnyIP(int family) {$/;"	f	namespace:rtc
GetApmCaptureTestVectorFileName	webrtc/modules/audio_processing/test/bitexactness_tools.cc	/^std::string GetApmCaptureTestVectorFileName(int sample_rate_hz) {$/;"	f	namespace:webrtc::test
GetApmRenderTestVectorFileName	webrtc/modules/audio_processing/test/bitexactness_tools.cc	/^std::string GetApmRenderTestVectorFileName(int sample_rate_hz) {$/;"	f	namespace:webrtc::test
GetAppDataFolder	webrtc/base/fileutils.h	/^  static bool GetAppDataFolder(Pathname* path, bool per_user) {$/;"	f	class:rtc::Filesystem
GetAppDataFolder	webrtc/base/fileutils_mock.h	/^    bool GetAppDataFolder(Pathname *path, bool per_user) {$/;"	f	class:rtc::FakeFileSystem
GetAppDataFolder	webrtc/base/pathutils.h	/^inline bool GetAppDataFolder(Pathname& path, bool create,$/;"	f	namespace:rtc
GetAppDataFolder	webrtc/base/unixfilesystem.cc	/^bool UnixFilesystem::GetAppDataFolder(Pathname* path, bool per_user) {$/;"	f	class:rtc::UnixFilesystem
GetAppDataFolder	webrtc/base/win32filesystem.cc	/^bool Win32Filesystem::GetAppDataFolder(Pathname* path, bool per_user) {$/;"	f	class:rtc::Win32Filesystem
GetAppPathname	webrtc/base/win32filesystem.cc	/^bool Win32Filesystem::GetAppPathname(Pathname* path) {$/;"	f	class:rtc::Win32Filesystem
GetAppTempFolder	webrtc/base/fileutils.h	/^  static bool GetAppTempFolder(Pathname* path) {$/;"	f	class:rtc::Filesystem
GetAppTempFolder	webrtc/base/fileutils_mock.h	/^    bool GetAppTempFolder(Pathname *path) {$/;"	f	class:rtc::FakeFileSystem
GetAppTempFolder	webrtc/base/unixfilesystem.cc	/^bool UnixFilesystem::GetAppTempFolder(Pathname* path) {$/;"	f	class:rtc::UnixFilesystem
GetAppTempFolder	webrtc/base/win32filesystem.cc	/^bool Win32Filesystem::GetAppTempFolder(Pathname* path) {$/;"	f	class:rtc::Win32Filesystem
GetApplicationName	webrtc/base/fileutils.h	/^  static void GetApplicationName(std::string* application) {$/;"	f	class:rtc::Filesystem
GetApplicationName	webrtc/base/fileutils.h	/^  void GetApplicationName(std::string* application) {$/;"	f	class:rtc::FilesystemInterface
GetApplicationName	webrtc/base/pathutils.h	/^inline void GetApplicationName(std::string* application) {$/;"	f	namespace:rtc
GetApplicationWindow	webrtc/base/x11windowpicker.cc	/^  Window GetApplicationWindow(Window window) {$/;"	f	class:rtc::XWindowEnumerator	file:
GetArrayNormalIfExists	webrtc/modules/audio_processing/beamformer/array_util.cc	/^rtc::Optional<Point> GetArrayNormalIfExists($/;"	f	namespace:webrtc
GetAvailable	webrtc/base/stream.cc	/^bool FileStream::GetAvailable(size_t* size) const {$/;"	f	class:rtc::FileStream
GetAvailable	webrtc/base/stream.cc	/^bool MemoryStreamBase::GetAvailable(size_t* size) const {$/;"	f	class:rtc::MemoryStreamBase
GetAvailable	webrtc/base/stream.cc	/^bool StreamAdapterInterface::GetAvailable(size_t* size) const {$/;"	f	class:rtc::StreamAdapterInterface
GetAvailable	webrtc/base/stream.cc	/^bool StreamInterface::GetAvailable(size_t* size) const {$/;"	f	class:rtc::StreamInterface
GetAvailable	webrtc/base/stream.cc	/^bool StringStream::GetAvailable(size_t* size) const {$/;"	f	class:rtc::StringStream
GetAvailable	webrtc/base/stream_unittest.cc	/^  virtual bool GetAvailable(size_t* size) const {$/;"	f	class:rtc::TestStream
GetAvailable	webrtc/base/transformadapter.cc	/^bool TransformAdapter::GetAvailable(size_t* size) const {$/;"	f	class:rtc::TransformAdapter
GetBE16	webrtc/base/byteorder.h	/^inline uint16_t GetBE16(const void* memory) {$/;"	f	namespace:rtc
GetBE32	webrtc/base/byteorder.h	/^inline uint32_t GetBE32(const void* memory) {$/;"	f	namespace:rtc
GetBE64	webrtc/base/byteorder.h	/^inline uint64_t GetBE64(const void* memory) {$/;"	f	namespace:rtc
GetBankSize	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer.cc	/^size_t IntelligibilityEnhancer::GetBankSize(int sample_rate,$/;"	f	class:webrtc::IntelligibilityEnhancer
GetBestIP	webrtc/base/network.cc	/^IPAddress Network::GetBestIP() const {$/;"	f	class:rtc::Network
GetBinIndex	webrtc/modules/audio_processing/agc/loudness_histogram.cc	/^int LoudnessHistogram::GetBinIndex(double rms) {$/;"	f	class:webrtc::LoudnessHistogram
GetBoolFromJson	webrtc/base/json.cc	/^bool GetBoolFromJson(const Json::Value& in, bool* out) {$/;"	f	namespace:rtc
GetBoolFromJsonArray	webrtc/base/json.cc	/^bool GetBoolFromJsonArray(const Json::Value& in, size_t n,$/;"	f	namespace:rtc
GetBoolFromJsonObject	webrtc/base/json.cc	/^bool GetBoolFromJsonObject(const Json::Value& in, const std::string& k,$/;"	f	namespace:rtc
GetBuffer	webrtc/base/stream.h	/^  char* GetBuffer() { return buffer_; }$/;"	f	class:rtc::MemoryStreamBase
GetBuffer	webrtc/base/stream.h	/^  const char* GetBuffer() const { return buffer_; }$/;"	f	class:rtc::MemoryStreamBase
GetBufferReadRegions	webrtc/common_audio/ring_buffer.c	/^static size_t GetBufferReadRegions(RingBuffer* buf,$/;"	f	file:
GetBuffered	webrtc/base/stream.cc	/^bool FifoBuffer::GetBuffered(size_t* size) const {$/;"	f	class:rtc::FifoBuffer
GetCacheID	webrtc/base/httpclient.cc	/^std::string GetCacheID(const HttpRequestData& request) {$/;"	f	namespace:rtc::__anon18
GetCaptureCounter	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  int GetCaptureCounter() const {$/;"	f	class:webrtc::__anon181::FrameCounters
GetCategoryEnabled	webrtc/base/event_tracer.cc	/^const unsigned char* EventTracer::GetCategoryEnabled(const char* name) {$/;"	f	class:webrtc::EventTracer
GetCategoryEnabledHandler	webrtc/base/event_tracer_unittest.cc	/^static const unsigned char* GetCategoryEnabledHandler(const char* name) {$/;"	f	namespace:__anon13
GetCategoryEnabledPtr	webrtc/base/event_tracer.h	/^typedef const unsigned char* (*GetCategoryEnabledPtr)(const char* name);$/;"	t	namespace:webrtc
GetCenteredArray	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.cc	/^std::vector<Point> GetCenteredArray(std::vector<Point> array_geometry) {$/;"	f	namespace:webrtc::__anon188
GetChain	webrtc/base/opensslidentity.cc	/^std::unique_ptr<SSLCertChain> OpenSSLCertificate::GetChain() const {$/;"	f	class:rtc::OpenSSLCertificate
GetCost	webrtc/base/network.h	/^  uint16_t GetCost() const {$/;"	f	class:rtc::Network
GetCountsHistogram	webrtc/system_wrappers/source/metrics_default.cc	/^  Histogram* GetCountsHistogram(const std::string& name,$/;"	f	class:webrtc::metrics::__anon251::RtcHistogramMap
GetCpuArchitecture	webrtc/base/systeminfo.cc	/^SystemInfo::Architecture SystemInfo::GetCpuArchitecture() {$/;"	f	class:rtc::SystemInfo
GetCpuFamily	webrtc/base/linux.cc	/^bool ProcCpuInfo::GetCpuFamily(int* id) {$/;"	f	class:rtc::ProcCpuInfo
GetCpuVendor	webrtc/base/systeminfo.cc	/^std::string SystemInfo::GetCpuVendor() {$/;"	f	class:rtc::SystemInfo
GetCurCpus	webrtc/base/systeminfo.cc	/^int SystemInfo::GetCurCpus() {$/;"	f	class:rtc::SystemInfo
GetCurrentOffset	webrtc/base/bitbuffer.cc	/^void BitBuffer::GetCurrentOffset($/;"	f	class:rtc::BitBuffer
GetCurrentProcessIntegrityLevel	webrtc/base/win32.cc	/^bool GetCurrentProcessIntegrityLevel(int* level) {$/;"	f	namespace:rtc
GetCurrentTime	webrtc/base/task_unittest.cc	/^static int64_t GetCurrentTime() {$/;"	f	namespace:rtc
GetDBusGlibSymbolTable	webrtc/base/dbus.cc	/^LibDBusGlibSymbolTable *DBusMonitor::GetDBusGlibSymbolTable() {$/;"	f	class:rtc::DBusMonitor
GetData	webrtc/base/cryptstring.h	/^  const char * GetData() {$/;"	f	class:rtc::FormatCryptString
GetDataRemaining	webrtc/base/httpbase.h	/^  size_t GetDataRemaining() const { return data_size_; }$/;"	f	class:rtc::HttpParser
GetDefaultEventChain	webrtc/modules/audio_processing/test/wav_based_simulator.cc	/^WavBasedSimulator::GetDefaultEventChain() const {$/;"	f	class:webrtc::test::WavBasedSimulator
GetDefaultFirefoxProfile	webrtc/base/proxydetect.cc	/^bool GetDefaultFirefoxProfile(Pathname* profile_path) {$/;"	f	namespace:rtc
GetDefaultLocalAddress	webrtc/base/network.cc	/^bool NetworkManager::GetDefaultLocalAddress(int family, IPAddress* addr) const {$/;"	f	class:rtc::NetworkManager
GetDefaultLocalAddress	webrtc/base/network.cc	/^bool NetworkManagerBase::GetDefaultLocalAddress(int family,$/;"	f	class:rtc::NetworkManagerBase
GetDefaultRoute	webrtc/base/virtualsocketserver.cc	/^IPAddress VirtualSocketServer::GetDefaultRoute(int family) {$/;"	f	class:rtc::VirtualSocketServer
GetDelay	webrtc/base/messagequeue.cc	/^int MessageQueue::GetDelay() {$/;"	f	class:rtc::MessageQueue
GetDelay	webrtc/base/sslstreamadapter_unittest.cc	/^  int GetDelay() { return delay_; }$/;"	f	class:SSLStreamAdapterTestBase
GetDelayMetrics	webrtc/modules/audio_processing/echo_cancellation_impl.cc	/^int EchoCancellationImpl::GetDelayMetrics(int* median, int* std) {$/;"	f	class:webrtc::EchoCancellationImpl
GetDelayMetrics	webrtc/modules/audio_processing/echo_cancellation_impl.cc	/^int EchoCancellationImpl::GetDelayMetrics(int* median, int* std,$/;"	f	class:webrtc::EchoCancellationImpl
GetDescriptor	webrtc/base/physicalsocketserver.cc	/^  int GetDescriptor() const {$/;"	f	class:rtc::PosixSignalHandler
GetDescriptor	webrtc/base/physicalsocketserver.cc	/^int SocketDispatcher::GetDescriptor() {$/;"	f	class:rtc::SocketDispatcher
GetDesktopDimensions	webrtc/base/macwindowpicker.cc	/^bool MacWindowPicker::GetDesktopDimensions(const DesktopId& id,$/;"	f	class:rtc::MacWindowPicker
GetDesktopDimensions	webrtc/base/win32windowpicker.cc	/^bool Win32WindowPicker::GetDesktopDimensions(const DesktopId& id,$/;"	f	class:rtc::Win32WindowPicker
GetDesktopDimensions	webrtc/base/x11windowpicker.cc	/^  bool GetDesktopDimensions(const DesktopId& id, int* width, int* height) {$/;"	f	class:rtc::XWindowEnumerator
GetDesktopDimensions	webrtc/base/x11windowpicker.cc	/^bool X11WindowPicker::GetDesktopDimensions(const DesktopId& id, int* width,$/;"	f	class:rtc::X11WindowPicker
GetDesktopList	webrtc/base/macwindowpicker.cc	/^bool MacWindowPicker::GetDesktopList(DesktopDescriptionList* descriptions) {$/;"	f	class:rtc::MacWindowPicker
GetDesktopList	webrtc/base/win32windowpicker.cc	/^bool Win32WindowPicker::GetDesktopList(DesktopDescriptionList* descriptions) {$/;"	f	class:rtc::Win32WindowPicker
GetDesktopList	webrtc/base/x11windowpicker.cc	/^bool X11WindowPicker::GetDesktopList(DesktopDescriptionList* descriptions) {$/;"	f	class:rtc::X11WindowPicker
GetDesktopThumbnail	webrtc/base/x11windowpicker.cc	/^  uint8_t* GetDesktopThumbnail(const DesktopId& id, int width, int height) {$/;"	f	class:rtc::XWindowEnumerator
GetDesktopThumbnail	webrtc/base/x11windowpicker.cc	/^uint8_t* X11WindowPicker::GetDesktopThumbnail(const DesktopId& id,$/;"	f	class:rtc::X11WindowPicker
GetDigestEVP	webrtc/base/openssldigest.cc	/^bool OpenSSLDigest::GetDigestEVP(const std::string& algorithm,$/;"	f	class:rtc::OpenSSLDigest
GetDigestName	webrtc/base/openssldigest.cc	/^bool OpenSSLDigest::GetDigestName(const EVP_MD* md,$/;"	f	class:rtc::OpenSSLDigest
GetDigestSize	webrtc/base/openssldigest.cc	/^bool OpenSSLDigest::GetDigestSize(const std::string& algorithm,$/;"	f	class:rtc::OpenSSLDigest
GetDirectionIfLinear	webrtc/modules/audio_processing/beamformer/array_util.cc	/^rtc::Optional<Point> GetDirectionIfLinear($/;"	f	namespace:webrtc
GetDiskFreeSpace	webrtc/base/fileutils.h	/^  static bool GetDiskFreeSpace(const Pathname& path, int64_t* freebytes) {$/;"	f	class:rtc::Filesystem
GetDiskFreeSpace	webrtc/base/fileutils_mock.h	/^    bool GetDiskFreeSpace(const Pathname& path, int64_t* freebytes) {$/;"	f	class:rtc::FakeFileSystem
GetDiskFreeSpace	webrtc/base/unixfilesystem.cc	/^bool UnixFilesystem::GetDiskFreeSpace(const Pathname& path,$/;"	f	class:rtc::UnixFilesystem
GetDiskFreeSpace	webrtc/base/win32filesystem.cc	/^bool Win32Filesystem::GetDiskFreeSpace(const Pathname& path,$/;"	f	class:rtc::Win32Filesystem
GetDllError	webrtc/base/latebindingsymboltable.cc	/^static const char *GetDllError() {$/;"	f	namespace:rtc
GetDllHandle	webrtc/base/latebindingsymboltable.h	/^  DllHandle GetDllHandle() const { return handle_; }$/;"	f	class:rtc::LateBindingSymbolTable
GetDocumentStream	webrtc/base/httpbase.cc	/^StreamInterface* HttpBase::GetDocumentStream() {$/;"	f	class:rtc::HttpBase
GetDocumentStream	webrtc/base/httpclient.cc	/^StreamInterface* HttpClient::GetDocumentStream() {$/;"	f	class:rtc::HttpClient
GetDoubleFromJson	webrtc/base/json.cc	/^bool GetDoubleFromJson(const Json::Value& in, double* out) {$/;"	f	namespace:rtc
GetDoubleFromJsonArray	webrtc/base/json.cc	/^bool GetDoubleFromJsonArray(const Json::Value& in, size_t n,$/;"	f	namespace:rtc
GetDoubleFromJsonObject	webrtc/base/json.cc	/^bool GetDoubleFromJsonObject(const Json::Value& in, const std::string& k,$/;"	f	namespace:rtc
GetDrawableThumbnail	webrtc/base/x11windowpicker.cc	/^  uint8_t* GetDrawableThumbnail(Drawable src_drawable,$/;"	f	class:rtc::XWindowEnumerator	file:
GetDrive	webrtc/base/pathutils.cc	/^bool Pathname::GetDrive(char* drive, uint32_t bytes) const {$/;"	f	class:rtc::Pathname
GetDrive	webrtc/base/pathutils.cc	/^bool Pathname::GetDrive(char* drive,$/;"	f	class:rtc::Pathname
GetDtlsSrtpCryptoSuite	webrtc/base/opensslstreamadapter.cc	/^bool OpenSSLStreamAdapter::GetDtlsSrtpCryptoSuite(int* crypto_suite) {$/;"	f	class:rtc::OpenSSLStreamAdapter
GetDtlsSrtpCryptoSuite	webrtc/base/sslstreamadapter.cc	/^bool SSLStreamAdapter::GetDtlsSrtpCryptoSuite(int* crypto_suite) {$/;"	f	class:rtc::SSLStreamAdapter
GetDtlsSrtpCryptoSuite	webrtc/base/sslstreamadapter_unittest.cc	/^  bool GetDtlsSrtpCryptoSuite(bool client, int* retval) {$/;"	f	class:SSLStreamAdapterTestBase
GetDurationAverage	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^  int64_t GetDurationAverage() const {$/;"	f	class:webrtc::__anon182::TimedThreadApiProcessor	file:
GetDurationAverage	webrtc/modules/audio_processing/level_controller/level_controller_complexity_unittest.cc	/^  double GetDurationAverage() const {$/;"	f	class:webrtc::__anon209::SubmodulePerformanceTimer
GetDurationStandardDeviation	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^  int64_t GetDurationStandardDeviation() const {$/;"	f	class:webrtc::__anon182::TimedThreadApiProcessor	file:
GetDurationStandardDeviation	webrtc/modules/audio_processing/level_controller/level_controller_complexity_unittest.cc	/^  double GetDurationStandardDeviation() const {$/;"	f	class:webrtc::__anon209::SubmodulePerformanceTimer
GetEchoPath	webrtc/modules/audio_processing/echo_control_mobile_impl.cc	/^int EchoControlMobileImpl::GetEchoPath(void* echo_path,$/;"	f	class:webrtc::EchoControlMobileImpl
GetEntry	webrtc/base/diskcache.h	/^  const Entry* GetEntry(const std::string& id) const {$/;"	f	class:rtc::DiskCache
GetEnumerationHistogram	webrtc/system_wrappers/source/metrics_default.cc	/^  Histogram* GetEnumerationHistogram(const std::string& name, int boundary) {$/;"	f	class:webrtc::metrics::__anon251::RtcHistogramMap
GetError	webrtc/base/asyncsocket.cc	/^int AsyncSocketAdapter::GetError() const {$/;"	f	class:rtc::AsyncSocketAdapter
GetError	webrtc/base/asynctcpsocket.cc	/^int AsyncTCPSocketBase::GetError() const {$/;"	f	class:rtc::AsyncTCPSocketBase
GetError	webrtc/base/asyncudpsocket.cc	/^int AsyncUDPSocket::GetError() const {$/;"	f	class:rtc::AsyncUDPSocket
GetError	webrtc/base/nethelpers.cc	/^int AsyncResolver::GetError() const {$/;"	f	class:rtc::AsyncResolver
GetError	webrtc/base/physicalsocketserver.cc	/^int PhysicalSocket::GetError() const {$/;"	f	class:rtc::PhysicalSocket
GetError	webrtc/base/testclient.cc	/^int TestClient::GetError() {$/;"	f	class:rtc::TestClient
GetError	webrtc/base/virtualsocketserver.cc	/^int VirtualSocket::GetError() const {$/;"	f	class:rtc::VirtualSocket
GetError	webrtc/base/win32socketserver.cc	/^int Win32Socket::GetError() const {$/;"	f	class:rtc::Win32Socket
GetExperimentsDescription	webrtc/modules/audio_processing/echo_cancellation_impl.cc	/^std::string EchoCancellationImpl::GetExperimentsDescription() {$/;"	f	class:webrtc::EchoCancellationImpl
GetFactory	webrtc/base/networkmonitor.cc	/^NetworkMonitorFactory* NetworkMonitorFactory::GetFactory() {$/;"	f	class:rtc::NetworkMonitorFactory
GetFilePath	webrtc/base/filerotatingstream.cc	/^std::string FileRotatingStream::GetFilePath(size_t index) const {$/;"	f	class:rtc::FileRotatingStream
GetFilePath	webrtc/base/filerotatingstream.cc	/^std::string FileRotatingStream::GetFilePath(size_t index,$/;"	f	class:rtc::FileRotatingStream
GetFileSize	webrtc/base/fileutils.h	/^  static bool GetFileSize(const Pathname& path, size_t* size) {$/;"	f	class:rtc::Filesystem
GetFileSize	webrtc/base/fileutils_mock.h	/^    bool GetFileSize(const Pathname &path, size_t *size) {$/;"	f	class:rtc::FakeFileSystem
GetFileSize	webrtc/base/unixfilesystem.cc	/^bool UnixFilesystem::GetFileSize(const Pathname& pathname, size_t *size) {$/;"	f	class:rtc::UnixFilesystem
GetFileSize	webrtc/base/win32filesystem.cc	/^bool Win32Filesystem::GetFileSize(const Pathname &pathname, size_t *size) {$/;"	f	class:rtc::Win32Filesystem
GetFileTime	webrtc/base/fileutils.h	/^  static bool GetFileTime(const Pathname& path, FileTimeType which,$/;"	f	class:rtc::Filesystem
GetFileTime	webrtc/base/fileutils_mock.h	/^    bool GetFileTime(const Pathname &path, FileTimeType which,$/;"	f	class:rtc::FakeFileSystem
GetFileTime	webrtc/base/unixfilesystem.cc	/^bool UnixFilesystem::GetFileTime(const Pathname& path, FileTimeType which,$/;"	f	class:rtc::UnixFilesystem
GetFileTime	webrtc/base/win32filesystem.cc	/^bool Win32Filesystem::GetFileTime(const Pathname& path, FileTimeType which,$/;"	f	class:rtc::Win32Filesystem
GetFilesWithPrefix	webrtc/base/filerotatingstream.cc	/^std::vector<std::string> FileRotatingStream::GetFilesWithPrefix() const {$/;"	f	class:rtc::FileRotatingStream
GetFilter	webrtc/base/dbus_unittest.cc	/^  static std::string GetFilter() {$/;"	f	class:rtc::DBusSigFilterTest	file:
GetFirefoxProfilePath	webrtc/base/proxydetect.cc	/^bool GetFirefoxProfilePath(Pathname* path) {$/;"	f	namespace:rtc
GetFirefoxProxySettings	webrtc/base/proxydetect.cc	/^bool GetFirefoxProxySettings(const char* url, ProxyInfo* proxy) {$/;"	f	namespace:rtc
GetGain	webrtc/modules/audio_processing/level_controller/saturating_gain_estimator.h	/^  float GetGain() const { return saturating_gain_; }$/;"	f	class:webrtc::SaturatingGainEstimator
GetGlobalRng	webrtc/base/helpers.cc	/^std::unique_ptr<RandomGenerator>& GetGlobalRng() {$/;"	f	namespace:rtc::__anon15
GetHandle	webrtc/base/thread.h	/^  HANDLE GetHandle() const {$/;"	f	class:rtc::Thread
GetHighbandGain	webrtc/modules/audio_processing/aec/aec_core.cc	/^static void GetHighbandGain(const float* lambda, float* nlpGainHband) {$/;"	f	namespace:webrtc
GetHistogramName	webrtc/system_wrappers/source/metrics_default.cc	/^const std::string& GetHistogramName(Histogram* histogram_pointer) {$/;"	f	namespace:webrtc::metrics
GetHostname	webrtc/base/ssladapter_unittest.cc	/^  std::string GetHostname() const {$/;"	f	class:SSLAdapterTestDummyServer
GetIPAttributes	webrtc/base/macifaddrs_converter.cc	/^bool IPv6AttributesGetter::GetIPAttributes(const char* ifname,$/;"	f	class:rtc::__anon29::IPv6AttributesGetter
GetIPs	webrtc/base/network.h	/^  const std::vector<InterfaceAddress>& GetIPs() const { return ips_;}$/;"	f	class:rtc::Network
GetId	webrtc/base/thread.h	/^  DWORD GetId() const {$/;"	f	class:rtc::Thread
GetIeLanProxySettings	webrtc/base/proxydetect.cc	/^bool GetIeLanProxySettings(const char* url, ProxyInfo* proxy) {$/;"	f	namespace:rtc
GetIeProxySettings	webrtc/base/proxydetect.cc	/^bool GetIeProxySettings(const char* agent, const char* url, ProxyInfo* proxy) {$/;"	f	namespace:rtc
GetIndexedOutputWavFilename	webrtc/modules/audio_processing/test/audio_processing_simulator.cc	/^std::string GetIndexedOutputWavFilename(const std::string& wav_name,$/;"	f	namespace:webrtc::test::__anon220
GetIntFromJson	webrtc/base/json.cc	/^bool GetIntFromJson(const Json::Value& in, int* out) {$/;"	f	namespace:rtc
GetIntFromJsonArray	webrtc/base/json.cc	/^bool GetIntFromJsonArray(const Json::Value& in, size_t n,$/;"	f	namespace:rtc
GetIntFromJsonObject	webrtc/base/json.cc	/^bool GetIntFromJsonObject(const Json::Value& in, const std::string& k,$/;"	f	namespace:rtc
GetIntValue	webrtc/base/optionsfile.cc	/^bool OptionsFile::GetIntValue(const std::string& option,$/;"	f	class:rtc::OptionsFile
GetLE16	webrtc/base/byteorder.h	/^inline uint16_t GetLE16(const void* memory) {$/;"	f	namespace:rtc
GetLE32	webrtc/base/byteorder.h	/^inline uint32_t GetLE32(const void* memory) {$/;"	f	namespace:rtc
GetLE64	webrtc/base/byteorder.h	/^inline uint64_t GetLE64(const void* memory) {$/;"	f	namespace:rtc
GetLastGain	webrtc/modules/audio_processing/level_controller/level_controller.h	/^  float GetLastGain() { return last_gain_; }$/;"	f	class:webrtc::LevelController
GetLatestFraction	webrtc/modules/audio_processing/aec/aec_core.cc	/^float DivergentFilterFraction::GetLatestFraction() const {$/;"	f	class:webrtc::DivergentFilterFraction
GetLatestMean	webrtc/modules/audio_processing/utility/block_mean_calculator.cc	/^float BlockMeanCalculator::GetLatestMean() const {$/;"	f	class:webrtc::BlockMeanCalculator
GetLength	webrtc/base/cryptstring.cc	/^size_t EmptyCryptStringImpl::GetLength() const {$/;"	f	class:rtc::EmptyCryptStringImpl
GetLength	webrtc/base/cryptstring.cc	/^size_t InsecureCryptStringImpl::GetLength() const {$/;"	f	class:rtc::InsecureCryptStringImpl
GetLength	webrtc/base/cryptstring.h	/^  size_t GetLength() const { return impl_->GetLength(); }$/;"	f	class:rtc::CryptString
GetLength	webrtc/base/cryptstring.h	/^  size_t GetLength() {$/;"	f	class:rtc::FormatCryptString
GetLocalAddress	webrtc/base/asyncsocket.cc	/^SocketAddress AsyncSocketAdapter::GetLocalAddress() const {$/;"	f	class:rtc::AsyncSocketAdapter
GetLocalAddress	webrtc/base/asynctcpsocket.cc	/^SocketAddress AsyncTCPSocketBase::GetLocalAddress() const {$/;"	f	class:rtc::AsyncTCPSocketBase
GetLocalAddress	webrtc/base/asyncudpsocket.cc	/^SocketAddress AsyncUDPSocket::GetLocalAddress() const {$/;"	f	class:rtc::AsyncUDPSocket
GetLocalAddress	webrtc/base/physicalsocketserver.cc	/^SocketAddress PhysicalSocket::GetLocalAddress() const {$/;"	f	class:rtc::PhysicalSocket
GetLocalAddress	webrtc/base/virtualsocketserver.cc	/^SocketAddress VirtualSocket::GetLocalAddress() const {$/;"	f	class:rtc::VirtualSocket
GetLocalAddress	webrtc/base/win32socketserver.cc	/^SocketAddress Win32Socket::GetLocalAddress() const {$/;"	f	class:rtc::Win32Socket
GetLogToDebug	webrtc/base/logging.h	/^  static LoggingSeverity GetLogToDebug() { return dbg_sev_; }$/;"	f	class:rtc::LogMessage
GetLogToStream	webrtc/base/logging.cc	/^int LogMessage::GetLogToStream(LogSink* stream) {$/;"	f	class:rtc::LogMessage
GetLoopbackIP	webrtc/base/ipaddress.cc	/^IPAddress GetLoopbackIP(int family) {$/;"	f	namespace:rtc
GetLoseFirstPacket	webrtc/base/sslstreamadapter_unittest.cc	/^  bool GetLoseFirstPacket() { return lose_first_packet_; }$/;"	f	class:SSLStreamAdapterTestBase
GetLpcPolynomials	webrtc/modules/audio_processing/vad/vad_audio_proc.cc	/^void VadAudioProc::GetLpcPolynomials(double* lpc, size_t length_lpc) {$/;"	f	class:webrtc::VadAudioProc
GetMacProxySettings	webrtc/base/proxydetect.cc	/^bool GetMacProxySettings(ProxyInfo* proxy) {$/;"	f	namespace:rtc
GetMacProxySettingsFromDictionary	webrtc/base/proxydetect.cc	/^bool GetMacProxySettingsFromDictionary(ProxyInfo* proxy,$/;"	f	namespace:rtc
GetMachineModel	webrtc/base/systeminfo.cc	/^std::string SystemInfo::GetMachineModel() {$/;"	f	class:rtc::SystemInfo
GetMap	webrtc/system_wrappers/source/metrics_default.cc	/^RtcHistogramMap* GetMap() {$/;"	f	namespace:webrtc::metrics::__anon251
GetMaxCpus	webrtc/base/systeminfo.cc	/^int SystemInfo::GetMaxCpus() {$/;"	f	class:rtc::SystemInfo
GetMaxFileSize	webrtc/base/filerotatingstream.h	/^  size_t GetMaxFileSize() const { return max_file_size_; }$/;"	f	class:rtc::FileRotatingStream
GetMemorySize	webrtc/base/systeminfo.cc	/^int64_t SystemInfo::GetMemorySize() {$/;"	f	class:rtc::SystemInfo
GetMetrics	webrtc/modules/audio_processing/echo_cancellation_impl.cc	/^int EchoCancellationImpl::GetMetrics(Metrics* metrics) {$/;"	f	class:webrtc::EchoCancellationImpl
GetMicVolume	webrtc/modules/audio_processing/gain_control_for_experimental_agc.cc	/^int GainControlForExperimentalAgc::GetMicVolume() {$/;"	f	class:webrtc::GainControlForExperimentalAgc
GetMinLogSeverity	webrtc/base/logging.h	/^  static int GetMinLogSeverity() { return min_sev_; }$/;"	f	class:rtc::LogMessage
GetMinimumSpacing	webrtc/modules/audio_processing/beamformer/array_util.cc	/^float GetMinimumSpacing(const std::vector<Point>& array_geometry) {$/;"	f	namespace:webrtc
GetNetworkFromAddress	webrtc/base/network.cc	/^Network* NetworkManagerBase::GetNetworkFromAddress($/;"	f	class:rtc::NetworkManagerBase
GetNetworkMonitor	webrtc/base/network_unittest.cc	/^  FakeNetworkMonitor* GetNetworkMonitor(BasicNetworkManager& network_manager) {$/;"	f	class:rtc::NetworkTest
GetNetworks	webrtc/base/network.cc	/^void NetworkManagerBase::GetNetworks(NetworkList* result) const {$/;"	f	class:rtc::NetworkManagerBase
GetNetworks	webrtc/base/network_unittest.cc	/^  NetworkManager::NetworkList GetNetworks($/;"	f	class:rtc::NetworkTest
GetNewGain	webrtc/modules/audio_processing/level_controller/gain_selector.cc	/^float GainSelector::GetNewGain(float peak_level,$/;"	f	class:webrtc::GainSelector
GetNextBase64Char	webrtc/base/base64.cc	/^bool Base64::GetNextBase64Char(char ch, char* next_ch) {$/;"	f	class:rtc::Base64
GetNextEvent	webrtc/modules/audio_processing/test/debug_dump_replayer.cc	/^rtc::Optional<audioproc::Event> DebugDumpReplayer::GetNextEvent() const {$/;"	f	class:webrtc::test::DebugDumpReplayer
GetNextIP	webrtc/base/nat_unittest.cc	/^  IPAddress GetNextIP(int af) { return VirtualSocketServer::GetNextIP(af); }$/;"	f	class:__anon33::TestVirtualSocketServer
GetNextIP	webrtc/base/virtualsocketserver.cc	/^IPAddress VirtualSocketServer::GetNextIP(int family) {$/;"	f	class:rtc::VirtualSocketServer
GetNextPort	webrtc/base/virtualsocketserver.cc	/^uint16_t VirtualSocketServer::GetNextPort() {$/;"	f	class:rtc::VirtualSocketServer
GetNextQuantum	webrtc/base/base64.cc	/^size_t Base64::GetNextQuantum(DecodeFlags parse_flags, bool illegal_pads,$/;"	f	class:rtc::Base64
GetNoiseSpectrum	webrtc/modules/audio_processing/level_controller/noise_spectrum_estimator.h	/^  rtc::ArrayView<const float> GetNoiseSpectrum() const {$/;"	f	class:webrtc::NoiseSpectrumEstimator
GetNormalIfPlanar	webrtc/modules/audio_processing/beamformer/array_util.cc	/^rtc::Optional<Point> GetNormalIfPlanar($/;"	f	namespace:webrtc
GetNumCpus	webrtc/base/linux.cc	/^bool ProcCpuInfo::GetNumCpus(int* num) {$/;"	f	class:rtc::ProcCpuInfo
GetNumDesktops	webrtc/base/x11windowpicker.cc	/^  int GetNumDesktops() {$/;"	f	class:rtc::XWindowEnumerator
GetNumDesktops	webrtc/base/x11windowpicker.cc	/^int X11WindowPicker::GetNumDesktops() {$/;"	f	class:rtc::X11WindowPicker
GetNumFiles	webrtc/base/filerotatingstream.h	/^  size_t GetNumFiles() { return file_names_.size(); }$/;"	f	class:rtc::FileRotatingStream
GetNumPhysicalCpus	webrtc/base/linux.cc	/^bool ProcCpuInfo::GetNumPhysicalCpus(int* num) {$/;"	f	class:rtc::ProcCpuInfo
GetNumRotatingLogFiles	webrtc/base/filerotatingstream.cc	/^size_t CallSessionFileRotatingStream::GetNumRotatingLogFiles($/;"	f	class:rtc::CallSessionFileRotatingStream
GetOSVersion	webrtc/base/macutils.cc	/^static bool GetOSVersion(int* major, int* minor, int* bugfix) {$/;"	f	namespace:rtc
GetOSVersionName	webrtc/base/macutils.cc	/^MacOSVersionName GetOSVersionName() {$/;"	f	namespace:rtc
GetOpenFdList	webrtc/base/linuxfdwalk_unittest.cc	/^static void GetOpenFdList(std::set<int> *fds) {$/;"	f	file:
GetOption	webrtc/base/asyncsocket.cc	/^int AsyncSocketAdapter::GetOption(Option opt, int* value) {$/;"	f	class:rtc::AsyncSocketAdapter
GetOption	webrtc/base/asynctcpsocket.cc	/^int AsyncTCPSocketBase::GetOption(Socket::Option opt, int* value) {$/;"	f	class:rtc::AsyncTCPSocketBase
GetOption	webrtc/base/asyncudpsocket.cc	/^int AsyncUDPSocket::GetOption(Socket::Option opt, int* value) {$/;"	f	class:rtc::AsyncUDPSocket
GetOption	webrtc/base/physicalsocketserver.cc	/^int PhysicalSocket::GetOption(Option opt, int* value) {$/;"	f	class:rtc::PhysicalSocket
GetOption	webrtc/base/virtualsocketserver.cc	/^int VirtualSocket::GetOption(Option opt, int* value) {$/;"	f	class:rtc::VirtualSocket
GetOption	webrtc/base/win32socketserver.cc	/^int Win32Socket::GetOption(Option opt, int* value) {$/;"	f	class:rtc::Win32Socket
GetOrCreateEntry	webrtc/base/diskcache.cc	/^DiskCache::Entry* DiskCache::GetOrCreateEntry(const std::string& id,$/;"	f	class:rtc::DiskCache
GetOrganizationName	webrtc/base/fileutils.h	/^  static void GetOrganizationName(std::string* organization) {$/;"	f	class:rtc::Filesystem
GetOrganizationName	webrtc/base/fileutils.h	/^  void GetOrganizationName(std::string* organization) {$/;"	f	class:rtc::FilesystemInterface
GetOrganizationName	webrtc/base/pathutils.h	/^inline void GetOrganizationName(std::string* organization) {$/;"	f	namespace:rtc
GetOsVersion	webrtc/base/win32.cc	/^bool GetOsVersion(int* major, int* minor, int* build) {$/;"	f	namespace:rtc
GetOutLengthToDyadicDecimate	webrtc/modules/audio_processing/transient/dyadic_decimator.h	/^inline size_t GetOutLengthToDyadicDecimate(size_t in_length,$/;"	f	namespace:webrtc
GetOutput	webrtc/modules/audio_processing/test/debug_dump_replayer.cc	/^const ChannelBuffer<float>* DebugDumpReplayer::GetOutput() const {$/;"	f	class:webrtc::test::DebugDumpReplayer
GetOutputConfig	webrtc/modules/audio_processing/test/debug_dump_replayer.cc	/^StreamConfig DebugDumpReplayer::GetOutputConfig() const {$/;"	f	class:webrtc::test::DebugDumpReplayer
GetPThread	webrtc/base/thread.h	/^  pthread_t GetPThread() {$/;"	f	class:rtc::Thread
GetParent	webrtc/base/taskparent.h	/^  TaskParent *GetParent() { return parent_; }$/;"	f	class:rtc::TaskParent
GetParentKeyInfo	webrtc/base/win32regkey.cc	/^std::wstring RegKey::GetParentKeyInfo(std::wstring* key_name) {$/;"	f	class:rtc::RegKey
GetPeerCertificate	webrtc/base/opensslstreamadapter.cc	/^std::unique_ptr<SSLCertificate> OpenSSLStreamAdapter::GetPeerCertificate()$/;"	f	class:rtc::OpenSSLStreamAdapter
GetPeerCertificate	webrtc/base/sslstreamadapter_unittest.cc	/^  std::unique_ptr<rtc::SSLCertificate> GetPeerCertificate(bool client) {$/;"	f	class:SSLStreamAdapterTestBase
GetPosition	webrtc/base/stream.cc	/^bool FileStream::GetPosition(size_t* position) const {$/;"	f	class:rtc::FileStream
GetPosition	webrtc/base/stream.cc	/^bool MemoryStreamBase::GetPosition(size_t* position) const {$/;"	f	class:rtc::MemoryStreamBase
GetPosition	webrtc/base/stream.cc	/^bool StreamAdapterInterface::GetPosition(size_t* position) const {$/;"	f	class:rtc::StreamAdapterInterface
GetPosition	webrtc/base/stream.cc	/^bool StreamInterface::GetPosition(size_t* position) const {$/;"	f	class:rtc::StreamInterface
GetPosition	webrtc/base/stream.cc	/^bool StringStream::GetPosition(size_t* position) const {$/;"	f	class:rtc::StringStream
GetPosition	webrtc/base/stream_unittest.cc	/^  virtual bool GetPosition(size_t* position) const {$/;"	f	class:rtc::TestStream
GetPrefix	webrtc/base/network.cc	/^unsigned int GetPrefix(PIP_ADAPTER_PREFIX prefixlist,$/;"	f	namespace:rtc
GetProxyForUrl	webrtc/base/autodetectproxy.cc	/^bool AutoDetectProxy::GetProxyForUrl(const char* agent,$/;"	f	class:rtc::AutoDetectProxy
GetProxyInfo	webrtc/base/proxydetect_unittest.cc	/^bool GetProxyInfo(const std::string prefs, ProxyInfo* info) {$/;"	f	namespace:rtc
GetProxySettingsForUrl	webrtc/base/proxydetect.cc	/^bool GetProxySettingsForUrl(const char* agent, const char* url,$/;"	f	namespace:rtc
GetQueuePtrTls	webrtc/base/task_queue_posix.cc	/^pthread_key_t GetQueuePtrTls() {$/;"	f	namespace:rtc::internal
GetQueuePtrTls	webrtc/base/task_queue_win.cc	/^DWORD GetQueuePtrTls() {$/;"	f	namespace:rtc::__anon67
GetRandom	webrtc/base/helpers.cc	/^  int GetRandom() {$/;"	f	class:rtc::TestRandomGenerator	file:
GetRawFile	webrtc/modules/audio_processing/logging/apm_data_dumper.cc	/^FILE* ApmDataDumper::GetRawFile(const char* name) {$/;"	f	class:webrtc::ApmDataDumper
GetReadData	webrtc/base/stream.cc	/^const void* FifoBuffer::GetReadData(size_t* size) {$/;"	f	class:rtc::FifoBuffer
GetReadData	webrtc/base/stream.cc	/^const void* StreamInterface::GetReadData(size_t* data_len) {$/;"	f	class:rtc::StreamInterface
GetReceivedData	webrtc/base/ssladapter_unittest.cc	/^  const std::string& GetReceivedData() const {$/;"	f	class:SSLAdapterTestDummyClient
GetReceivedData	webrtc/base/ssladapter_unittest.cc	/^  const std::string& GetReceivedData() const {$/;"	f	class:SSLAdapterTestDummyServer
GetRef	webrtc/base/weak_ptr.cc	/^WeakReference WeakReferenceOwner::GetRef() const {$/;"	f	class:rtc::internal::WeakReferenceOwner
GetReference	webrtc/base/fakesslidentity.h	/^  virtual FakeSSLIdentity* GetReference() const {$/;"	f	class:rtc::FakeSSLIdentity
GetReference	webrtc/base/opensslidentity.cc	/^OpenSSLCertificate* OpenSSLCertificate::GetReference() const {$/;"	f	class:rtc::OpenSSLCertificate
GetReference	webrtc/base/opensslidentity.cc	/^OpenSSLIdentity* OpenSSLIdentity::GetReference() const {$/;"	f	class:rtc::OpenSSLIdentity
GetReference	webrtc/base/opensslidentity.cc	/^OpenSSLKeyPair* OpenSSLKeyPair::GetReference() {$/;"	f	class:rtc::OpenSSLKeyPair
GetRemoteAddress	webrtc/base/asyncsocket.cc	/^SocketAddress AsyncSocketAdapter::GetRemoteAddress() const {$/;"	f	class:rtc::AsyncSocketAdapter
GetRemoteAddress	webrtc/base/asynctcpsocket.cc	/^SocketAddress AsyncTCPSocketBase::GetRemoteAddress() const {$/;"	f	class:rtc::AsyncTCPSocketBase
GetRemoteAddress	webrtc/base/asyncudpsocket.cc	/^SocketAddress AsyncUDPSocket::GetRemoteAddress() const {$/;"	f	class:rtc::AsyncUDPSocket
GetRemoteAddress	webrtc/base/physicalsocketserver.cc	/^SocketAddress PhysicalSocket::GetRemoteAddress() const {$/;"	f	class:rtc::PhysicalSocket
GetRemoteAddress	webrtc/base/socketadapters.cc	/^SocketAddress AsyncHttpsProxySocket::GetRemoteAddress() const {$/;"	f	class:rtc::AsyncHttpsProxySocket
GetRemoteAddress	webrtc/base/socketadapters.cc	/^SocketAddress AsyncSocksProxySocket::GetRemoteAddress() const {$/;"	f	class:rtc::AsyncSocksProxySocket
GetRemoteAddress	webrtc/base/virtualsocketserver.cc	/^SocketAddress VirtualSocket::GetRemoteAddress() const {$/;"	f	class:rtc::VirtualSocket
GetRemoteAddress	webrtc/base/win32socketserver.cc	/^SocketAddress Win32Socket::GetRemoteAddress() const {$/;"	f	class:rtc::Win32Socket
GetRenderCounter	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  int GetRenderCounter() const {$/;"	f	class:webrtc::__anon181::FrameCounters
GetRequestedEvents	webrtc/base/physicalsocketserver.cc	/^  virtual uint32_t GetRequestedEvents() { return 0; }$/;"	f	class:rtc::EventDispatcher
GetRequestedEvents	webrtc/base/physicalsocketserver.cc	/^uint32_t SocketDispatcher::GetRequestedEvents() {$/;"	f	class:rtc::SocketDispatcher
GetResolvedAddress	webrtc/base/nethelpers.cc	/^bool AsyncResolver::GetResolvedAddress(int family, SocketAddress* addr) const {$/;"	f	class:rtc::AsyncResolver
GetRfc4572Fingerprint	webrtc/base/sslfingerprint.cc	/^std::string SSLFingerprint::GetRfc4572Fingerprint() const {$/;"	f	class:rtc::SSLFingerprint
GetRightAlign	webrtc/system_wrappers/include/aligned_malloc.h	/^T* GetRightAlign(const T* ptr, size_t alignment) {$/;"	f	namespace:webrtc
GetRightAlign	webrtc/system_wrappers/source/aligned_malloc.cc	/^uintptr_t GetRightAlign(uintptr_t start_pos, size_t alignment) {$/;"	f	namespace:webrtc
GetRightAlign	webrtc/system_wrappers/source/aligned_malloc.cc	/^void* GetRightAlign(const void* pointer, size_t alignment) {$/;"	f	namespace:webrtc
GetRmsErrorDb	webrtc/modules/audio_processing/agc/agc.cc	/^bool Agc::GetRmsErrorDb(int* error) {$/;"	f	class:webrtc::Agc
GetRootKeyInfo	webrtc/base/win32regkey.cc	/^HKEY RegKey::GetRootKeyInfo(std::wstring* full_key_name) {$/;"	f	class:rtc::RegKey
GetRotatingLogSize	webrtc/base/filerotatingstream.cc	/^size_t CallSessionFileRotatingStream::GetRotatingLogSize($/;"	f	class:rtc::CallSessionFileRotatingStream
GetRotationIndex	webrtc/base/filerotatingstream.h	/^  size_t GetRotationIndex() const { return rotation_index_; }$/;"	f	class:rtc::FileRotatingStream
GetRunner	webrtc/base/taskparent.h	/^  TaskRunner *GetRunner() { return runner_; }$/;"	f	class:rtc::TaskParent
GetSSLProtocolName	webrtc/base/ssladapter_unittest.cc	/^static std::string GetSSLProtocolName(const rtc::SSLMode& ssl_mode) {$/;"	f	file:
GetSectionCount	webrtc/base/linux.cc	/^bool ProcCpuInfo::GetSectionCount(size_t* count) {$/;"	f	class:rtc::ProcCpuInfo
GetSectionIntValue	webrtc/base/linux.cc	/^bool ProcCpuInfo::GetSectionIntValue(size_t section_num,$/;"	f	class:rtc::ProcCpuInfo
GetSectionStringValue	webrtc/base/linux.cc	/^bool ProcCpuInfo::GetSectionStringValue(size_t section_num,$/;"	f	class:rtc::ProcCpuInfo
GetSendBandwidthInfo	webrtc/modules/audio_coding/codecs/isac/main/source/isac.c	/^static void GetSendBandwidthInfo(ISACMainStruct* instISAC,$/;"	f	file:
GetServerAddress	webrtc/base/proxyserver.cc	/^SocketAddress ProxyServer::GetServerAddress() {$/;"	f	class:rtc::ProxyServer
GetSetOptionsInternal	webrtc/base/socket_unittest.cc	/^void SocketTest::GetSetOptionsInternal(const IPAddress& loopback) {$/;"	f	class:rtc::SocketTest
GetSignatureDigestAlgorithm	webrtc/base/opensslidentity.cc	/^bool OpenSSLCertificate::GetSignatureDigestAlgorithm($/;"	f	class:rtc::OpenSSLCertificate
GetSize	webrtc/base/filerotatingstream.cc	/^bool FileRotatingStream::GetSize(size_t* size) const {$/;"	f	class:rtc::FileRotatingStream
GetSize	webrtc/base/fileutils_mock.h	/^    virtual bool GetSize(size_t* size) const {$/;"	f	class:rtc::FakeFileStream
GetSize	webrtc/base/sslidentity.h	/^  size_t GetSize() const { return certs_.size(); }$/;"	f	class:rtc::SSLCertChain
GetSize	webrtc/base/stream.cc	/^bool FileStream::GetSize(const std::string& filename, size_t* size) {$/;"	f	class:rtc::FileStream
GetSize	webrtc/base/stream.cc	/^bool FileStream::GetSize(size_t* size) const {$/;"	f	class:rtc::FileStream
GetSize	webrtc/base/stream.cc	/^bool MemoryStreamBase::GetSize(size_t* size) const {$/;"	f	class:rtc::MemoryStreamBase
GetSize	webrtc/base/stream.cc	/^bool StreamAdapterInterface::GetSize(size_t* size) const {$/;"	f	class:rtc::StreamAdapterInterface
GetSize	webrtc/base/stream.cc	/^bool StreamInterface::GetSize(size_t* size) const {$/;"	f	class:rtc::StreamInterface
GetSize	webrtc/base/stream.cc	/^bool StringStream::GetSize(size_t* size) const {$/;"	f	class:rtc::StringStream
GetSize	webrtc/base/stream_unittest.cc	/^  virtual bool GetSize(size_t* size) const {$/;"	f	class:rtc::TestStream
GetSocket	webrtc/base/physicalsocketserver.cc	/^  virtual SOCKET GetSocket() {$/;"	f	class:rtc::EventDispatcher
GetSocket	webrtc/base/physicalsocketserver.cc	/^SOCKET SocketDispatcher::GetSocket() {$/;"	f	class:rtc::SocketDispatcher
GetSocket	webrtc/base/socketstream.h	/^  AsyncSocket* GetSocket() { return socket_; }$/;"	f	class:rtc::SocketStream
GetSocketRecvTimestamp	webrtc/base/physicalsocketserver.cc	/^int64_t GetSocketRecvTimestamp(int socket) {$/;"	f
GetSrtpKeyAndSaltLengths	webrtc/base/sslstreamadapter.cc	/^bool GetSrtpKeyAndSaltLengths(int crypto_suite, int *key_length,$/;"	f	namespace:rtc
GetSslCipherSuite	webrtc/base/opensslstreamadapter.cc	/^bool OpenSSLStreamAdapter::GetSslCipherSuite(int* cipher_suite) {$/;"	f	class:rtc::OpenSSLStreamAdapter
GetSslCipherSuite	webrtc/base/sslstreamadapter.cc	/^bool SSLStreamAdapter::GetSslCipherSuite(int* cipher_suite) {$/;"	f	class:rtc::SSLStreamAdapter
GetSslCipherSuite	webrtc/base/sslstreamadapter_unittest.cc	/^  bool GetSslCipherSuite(bool client, int* retval) {$/;"	f	class:SSLStreamAdapterTestBase
GetSslVersion	webrtc/base/opensslstreamadapter.cc	/^int OpenSSLStreamAdapter::GetSslVersion() const {$/;"	f	class:rtc::OpenSSLStreamAdapter
GetSslVersion	webrtc/base/sslstreamadapter_unittest.cc	/^  int GetSslVersion(bool client) {$/;"	f	class:SSLStreamAdapterTestBase
GetState	webrtc/base/asyncsocket.cc	/^AsyncSocket::ConnState AsyncSocketAdapter::GetState() const {$/;"	f	class:rtc::AsyncSocketAdapter
GetState	webrtc/base/asynctcpsocket.cc	/^AsyncTCPSocket::State AsyncTCPSocketBase::GetState() const {$/;"	f	class:rtc::AsyncTCPSocketBase
GetState	webrtc/base/asyncudpsocket.cc	/^AsyncUDPSocket::State AsyncUDPSocket::GetState() const {$/;"	f	class:rtc::AsyncUDPSocket
GetState	webrtc/base/filerotatingstream.cc	/^StreamState FileRotatingStream::GetState() const {$/;"	f	class:rtc::FileRotatingStream
GetState	webrtc/base/openssladapter.cc	/^OpenSSLAdapter::GetState() const {$/;"	f	class:rtc::OpenSSLAdapter
GetState	webrtc/base/opensslstreamadapter.cc	/^StreamState OpenSSLStreamAdapter::GetState() const {$/;"	f	class:rtc::OpenSSLStreamAdapter
GetState	webrtc/base/physicalsocketserver.cc	/^AsyncSocket::ConnState PhysicalSocket::GetState() const {$/;"	f	class:rtc::PhysicalSocket
GetState	webrtc/base/socketadapters.cc	/^Socket::ConnState AsyncHttpsProxySocket::GetState() const {$/;"	f	class:rtc::AsyncHttpsProxySocket
GetState	webrtc/base/socketadapters.cc	/^Socket::ConnState AsyncSocksProxySocket::GetState() const {$/;"	f	class:rtc::AsyncSocksProxySocket
GetState	webrtc/base/socketstream.cc	/^StreamState SocketStream::GetState() const {$/;"	f	class:rtc::SocketStream
GetState	webrtc/base/ssladapter_unittest.cc	/^  rtc::AsyncSocket::ConnState GetState() const {$/;"	f	class:SSLAdapterTestDummyClient
GetState	webrtc/base/stream.cc	/^StreamState FifoBuffer::GetState() const {$/;"	f	class:rtc::FifoBuffer
GetState	webrtc/base/stream.cc	/^StreamState FileStream::GetState() const {$/;"	f	class:rtc::FileStream
GetState	webrtc/base/stream.cc	/^StreamState MemoryStreamBase::GetState() const {$/;"	f	class:rtc::MemoryStreamBase
GetState	webrtc/base/stream.cc	/^StreamState NullStream::GetState() const {$/;"	f	class:rtc::NullStream
GetState	webrtc/base/stream.cc	/^StreamState StreamAdapterInterface::GetState() const {$/;"	f	class:rtc::StreamAdapterInterface
GetState	webrtc/base/stream.cc	/^StreamState StringStream::GetState() const {$/;"	f	class:rtc::StringStream
GetState	webrtc/base/stream_unittest.cc	/^  virtual StreamState GetState() const { return SS_OPEN; }$/;"	f	class:rtc::TestStream
GetState	webrtc/base/task.h	/^  int GetState() const { return state_; }$/;"	f	class:rtc::Task
GetState	webrtc/base/testutils.h	/^  virtual StreamState GetState() const { return state_; }$/;"	f	class:testing::StreamSource
GetState	webrtc/base/virtualsocketserver.cc	/^Socket::ConnState VirtualSocket::GetState() const {$/;"	f	class:rtc::VirtualSocket
GetState	webrtc/base/win32socketserver.cc	/^Socket::ConnState Win32Socket::GetState() const {$/;"	f	class:rtc::Win32Socket
GetStateName	webrtc/base/task.cc	/^std::string Task::GetStateName(int state) const {$/;"	f	class:rtc::Task
GetStaticInstance	webrtc/system_wrappers/include/static_instance.h	/^static T* GetStaticInstance(CountOperation count_operation) {$/;"	f	namespace:webrtc
GetStatistics	webrtc/modules/audio_processing/audio_processing_impl.cc	/^AudioProcessing::AudioProcessingStatistics AudioProcessing::GetStatistics()$/;"	f	class:webrtc::AudioProcessing
GetStatistics	webrtc/modules/audio_processing/audio_processing_impl.cc	/^AudioProcessing::AudioProcessingStatistics AudioProcessingImpl::GetStatistics()$/;"	f	class:webrtc::AudioProcessingImpl
GetStats	webrtc/base/sslidentity.cc	/^std::unique_ptr<SSLCertificateStats> SSLCertificate::GetStats($/;"	f	class:rtc::SSLCertificate
GetStats	webrtc/base/sslidentity.cc	/^std::unique_ptr<SSLCertificateStats> SSLCertificate::GetStats() const {$/;"	f	class:rtc::SSLCertificate
GetStatus	webrtc/base/dbus.cc	/^DBusMonitor::DBusMonitorStatus DBusMonitor::GetStatus() {$/;"	f	class:rtc::DBusMonitor
GetStream	webrtc/base/stream.h	/^  StreamInterface* GetStream() { return stream(); }$/;"	f	class:rtc::StreamReference
GetStringFromJson	webrtc/base/json.cc	/^bool GetStringFromJson(const Json::Value& in, std::string* out) {$/;"	f	namespace:rtc
GetStringFromJsonArray	webrtc/base/json.cc	/^bool GetStringFromJsonArray(const Json::Value& in, size_t n,$/;"	f	namespace:rtc
GetStringFromJsonObject	webrtc/base/json.cc	/^bool GetStringFromJsonObject(const Json::Value& in, const std::string& k,$/;"	f	namespace:rtc
GetStringValue	webrtc/base/optionsfile.cc	/^bool OptionsFile::GetStringValue(const std::string& option,$/;"	f	class:rtc::OptionsFile
GetSubframesPitchParameters	webrtc/modules/audio_processing/vad/pitch_internal.cc	/^void GetSubframesPitchParameters(int sampling_rate_hz,$/;"	f
GetSubkeyCount	webrtc/base/win32regkey.cc	/^uint32_t RegKey::GetSubkeyCount() {$/;"	f	class:rtc::RegKey
GetSubkeyNameAt	webrtc/base/win32regkey.cc	/^HRESULT RegKey::GetSubkeyNameAt(int index, std::wstring* key_name) {$/;"	f	class:rtc::RegKey
GetSymbols	webrtc/base/dbus.cc	/^inline static LibDBusGlibSymbolTable *GetSymbols() {$/;"	f	namespace:rtc
GetSystemDefaultProxySettings	webrtc/base/proxydetect.cc	/^bool GetSystemDefaultProxySettings(const char* agent, const char* url,$/;"	f	namespace:rtc
GetSystemDelayInSamples	webrtc/modules/audio_processing/echo_cancellation_impl.cc	/^int EchoCancellationImpl::GetSystemDelayInSamples() const {$/;"	f	class:webrtc::EchoCancellationImpl
GetTapResult	webrtc/base/stream.cc	/^StreamResult StreamTap::GetTapResult(int* error) {$/;"	f	class:rtc::StreamTap
GetTemporaryFolder	webrtc/base/fileutils.h	/^  static bool GetTemporaryFolder(Pathname &path, bool create,$/;"	f	class:rtc::Filesystem
GetTemporaryFolder	webrtc/base/fileutils_mock.h	/^    bool GetTemporaryFolder(Pathname &path, bool create,$/;"	f	class:rtc::FakeFileSystem
GetTemporaryFolder	webrtc/base/pathutils.h	/^inline bool GetTemporaryFolder(Pathname& path, bool create,$/;"	f	namespace:rtc
GetTemporaryFolder	webrtc/base/unixfilesystem.cc	/^bool UnixFilesystem::GetTemporaryFolder(Pathname &pathname, bool create,$/;"	f	class:rtc::UnixFilesystem
GetTemporaryFolder	webrtc/base/win32filesystem.cc	/^bool Win32Filesystem::GetTemporaryFolder(Pathname &pathname, bool create,$/;"	f	class:rtc::Win32Filesystem
GetTest	webrtc/base/physicalsocketserver_unittest.cc	/^  PhysicalSocketTest* GetTest() const { return test_; }$/;"	f	class:rtc::FakePhysicalSocketServer
GetThreadRef	webrtc/base/platform_thread.cc	/^PlatformThreadRef PlatformThread::GetThreadRef() const {$/;"	f	class:rtc::PlatformThread
GetTrace	webrtc/system_wrappers/source/trace_impl.cc	/^TraceImpl* TraceImpl::GetTrace(const TraceLevel level) {$/;"	f	class:webrtc::TraceImpl
GetTransitDelay	webrtc/base/virtualsocketserver.cc	/^uint32_t VirtualSocketServer::GetTransitDelay(Socket* socket) {$/;"	f	class:rtc::VirtualSocketServer
GetTranslator	webrtc/base/natsocketfactory.cc	/^NATSocketServer::Translator* NATSocketServer::GetTranslator($/;"	f	class:rtc::NATSocketServer
GetTranslator	webrtc/base/natsocketfactory.cc	/^NATSocketServer::Translator* NATSocketServer::Translator::GetTranslator($/;"	f	class:rtc::NATSocketServer::Translator
GetUIntFromJson	webrtc/base/json.cc	/^bool GetUIntFromJson(const Json::Value& in, unsigned int* out) {$/;"	f	namespace:rtc
GetUIntFromJsonArray	webrtc/base/json.cc	/^bool GetUIntFromJsonArray(const Json::Value& in, size_t n,$/;"	f	namespace:rtc
GetUIntFromJsonObject	webrtc/base/json.cc	/^bool GetUIntFromJsonObject(const Json::Value& in, const std::string& k,$/;"	f	namespace:rtc
GetValue	webrtc/base/win32regkey.cc	/^HRESULT RegKey::GetValue(const wchar_t* full_key_name,$/;"	f	class:rtc::RegKey
GetValue	webrtc/base/win32regkey.cc	/^HRESULT RegKey::GetValue(const wchar_t* value_name, DWORD* value) const {$/;"	f	class:rtc::RegKey
GetValue	webrtc/base/win32regkey.cc	/^HRESULT RegKey::GetValue(const wchar_t* value_name, DWORD64* value) const {$/;"	f	class:rtc::RegKey
GetValue	webrtc/base/win32regkey.cc	/^HRESULT RegKey::GetValue(const wchar_t* value_name, std::wstring* value) const {$/;"	f	class:rtc::RegKey
GetValue	webrtc/base/win32regkey.cc	/^HRESULT RegKey::GetValue(const wchar_t* value_name, wchar_t** value) const {$/;"	f	class:rtc::RegKey
GetValue	webrtc/base/win32regkey.cc	/^HRESULT RegKey::GetValue(const wchar_t* value_name,$/;"	f	class:rtc::RegKey
GetValueCount	webrtc/base/win32regkey.cc	/^uint32_t RegKey::GetValueCount() {$/;"	f	class:rtc::RegKey
GetValueFromJson	webrtc/base/json.cc	/^bool GetValueFromJson(const Json::Value& in, Json::Value* out) {$/;"	f	namespace:rtc::__anon23
GetValueFromJsonArray	webrtc/base/json.cc	/^bool GetValueFromJsonArray(const Json::Value& in, size_t n,$/;"	f	namespace:rtc
GetValueFromJsonObject	webrtc/base/json.cc	/^bool GetValueFromJsonObject(const Json::Value& in, const std::string& k,$/;"	f	namespace:rtc
GetValueHelper	webrtc/base/win32regkey.cc	/^HRESULT RegKey::GetValueHelper(const wchar_t* value_name,$/;"	f	class:rtc::RegKey
GetValueNameAt	webrtc/base/win32regkey.cc	/^HRESULT RegKey::GetValueNameAt(int index, std::wstring* value_name,$/;"	f	class:rtc::RegKey
GetValueStaticHelper	webrtc/base/win32regkey.cc	/^HRESULT RegKey::GetValueStaticHelper(const wchar_t* full_key_name,$/;"	f	class:rtc::RegKey
GetValueType	webrtc/base/win32regkey.cc	/^HRESULT RegKey::GetValueType(const wchar_t* full_key_name,$/;"	f	class:rtc::RegKey
GetWSAEvent	webrtc/base/physicalsocketserver.cc	/^  virtual WSAEVENT GetWSAEvent() {$/;"	f	class:rtc::EventDispatcher
GetWSAEvent	webrtc/base/physicalsocketserver.cc	/^WSAEVENT SocketDispatcher::GetWSAEvent() {$/;"	f	class:rtc::SocketDispatcher
GetWavFile	webrtc/modules/audio_processing/logging/apm_data_dumper.cc	/^WavWriter* ApmDataDumper::GetWavFile(const char* name,$/;"	f	class:webrtc::ApmDataDumper
GetWeakPtr	webrtc/base/weak_ptr.h	/^  WeakPtr<T> GetWeakPtr() {$/;"	f	class:rtc::WeakPtrFactory
GetWinHttpProxySettings	webrtc/base/proxydetect.cc	/^bool GetWinHttpProxySettings(const char* url, ProxyInfo* proxy) {$/;"	f	namespace:rtc
GetWindowIcon	webrtc/base/x11windowpicker.cc	/^  uint8_t* GetWindowIcon(const WindowId& id, int* width, int* height) {$/;"	f	class:rtc::XWindowEnumerator
GetWindowIcon	webrtc/base/x11windowpicker.cc	/^uint8_t* X11WindowPicker::GetWindowIcon(const WindowId& id,$/;"	f	class:rtc::X11WindowPicker
GetWindowList	webrtc/base/macwindowpicker.cc	/^bool MacWindowPicker::GetWindowList(WindowDescriptionList* descriptions) {$/;"	f	class:rtc::MacWindowPicker
GetWindowList	webrtc/base/win32windowpicker.cc	/^bool Win32WindowPicker::GetWindowList(WindowDescriptionList* descriptions) {$/;"	f	class:rtc::Win32WindowPicker
GetWindowList	webrtc/base/win32windowpicker_unittest.cc	/^  virtual bool GetWindowList(WindowDescriptionList* descriptions) {$/;"	f	class:rtc::Win32WindowPickerForTest
GetWindowList	webrtc/base/x11windowpicker.cc	/^bool X11WindowPicker::GetWindowList(WindowDescriptionList* descriptions) {$/;"	f	class:rtc::X11WindowPicker
GetWindowThumbnail	webrtc/base/x11windowpicker.cc	/^  uint8_t* GetWindowThumbnail(const WindowId& id, int width, int height) {$/;"	f	class:rtc::XWindowEnumerator
GetWindowThumbnail	webrtc/base/x11windowpicker.cc	/^uint8_t* X11WindowPicker::GetWindowThumbnail(const WindowId& id,$/;"	f	class:rtc::X11WindowPicker
GetWindowTitle	webrtc/base/x11windowpicker.cc	/^  bool GetWindowTitle(Window window, std::string* title) {$/;"	f	class:rtc::XWindowEnumerator	file:
GetWriteBuffer	webrtc/base/stream.cc	/^void* FifoBuffer::GetWriteBuffer(size_t* size) {$/;"	f	class:rtc::FifoBuffer
GetWriteBuffer	webrtc/base/stream.cc	/^void* StreamInterface::GetWriteBuffer(size_t* buf_len) {$/;"	f	class:rtc::StreamInterface
GetWriteRemaining	webrtc/base/stream.cc	/^bool FifoBuffer::GetWriteRemaining(size_t* size) const {$/;"	f	class:rtc::FifoBuffer
GetWriteRemaining	webrtc/base/stream.cc	/^bool StreamAdapterInterface::GetWriteRemaining(size_t* size) const {$/;"	f	class:rtc::StreamAdapterInterface
GetWriteRemaining	webrtc/base/stream.cc	/^bool StreamInterface::GetWriteRemaining(size_t* size) const {$/;"	f	class:rtc::StreamInterface
GetiOSProxySettings	webrtc/base/proxydetect.cc	/^bool GetiOSProxySettings(ProxyInfo* proxy) {$/;"	f	namespace:rtc
GlobalLock	webrtc/base/criticalsection.cc	/^GlobalLock::GlobalLock() {$/;"	f	class:rtc::GlobalLock
GlobalLock	webrtc/base/criticalsection.h	/^class GlobalLock : public GlobalLockPod {$/;"	c	namespace:rtc
GlobalLockPod	webrtc/base/criticalsection.h	/^class LOCKABLE GlobalLockPod {$/;"	c	namespace:rtc
GlobalLockScope	webrtc/base/criticalsection.cc	/^GlobalLockScope::GlobalLockScope(GlobalLockPod* lock)$/;"	f	class:rtc::GlobalLockScope
GlobalLockScope	webrtc/base/criticalsection.h	/^class SCOPED_LOCKABLE GlobalLockScope {$/;"	c	namespace:rtc
GlobalSign_ECC_Root_CA___R4_certificate	webrtc/base/sslroots.h	/^const unsigned char GlobalSign_ECC_Root_CA___R4_certificate[485]={$/;"	v
GlobalSign_ECC_Root_CA___R5_certificate	webrtc/base/sslroots.h	/^const unsigned char GlobalSign_ECC_Root_CA___R5_certificate[546]={$/;"	v
GlobalSign_Root_CA___R2_certificate	webrtc/base/sslroots.h	/^const unsigned char GlobalSign_Root_CA___R2_certificate[958]={$/;"	v
GlobalSign_Root_CA___R3_certificate	webrtc/base/sslroots.h	/^const unsigned char GlobalSign_Root_CA___R3_certificate[867]={$/;"	v
GlobalSign_Root_CA_certificate	webrtc/base/sslroots.h	/^const unsigned char GlobalSign_Root_CA_certificate[889]={$/;"	v
GlobalSignalHandler	webrtc/base/physicalsocketserver.cc	/^static void GlobalSignalHandler(int signum) {$/;"	f	namespace:rtc
Gmin	webrtc/modules/include/module_common_types.h	/^  uint8_t Gmin;$/;"	m	struct:webrtc::RTCPVoIPMetric
GmmParameters	webrtc/modules/audio_processing/vad/gmm.h	/^struct GmmParameters {$/;"	s	namespace:webrtc
GmmProbability	webrtc/common_audio/vad/vad_core.c	/^static int16_t GmmProbability(VadInstT* self, int16_t* features,$/;"	f	file:
Go_Daddy_Class_2_CA_certificate	webrtc/base/sslroots.h	/^const unsigned char Go_Daddy_Class_2_CA_certificate[1028]={$/;"	v
Go_Daddy_Root_Certificate_Authority___G2_certificate	webrtc/base/sslroots.h	/^const unsigned char Go_Daddy_Root_Certificate_Authority___G2_certificate[969]={$/;"	v
GofInfoVP9	webrtc/modules/include/module_common_types.h	/^struct GofInfoVP9 {$/;"	s	namespace:webrtc
GolombEncoded	webrtc/base/bitbuffer_unittest.cc	/^uint64_t GolombEncoded(uint32_t val) {$/;"	f	namespace:rtc
Grow	webrtc/base/natsocketfactory.cc	/^  void Grow(size_t new_size) {$/;"	f	class:rtc::NATSocket	file:
GuardedAsyncInvokeTest	webrtc/base/thread_unittest.cc	/^  GuardedAsyncInvokeTest()$/;"	f	class:GuardedAsyncInvokeTest
GuardedAsyncInvokeTest	webrtc/base/thread_unittest.cc	/^class GuardedAsyncInvokeTest : public testing::Test {$/;"	c	file:
GuardedAsyncInvoker	webrtc/base/asyncinvoker.cc	/^GuardedAsyncInvoker::GuardedAsyncInvoker() : thread_(Thread::Current()) {$/;"	f	class:rtc::GuardedAsyncInvoker
GuardedAsyncInvoker	webrtc/base/asyncinvoker.h	/^class GuardedAsyncInvoker : public sigslot::has_slots<> {$/;"	c	namespace:rtc
H264	webrtc/common_types.cc	/^VideoCodecH264* VideoCodec::H264() {$/;"	f	class:webrtc::VideoCodec
H264	webrtc/common_types.cc	/^const VideoCodecH264& VideoCodec::H264() const {$/;"	f	class:webrtc::VideoCodec
H264	webrtc/common_types.h	/^  VideoCodecH264 H264;$/;"	m	union:webrtc::VideoCodecUnion
H264	webrtc/modules/include/module_common_types.h	/^  RTPVideoHeaderH264 H264;$/;"	m	union:webrtc::RTPVideoTypeHeader
H264EncoderSpecificSettings	webrtc/config.cc	/^VideoEncoderConfig::H264EncoderSpecificSettings::H264EncoderSpecificSettings($/;"	f	class:webrtc::VideoEncoderConfig::H264EncoderSpecificSettings
H264EncoderSpecificSettings	webrtc/config.h	/^  class H264EncoderSpecificSettings : public EncoderSpecificSettings {$/;"	c	class:webrtc::VideoEncoderConfig
H264PacketizationTypes	webrtc/modules/include/module_common_types.h	/^enum H264PacketizationTypes {$/;"	g	namespace:webrtc
HALF_ANAL_BLOCKL	webrtc/modules/audio_processing/ns/defines.h	/^#define HALF_ANAL_BLOCKL /;"	d
HALF_ANAL_BLOCKL	webrtc/modules/audio_processing/ns/nsx_defines.h	/^#define HALF_ANAL_BLOCKL /;"	d
HALF_SUBFRAMELEN	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define HALF_SUBFRAMELEN /;"	d
HAPPY_TASK_COUNT	webrtc/base/task_unittest.cc	/^#define HAPPY_TASK_COUNT /;"	d	file:
HAR_CREDENTIALS	webrtc/base/httpcommon.h	/^enum HttpAuthResult { HAR_RESPONSE, HAR_IGNORE, HAR_CREDENTIALS, HAR_ERROR };$/;"	e	enum:rtc::HttpAuthResult
HAR_ERROR	webrtc/base/httpcommon.h	/^enum HttpAuthResult { HAR_RESPONSE, HAR_IGNORE, HAR_CREDENTIALS, HAR_ERROR };$/;"	e	enum:rtc::HttpAuthResult
HAR_IGNORE	webrtc/base/httpcommon.h	/^enum HttpAuthResult { HAR_RESPONSE, HAR_IGNORE, HAR_CREDENTIALS, HAR_ERROR };$/;"	e	enum:rtc::HttpAuthResult
HAR_RESPONSE	webrtc/base/httpcommon.h	/^enum HttpAuthResult { HAR_RESPONSE, HAR_IGNORE, HAR_CREDENTIALS, HAR_ERROR };$/;"	e	enum:rtc::HttpAuthResult
HAVE_DTLS_SRTP	webrtc/base/opensslstreamadapter.cc	/^#define HAVE_DTLS_SRTP$/;"	d	file:
HCS_FRESH	webrtc/base/httpclient.cc	/^  HCS_FRESH,  \/\/ In cache, may use$/;"	e	enum:rtc::__anon18::HttpCacheState	file:
HCS_NONE	webrtc/base/httpclient.cc	/^  HCS_NONE    \/\/ Not in cache$/;"	e	enum:rtc::__anon18::HttpCacheState	file:
HCS_STALE	webrtc/base/httpclient.cc	/^  HCS_STALE,  \/\/ In cache, must revalidate$/;"	e	enum:rtc::__anon18::HttpCacheState	file:
HC_AUTO	webrtc/base/httpcommon.h	/^  enum HeaderCombine { HC_YES, HC_NO, HC_AUTO, HC_REPLACE, HC_NEW };$/;"	e	enum:rtc::HttpData::HeaderCombine
HC_BAD_REQUEST	webrtc/base/httpcommon.h	/^  HC_BAD_REQUEST = 400,$/;"	e	enum:rtc::HttpCode
HC_FORBIDDEN	webrtc/base/httpcommon.h	/^  HC_FORBIDDEN = 403,$/;"	e	enum:rtc::HttpCode
HC_FOUND	webrtc/base/httpcommon.h	/^  HC_FOUND = 302,$/;"	e	enum:rtc::HttpCode
HC_GONE	webrtc/base/httpcommon.h	/^  HC_GONE = 410,$/;"	e	enum:rtc::HttpCode
HC_INTERNAL_SERVER_ERROR	webrtc/base/httpcommon.h	/^  HC_INTERNAL_SERVER_ERROR = 500,$/;"	e	enum:rtc::HttpCode
HC_MOVED_PERMANENTLY	webrtc/base/httpcommon.h	/^  HC_MOVED_PERMANENTLY = 301,$/;"	e	enum:rtc::HttpCode
HC_MOVED_TEMPORARILY	webrtc/base/httpcommon.h	/^  HC_MOVED_TEMPORARILY = 307,$/;"	e	enum:rtc::HttpCode
HC_MULTIPLE_CHOICES	webrtc/base/httpcommon.h	/^  HC_MULTIPLE_CHOICES = 300,$/;"	e	enum:rtc::HttpCode
HC_NEW	webrtc/base/httpcommon.h	/^  enum HeaderCombine { HC_YES, HC_NO, HC_AUTO, HC_REPLACE, HC_NEW };$/;"	e	enum:rtc::HttpData::HeaderCombine
HC_NO	webrtc/base/httpcommon.h	/^  enum HeaderCombine { HC_YES, HC_NO, HC_AUTO, HC_REPLACE, HC_NEW };$/;"	e	enum:rtc::HttpData::HeaderCombine
HC_NON_AUTHORITATIVE	webrtc/base/httpcommon.h	/^  HC_NON_AUTHORITATIVE = 203,$/;"	e	enum:rtc::HttpCode
HC_NOT_FOUND	webrtc/base/httpcommon.h	/^  HC_NOT_FOUND = 404,$/;"	e	enum:rtc::HttpCode
HC_NOT_IMPLEMENTED	webrtc/base/httpcommon.h	/^  HC_NOT_IMPLEMENTED = 501,$/;"	e	enum:rtc::HttpCode
HC_NOT_MODIFIED	webrtc/base/httpcommon.h	/^  HC_NOT_MODIFIED = 304,$/;"	e	enum:rtc::HttpCode
HC_NO_CONTENT	webrtc/base/httpcommon.h	/^  HC_NO_CONTENT = 204,$/;"	e	enum:rtc::HttpCode
HC_OK	webrtc/base/httpcommon.h	/^  HC_OK = 200,$/;"	e	enum:rtc::HttpCode
HC_PARTIAL_CONTENT	webrtc/base/httpcommon.h	/^  HC_PARTIAL_CONTENT = 206,$/;"	e	enum:rtc::HttpCode
HC_PROXY_AUTHENTICATION_REQUIRED	webrtc/base/httpcommon.h	/^  HC_PROXY_AUTHENTICATION_REQUIRED = 407,$/;"	e	enum:rtc::HttpCode
HC_REPLACE	webrtc/base/httpcommon.h	/^  enum HeaderCombine { HC_YES, HC_NO, HC_AUTO, HC_REPLACE, HC_NEW };$/;"	e	enum:rtc::HttpData::HeaderCombine
HC_SEE_OTHER	webrtc/base/httpcommon.h	/^  HC_SEE_OTHER = 303,$/;"	e	enum:rtc::HttpCode
HC_SERVICE_UNAVAILABLE	webrtc/base/httpcommon.h	/^  HC_SERVICE_UNAVAILABLE = 503,$/;"	e	enum:rtc::HttpCode
HC_UNAUTHORIZED	webrtc/base/httpcommon.h	/^  HC_UNAUTHORIZED = 401,$/;"	e	enum:rtc::HttpCode
HC_YES	webrtc/base/httpcommon.h	/^  enum HeaderCombine { HC_YES, HC_NO, HC_AUTO, HC_REPLACE, HC_NEW };$/;"	e	enum:rtc::HttpData::HeaderCombine
HEADER_SIZE	webrtc/modules/audio_coding/codecs/isac/main/source/bandwidth_estimator.h	/^#define HEADER_SIZE /;"	d
HEX	webrtc/base/stringencode.cc	/^static const char HEX[] = "0123456789abcdef";$/;"	m	namespace:rtc	file:
HE_AUTH	webrtc/base/httpcommon.h	/^  HE_AUTH,                \/\/ Proxy Authentication Required$/;"	e	enum:rtc::HttpError
HE_CACHE	webrtc/base/httpcommon.h	/^  HE_CACHE,               \/\/ Problem reading from cache$/;"	e	enum:rtc::HttpError
HE_CERTIFICATE_EXPIRED	webrtc/base/httpcommon.h	/^  HE_CERTIFICATE_EXPIRED, \/\/ During SSL negotiation$/;"	e	enum:rtc::HttpError
HE_CONNECT_FAILED	webrtc/base/httpcommon.h	/^  HE_CONNECT_FAILED,      \/\/ The socket failed to connect.$/;"	e	enum:rtc::HttpError
HE_DEFAULT	webrtc/base/httpcommon.h	/^  HE_DEFAULT$/;"	e	enum:rtc::HttpError
HE_DISCONNECTED	webrtc/base/httpcommon.h	/^  HE_DISCONNECTED,        \/\/ Connection closed unexpectedly$/;"	e	enum:rtc::HttpError
HE_NONE	webrtc/base/httpcommon.h	/^  HE_NONE,$/;"	e	enum:rtc::HttpError
HE_OPERATION_CANCELLED	webrtc/base/httpcommon.h	/^  HE_OPERATION_CANCELLED, \/\/ Connection aborted locally$/;"	e	enum:rtc::HttpError
HE_OVERFLOW	webrtc/base/httpcommon.h	/^  HE_OVERFLOW,            \/\/ Received too much data for internal buffers$/;"	e	enum:rtc::HttpError
HE_PROTOCOL	webrtc/base/httpcommon.h	/^  HE_PROTOCOL,            \/\/ Received non-valid HTTP data$/;"	e	enum:rtc::HttpError
HE_SHUTDOWN	webrtc/base/httpcommon.h	/^  HE_SHUTDOWN,            \/\/ Http object is being destroyed$/;"	e	enum:rtc::HttpError
HE_SOCKET_ERROR	webrtc/base/httpcommon.h	/^  HE_SOCKET_ERROR,        \/\/ An error occurred on a connected socket$/;"	e	enum:rtc::HttpError
HE_STREAM	webrtc/base/httpcommon.h	/^  HE_STREAM,              \/\/ Problem reading or writing to the document$/;"	e	enum:rtc::HttpError
HH_AGE	webrtc/base/httpcommon.h	/^  HH_AGE,$/;"	e	enum:rtc::HttpHeader
HH_CACHE_CONTROL	webrtc/base/httpcommon.h	/^  HH_CACHE_CONTROL,$/;"	e	enum:rtc::HttpHeader
HH_CONNECTION	webrtc/base/httpcommon.h	/^  HH_CONNECTION,$/;"	e	enum:rtc::HttpHeader
HH_CONTENT_DISPOSITION	webrtc/base/httpcommon.h	/^  HH_CONTENT_DISPOSITION,$/;"	e	enum:rtc::HttpHeader
HH_CONTENT_LENGTH	webrtc/base/httpcommon.h	/^  HH_CONTENT_LENGTH,$/;"	e	enum:rtc::HttpHeader
HH_CONTENT_RANGE	webrtc/base/httpcommon.h	/^  HH_CONTENT_RANGE,$/;"	e	enum:rtc::HttpHeader
HH_CONTENT_TYPE	webrtc/base/httpcommon.h	/^  HH_CONTENT_TYPE,$/;"	e	enum:rtc::HttpHeader
HH_COOKIE	webrtc/base/httpcommon.h	/^  HH_COOKIE,$/;"	e	enum:rtc::HttpHeader
HH_DATE	webrtc/base/httpcommon.h	/^  HH_DATE,$/;"	e	enum:rtc::HttpHeader
HH_ETAG	webrtc/base/httpcommon.h	/^  HH_ETAG,$/;"	e	enum:rtc::HttpHeader
HH_EXPIRES	webrtc/base/httpcommon.h	/^  HH_EXPIRES,$/;"	e	enum:rtc::HttpHeader
HH_HOST	webrtc/base/httpcommon.h	/^  HH_HOST,$/;"	e	enum:rtc::HttpHeader
HH_IF_MODIFIED_SINCE	webrtc/base/httpcommon.h	/^  HH_IF_MODIFIED_SINCE,$/;"	e	enum:rtc::HttpHeader
HH_IF_NONE_MATCH	webrtc/base/httpcommon.h	/^  HH_IF_NONE_MATCH,$/;"	e	enum:rtc::HttpHeader
HH_KEEP_ALIVE	webrtc/base/httpcommon.h	/^  HH_KEEP_ALIVE,$/;"	e	enum:rtc::HttpHeader
HH_LAST	webrtc/base/httpcommon.h	/^  HH_LAST = HH_WWW_AUTHENTICATE$/;"	e	enum:rtc::HttpHeader
HH_LAST_MODIFIED	webrtc/base/httpcommon.h	/^  HH_LAST_MODIFIED,$/;"	e	enum:rtc::HttpHeader
HH_LOCATION	webrtc/base/httpcommon.h	/^  HH_LOCATION,$/;"	e	enum:rtc::HttpHeader
HH_PROXY_AUTHENTICATE	webrtc/base/httpcommon.h	/^  HH_PROXY_AUTHENTICATE,$/;"	e	enum:rtc::HttpHeader
HH_PROXY_AUTHORIZATION	webrtc/base/httpcommon.h	/^  HH_PROXY_AUTHORIZATION,$/;"	e	enum:rtc::HttpHeader
HH_PROXY_CONNECTION	webrtc/base/httpcommon.h	/^  HH_PROXY_CONNECTION,$/;"	e	enum:rtc::HttpHeader
HH_RANGE	webrtc/base/httpcommon.h	/^  HH_RANGE,$/;"	e	enum:rtc::HttpHeader
HH_SET_COOKIE	webrtc/base/httpcommon.h	/^  HH_SET_COOKIE,$/;"	e	enum:rtc::HttpHeader
HH_TE	webrtc/base/httpcommon.h	/^  HH_TE,$/;"	e	enum:rtc::HttpHeader
HH_TRAILERS	webrtc/base/httpcommon.h	/^  HH_TRAILERS,$/;"	e	enum:rtc::HttpHeader
HH_TRANSFER_ENCODING	webrtc/base/httpcommon.h	/^  HH_TRANSFER_ENCODING,$/;"	e	enum:rtc::HttpHeader
HH_UPGRADE	webrtc/base/httpcommon.h	/^  HH_UPGRADE,$/;"	e	enum:rtc::HttpHeader
HH_USER_AGENT	webrtc/base/httpcommon.h	/^  HH_USER_AGENT,$/;"	e	enum:rtc::HttpHeader
HH_WWW_AUTHENTICATE	webrtc/base/httpcommon.h	/^  HH_WWW_AUTHENTICATE,$/;"	e	enum:rtc::HttpHeader
HINTERNET	webrtc/base/proxydetect.cc	/^typedef LPVOID HINTERNET;$/;"	t	file:
HIST_PAR_EST	webrtc/modules/audio_processing/ns/defines.h	/^#define HIST_PAR_EST /;"	d
HIST_PAR_EST	webrtc/modules/audio_processing/ns/nsx_defines.h	/^#define HIST_PAR_EST /;"	d
HM_CONNECT	webrtc/base/httpbase.h	/^enum HttpMode { HM_NONE, HM_CONNECT, HM_RECV, HM_SEND };$/;"	e	enum:rtc::HttpMode
HM_NONE	webrtc/base/httpbase.h	/^enum HttpMode { HM_NONE, HM_CONNECT, HM_RECV, HM_SEND };$/;"	e	enum:rtc::HttpMode
HM_RECV	webrtc/base/httpbase.h	/^enum HttpMode { HM_NONE, HM_CONNECT, HM_RECV, HM_SEND };$/;"	e	enum:rtc::HttpMode
HM_SEND	webrtc/base/httpbase.h	/^enum HttpMode { HM_NONE, HM_CONNECT, HM_RECV, HM_SEND };$/;"	e	enum:rtc::HttpMode
HPORDER	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define HPORDER /;"	d
HPstate	webrtc/modules/audio_processing/agc/legacy/digital_agc.h	/^  int16_t HPstate;$/;"	m	struct:__anon173
HPstates	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  double    HPstates[HPORDER];$/;"	m	struct:__anon126
HPstates1	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  double    HPstates1[HPORDER];$/;"	m	struct:__anon127
HPstates1_float	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  float    HPstates1_float[HPORDER];$/;"	m	struct:__anon127
HPstates2	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  double    HPstates2[HPORDER];$/;"	m	struct:__anon127
HPstates2_float	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  float    HPstates2_float[HPORDER];$/;"	m	struct:__anon127
HPstates_float	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  float    HPstates_float[HPORDER];$/;"	m	struct:__anon126
HTML_UNSAFE	webrtc/base/stringencode.cc	/^const unsigned char HTML_UNSAFE = 0x2; \/\/ "&'<>$/;"	m	namespace:rtc	file:
HTTP_DEFAULT_PORT	webrtc/base/httpcommon.h	/^const uint16_t HTTP_DEFAULT_PORT = 80;$/;"	m	namespace:rtc
HTTP_INVALID_CONNECTION_ID	webrtc/base/httpserver.h	/^const int HTTP_INVALID_CONNECTION_ID = 0;$/;"	m	namespace:rtc
HTTP_SECURE_PORT	webrtc/base/httpcommon.h	/^const uint16_t HTTP_SECURE_PORT = 443;$/;"	m	namespace:rtc
HVER_1_0	webrtc/base/httpcommon.h	/^  HVER_1_0, HVER_1_1, HVER_UNKNOWN,$/;"	e	enum:rtc::HttpVersion
HVER_1_1	webrtc/base/httpcommon.h	/^  HVER_1_0, HVER_1_1, HVER_UNKNOWN,$/;"	e	enum:rtc::HttpVersion
HVER_LAST	webrtc/base/httpcommon.h	/^  HVER_LAST = HVER_UNKNOWN$/;"	e	enum:rtc::HttpVersion
HVER_UNKNOWN	webrtc/base/httpcommon.h	/^  HVER_1_0, HVER_1_1, HVER_UNKNOWN,$/;"	e	enum:rtc::HttpVersion
HVS_NONE	webrtc/base/httpclient.cc	/^  HVS_NONE,$/;"	e	enum:rtc::__anon18::HttpValidatorStrength	file:
HVS_STRONG	webrtc/base/httpclient.cc	/^  HVS_STRONG$/;"	e	enum:rtc::__anon18::HttpValidatorStrength	file:
HVS_WEAK	webrtc/base/httpclient.cc	/^  HVS_WEAK,$/;"	e	enum:rtc::__anon18::HttpValidatorStrength	file:
HV_CONNECT	webrtc/base/httpcommon.h	/^  HV_GET, HV_POST, HV_PUT, HV_DELETE, HV_CONNECT, HV_HEAD,$/;"	e	enum:rtc::HttpVerb
HV_DELETE	webrtc/base/httpcommon.h	/^  HV_GET, HV_POST, HV_PUT, HV_DELETE, HV_CONNECT, HV_HEAD,$/;"	e	enum:rtc::HttpVerb
HV_GET	webrtc/base/httpcommon.h	/^  HV_GET, HV_POST, HV_PUT, HV_DELETE, HV_CONNECT, HV_HEAD,$/;"	e	enum:rtc::HttpVerb
HV_HEAD	webrtc/base/httpcommon.h	/^  HV_GET, HV_POST, HV_PUT, HV_DELETE, HV_CONNECT, HV_HEAD,$/;"	e	enum:rtc::HttpVerb
HV_LAST	webrtc/base/httpcommon.h	/^  HV_LAST = HV_HEAD$/;"	e	enum:rtc::HttpVerb
HV_POST	webrtc/base/httpcommon.h	/^  HV_GET, HV_POST, HV_PUT, HV_DELETE, HV_CONNECT, HV_HEAD,$/;"	e	enum:rtc::HttpVerb
HV_PUT	webrtc/base/httpcommon.h	/^  HV_GET, HV_POST, HV_PUT, HV_DELETE, HV_CONNECT, HV_HEAD,$/;"	e	enum:rtc::HttpVerb
Handle	webrtc/modules/audio_processing/gain_control_impl.cc	/^typedef void Handle;$/;"	t	namespace:webrtc	file:
HandleAuth	webrtc/base/socketadapters.cc	/^void AsyncSocksProxyServerSocket::HandleAuth(ByteBufferReader* request) {$/;"	f	class:rtc::AsyncSocksProxyServerSocket
HandleClosed	webrtc/base/win32socketserver.cc	/^bool Win32Socket::HandleClosed(int close_error) {$/;"	f	class:rtc::Win32Socket
HandleConnect	webrtc/base/socketadapters.cc	/^void AsyncSocksProxyServerSocket::HandleConnect(ByteBufferReader* request) {$/;"	f	class:rtc::AsyncSocksProxyServerSocket
HandleConnectReply	webrtc/base/natsocketfactory.cc	/^  void HandleConnectReply() {$/;"	f	class:rtc::NATSocket	file:
HandleConnection	webrtc/base/httpserver.cc	/^HttpServer::HandleConnection(StreamInterface* stream) {$/;"	f	class:rtc::HttpServer
HandleHello	webrtc/base/socketadapters.cc	/^void AsyncSocksProxyServerSocket::HandleHello(ByteBufferReader* request) {$/;"	f	class:rtc::AsyncSocksProxyServerSocket
HandleIncomingConnection	webrtc/base/asynctcpsocket.cc	/^void AsyncTCPSocket::HandleIncomingConnection(AsyncSocket* socket) {$/;"	f	class:rtc::AsyncTCPSocket
HandleMessage	webrtc/modules/audio_processing/test/aec_dump_based_simulator.cc	/^void AecDumpBasedSimulator::HandleMessage($/;"	f	class:webrtc::test::AecDumpBasedSimulator
HandleMessage	webrtc/modules/audio_processing/test/aec_dump_based_simulator.cc	/^void AecDumpBasedSimulator::HandleMessage(const webrtc::audioproc::Init& msg) {$/;"	f	class:webrtc::test::AecDumpBasedSimulator
HandleProcessReverseStreamCall	webrtc/modules/audio_processing/test/wav_based_simulator.cc	/^bool WavBasedSimulator::HandleProcessReverseStreamCall() {$/;"	f	class:webrtc::test::WavBasedSimulator
HandleProcessStreamCall	webrtc/modules/audio_processing/test/wav_based_simulator.cc	/^bool WavBasedSimulator::HandleProcessStreamCall() {$/;"	f	class:webrtc::test::WavBasedSimulator
HandleStreamClose	webrtc/base/httpbase.cc	/^HttpError HttpBase::HandleStreamClose(int error) {$/;"	f	class:rtc::HttpBase
HandlerMap	webrtc/base/physicalsocketserver.cc	/^  typedef std::map<int, void (*)(int)> HandlerMap;$/;"	t	class:rtc::PosixSignalDispatcher	file:
Hanning	webrtc/common_audio/window_generator.cc	/^void WindowGenerator::Hanning(int length, float* window) {$/;"	f	class:webrtc::WindowGenerator
HappyTask	webrtc/base/task_unittest.cc	/^  explicit HappyTask(TaskParent *parent) : IdTimeoutTask(parent) {$/;"	f	class:rtc::HappyTask
HappyTask	webrtc/base/task_unittest.cc	/^class HappyTask : public IdTimeoutTask {$/;"	c	namespace:rtc	file:
HardRestoration	webrtc/modules/audio_processing/transient/transient_suppressor.cc	/^void TransientSuppressor::HardRestoration(float* spectral_mean) {$/;"	f	class:webrtc::TransientSuppressor
HasDataAndSize	webrtc/base/type_traits.h	/^class HasDataAndSize {$/;"	c	namespace:rtc
HasError	webrtc/base/task.h	/^  bool HasError() const { return (GetState() == STATE_ERROR); }$/;"	f	class:rtc::Task
HasExpired	webrtc/base/rtccertificate.cc	/^bool RTCCertificate::HasExpired(uint64_t now) const {$/;"	f	class:rtc::RTCCertificate
HasExpiredSeconds	webrtc/base/rtccertificate_unittest.cc	/^  bool HasExpiredSeconds(const scoped_refptr<RTCCertificate>& cert,$/;"	f	class:rtc::RTCCertificateTest
HasHandlers	webrtc/base/physicalsocketserver.cc	/^  bool HasHandlers() {$/;"	f	class:rtc::PosixSignalDispatcher
HasIPv6Enabled	webrtc/base/nethelpers.cc	/^bool HasIPv6Enabled() {$/;"	f	namespace:rtc
HasKey	webrtc/base/win32regkey.cc	/^bool RegKey::HasKey(const wchar_t* full_key_name) {$/;"	f	class:rtc::RegKey
HasOneRef	webrtc/base/refcountedobject.h	/^  virtual bool HasOneRef() const {$/;"	f	class:rtc::RefCountedObject
HasRefs	webrtc/base/weak_ptr.h	/^  bool HasRefs() const { return flag_.get() && !flag_->HasOneRef(); }$/;"	f	class:rtc::internal::WeakReferenceOwner
HasResource	webrtc/base/diskcache.cc	/^bool DiskCache::HasResource(const std::string& id) const {$/;"	f	class:rtc::DiskCache
HasResourceStream	webrtc/base/diskcache.cc	/^bool DiskCache::HasResourceStream(const std::string& id, size_t index) const {$/;"	f	class:rtc::DiskCache
HasSubkey	webrtc/base/win32regkey.cc	/^bool RegKey::HasSubkey(const wchar_t* key_name) const {$/;"	f	class:rtc::RegKey
HasValue	webrtc/base/win32regkey.cc	/^bool RegKey::HasValue(const TCHAR* value_name) const {$/;"	f	class:rtc::RegKey
HasValue	webrtc/base/win32regkey.cc	/^bool RegKey::HasValue(const wchar_t* full_key_name, const wchar_t* value_name) {$/;"	f	class:rtc::RegKey
HasWeakPtrs	webrtc/base/weak_ptr.h	/^  bool HasWeakPtrs() const {$/;"	f	class:rtc::WeakPtrFactory
Hash	webrtc/base/socketaddress.cc	/^size_t SocketAddress::Hash() const {$/;"	f	class:rtc::SocketAddress
Hash	webrtc/base/socketaddresspair.cc	/^size_t SocketAddressPair::Hash() const {$/;"	f	class:rtc::SocketAddressPair
HashIP	webrtc/base/ipaddress.cc	/^size_t HashIP(const IPAddress& ip) {$/;"	f	namespace:rtc
HaveDtls	webrtc/base/opensslstreamadapter.cc	/^bool OpenSSLStreamAdapter::HaveDtls() {$/;"	f	class:rtc::OpenSSLStreamAdapter
HaveDtls	webrtc/base/sslstreamadapter.cc	/^bool SSLStreamAdapter::HaveDtls() {$/;"	f	class:rtc::SSLStreamAdapter
HaveDtlsSrtp	webrtc/base/opensslstreamadapter.cc	/^bool OpenSSLStreamAdapter::HaveDtlsSrtp() {$/;"	f	class:rtc::OpenSSLStreamAdapter
HaveDtlsSrtp	webrtc/base/sslstreamadapter.cc	/^bool SSLStreamAdapter::HaveDtlsSrtp() {$/;"	f	class:rtc::SSLStreamAdapter
HaveExporter	webrtc/base/opensslstreamadapter.cc	/^bool OpenSSLStreamAdapter::HaveExporter() {$/;"	f	class:rtc::OpenSSLStreamAdapter
HaveExporter	webrtc/base/sslstreamadapter.cc	/^bool SSLStreamAdapter::HaveExporter() {$/;"	f	class:rtc::SSLStreamAdapter
HeaderCombine	webrtc/base/httpcommon.h	/^  enum HeaderCombine { HC_YES, HC_NO, HC_AUTO, HC_REPLACE, HC_NEW };$/;"	g	struct:rtc::HttpData
HeaderMap	webrtc/base/httpcommon.h	/^  typedef std::multimap<std::string, std::string, iless> HeaderMap;$/;"	t	struct:rtc::HttpData
Helper	webrtc/base/callback.h	/^  struct Helper : RefCountInterface {$/;"	s	class:rtc::Callback0
Helper	webrtc/base/callback.h	/^  struct Helper : RefCountInterface {$/;"	s	class:rtc::Callback1
Helper	webrtc/base/callback.h	/^  struct Helper : RefCountInterface {$/;"	s	class:rtc::Callback2
Helper	webrtc/base/callback.h	/^  struct Helper : RefCountInterface {$/;"	s	class:rtc::Callback3
Helper	webrtc/base/callback.h	/^  struct Helper : RefCountInterface {$/;"	s	class:rtc::Callback4
Helper	webrtc/base/callback.h	/^  struct Helper : RefCountInterface {$/;"	s	class:rtc::Callback5
HelperImpl	webrtc/base/callback.h	/^    explicit HelperImpl(const T& functor) : functor_(functor) {}$/;"	f	struct:rtc::Callback0::HelperImpl
HelperImpl	webrtc/base/callback.h	/^    explicit HelperImpl(const T& functor) : functor_(functor) {}$/;"	f	struct:rtc::Callback1::HelperImpl
HelperImpl	webrtc/base/callback.h	/^    explicit HelperImpl(const T& functor) : functor_(functor) {}$/;"	f	struct:rtc::Callback2::HelperImpl
HelperImpl	webrtc/base/callback.h	/^    explicit HelperImpl(const T& functor) : functor_(functor) {}$/;"	f	struct:rtc::Callback3::HelperImpl
HelperImpl	webrtc/base/callback.h	/^    explicit HelperImpl(const T& functor) : functor_(functor) {}$/;"	f	struct:rtc::Callback4::HelperImpl
HelperImpl	webrtc/base/callback.h	/^    explicit HelperImpl(const T& functor) : functor_(functor) {}$/;"	f	struct:rtc::Callback5::HelperImpl
HelperImpl	webrtc/base/callback.h	/^  template <class T> struct HelperImpl : Helper {$/;"	s	class:rtc::Callback0
HelperImpl	webrtc/base/callback.h	/^  template <class T> struct HelperImpl : Helper {$/;"	s	class:rtc::Callback1
HelperImpl	webrtc/base/callback.h	/^  template <class T> struct HelperImpl : Helper {$/;"	s	class:rtc::Callback2
HelperImpl	webrtc/base/callback.h	/^  template <class T> struct HelperImpl : Helper {$/;"	s	class:rtc::Callback3
HelperImpl	webrtc/base/callback.h	/^  template <class T> struct HelperImpl : Helper {$/;"	s	class:rtc::Callback4
HelperImpl	webrtc/base/callback.h	/^  template <class T> struct HelperImpl : Helper {$/;"	s	class:rtc::Callback5
HexEncodeTest	webrtc/base/stringencode_unittest.cc	/^  HexEncodeTest() : enc_res_(0), dec_res_(0) {$/;"	f	class:rtc::HexEncodeTest
HexEncodeTest	webrtc/base/stringencode_unittest.cc	/^class HexEncodeTest : public testing::Test {$/;"	c	namespace:rtc	file:
HexPairValue	webrtc/base/urlencode.cc	/^static int HexPairValue(const char * code) {$/;"	f	file:
HighPassFilter	webrtc/common_audio/vad/vad_filterbank.c	/^static void HighPassFilter(const int16_t* data_in, size_t data_length,$/;"	f	file:
HighPassFilter	webrtc/modules/audio_processing/include/audio_processing.h	/^class HighPassFilter {$/;"	c	namespace:webrtc
HighPassFilterImpl	webrtc/modules/audio_processing/high_pass_filter_impl.cc	/^HighPassFilterImpl::HighPassFilterImpl(rtc::CriticalSection* crit)$/;"	f	class:webrtc::HighPassFilterImpl
HighPassFilterImpl	webrtc/modules/audio_processing/high_pass_filter_impl.h	/^class HighPassFilterImpl : public HighPassFilter {$/;"	c	namespace:webrtc
HighestBits	webrtc/base/bitbuffer.cc	/^uint8_t HighestBits(uint8_t byte, size_t bit_count) {$/;"	f	namespace:__anon6
HighestByte	webrtc/base/bitbuffer.cc	/^uint8_t HighestByte(uint64_t val) {$/;"	f	namespace:__anon6
HistogramAdd	webrtc/system_wrappers/source/metrics_default.cc	/^void HistogramAdd(Histogram* histogram_pointer, int sample) {$/;"	f	namespace:webrtc::metrics
HistogramBasedValidation	webrtc/modules/audio_processing/utility/delay_estimator.cc	/^static int HistogramBasedValidation(const BinaryDelayEstimator* self,$/;"	f	file:
HistogramFactoryGetCounts	webrtc/system_wrappers/source/metrics_default.cc	/^Histogram* HistogramFactoryGetCounts(const std::string& name,$/;"	f	namespace:webrtc::metrics
HistogramFactoryGetEnumeration	webrtc/system_wrappers/source/metrics_default.cc	/^Histogram* HistogramFactoryGetEnumeration(const std::string& name,$/;"	f	namespace:webrtc::metrics
HostAsSensitiveURIString	webrtc/base/socketaddress.cc	/^std::string SocketAddress::HostAsSensitiveURIString() const {$/;"	f	class:rtc::SocketAddress
HostAsURIString	webrtc/base/socketaddress.cc	/^std::string SocketAddress::HostAsURIString() const {$/;"	f	class:rtc::SocketAddress
HostToNetwork16	webrtc/base/byteorder.h	/^inline uint16_t HostToNetwork16(uint16_t n) {$/;"	f	namespace:rtc
HostToNetwork32	webrtc/base/byteorder.h	/^inline uint32_t HostToNetwork32(uint32_t n) {$/;"	f	namespace:rtc
HostToNetwork64	webrtc/base/byteorder.h	/^inline uint64_t HostToNetwork64(uint64_t n) {$/;"	f	namespace:rtc
HttpAddress	webrtc/base/httpcommon.cc	/^std::string HttpAddress(const SocketAddress& address, bool secure) {$/;"	f	namespace:rtc
HttpAttribute	webrtc/base/httpcommon.h	/^typedef std::pair<std::string, std::string> HttpAttribute;$/;"	t	namespace:rtc
HttpAttributeList	webrtc/base/httpcommon.h	/^typedef std::vector<HttpAttribute> HttpAttributeList;$/;"	t	namespace:rtc
HttpAuthContext	webrtc/base/httpcommon.h	/^  HttpAuthContext(const std::string& auth) : auth_method(auth) { }$/;"	f	struct:rtc::HttpAuthContext
HttpAuthContext	webrtc/base/httpcommon.h	/^struct HttpAuthContext {$/;"	s	namespace:rtc
HttpAuthResult	webrtc/base/httpcommon.h	/^enum HttpAuthResult { HAR_RESPONSE, HAR_IGNORE, HAR_CREDENTIALS, HAR_ERROR };$/;"	g	namespace:rtc
HttpAuthenticate	webrtc/base/httpcommon.cc	/^HttpAuthResult HttpAuthenticate($/;"	f	namespace:rtc
HttpBase	webrtc/base/httpbase.cc	/^HttpBase::HttpBase() : mode_(HM_NONE), data_(NULL), notify_(NULL),$/;"	f	class:rtc::HttpBase
HttpBase	webrtc/base/httpbase.h	/^class HttpBase$/;"	c	namespace:rtc
HttpBaseTest	webrtc/base/httpbase_unittest.cc	/^  HttpBaseTest() : mem(NULL), obtain_stream(false), http_stream(NULL) { }$/;"	f	class:rtc::HttpBaseTest
HttpBaseTest	webrtc/base/httpbase_unittest.cc	/^class HttpBaseTest : public testing::Test, public IHttpNotify {$/;"	c	namespace:rtc	file:
HttpCacheState	webrtc/base/httpclient.cc	/^enum HttpCacheState {$/;"	g	namespace:rtc::__anon18	file:
HttpClient	webrtc/base/httpclient.cc	/^HttpClient::HttpClient(const std::string& agent, StreamPool* pool,$/;"	f	class:rtc::HttpClient
HttpClient	webrtc/base/httpclient.h	/^class HttpClient : private IHttpNotify, public sigslot::has_slots<> {$/;"	c	namespace:rtc
HttpClientDefault	webrtc/base/httpclient.cc	/^HttpClientDefault::HttpClientDefault(SocketFactory* factory,$/;"	f	class:rtc::HttpClientDefault
HttpClientDefault	webrtc/base/httpclient.h	/^class HttpClientDefault : public ReuseSocketPool, public HttpClient {$/;"	c	namespace:rtc
HttpCode	webrtc/base/httpcommon.h	/^enum HttpCode {$/;"	g	namespace:rtc
HttpCodeHasBody	webrtc/base/httpcommon.cc	/^bool HttpCodeHasBody(uint32_t code) {$/;"	f	namespace:rtc
HttpCodeIsCacheable	webrtc/base/httpcommon.cc	/^bool HttpCodeIsCacheable(uint32_t code) {$/;"	f	namespace:rtc
HttpCodeIsClientError	webrtc/base/httpcommon.h	/^inline bool HttpCodeIsClientError(uint32_t code) {$/;"	f	namespace:rtc
HttpCodeIsInformational	webrtc/base/httpcommon.h	/^inline bool HttpCodeIsInformational(uint32_t code) {$/;"	f	namespace:rtc
HttpCodeIsRedirection	webrtc/base/httpcommon.h	/^inline bool HttpCodeIsRedirection(uint32_t code) {$/;"	f	namespace:rtc
HttpCodeIsServerError	webrtc/base/httpcommon.h	/^inline bool HttpCodeIsServerError(uint32_t code) {$/;"	f	namespace:rtc
HttpCodeIsSuccessful	webrtc/base/httpcommon.h	/^inline bool HttpCodeIsSuccessful(uint32_t code) {$/;"	f	namespace:rtc
HttpComposeAttributes	webrtc/base/httpcommon.cc	/^void HttpComposeAttributes(const HttpAttributeList& attributes, char separator,$/;"	f	namespace:rtc
HttpData	webrtc/base/httpcommon.cc	/^HttpData::HttpData() : version(HVER_1_1) {$/;"	f	class:rtc::HttpData
HttpData	webrtc/base/httpcommon.h	/^struct HttpData {$/;"	s	namespace:rtc
HttpDateToSeconds	webrtc/base/httpcommon.cc	/^bool HttpDateToSeconds(const std::string& date, time_t* seconds) {$/;"	f	namespace:rtc
HttpDefaultPort	webrtc/base/httpcommon.h	/^inline uint16_t HttpDefaultPort(bool secure) {$/;"	f	namespace:rtc
HttpError	webrtc/base/httpcommon.h	/^enum HttpError {$/;"	g	namespace:rtc
HttpErrorType	webrtc/base/httpclient.h	/^typedef HttpError HttpErrorType;$/;"	t	namespace:rtc
HttpErrorType	webrtc/base/httpclient.h	/^typedef int HttpErrorType;$/;"	t	namespace:rtc
HttpGetCacheState	webrtc/base/httpclient.cc	/^HttpCacheState HttpGetCacheState(const HttpTransaction& t) {$/;"	f	namespace:rtc::__anon18
HttpHasAttribute	webrtc/base/httpcommon.cc	/^bool HttpHasAttribute(const HttpAttributeList& attributes,$/;"	f	namespace:rtc
HttpHasNthAttribute	webrtc/base/httpcommon.cc	/^bool HttpHasNthAttribute(HttpAttributeList& attributes,$/;"	f	namespace:rtc
HttpHeader	webrtc/base/httpcommon.h	/^enum HttpHeader {$/;"	g	namespace:rtc
HttpHeaderIsCollapsible	webrtc/base/httpcommon.cc	/^bool HttpHeaderIsCollapsible(HttpHeader header) {$/;"	f	namespace:rtc
HttpHeaderIsEndToEnd	webrtc/base/httpcommon.cc	/^bool HttpHeaderIsEndToEnd(HttpHeader header) {$/;"	f	namespace:rtc
HttpListenServer	webrtc/base/httpserver.cc	/^HttpListenServer::HttpListenServer() {$/;"	f	class:rtc::HttpListenServer
HttpListenServer	webrtc/base/httpserver.h	/^class HttpListenServer : public HttpServer, public sigslot::has_slots<> {$/;"	c	namespace:rtc
HttpMode	webrtc/base/httpbase.h	/^enum HttpMode { HM_NONE, HM_CONNECT, HM_RECV, HM_SEND };$/;"	g	namespace:rtc
HttpMonitor	webrtc/base/httprequest.cc	/^HttpMonitor::HttpMonitor(SocketServer *ss) {$/;"	f	class:HttpMonitor
HttpMonitor	webrtc/base/httprequest.h	/^class HttpMonitor : public sigslot::has_slots<> {$/;"	c	namespace:rtc
HttpParseAttributes	webrtc/base/httpcommon.cc	/^void HttpParseAttributes(const char * data, size_t len,$/;"	f	namespace:rtc
HttpParser	webrtc/base/httpbase.cc	/^HttpParser::HttpParser() {$/;"	f	class:rtc::HttpParser
HttpParser	webrtc/base/httpbase.h	/^class HttpParser {$/;"	c	namespace:rtc
HttpReadCacheHeaders	webrtc/base/httpclient.cc	/^bool HttpReadCacheHeaders(StreamInterface* input, HttpResponseData* response,$/;"	f	namespace:rtc
HttpRequest	webrtc/base/httprequest.cc	/^HttpRequest::HttpRequest(const std::string& user_agent)$/;"	f	class:HttpRequest
HttpRequest	webrtc/base/httprequest.h	/^class HttpRequest {$/;"	c	namespace:rtc
HttpRequestData	webrtc/base/httpcommon.h	/^  HttpRequestData() : verb(HV_GET) { }$/;"	f	struct:rtc::HttpRequestData
HttpRequestData	webrtc/base/httpcommon.h	/^struct HttpRequestData : public HttpData {$/;"	s	namespace:rtc
HttpRequestValidatorLevel	webrtc/base/httpclient.cc	/^HttpRequestValidatorLevel(const HttpRequestData& request) {$/;"	f	namespace:rtc::__anon18
HttpResponseData	webrtc/base/httpcommon.h	/^  HttpResponseData() : scode(HC_INTERNAL_SERVER_ERROR) { }$/;"	f	struct:rtc::HttpResponseData
HttpResponseData	webrtc/base/httpcommon.h	/^struct HttpResponseData : public HttpData {$/;"	s	namespace:rtc
HttpResponseValidatorLevel	webrtc/base/httpclient.cc	/^HttpResponseValidatorLevel(const HttpResponseData& response) {$/;"	f	namespace:rtc::__anon18
HttpServer	webrtc/base/httpserver.cc	/^HttpServer::HttpServer() : next_connection_id_(1), closing_(false) {$/;"	f	class:rtc::HttpServer
HttpServer	webrtc/base/httpserver.h	/^class HttpServer {$/;"	c	namespace:rtc
HttpServerMonitor	webrtc/base/httpserver_unittest.cc	/^    HttpServerMonitor(HttpServer* server)$/;"	f	struct:rtc::__anon20::HttpServerMonitor
HttpServerMonitor	webrtc/base/httpserver_unittest.cc	/^  struct HttpServerMonitor : public sigslot::has_slots<> {$/;"	s	namespace:rtc::__anon20	file:
HttpServerTransaction	webrtc/base/httpserver.h	/^  HttpServerTransaction(int id) : connection_id_(id) { }$/;"	f	struct:rtc::HttpServerTransaction
HttpServerTransaction	webrtc/base/httpserver.h	/^struct HttpServerTransaction : public HttpTransaction {$/;"	s	namespace:rtc
HttpShouldCache	webrtc/base/httpclient.cc	/^bool HttpShouldCache(const HttpTransaction& t) {$/;"	f	namespace:rtc::__anon18
HttpShouldKeepAlive	webrtc/base/httpcommon.cc	/^bool HttpShouldKeepAlive(const HttpData& data) {$/;"	f	namespace:rtc
HttpStringToUInt	webrtc/base/httpclient.cc	/^bool HttpStringToUInt(const std::string& str, size_t* val) {$/;"	f	namespace:rtc::__anon18
HttpTransaction	webrtc/base/httpcommon.h	/^struct HttpTransaction {$/;"	s	namespace:rtc
HttpValidatorStrength	webrtc/base/httpclient.cc	/^enum HttpValidatorStrength {$/;"	g	namespace:rtc::__anon18	file:
HttpVerb	webrtc/base/httpcommon.h	/^enum HttpVerb {$/;"	g	namespace:rtc
HttpVersion	webrtc/base/httpcommon.h	/^enum HttpVersion {$/;"	g	namespace:rtc
HttpWriteCacheHeaders	webrtc/base/httpclient.cc	/^bool HttpWriteCacheHeaders(const HttpResponseData* response,$/;"	f	namespace:rtc
I0	webrtc/common_audio/window_generator.cc	/^complex<float> I0(complex<float> x) {$/;"	f	namespace:__anon115
ICMP6_CREATE_FUNC	webrtc/base/winping.cc	/^const char * const ICMP6_CREATE_FUNC = "Icmp6CreateFile";$/;"	m	namespace:rtc	file:
ICMP6_SEND_FUNC	webrtc/base/winping.cc	/^const char * const ICMP6_SEND_FUNC = "Icmp6SendEcho2";$/;"	m	namespace:rtc	file:
ICMPV6_ECHO_REPLY	webrtc/base/winping.cc	/^} ICMPV6_ECHO_REPLY, *PICMPV6_ECHO_REPLY;$/;"	t	namespace:rtc	typeref:struct:rtc::icmpv6_echo_reply_lh	file:
ICMP_CLOSE_FUNC	webrtc/base/winping.cc	/^const char * const ICMP_CLOSE_FUNC = "IcmpCloseHandle";$/;"	m	namespace:rtc	file:
ICMP_CREATE_FUNC	webrtc/base/winping.cc	/^const char * const ICMP_CREATE_FUNC = "IcmpCreateFile";$/;"	m	namespace:rtc	file:
ICMP_DLL_NAME	webrtc/base/winping.cc	/^const char * const ICMP_DLL_NAME = "Iphlpapi.dll";$/;"	m	namespace:rtc	file:
ICMP_ECHO_REPLY	webrtc/base/winping.cc	/^} ICMP_ECHO_REPLY, * PICMP_ECHO_REPLY;$/;"	t	namespace:rtc	typeref:struct:rtc::icmp_echo_reply	file:
ICMP_HEADER_SIZE	webrtc/base/physicalsocketserver.cc	/^static const int ICMP_HEADER_SIZE = 8u;$/;"	m	namespace:rtc	file:
ICMP_HEADER_SIZE	webrtc/base/win32socketserver.cc	/^static const int ICMP_HEADER_SIZE = 8u;$/;"	m	namespace:rtc	file:
ICMP_PING_TIMEOUT_MILLIS	webrtc/base/physicalsocketserver.cc	/^static const int ICMP_PING_TIMEOUT_MILLIS = 10000u;$/;"	m	namespace:rtc	file:
ICMP_PING_TIMEOUT_MILLIS	webrtc/base/win32socketserver.cc	/^static const int ICMP_PING_TIMEOUT_MILLIS = 10000u;$/;"	m	namespace:rtc	file:
ICMP_SEND_FUNC	webrtc/base/winping.cc	/^const char * const ICMP_SEND_FUNC = "IcmpSendEcho";$/;"	m	namespace:rtc	file:
ID	webrtc/common_audio/wav_header.cc	/^  uint32_t ID;$/;"	m	struct:webrtc::__anon112::ChunkHeader	file:
IFChannelBuffer	webrtc/common_audio/channel_buffer.cc	/^IFChannelBuffer::IFChannelBuffer(size_t num_frames,$/;"	f	class:webrtc::IFChannelBuffer
IFChannelBuffer	webrtc/common_audio/channel_buffer.h	/^class IFChannelBuffer {$/;"	c	namespace:webrtc
IFFT	webrtc/modules/audio_processing/ns/ns_core.c	/^static void IFFT(NoiseSuppressionC* self,$/;"	f	file:
IHttpNotify	webrtc/base/httpbase.h	/^class IHttpNotify {$/;"	c	namespace:rtc
IN6_IFF_ANYCAST	webrtc/base/macifaddrs_converter.cc	/^#define IN6_IFF_ANYCAST /;"	d	file:
IN6_IFF_DEPRECATED	webrtc/base/macifaddrs_converter.cc	/^#define IN6_IFF_DEPRECATED /;"	d	file:
IN6_IFF_DETACHED	webrtc/base/macifaddrs_converter.cc	/^#define IN6_IFF_DETACHED /;"	d	file:
IN6_IFF_DUPLICATED	webrtc/base/macifaddrs_converter.cc	/^#define IN6_IFF_DUPLICATED /;"	d	file:
IN6_IFF_TEMPORARY	webrtc/base/macifaddrs_converter.cc	/^#define IN6_IFF_TEMPORARY /;"	d	file:
IN6_IFF_TENTATIVE	webrtc/base/macifaddrs_converter.cc	/^#define IN6_IFF_TENTATIVE /;"	d	file:
INCOMPATIBLE_CIPHERSUITE	webrtc/base/sslstreamadapter.h	/^enum class SSLHandshakeError { UNKNOWN, INCOMPATIBLE_CIPHERSUITE, MAX_VALUE };$/;"	m	class:rtc::SSLHandshakeError
INFO	webrtc/base/logging.h	/^  INFO = LS_INFO,$/;"	e	enum:rtc::LoggingSeverity
INITIAL_FRAMESAMPLES	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define INITIAL_FRAMESAMPLES /;"	d
INIT_BN_EST_SWB	webrtc/modules/audio_coding/codecs/isac/main/source/bandwidth_estimator.h	/^#define INIT_BN_EST_SWB /;"	d
INIT_BN_EST_WB	webrtc/modules/audio_coding/codecs/isac/main/source/bandwidth_estimator.h	/^#define INIT_BN_EST_WB /;"	d
INIT_BURST_LEN	webrtc/modules/audio_coding/codecs/isac/main/source/bandwidth_estimator.h	/^#define INIT_BURST_LEN /;"	d
INIT_FRAME_LEN_SWB	webrtc/modules/audio_coding/codecs/isac/main/source/bandwidth_estimator.h	/^#define INIT_FRAME_LEN_SWB /;"	d
INIT_FRAME_LEN_WB	webrtc/modules/audio_coding/codecs/isac/main/source/bandwidth_estimator.h	/^#define INIT_FRAME_LEN_WB /;"	d
INIT_HDR_RATE_SWB	webrtc/modules/audio_coding/codecs/isac/main/source/bandwidth_estimator.h	/^#define INIT_HDR_RATE_SWB /;"	d
INIT_HDR_RATE_WB	webrtc/modules/audio_coding/codecs/isac/main/source/bandwidth_estimator.h	/^#define INIT_HDR_RATE_WB /;"	d
INIT_RATE_SWB	webrtc/modules/audio_coding/codecs/isac/main/source/bandwidth_estimator.h	/^#define INIT_RATE_SWB /;"	d
INIT_RATE_WB	webrtc/modules/audio_coding/codecs/isac/main/source/bandwidth_estimator.h	/^#define INIT_RATE_WB /;"	d
INLABUF1	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  double    INLABUF1[QLOOKAHEAD];$/;"	m	struct:__anon126
INLABUF1_float	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  float    INLABUF1_float[QLOOKAHEAD];$/;"	m	struct:__anon126
INLABUF2	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  double    INLABUF2[QLOOKAHEAD];$/;"	m	struct:__anon126
INLABUF2_float	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  float    INLABUF2_float[QLOOKAHEAD];$/;"	m	struct:__anon126
INSTAT1	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  double    INSTAT1[2*(QORDER-1)];$/;"	m	struct:__anon126
INSTAT1_float	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  float    INSTAT1_float[2*(QORDER-1)];$/;"	m	struct:__anon126
INSTAT2	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  double    INSTAT2[2*(QORDER-1)];$/;"	m	struct:__anon126
INSTAT2_float	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  float    INSTAT2_float[2*(QORDER-1)];$/;"	m	struct:__anon126
INSTATLA1	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  double    INSTATLA1[2*(QORDER-1)];$/;"	m	struct:__anon126
INSTATLA1_float	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  float    INSTATLA1_float[2*(QORDER-1)];$/;"	m	struct:__anon126
INSTATLA2	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  double    INSTATLA2[2*(QORDER-1)];$/;"	m	struct:__anon126
INSTATLA2_float	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  float    INSTATLA2_float[2*(QORDER-1)];$/;"	m	struct:__anon126
INT	webrtc/base/flags.h	/^  enum Type { BOOL, INT, FLOAT, STRING };$/;"	e	enum:rtc::Flag::Type
INTERNAL_DECLARE_SET_TRACE_VALUE	webrtc/base/trace_event.h	/^#define INTERNAL_DECLARE_SET_TRACE_VALUE(/;"	d
INTERNAL_DECLARE_SET_TRACE_VALUE	webrtc/base/trace_event.h	/^#undef INTERNAL_DECLARE_SET_TRACE_VALUE$/;"	d
INTERNAL_DECLARE_SET_TRACE_VALUE_INT	webrtc/base/trace_event.h	/^#define INTERNAL_DECLARE_SET_TRACE_VALUE_INT(/;"	d
INTERNAL_DECLARE_SET_TRACE_VALUE_INT	webrtc/base/trace_event.h	/^#undef INTERNAL_DECLARE_SET_TRACE_VALUE_INT$/;"	d
INTERNAL_TRACE_EVENT_ADD	webrtc/base/trace_event.h	/^#define INTERNAL_TRACE_EVENT_ADD(/;"	d
INTERNAL_TRACE_EVENT_ADD_SCOPED	webrtc/base/trace_event.h	/^#define INTERNAL_TRACE_EVENT_ADD_SCOPED(/;"	d
INTERNAL_TRACE_EVENT_ADD_WITH_ID	webrtc/base/trace_event.h	/^#define INTERNAL_TRACE_EVENT_ADD_WITH_ID(/;"	d
INTERNAL_TRACE_EVENT_GET_CATEGORY_INFO	webrtc/base/trace_event.h	/^#define INTERNAL_TRACE_EVENT_GET_CATEGORY_INFO(/;"	d
INTERNAL_TRACE_EVENT_UID	webrtc/base/trace_event.h	/^#define INTERNAL_TRACE_EVENT_UID(/;"	d
INTERNAL_TRACE_EVENT_UID2	webrtc/base/trace_event.h	/^#define INTERNAL_TRACE_EVENT_UID2(/;"	d
INTERNAL_TRACE_EVENT_UID3	webrtc/base/trace_event.h	/^#define INTERNAL_TRACE_EVENT_UID3(/;"	d
INVALID_LENGTH	webrtc/base/sslstreamadapter.h	/^  INVALID_LENGTH,$/;"	m	class:rtc::SSLPeerCertificateDigestError
INVALID_SOCKET	webrtc/base/socket.h	/^#define INVALID_SOCKET /;"	d
IPAddress	webrtc/base/ipaddress.h	/^  IPAddress() : family_(AF_UNSPEC) {$/;"	f	class:rtc::IPAddress
IPAddress	webrtc/base/ipaddress.h	/^  IPAddress(const IPAddress& other) : family_(other.family_) {$/;"	f	class:rtc::IPAddress
IPAddress	webrtc/base/ipaddress.h	/^  explicit IPAddress(const in6_addr& ip6) : family_(AF_INET6) {$/;"	f	class:rtc::IPAddress
IPAddress	webrtc/base/ipaddress.h	/^  explicit IPAddress(const in_addr& ip4) : family_(AF_INET) {$/;"	f	class:rtc::IPAddress
IPAddress	webrtc/base/ipaddress.h	/^  explicit IPAddress(uint32_t ip_in_host_byte_order) : family_(AF_INET) {$/;"	f	class:rtc::IPAddress
IPAddress	webrtc/base/ipaddress.h	/^class IPAddress {$/;"	c	namespace:rtc
IPAddressPrecedence	webrtc/base/ipaddress.cc	/^int IPAddressPrecedence(const IPAddress& ip) {$/;"	f	namespace:rtc
IPFromAddrInfo	webrtc/base/ipaddress.cc	/^bool IPFromAddrInfo(struct addrinfo* info, IPAddress* out) {$/;"	f	namespace:rtc
IPFromString	webrtc/base/ipaddress.cc	/^bool IPFromString(const std::string& str, IPAddress* out) {$/;"	f	namespace:rtc
IPFromString	webrtc/base/ipaddress.cc	/^bool IPFromString(const std::string& str, int flags,$/;"	f	namespace:rtc
IPIs6Bone	webrtc/base/ipaddress.cc	/^bool IPIs6Bone(const IPAddress& ip) {$/;"	f	namespace:rtc
IPIs6To4	webrtc/base/ipaddress.cc	/^bool IPIs6To4(const IPAddress& ip) {$/;"	f	namespace:rtc
IPIsAny	webrtc/base/ipaddress.cc	/^bool IPIsAny(const IPAddress& ip) {$/;"	f	namespace:rtc
IPIsHelper	webrtc/base/ipaddress.cc	/^bool IPIsHelper(const IPAddress& ip, const in6_addr& tomatch, int length) {$/;"	f	namespace:rtc
IPIsLinkLocal	webrtc/base/ipaddress.cc	/^bool IPIsLinkLocal(const IPAddress& ip) {$/;"	f	namespace:rtc
IPIsLoopback	webrtc/base/ipaddress.cc	/^bool IPIsLoopback(const IPAddress& ip) {$/;"	f	namespace:rtc
IPIsMacBased	webrtc/base/ipaddress.cc	/^bool IPIsMacBased(const IPAddress& ip) {$/;"	f	namespace:rtc
IPIsPrivate	webrtc/base/ipaddress.cc	/^bool IPIsPrivate(const IPAddress& ip) {$/;"	f	namespace:rtc
IPIsSiteLocal	webrtc/base/ipaddress.cc	/^bool IPIsSiteLocal(const IPAddress& ip) {$/;"	f	namespace:rtc
IPIsTeredo	webrtc/base/ipaddress.cc	/^bool IPIsTeredo(const IPAddress& ip) {$/;"	f	namespace:rtc
IPIsULA	webrtc/base/ipaddress.cc	/^bool IPIsULA(const IPAddress& ip) {$/;"	f	namespace:rtc
IPIsUnspec	webrtc/base/ipaddress.cc	/^bool IPIsUnspec(const IPAddress& ip) {$/;"	f	namespace:rtc
IPIsV4Compatibility	webrtc/base/ipaddress.cc	/^bool IPIsV4Compatibility(const IPAddress& ip) {$/;"	f	namespace:rtc
IPIsV4Mapped	webrtc/base/ipaddress.cc	/^bool IPIsV4Mapped(const IPAddress& ip) {$/;"	f	namespace:rtc
IPV6_ADDRESS_FLAG_DEPRECATED	webrtc/base/ipaddress.h	/^  IPV6_ADDRESS_FLAG_DEPRECATED =     1 << 1,$/;"	e	enum:rtc::IPv6AddressFlag
IPV6_ADDRESS_FLAG_NONE	webrtc/base/ipaddress.h	/^  IPV6_ADDRESS_FLAG_NONE =           0x00,$/;"	e	enum:rtc::IPv6AddressFlag
IPV6_ADDRESS_FLAG_TEMPORARY	webrtc/base/ipaddress.h	/^  IPV6_ADDRESS_FLAG_TEMPORARY =      1 << 0,$/;"	e	enum:rtc::IPv6AddressFlag
IPV6_HEADER_SIZE	webrtc/base/physicalsocketserver.cc	/^static const int IPV6_HEADER_SIZE = 40u;$/;"	m	namespace:rtc	file:
IP_ADDR_ADDED	webrtc/base/winping.cc	/^#define IP_ADDR_ADDED /;"	d	file:
IP_ADDR_DELETED	webrtc/base/winping.cc	/^#define IP_ADDR_DELETED /;"	d	file:
IP_BAD_DESTINATION	webrtc/base/winping.cc	/^#define IP_BAD_DESTINATION /;"	d	file:
IP_BAD_OPTION	webrtc/base/winping.cc	/^#define IP_BAD_OPTION /;"	d	file:
IP_BAD_REQ	webrtc/base/winping.cc	/^#define IP_BAD_REQ /;"	d	file:
IP_BAD_ROUTE	webrtc/base/winping.cc	/^#define IP_BAD_ROUTE /;"	d	file:
IP_BIND_ADAPTER	webrtc/base/winping.cc	/^#define IP_BIND_ADAPTER /;"	d	file:
IP_BUF_TOO_SMALL	webrtc/base/winping.cc	/^#define IP_BUF_TOO_SMALL /;"	d	file:
IP_DEST_HOST_UNREACHABLE	webrtc/base/winping.cc	/^#define IP_DEST_HOST_UNREACHABLE /;"	d	file:
IP_DEST_NET_UNREACHABLE	webrtc/base/winping.cc	/^#define IP_DEST_NET_UNREACHABLE /;"	d	file:
IP_DEST_PORT_UNREACHABLE	webrtc/base/winping.cc	/^#define IP_DEST_PORT_UNREACHABLE /;"	d	file:
IP_DEST_PROT_UNREACHABLE	webrtc/base/winping.cc	/^#define IP_DEST_PROT_UNREACHABLE /;"	d	file:
IP_DEVICE_DOES_NOT_EXIST	webrtc/base/winping.cc	/^#define IP_DEVICE_DOES_NOT_EXIST /;"	d	file:
IP_DUPLICATE_ADDRESS	webrtc/base/winping.cc	/^#define IP_DUPLICATE_ADDRESS /;"	d	file:
IP_DUPLICATE_IPADD	webrtc/base/winping.cc	/^#define IP_DUPLICATE_IPADD /;"	d	file:
IP_FLAG_DF	webrtc/base/winping.cc	/^#define IP_FLAG_DF /;"	d	file:
IP_GENERAL_FAILURE	webrtc/base/winping.cc	/^#define IP_GENERAL_FAILURE /;"	d	file:
IP_HEADER_SIZE	webrtc/base/physicalsocketserver.cc	/^static const int IP_HEADER_SIZE = 20u;$/;"	m	namespace:rtc	file:
IP_HEADER_SIZE	webrtc/base/win32socketserver.cc	/^static const int IP_HEADER_SIZE = 20u;$/;"	m	namespace:rtc	file:
IP_HW_ERROR	webrtc/base/winping.cc	/^#define IP_HW_ERROR /;"	d	file:
IP_INTERFACE_METRIC_CHANGE	webrtc/base/winping.cc	/^#define IP_INTERFACE_METRIC_CHANGE /;"	d	file:
IP_INTERFACE_WOL_CAPABILITY_CHANGE	webrtc/base/winping.cc	/^#define IP_INTERFACE_WOL_CAPABILITY_CHANGE /;"	d	file:
IP_LENGTH	webrtc/modules/audio_processing/ns/defines.h	/^#define IP_LENGTH /;"	d
IP_MEDIA_CONNECT	webrtc/base/winping.cc	/^#define IP_MEDIA_CONNECT /;"	d	file:
IP_MEDIA_DISCONNECT	webrtc/base/winping.cc	/^#define IP_MEDIA_DISCONNECT /;"	d	file:
IP_MTU	webrtc/base/physicalsocketserver.cc	/^#define IP_MTU /;"	d	file:
IP_MTU_CHANGE	webrtc/base/winping.cc	/^#define IP_MTU_CHANGE /;"	d	file:
IP_NEGOTIATING_IPSEC	webrtc/base/winping.cc	/^#define IP_NEGOTIATING_IPSEC /;"	d	file:
IP_NO_RESOURCES	webrtc/base/winping.cc	/^#define IP_NO_RESOURCES /;"	d	file:
IP_OPTION_INFORMATION	webrtc/base/winping.h	/^} IP_OPTION_INFORMATION, * PIP_OPTION_INFORMATION;$/;"	t	namespace:rtc	typeref:struct:rtc::ip_option_information
IP_OPTION_TOO_BIG	webrtc/base/winping.cc	/^#define IP_OPTION_TOO_BIG /;"	d	file:
IP_OPT_EOL	webrtc/base/winping.cc	/^#define IP_OPT_EOL /;"	d	file:
IP_OPT_LSRR	webrtc/base/winping.cc	/^#define IP_OPT_LSRR /;"	d	file:
IP_OPT_NOP	webrtc/base/winping.cc	/^#define IP_OPT_NOP /;"	d	file:
IP_OPT_ROUTER_ALERT	webrtc/base/winping.cc	/^#define IP_OPT_ROUTER_ALERT /;"	d	file:
IP_OPT_RR	webrtc/base/winping.cc	/^#define IP_OPT_RR /;"	d	file:
IP_OPT_SECURITY	webrtc/base/winping.cc	/^#define IP_OPT_SECURITY /;"	d	file:
IP_OPT_SID	webrtc/base/winping.cc	/^#define IP_OPT_SID /;"	d	file:
IP_OPT_SSRR	webrtc/base/winping.cc	/^#define IP_OPT_SSRR /;"	d	file:
IP_OPT_TS	webrtc/base/winping.cc	/^#define IP_OPT_TS /;"	d	file:
IP_PACKET_TOO_BIG	webrtc/base/winping.cc	/^#define IP_PACKET_TOO_BIG /;"	d	file:
IP_PARAM_PROBLEM	webrtc/base/winping.cc	/^#define IP_PARAM_PROBLEM /;"	d	file:
IP_PENDING	webrtc/base/winping.cc	/^#define IP_PENDING /;"	d	file:
IP_RECONFIG_SECFLTR	webrtc/base/winping.cc	/^#define IP_RECONFIG_SECFLTR /;"	d	file:
IP_REQ_TIMED_OUT	webrtc/base/winping.cc	/^#define IP_REQ_TIMED_OUT /;"	d	file:
IP_SOURCE_QUENCH	webrtc/base/winping.cc	/^#define IP_SOURCE_QUENCH /;"	d	file:
IP_SPEC_MTU_CHANGE	webrtc/base/winping.cc	/^#define IP_SPEC_MTU_CHANGE /;"	d	file:
IP_STATUS_BASE	webrtc/base/winping.cc	/^#define IP_STATUS_BASE /;"	d	file:
IP_SUCCESS	webrtc/base/winping.cc	/^#define IP_SUCCESS /;"	d	file:
IP_TTL_EXPIRED_REASSEM	webrtc/base/winping.cc	/^#define IP_TTL_EXPIRED_REASSEM /;"	d	file:
IP_TTL_EXPIRED_TRANSIT	webrtc/base/winping.cc	/^#define IP_TTL_EXPIRED_TRANSIT /;"	d	file:
IP_UNBIND_ADAPTER	webrtc/base/winping.cc	/^#define IP_UNBIND_ADAPTER /;"	d	file:
IP_UNLOAD	webrtc/base/winping.cc	/^#define IP_UNLOAD /;"	d	file:
IPv6AddressFlag	webrtc/base/ipaddress.h	/^enum IPv6AddressFlag {$/;"	g	namespace:rtc
IPv6AttributesGetter	webrtc/base/macifaddrs_converter.cc	/^IPv6AttributesGetter::IPv6AttributesGetter()$/;"	f	class:rtc::__anon29::IPv6AttributesGetter
IPv6AttributesGetter	webrtc/base/macifaddrs_converter.cc	/^class IPv6AttributesGetter {$/;"	c	namespace:rtc::__anon29	file:
ISACBand	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^enum ISACBand {kIsacLowerBand = 0, kIsacUpperBand12 = 1, kIsacUpperBand16 = 2};$/;"	g
ISACBandwidth	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^enum ISACBandwidth {isac8kHz = 8, isac12kHz = 12, isac16kHz = 16};$/;"	g
ISACLBDecStruct	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^} ISACLBDecStruct;$/;"	t	typeref:struct:__anon138
ISACLBEncStruct	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^} ISACLBEncStruct;$/;"	t	typeref:struct:__anon136
ISACLBStruct	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^} ISACLBStruct;$/;"	t	typeref:struct:__anon140
ISACMainStruct	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^} ISACMainStruct;$/;"	t	typeref:struct:__anon144
ISACStruct	webrtc/modules/audio_coding/codecs/isac/main/include/isac.h	/^typedef struct WebRtcISACStruct    ISACStruct;$/;"	t	typeref:struct:WebRtcISACStruct
ISACUBDecStruct	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^} ISACUBDecStruct;$/;"	t	typeref:struct:__anon139
ISACUBEncStruct	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^} ISACUBEncStruct;$/;"	t	typeref:struct:__anon137
ISACUBSaveEncDataStruct	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^} ISACUBSaveEncDataStruct;$/;"	t	typeref:struct:__anon135
ISACUBStruct	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^} ISACUBStruct;$/;"	t	typeref:struct:__anon141
ISAC_DECODER_NOT_INITIATED	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define ISAC_DECODER_NOT_INITIATED /;"	d
ISAC_DISALLOWED_BANDWIDTH_MODE_DECODER	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define ISAC_DISALLOWED_BANDWIDTH_MODE_DECODER /;"	d
ISAC_DISALLOWED_BITSTREAM_LENGTH	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define ISAC_DISALLOWED_BITSTREAM_LENGTH /;"	d
ISAC_DISALLOWED_BOTTLENECK	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define ISAC_DISALLOWED_BOTTLENECK /;"	d
ISAC_DISALLOWED_CODING_MODE	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define ISAC_DISALLOWED_CODING_MODE /;"	d
ISAC_DISALLOWED_ENCODER_BANDWIDTH	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define ISAC_DISALLOWED_ENCODER_BANDWIDTH /;"	d
ISAC_DISALLOWED_FRAME_LENGTH	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define ISAC_DISALLOWED_FRAME_LENGTH /;"	d
ISAC_DISALLOWED_FRAME_MODE_DECODER	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define ISAC_DISALLOWED_FRAME_MODE_DECODER /;"	d
ISAC_DISALLOWED_FRAME_MODE_ENCODER	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define ISAC_DISALLOWED_FRAME_MODE_ENCODER /;"	d
ISAC_DISALLOWED_LPC_MODEL	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define ISAC_DISALLOWED_LPC_MODEL /;"	d
ISAC_EMPTY_PACKET	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define ISAC_EMPTY_PACKET /;"	d
ISAC_ENCODER_NOT_INITIATED	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define ISAC_ENCODER_NOT_INITIATED /;"	d
ISAC_INCOMPATIBLE_FORMATS	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define ISAC_INCOMPATIBLE_FORMATS /;"	d
ISAC_LENGTH_MISMATCH	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define ISAC_LENGTH_MISMATCH /;"	d
ISAC_MEMORY_ALLOCATION_FAILED	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define ISAC_MEMORY_ALLOCATION_FAILED /;"	d
ISAC_MODE_MISMATCH	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define ISAC_MODE_MISMATCH /;"	d
ISAC_PAYLOAD_LARGER_THAN_LIMIT	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define ISAC_PAYLOAD_LARGER_THAN_LIMIT /;"	d
ISAC_RANGE_ERROR_BW_ESTIMATOR	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define ISAC_RANGE_ERROR_BW_ESTIMATOR /;"	d
ISAC_RANGE_ERROR_DECODE_BANDWIDTH	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define ISAC_RANGE_ERROR_DECODE_BANDWIDTH /;"	d
ISAC_RANGE_ERROR_DECODE_BANDWITH	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define ISAC_RANGE_ERROR_DECODE_BANDWITH /;"	d
ISAC_RANGE_ERROR_DECODE_FRAME_LENGTH	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define ISAC_RANGE_ERROR_DECODE_FRAME_LENGTH /;"	d
ISAC_RANGE_ERROR_DECODE_LPC	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define ISAC_RANGE_ERROR_DECODE_LPC /;"	d
ISAC_RANGE_ERROR_DECODE_PITCH_GAIN	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define ISAC_RANGE_ERROR_DECODE_PITCH_GAIN /;"	d
ISAC_RANGE_ERROR_DECODE_PITCH_LAG	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define ISAC_RANGE_ERROR_DECODE_PITCH_LAG /;"	d
ISAC_RANGE_ERROR_DECODE_SPECTRUM	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define ISAC_RANGE_ERROR_DECODE_SPECTRUM /;"	d
ISAC_UNSUPPORTED_SAMPLING_FREQUENCY	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define ISAC_UNSUPPORTED_SAMPLING_FREQUENCY /;"	d
ISACdecLB_obj	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  ISACLBDecStruct ISACdecLB_obj;$/;"	m	struct:__anon140
ISACdecUB_obj	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  ISACUBDecStruct ISACdecUB_obj;$/;"	m	struct:__anon141
ISACencLB_obj	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  ISACLBEncStruct ISACencLB_obj;$/;"	m	struct:__anon140
ISACencUB_obj	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  ISACUBEncStruct ISACencUB_obj;$/;"	m	struct:__anon141
IdTimeoutTask	webrtc/base/task_unittest.cc	/^  explicit IdTimeoutTask(TaskParent *parent) : Task(parent) {$/;"	f	class:rtc::IdTimeoutTask
IdTimeoutTask	webrtc/base/task_unittest.cc	/^class IdTimeoutTask : public Task, public sigslot::has_slots<> {$/;"	c	namespace:rtc	file:
IdToFilename	webrtc/base/diskcache.cc	/^std::string DiskCache::IdToFilename(const std::string& id, size_t index) const {$/;"	f	class:rtc::DiskCache
Identity	webrtc/base/bind_unittest.cc	/^  template <class T> T Identity(T value) { ++call_count; return value; }$/;"	f	struct:rtc::__anon4::MethodBindTester
IdentityAndInfo	webrtc/base/sslidentity_unittest.cc	/^struct IdentityAndInfo {$/;"	s	file:
Idle	webrtc/base/dbus.cc	/^  static gboolean Idle(gpointer data) {$/;"	f	class:rtc::DBusMonitor::DBusMonitoringThread	file:
IfAddrsConverter	webrtc/base/ifaddrs_converter.cc	/^IfAddrsConverter::IfAddrsConverter() {}$/;"	f	class:rtc::IfAddrsConverter
IfAddrsConverter	webrtc/base/ifaddrs_converter.h	/^class IfAddrsConverter {$/;"	c	namespace:rtc
IfaceList	webrtc/base/fakenetwork.h	/^  typedef std::vector<std::pair<SocketAddress, AdapterType>> IfaceList;$/;"	t	class:rtc::FakeNetworkManager
InCriticalSection	webrtc/base/sigslot_unittest.cc	/^  bool InCriticalSection() { return SignalMTLoopback.InCriticalSection(); }$/;"	f	class:SigslotMTLockTest
InCriticalSection	webrtc/base/sigslot_unittest.cc	/^  bool InCriticalSection() { return lock_count_ != unlock_count_; }$/;"	f	class:multi_threaded_local_fake
InStream	webrtc/common_types.h	/^class InStream : public RewindableStream {$/;"	c	namespace:webrtc
IncreaseCaptureCounter	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  void IncreaseCaptureCounter() {$/;"	f	class:webrtc::__anon181::FrameCounters
IncreaseCaptureCounter	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^  void IncreaseCaptureCounter() {$/;"	f	class:webrtc::__anon182::FrameCounters
IncreaseRenderCounter	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  void IncreaseRenderCounter() {$/;"	f	class:webrtc::__anon181::FrameCounters
IncreaseRenderCounter	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^  void IncreaseRenderCounter() {$/;"	f	class:webrtc::__anon182::FrameCounters
IncreaseSeed	webrtc/common_audio/signal_processing/randomization_functions.c	/^static uint32_t IncreaseSeed(uint32_t* seed) {$/;"	f	file:
Increment	webrtc/base/atomicops.h	/^  static int Increment(volatile int* i) {$/;"	f	class:rtc::AtomicOps
Increment	webrtc/base/event_tracer_unittest.cc	/^  void Increment() {$/;"	f	class:__anon13::TestStatistics
IncrementAbortCount	webrtc/base/taskrunner.h	/^  void IncrementAbortCount() {$/;"	f	class:rtc::TaskRunner
IncrementOp	webrtc/base/criticalsection_unittest.cc	/^struct IncrementOp {$/;"	s	namespace:rtc::__anon10	file:
Init	webrtc/base/checks.cc	/^void FatalMessage::Init(const char* file, int line) {$/;"	f	class:rtc::FatalMessage
Init	webrtc/base/filerotatingstream_unittest.cc	/^  void Init(const std::string& dir_name, size_t max_total_log_size) {$/;"	f	class:rtc::MAYBE_CallSessionFileRotatingStreamTest
Init	webrtc/base/filerotatingstream_unittest.cc	/^  void Init(const std::string& dir_name,$/;"	f	class:rtc::MAYBE_FileRotatingStreamTest
Init	webrtc/base/helpers.cc	/^  virtual bool Init(const void* seed, size_t len) {$/;"	f	class:rtc::SecureRandomGenerator
Init	webrtc/base/helpers.cc	/^  virtual bool Init(const void* seed, size_t seed_len) {$/;"	f	class:rtc::SecureRandomGenerator
Init	webrtc/base/logsinks.cc	/^bool FileRotatingLogSink::Init() {$/;"	f	class:rtc::FileRotatingLogSink
Init	webrtc/base/macwindowpicker.cc	/^bool MacWindowPicker::Init() {$/;"	f	class:rtc::MacWindowPicker
Init	webrtc/base/testutils.h	/^  void Init(AsyncSocket* socket, int family) {$/;"	f	class:testing::SocketTestClient
Init	webrtc/base/win32windowpicker.cc	/^bool Win32WindowPicker::Init() {$/;"	f	class:rtc::Win32WindowPicker
Init	webrtc/base/x11windowpicker.cc	/^  bool Init() {$/;"	f	class:rtc::XWindowEnumerator
Init	webrtc/base/x11windowpicker.cc	/^bool X11WindowPicker::Init() {$/;"	f	class:rtc::X11WindowPicker
Init	webrtc/modules/audio_processing/aec/system_delay_unittest.cc	/^void SystemDelayTest::Init(int sample_rate_hz) {$/;"	f	class:webrtc::__anon162::SystemDelayTest
Init	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^void ApmTest::Init(AudioProcessing* ap) {$/;"	f	class:webrtc::__anon183::ApmTest
Init	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^void ApmTest::Init(int sample_rate_hz,$/;"	f	class:webrtc::__anon183::ApmTest
Init	webrtc/modules/audio_processing/utility/delay_estimator_unittest.cc	/^void DelayEstimatorTest::Init() {$/;"	f	class:__anon232::DelayEstimatorTest
InitBinary	webrtc/modules/audio_processing/utility/delay_estimator_unittest.cc	/^void DelayEstimatorTest::InitBinary() {$/;"	f	class:__anon232::DelayEstimatorTest
InitCounter	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  int    InitCounter;$/;"	m	struct:__anon132
InitDelaySumMasks	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.cc	/^void NonlinearBeamformer::InitDelaySumMasks() {$/;"	f	class:webrtc::NonlinearBeamformer
InitDiffuseCovMats	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.cc	/^void NonlinearBeamformer::InitDiffuseCovMats() {$/;"	f	class:webrtc::NonlinearBeamformer
InitForNewData	webrtc/modules/audio_processing/audio_buffer.cc	/^void AudioBuffer::InitForNewData() {$/;"	f	class:webrtc::AudioBuffer
InitFunctionPointers	webrtc/common_audio/signal_processing/spl_init.c	/^static void InitFunctionPointers(void) {$/;"	f	file:
InitHighFrequencyCorrectionRanges	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.cc	/^void NonlinearBeamformer::InitHighFrequencyCorrectionRanges() {$/;"	f	class:webrtc::NonlinearBeamformer
InitInterfAngles	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.cc	/^void NonlinearBeamformer::InitInterfAngles() {$/;"	f	class:webrtc::NonlinearBeamformer
InitInterfCovMats	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.cc	/^void NonlinearBeamformer::InitInterfCovMats() {$/;"	f	class:webrtc::NonlinearBeamformer
InitLevel	webrtc/modules/audio_processing/aec/aec_core.cc	/^static void InitLevel(PowerLevel* level) {$/;"	f	namespace:webrtc
InitLowFrequencyCorrectionRanges	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.cc	/^void NonlinearBeamformer::InitLowFrequencyCorrectionRanges() {$/;"	f	class:webrtc::NonlinearBeamformer
InitMetrics	webrtc/modules/audio_processing/aec/aec_core.cc	/^static void InitMetrics(AecCore* self) {$/;"	f	namespace:webrtc
InitPointersToC	webrtc/common_audio/signal_processing/spl_init.c	/^static void InitPointersToC() {$/;"	f	file:
InitPointersToMIPS	webrtc/common_audio/signal_processing/spl_init.c	/^static void InitPointersToMIPS() {$/;"	f	file:
InitPointersToNeon	webrtc/common_audio/signal_processing/spl_init.c	/^static void InitPointersToNeon() {$/;"	f	file:
InitRTPVideoHeaderVP8	webrtc/modules/include/module_common_types.h	/^  void InitRTPVideoHeaderVP8() {$/;"	f	struct:webrtc::RTPVideoHeaderVP8
InitRTPVideoHeaderVP9	webrtc/modules/include/module_common_types.h	/^  void InitRTPVideoHeaderVP9() {$/;"	f	struct:webrtc::RTPVideoHeaderVP9
InitRandom	webrtc/base/helpers.cc	/^bool InitRandom(const char* seed, size_t len) {$/;"	f	namespace:rtc
InitRandom	webrtc/base/helpers.cc	/^bool InitRandom(int seed) {$/;"	f	namespace:rtc
InitStats	webrtc/modules/audio_processing/aec/aec_core.cc	/^static void InitStats(Stats* stats) {$/;"	f	namespace:webrtc
InitTargetCovMats	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.cc	/^void NonlinearBeamformer::InitTargetCovMats() {$/;"	f	class:webrtc::NonlinearBeamformer
Initialize	webrtc/base/diskcache.cc	/^bool DiskCache::Initialize(const std::string& folder, size_t size) {$/;"	f	class:rtc::DiskCache
Initialize	webrtc/base/network.h	/^  virtual void Initialize() {}$/;"	f	class:rtc::NetworkManager
Initialize	webrtc/base/physicalsocketserver.cc	/^bool SocketDispatcher::Initialize() {$/;"	f	class:rtc::SocketDispatcher
Initialize	webrtc/base/taskparent.cc	/^void TaskParent::Initialize() {$/;"	f	class:rtc::TaskParent
Initialize	webrtc/base/trace_event.h	/^  void Initialize(const unsigned char* category_enabled,$/;"	f	class:webrtc::trace_event_internal::TraceEndOnScopeClose
Initialize	webrtc/modules/audio_processing/agc/agc_manager_direct.cc	/^int AgcManagerDirect::Initialize() {$/;"	f	class:webrtc::AgcManagerDirect
Initialize	webrtc/modules/audio_processing/audio_processing_impl.cc	/^int AudioProcessingImpl::Initialize() {$/;"	f	class:webrtc::AudioProcessingImpl
Initialize	webrtc/modules/audio_processing/audio_processing_impl.cc	/^int AudioProcessingImpl::Initialize(const ProcessingConfig& processing_config) {$/;"	f	class:webrtc::AudioProcessingImpl
Initialize	webrtc/modules/audio_processing/audio_processing_impl.cc	/^int AudioProcessingImpl::Initialize(int capture_input_sample_rate_hz,$/;"	f	class:webrtc::AudioProcessingImpl
Initialize	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.cc	/^void NonlinearBeamformer::Initialize(int chunk_size_ms, int sample_rate_hz) {$/;"	f	class:webrtc::NonlinearBeamformer
Initialize	webrtc/modules/audio_processing/echo_cancellation_impl.cc	/^  void Initialize(int sample_rate_hz) {$/;"	f	class:webrtc::EchoCancellationImpl::Canceller
Initialize	webrtc/modules/audio_processing/echo_cancellation_impl.cc	/^void EchoCancellationImpl::Initialize(int sample_rate_hz,$/;"	f	class:webrtc::EchoCancellationImpl
Initialize	webrtc/modules/audio_processing/echo_control_mobile_impl.cc	/^  void Initialize(int sample_rate_hz,$/;"	f	class:webrtc::EchoControlMobileImpl::Canceller
Initialize	webrtc/modules/audio_processing/echo_control_mobile_impl.cc	/^void EchoControlMobileImpl::Initialize(int sample_rate_hz,$/;"	f	class:webrtc::EchoControlMobileImpl
Initialize	webrtc/modules/audio_processing/gain_control_for_experimental_agc.cc	/^void GainControlForExperimentalAgc::Initialize() {$/;"	f	class:webrtc::GainControlForExperimentalAgc
Initialize	webrtc/modules/audio_processing/gain_control_impl.cc	/^  void Initialize(int minimum_capture_level,$/;"	f	class:webrtc::GainControlImpl::GainController
Initialize	webrtc/modules/audio_processing/gain_control_impl.cc	/^void GainControlImpl::Initialize(size_t num_proc_channels, int sample_rate_hz) {$/;"	f	class:webrtc::GainControlImpl
Initialize	webrtc/modules/audio_processing/high_pass_filter_impl.cc	/^void HighPassFilterImpl::Initialize(size_t channels, int sample_rate_hz) {$/;"	f	class:webrtc::HighPassFilterImpl
Initialize	webrtc/modules/audio_processing/level_controller/biquad_filter.h	/^  void Initialize(const BiQuadCoefficients& coefficients) {$/;"	f	class:webrtc::BiQuadFilter
Initialize	webrtc/modules/audio_processing/level_controller/down_sampler.cc	/^void DownSampler::Initialize(int sample_rate_hz) {$/;"	f	class:webrtc::DownSampler
Initialize	webrtc/modules/audio_processing/level_controller/gain_applier.cc	/^void GainApplier::Initialize(int sample_rate_hz) {$/;"	f	class:webrtc::GainApplier
Initialize	webrtc/modules/audio_processing/level_controller/gain_selector.cc	/^void GainSelector::Initialize(int sample_rate_hz) {$/;"	f	class:webrtc::GainSelector
Initialize	webrtc/modules/audio_processing/level_controller/level_controller.cc	/^void LevelController::Initialize(int sample_rate_hz) {$/;"	f	class:webrtc::LevelController
Initialize	webrtc/modules/audio_processing/level_controller/level_controller.cc	/^void LevelController::Metrics::Initialize(int sample_rate_hz) {$/;"	f	class:webrtc::LevelController::Metrics
Initialize	webrtc/modules/audio_processing/level_controller/noise_level_estimator.cc	/^void NoiseLevelEstimator::Initialize(int sample_rate_hz) {$/;"	f	class:webrtc::NoiseLevelEstimator
Initialize	webrtc/modules/audio_processing/level_controller/noise_spectrum_estimator.cc	/^void NoiseSpectrumEstimator::Initialize() {$/;"	f	class:webrtc::NoiseSpectrumEstimator
Initialize	webrtc/modules/audio_processing/level_controller/peak_level_estimator.cc	/^void PeakLevelEstimator::Initialize(float initial_peak_level_dbfs) {$/;"	f	class:webrtc::PeakLevelEstimator
Initialize	webrtc/modules/audio_processing/level_controller/saturating_gain_estimator.cc	/^void SaturatingGainEstimator::Initialize() {$/;"	f	class:webrtc::SaturatingGainEstimator
Initialize	webrtc/modules/audio_processing/level_controller/signal_classifier.cc	/^void SignalClassifier::Initialize(int sample_rate_hz) {$/;"	f	class:webrtc::SignalClassifier
Initialize	webrtc/modules/audio_processing/level_estimator_impl.cc	/^void LevelEstimatorImpl::Initialize() {$/;"	f	class:webrtc::LevelEstimatorImpl
Initialize	webrtc/modules/audio_processing/noise_suppression_impl.cc	/^void NoiseSuppressionImpl::Initialize(size_t channels, int sample_rate_hz) {$/;"	f	class:webrtc::NoiseSuppressionImpl
Initialize	webrtc/modules/audio_processing/residual_echo_detector.cc	/^void ResidualEchoDetector::Initialize() {$/;"	f	class:webrtc::ResidualEchoDetector
Initialize	webrtc/modules/audio_processing/test/wav_based_simulator.cc	/^void WavBasedSimulator::Initialize() {$/;"	f	class:webrtc::test::WavBasedSimulator
Initialize	webrtc/modules/audio_processing/transient/transient_suppressor.cc	/^int TransientSuppressor::Initialize(int sample_rate_hz,$/;"	f	class:webrtc::TransientSuppressor
Initialize	webrtc/modules/audio_processing/voice_detection_impl.cc	/^void VoiceDetectionImpl::Initialize(int sample_rate_hz) {$/;"	f	class:webrtc::VoiceDetectionImpl
InitializeBeamformer	webrtc/modules/audio_processing/audio_processing_impl.cc	/^void AudioProcessingImpl::InitializeBeamformer() {$/;"	f	class:webrtc::AudioProcessingImpl
InitializeCPUSpecificFeatures	webrtc/common_audio/resampler/sinc_resampler.cc	/^void SincResampler::InitializeCPUSpecificFeatures() {}$/;"	f	class:webrtc::SincResampler
InitializeDBusGlibSymbol	webrtc/base/dbus.cc	/^static void InitializeDBusGlibSymbol() {$/;"	f	namespace:rtc
InitializeEntries	webrtc/base/diskcache_win32.cc	/^bool DiskCacheWin32::InitializeEntries() {$/;"	f	class:rtc::DiskCacheWin32
InitializeIfNeeded	webrtc/common_audio/resampler/push_resampler.cc	/^int PushResampler<T>::InitializeIfNeeded(int src_sample_rate_hz,$/;"	f	class:webrtc::PushResampler
InitializeIntelligibility	webrtc/modules/audio_processing/audio_processing_impl.cc	/^void AudioProcessingImpl::InitializeIntelligibility() {$/;"	f	class:webrtc::AudioProcessingImpl
InitializeKernel	webrtc/common_audio/resampler/sinc_resampler.cc	/^void SincResampler::InitializeKernel() {$/;"	f	class:webrtc::SincResampler
InitializeLevelController	webrtc/modules/audio_processing/audio_processing_impl.cc	/^void AudioProcessingImpl::InitializeLevelController() {$/;"	f	class:webrtc::AudioProcessingImpl
InitializeLocked	webrtc/modules/audio_processing/audio_processing_impl.cc	/^int AudioProcessingImpl::InitializeLocked() {$/;"	f	class:webrtc::AudioProcessingImpl
InitializeLocked	webrtc/modules/audio_processing/audio_processing_impl.cc	/^int AudioProcessingImpl::InitializeLocked(const ProcessingConfig& config) {$/;"	f	class:webrtc::AudioProcessingImpl
InitializeQueueThread	webrtc/base/task_queue_win.cc	/^void CALLBACK InitializeQueueThread(ULONG_PTR param) {$/;"	f	namespace:rtc::__anon67
InitializeResidualEchoDetector	webrtc/modules/audio_processing/audio_processing_impl.cc	/^void AudioProcessingImpl::InitializeResidualEchoDetector() {$/;"	f	class:webrtc::AudioProcessingImpl
InitializeSSL	webrtc/base/openssladapter.cc	/^bool OpenSSLAdapter::InitializeSSL(VerificationCallback callback) {$/;"	f	class:rtc::OpenSSLAdapter
InitializeSSL	webrtc/base/ssladapter.cc	/^bool InitializeSSL(VerificationCallback callback) {$/;"	f	namespace:rtc
InitializeSSLThread	webrtc/base/openssladapter.cc	/^bool OpenSSLAdapter::InitializeSSLThread() {$/;"	f	class:rtc::OpenSSLAdapter
InitializeSSLThread	webrtc/base/ssladapter.cc	/^bool InitializeSSLThread() {$/;"	f	namespace:rtc
InitializeTls	webrtc/base/task_queue_posix.cc	/^void InitializeTls() {$/;"	f	namespace:rtc::internal
InitializeTls	webrtc/base/task_queue_win.cc	/^BOOL CALLBACK InitializeTls(PINIT_ONCE init_once, void* param, void** context) {$/;"	f	namespace:rtc::__anon67
InitializeTransient	webrtc/modules/audio_processing/audio_processing_impl.cc	/^void AudioProcessingImpl::InitializeTransient() {$/;"	f	class:webrtc::AudioProcessingImpl
InitiateClose	webrtc/base/httpserver.cc	/^HttpServer::Connection::InitiateClose(bool force) {$/;"	f	class:rtc::HttpServer::Connection
InitiateConnect	webrtc/base/virtualsocketserver.cc	/^int VirtualSocket::InitiateConnect(const SocketAddress& addr, bool use_delay) {$/;"	f	class:rtc::VirtualSocket
InitiateNewSetOfRecordings	webrtc/modules/audio_processing/logging/apm_data_dumper.h	/^  void InitiateNewSetOfRecordings() {$/;"	f	class:webrtc::ApmDataDumper
InputOutput	webrtc/modules/audio_processing/agc/loudness_histogram_unittest.cc	/^struct InputOutput {$/;"	s	namespace:webrtc	file:
InsecureCryptStringImpl	webrtc/base/cryptstring.h	/^class InsecureCryptStringImpl : public CryptStringImpl {$/;"	c	namespace:rtc
Insert	webrtc/modules/audio_processing/aec/aec_core.cc	/^void BlockBuffer::Insert(const float block[PART_LEN]) {$/;"	f	class:webrtc::BlockBuffer
Insert	webrtc/modules/audio_processing/vad/vad_circular_buffer.cc	/^void VadCircularBuffer::Insert(double value) {$/;"	f	class:webrtc::VadCircularBuffer
Insert	webrtc/modules/audio_processing/vad/vad_circular_buffer_unittest.cc	/^static void Insert(double value,$/;"	f	namespace:webrtc
InsertNewestEntryAndUpdate	webrtc/modules/audio_processing/agc/loudness_histogram.cc	/^void LoudnessHistogram::InsertNewestEntryAndUpdate(int activity_prob_q10,$/;"	f	class:webrtc::LoudnessHistogram
InsertSequentially	webrtc/modules/audio_processing/vad/vad_circular_buffer_unittest.cc	/^static void InsertSequentially(int k, VadCircularBuffer* circular_buffer) {$/;"	f	namespace:webrtc
InsertZeros	webrtc/modules/audio_processing/vad/vad_circular_buffer_unittest.cc	/^static void InsertZeros(int num_zeros, VadCircularBuffer* circular_buffer) {$/;"	f	namespace:webrtc
InstallIpv6Network	webrtc/base/network_unittest.cc	/^  struct ifaddrs* InstallIpv6Network(char* if_name,$/;"	f	class:rtc::NetworkTest
InstallSignal	webrtc/base/physicalsocketserver.cc	/^bool PhysicalSocketServer::InstallSignal(int signum, void (*handler)(int)) {$/;"	f	class:rtc::PhysicalSocketServer
Instance	webrtc/base/messagequeue.cc	/^MessageQueueManager* MessageQueueManager::Instance() {$/;"	f	class:rtc::MessageQueueManager
Instance	webrtc/base/physicalsocketserver.cc	/^  static PosixSignalHandler* Instance() {$/;"	f	class:rtc::PosixSignalHandler
Instance	webrtc/base/thread.cc	/^ThreadManager* ThreadManager::Instance() {$/;"	f	class:rtc::ThreadManager
InstanceCounter	webrtc/base/scopedptrcollection_unittest.cc	/^  explicit InstanceCounter(int* num_instances)$/;"	f	class:rtc::__anon55::InstanceCounter
InstanceCounter	webrtc/base/scopedptrcollection_unittest.cc	/^class InstanceCounter {$/;"	c	namespace:rtc::__anon55	file:
IntCallback	webrtc/base/thread_unittest.cc	/^  void IntCallback(int value) {$/;"	f	class:AsyncInvokeTest
IntCallback	webrtc/base/thread_unittest.cc	/^  void IntCallback(int value) {$/;"	f	class:GuardedAsyncInvokeTest
IntKeyTypeFamilyToKeyType	webrtc/base/sslidentity.cc	/^KeyType IntKeyTypeFamilyToKeyType(int key_type_family) {$/;"	f	namespace:rtc
IntVectorToJsonArray	webrtc/base/json.cc	/^Json::Value IntVectorToJsonArray(const std::vector<int>& in) {$/;"	f	namespace:rtc
Intelligibility	webrtc/modules/audio_processing/include/audio_processing.h	/^  Intelligibility() : enabled(false) {}$/;"	f	struct:webrtc::Intelligibility
Intelligibility	webrtc/modules/audio_processing/include/audio_processing.h	/^  explicit Intelligibility(bool enabled) : enabled(enabled) {}$/;"	f	struct:webrtc::Intelligibility
Intelligibility	webrtc/modules/audio_processing/include/audio_processing.h	/^struct Intelligibility {$/;"	s	namespace:webrtc
IntelligibilityEnhancer	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer.cc	/^IntelligibilityEnhancer::IntelligibilityEnhancer(int sample_rate_hz,$/;"	f	class:webrtc::IntelligibilityEnhancer
IntelligibilityEnhancer	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer.h	/^class IntelligibilityEnhancer : public LappedTransform::Callback {$/;"	c	namespace:webrtc
IntelligibilityEnhancerSampleRate	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer_unittest.cc	/^int IntelligibilityEnhancerSampleRate(int sample_rate_hz) {$/;"	f	namespace:webrtc::__anon203
IntelligibilityEnhancerTest	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer_unittest.cc	/^  IntelligibilityEnhancerTest()$/;"	f	class:webrtc::IntelligibilityEnhancerTest
IntelligibilityEnhancerTest	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer_unittest.cc	/^class IntelligibilityEnhancerTest : public ::testing::Test {$/;"	c	namespace:webrtc	file:
InterfaceAddress	webrtc/base/ipaddress.h	/^  InterfaceAddress() : ipv6_flags_(IPV6_ADDRESS_FLAG_NONE) {}$/;"	f	class:rtc::InterfaceAddress
InterfaceAddress	webrtc/base/ipaddress.h	/^  InterfaceAddress(IPAddress addr, int ipv6_flags)$/;"	f	class:rtc::InterfaceAddress
InterfaceAddress	webrtc/base/ipaddress.h	/^  InterfaceAddress(IPAddress ip)$/;"	f	class:rtc::InterfaceAddress
InterfaceAddress	webrtc/base/ipaddress.h	/^  InterfaceAddress(const in6_addr& ip6, int ipv6_flags)$/;"	f	class:rtc::InterfaceAddress
InterfaceAddress	webrtc/base/ipaddress.h	/^class InterfaceAddress : public IPAddress {$/;"	c	namespace:rtc
InterfaceType	webrtc/modules/audio_processing/test/aec_dump_based_simulator.h	/^  enum InterfaceType {$/;"	g	class:webrtc::test::final
Interleave	webrtc/common_audio/include/audio_util.h	/^void Interleave(const T* const* deinterleaved,$/;"	f	namespace:webrtc
InterleaveTo	webrtc/modules/audio_processing/audio_buffer.cc	/^void AudioBuffer::InterleaveTo(AudioFrame* frame, bool data_changed) {$/;"	f	class:webrtc::AudioBuffer
InterlockedExchangePointer	webrtc/system_wrappers/include/fix_interlocked_exchange_pointer_win.h	/^#undef InterlockedExchangePointer$/;"	d
InterlockedExchangePointer	webrtc/system_wrappers/include/fix_interlocked_exchange_pointer_win.h	/^inline void* InterlockedExchangePointer(void* volatile* target, void* value) {$/;"	f
InternalAddTraceEvent	webrtc/base/event_tracer.cc	/^void InternalAddTraceEvent(char phase,$/;"	f	namespace:rtc::tracing::__anon12
InternalGetCategoryEnabled	webrtc/base/event_tracer.cc	/^const unsigned char* InternalGetCategoryEnabled(const char* name) {$/;"	f	namespace:rtc::tracing::__anon12
InternalMap	webrtc/base/natserver.h	/^  typedef std::map<SocketAddressPair, TransEntry*, RouteCmp> InternalMap;$/;"	t	class:rtc::NATServer
InternalRunTasks	webrtc/base/taskrunner.cc	/^void TaskRunner::InternalRunTasks(bool in_destructor) {$/;"	f	class:rtc::TaskRunner
InternalUrlDecode	webrtc/base/urlencode.cc	/^static int InternalUrlDecode(const char *source, char *dest,$/;"	f	file:
InternalUrlDecodeString	webrtc/base/urlencode.cc	/^InternalUrlDecodeString(const std::string & encoded,$/;"	f	namespace:rtc
InternalUrlEncode	webrtc/base/urlencode.cc	/^int InternalUrlEncode(const char *source, char *dest, unsigned int max,$/;"	f	namespace:rtc
InternalUrlEncodeString	webrtc/base/urlencode.cc	/^InternalUrlEncodeString(const std::string & decoded,$/;"	f	namespace:rtc
IntrepolFilter	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_estimator.c	/^__inline static void IntrepolFilter(double *data_ptr, double *intrp)$/;"	f	file:
Intrpol2D	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_estimator.c	/^__inline static void Intrpol2D(double T[3][3], double *x, double *y, double *peak_val)$/;"	f	file:
Invalidate	webrtc/base/weak_ptr.cc	/^void WeakReference::Flag::Invalidate() {$/;"	f	class:rtc::internal::WeakReference::Flag
Invalidate	webrtc/base/weak_ptr.cc	/^void WeakReferenceOwner::Invalidate() {$/;"	f	class:rtc::internal::WeakReferenceOwner
InvalidateWeakPtrs	webrtc/base/weak_ptr.h	/^  void InvalidateWeakPtrs() {$/;"	f	class:rtc::WeakPtrFactory
Inverse	webrtc/common_audio/real_fourier_ooura.cc	/^void RealFourierOoura::Inverse(const complex<float>* src, float* dest) const {$/;"	f	class:webrtc::RealFourierOoura
Inverse	webrtc/common_audio/real_fourier_openmax.cc	/^void RealFourierOpenmax::Inverse(const complex<float>* src, float* dest) const {$/;"	f	class:webrtc::RealFourierOpenmax
InverseFFTAndWindow	webrtc/modules/audio_processing/aecm/aecm_core_c.cc	/^static void InverseFFTAndWindow(AecmCore* aecm,$/;"	f	file:
InverseFFTAndWindow	webrtc/modules/audio_processing/aecm/aecm_core_mips.cc	/^static void InverseFFTAndWindow(AecmCore* aecm,$/;"	f	file:
InverseFft	webrtc/modules/audio_processing/utility/ooura_fft.cc	/^void OouraFft::InverseFft(float* a) const {$/;"	f	class:webrtc::OouraFft
Invert	webrtc/base/virtualsocketserver.cc	/^VirtualSocketServer::Function* VirtualSocketServer::Invert(Function* f) {$/;"	f	class:rtc::VirtualSocketServer
Invoke	webrtc/base/thread.h	/^  ReturnT Invoke(const Location& posted_from, const FunctorT& functor) {$/;"	f	class:rtc::Thread
InvokeInternal	webrtc/base/thread.cc	/^void Thread::InvokeInternal(const Location& posted_from,$/;"	f	class:rtc::Thread
Is32bitAligned	webrtc/system_wrappers/include/atomic32.h	/^  inline bool Is32bitAligned() const {$/;"	f	class:webrtc::Atomic32
IsAbsent	webrtc/base/fileutils.h	/^  static bool IsAbsent(const Pathname &pathname) {$/;"	f	class:rtc::Filesystem
IsAbsent	webrtc/base/fileutils_mock.h	/^    bool IsAbsent(const Pathname &pathname) {$/;"	f	class:rtc::FakeFileSystem
IsAbsent	webrtc/base/unixfilesystem.cc	/^bool UnixFilesystem::IsAbsent(const Pathname& pathname) {$/;"	f	class:rtc::UnixFilesystem
IsAbsent	webrtc/base/win32filesystem.cc	/^bool Win32Filesystem::IsAbsent(const Pathname& path) {$/;"	f	class:rtc::Win32Filesystem
IsAcceptableCipher	webrtc/base/opensslstreamadapter.cc	/^bool OpenSSLStreamAdapter::IsAcceptableCipher(const std::string& cipher,$/;"	f	class:rtc::OpenSSLStreamAdapter
IsAcceptableCipher	webrtc/base/opensslstreamadapter.cc	/^bool OpenSSLStreamAdapter::IsAcceptableCipher(int cipher, KeyType key_type) {$/;"	f	class:rtc::OpenSSLStreamAdapter
IsAcceptableCipher	webrtc/base/sslstreamadapter.cc	/^bool SSLStreamAdapter::IsAcceptableCipher(const std::string& cipher,$/;"	f	class:rtc::SSLStreamAdapter
IsAcceptableCipher	webrtc/base/sslstreamadapter.cc	/^bool SSLStreamAdapter::IsAcceptableCipher(int cipher, KeyType key_type) {$/;"	f	class:rtc::SSLStreamAdapter
IsAnyIP	webrtc/base/socketaddress.cc	/^bool SocketAddress::IsAnyIP() const {$/;"	f	class:rtc::SocketAddress
IsBase64Char	webrtc/base/base64.cc	/^bool Base64::IsBase64Char(char ch) {$/;"	f	class:rtc::Base64
IsBase64Encoded	webrtc/base/base64.cc	/^bool Base64::IsBase64Encoded(const std::string& str) {$/;"	f	class:rtc::Base64
IsBlocking	webrtc/base/socket.h	/^  inline bool IsBlocking() const { return IsBlockingError(GetError()); }$/;"	f	class:rtc::Socket
IsBlockingError	webrtc/base/socket.h	/^inline bool IsBlockingError(int e) {$/;"	f	namespace:rtc
IsBoringSsl	webrtc/base/opensslstreamadapter.cc	/^bool OpenSSLStreamAdapter::IsBoringSsl() {$/;"	f	class:rtc::OpenSSLStreamAdapter
IsBoringSsl	webrtc/base/sslstreamadapter.cc	/^bool SSLStreamAdapter::IsBoringSsl() {$/;"	f	class:rtc::SSLStreamAdapter
IsCacheActive	webrtc/base/httpclient.h	/^  bool IsCacheActive() const { return (cache_state_ > CS_READY); }$/;"	f	class:rtc::HttpClient
IsChildTask	webrtc/base/taskparent.cc	/^bool TaskParent::IsChildTask(Task *task) {$/;"	f	class:rtc::TaskParent
IsClassHelper	webrtc/base/template_util.h	/^struct IsClassHelper {$/;"	s	namespace:rtc::internal
IsClosed	webrtc/base/testutils.h	/^  bool IsClosed() const {$/;"	f	class:testing::SocketTestClient
IsComplete	webrtc/base/socketaddress.cc	/^bool SocketAddress::IsComplete() const {$/;"	f	class:rtc::SocketAddress
IsConnected	webrtc/base/testutils.h	/^  bool IsConnected() const {$/;"	f	class:testing::SocketTestClient
IsConsistent	webrtc/base/buffer.h	/^  bool IsConsistent() const {$/;"	f	class:rtc::BufferT
IsConsistent	webrtc/base/copyonwritebuffer.h	/^  bool IsConsistent() const {$/;"	f	class:rtc::CopyOnWriteBuffer
IsCurrent	webrtc/base/task_queue_gcd.cc	/^bool TaskQueue::IsCurrent() const {$/;"	f	class:rtc::TaskQueue
IsCurrent	webrtc/base/task_queue_gcd.cc	/^bool TaskQueue::IsCurrent(const char* queue_name) {$/;"	f	class:rtc::TaskQueue
IsCurrent	webrtc/base/task_queue_libevent.cc	/^bool TaskQueue::IsCurrent() const {$/;"	f	class:rtc::TaskQueue
IsCurrent	webrtc/base/task_queue_libevent.cc	/^bool TaskQueue::IsCurrent(const char* queue_name) {$/;"	f	class:rtc::TaskQueue
IsCurrent	webrtc/base/task_queue_win.cc	/^bool TaskQueue::IsCurrent() const {$/;"	f	class:rtc::TaskQueue
IsCurrent	webrtc/base/task_queue_win.cc	/^bool TaskQueue::IsCurrent(const char* queue_name) {$/;"	f	class:rtc::TaskQueue
IsCurrent	webrtc/base/thread.h	/^  bool IsCurrent() const {$/;"	f	class:rtc::Thread
IsCurrent	webrtc/base/thread_checker.h	/^  static bool IsCurrent(const ThreadLikeObject* thread_like_object) {$/;"	f	class:rtc::internal::AnnounceOnThread
IsCurrent	webrtc/base/thread_checker.h	/^  static bool IsCurrent(const rtc::ThreadChecker* checker) {$/;"	f	class:rtc::internal::AnnounceOnThread
IsCurrentProcessLowIntegrity	webrtc/base/win32.h	/^inline bool IsCurrentProcessLowIntegrity() {$/;"	f	namespace:rtc
IsDefaultBrowserFirefox	webrtc/base/proxydetect.cc	/^bool IsDefaultBrowserFirefox() {$/;"	f	namespace:rtc
IsDefaultRoute	webrtc/base/network.cc	/^bool IsDefaultRoute(const std::string& network_name) {$/;"	f	namespace:rtc
IsDescriptorClosed	webrtc/base/physicalsocketserver.cc	/^bool SocketDispatcher::IsDescriptorClosed() {$/;"	f	class:rtc::SocketDispatcher
IsDesktopElement	webrtc/base/x11windowpicker.cc	/^bool X11WindowPicker::IsDesktopElement(_XDisplay* display, Window window) {$/;"	f	class:rtc::X11WindowPicker
IsDirectory	webrtc/base/fileutils.cc	/^bool DirectoryIterator::IsDirectory() const {$/;"	f	class:rtc::DirectoryIterator
IsDirectory	webrtc/base/fileutils_mock.h	/^    virtual bool IsDirectory() const {$/;"	f	class:rtc::FakeDirectoryIterator
IsDone	webrtc/base/task.h	/^  bool IsDone() const { return done_; }$/;"	f	class:rtc::Task
IsEndOfAttributeName	webrtc/base/httpcommon.cc	/^inline bool IsEndOfAttributeName(size_t pos, size_t len, const char * data) {$/;"	f	namespace:rtc::__anon19
IsEven	webrtc/base/common.cc	/^bool IsEven(int n) {$/;"	f	namespace:rtc
IsFile	webrtc/base/fileutils.h	/^  static bool IsFile(const Pathname &pathname) {$/;"	f	class:rtc::Filesystem
IsFile	webrtc/base/fileutils_mock.h	/^    bool IsFile(const Pathname &pathname) {$/;"	f	class:rtc::FakeFileSystem
IsFile	webrtc/base/unixfilesystem.cc	/^bool UnixFilesystem::IsFile(const Pathname& pathname) {$/;"	f	class:rtc::UnixFilesystem
IsFile	webrtc/base/win32filesystem.cc	/^bool Win32Filesystem::IsFile(const Pathname &path) {$/;"	f	class:rtc::Win32Filesystem
IsFips180DigestAlgorithm	webrtc/base/messagedigest.cc	/^bool IsFips180DigestAlgorithm(const std::string& alg) {$/;"	f	namespace:rtc
IsFolder	webrtc/base/fileutils.h	/^  static bool IsFolder(const Pathname& pathname) {$/;"	f	class:rtc::Filesystem
IsFolder	webrtc/base/fileutils_mock.h	/^    bool IsFolder(const Pathname &pathname) {$/;"	f	class:rtc::FakeFileSystem
IsFolder	webrtc/base/unixfilesystem.cc	/^bool UnixFilesystem::IsFolder(const Pathname &path) {$/;"	f	class:rtc::UnixFilesystem
IsFolder	webrtc/base/win32filesystem.cc	/^bool Win32Filesystem::IsFolder(const Pathname &path) {$/;"	f	class:rtc::Win32Filesystem
IsFolderDelimiter	webrtc/base/pathutils.cc	/^bool Pathname::IsFolderDelimiter(char ch) {$/;"	f	class:rtc::Pathname
IsGcmCryptoSuite	webrtc/base/sslstreamadapter.cc	/^bool IsGcmCryptoSuite(int crypto_suite) {$/;"	f	namespace:rtc
IsGcmCryptoSuiteName	webrtc/base/sslstreamadapter.cc	/^bool IsGcmCryptoSuiteName(const std::string& crypto_suite) {$/;"	f	namespace:rtc
IsHostBigEndian	webrtc/base/byteorder.h	/^inline bool IsHostBigEndian() {$/;"	f	namespace:rtc
IsIgnoredIPv6	webrtc/base/network.cc	/^bool IsIgnoredIPv6(const InterfaceAddress& ip) {$/;"	f	namespace:rtc::__anon34
IsIgnoredNetwork	webrtc/base/network.cc	/^bool BasicNetworkManager::IsIgnoredNetwork(const Network& network) const {$/;"	f	class:rtc::BasicNetworkManager
IsIgnoredNetwork	webrtc/base/network_unittest.cc	/^  bool IsIgnoredNetwork(BasicNetworkManager& network_manager,$/;"	f	class:rtc::NetworkTest
IsInBeam	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.cc	/^bool NonlinearBeamformer::IsInBeam(const SphericalPointf& spherical_point) {$/;"	f	class:webrtc::NonlinearBeamformer
IsInitialized	webrtc/base/macifaddrs_converter.cc	/^bool IPv6AttributesGetter::IsInitialized() const {$/;"	f	class:rtc::__anon29::IPv6AttributesGetter
IsInitialized	webrtc/base/messagequeue.cc	/^bool MessageQueueManager::IsInitialized() {$/;"	f	class:rtc::MessageQueueManager
IsInitialized	webrtc/base/rate_statistics.cc	/^bool RateStatistics::IsInitialized() const {$/;"	f	class:webrtc::RateStatistics
IsKeyEmpty	webrtc/base/win32regkey.cc	/^bool RegKey::IsKeyEmpty(const wchar_t* full_key_name) {$/;"	f	class:rtc::RegKey
IsLegalName	webrtc/base/optionsfile.cc	/^bool OptionsFile::IsLegalName(const std::string &name) {$/;"	f	class:rtc::OptionsFile
IsLegalValue	webrtc/base/optionsfile.cc	/^bool OptionsFile::IsLegalValue(const std::string &value) {$/;"	f	class:rtc::OptionsFile
IsLeopardOrLater	webrtc/base/macwindowpicker_unittest.cc	/^bool IsLeopardOrLater() {$/;"	f	namespace:rtc
IsLessThan	webrtc/base/socketaddress_unittest.cc	/^bool IsLessThan(const SocketAddress& addr1, const SocketAddress& addr2) {$/;"	f	namespace:rtc
IsLoaded	webrtc/base/latebindingsymboltable.cc	/^bool LateBindingSymbolTable::IsLoaded() const {$/;"	f	class:rtc::LateBindingSymbolTable
IsLocked	webrtc/base/diskcache.h	/^  bool IsLocked() const { return locked_; }$/;"	f	class:rtc::CacheLock
IsLocked	webrtc/base/messagequeue_unittest.cc	/^  bool IsLocked() {$/;"	f	class:MessageQueueTest
IsLocked_Worker	webrtc/base/messagequeue_unittest.cc	/^  bool IsLocked_Worker() {$/;"	f	class:MessageQueueTest
IsLoopbackIP	webrtc/base/socketaddress.cc	/^bool SocketAddress::IsLoopbackIP() const {$/;"	f	class:rtc::SocketAddress
IsNewerSequenceNumber	webrtc/modules/include/module_common_types.h	/^inline bool IsNewerSequenceNumber(uint16_t sequence_number,$/;"	f	namespace:webrtc
IsNewerTimestamp	webrtc/modules/include/module_common_types.h	/^inline bool IsNewerTimestamp(uint32_t timestamp, uint32_t prev_timestamp) {$/;"	f	namespace:webrtc
IsNil	webrtc/base/ipaddress.cc	/^bool IPAddress::IsNil() const {$/;"	f	class:rtc::IPAddress
IsNil	webrtc/base/socketaddress.cc	/^bool SocketAddress::IsNil() const {$/;"	f	class:rtc::SocketAddress
IsOdd	webrtc/base/common.cc	/^bool IsOdd(int n) {$/;"	f	namespace:rtc
IsOpen	webrtc/base/file.cc	/^bool File::IsOpen() {$/;"	f	class:rtc::File
IsOutBufferEmpty	webrtc/base/asynctcpsocket.h	/^  bool IsOutBufferEmpty() const { return outbuf_.size() == 0; }$/;"	f	class:rtc::AsyncTCPSocketBase
IsOwned	webrtc/base/thread.cc	/^bool Thread::IsOwned() {$/;"	f	class:rtc::Thread
IsPrivateIP	webrtc/base/socketaddress.cc	/^bool SocketAddress::IsPrivateIP() const {$/;"	f	class:rtc::SocketAddress
IsPrivateV4	webrtc/base/ipaddress.cc	/^bool IsPrivateV4(uint32_t ip_in_host_order) {$/;"	f	namespace:rtc
IsQuitting	webrtc/base/messagequeue.cc	/^bool MessageQueue::IsQuitting() {$/;"	f	class:rtc::MessageQueue
IsRefCounted	webrtc/base/bind.h	/^class IsRefCounted {$/;"	c	namespace:rtc::detail
IsRunning	webrtc/base/platform_thread.cc	/^bool PlatformThread::IsRunning() const {$/;"	f	class:rtc::PlatformThread
IsScreencastingAvailable	webrtc/base/testutils.h	/^inline bool IsScreencastingAvailable() {$/;"	f	namespace:testing
IsSet	webrtc/base/proxydetect.cc	/^  bool IsSet(const char * name) const {$/;"	f	struct:StringMap
IsSignalSet	webrtc/base/physicalsocketserver.cc	/^  bool IsSignalSet(int signum) const {$/;"	f	class:rtc::PosixSignalHandler
IsSpeech	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer.cc	/^bool IntelligibilityEnhancer::IsSpeech(const float* audio) {$/;"	f	class:webrtc::IntelligibilityEnhancer
IsSupported	webrtc/base/windowpickerfactory.h	/^  static bool IsSupported() {$/;"	f	class:rtc::WindowPickerFactory
IsSupportedForAudio	webrtc/config.cc	/^bool RtpExtension::IsSupportedForAudio(const std::string& uri) {$/;"	f	class:webrtc::RtpExtension
IsSupportedForVideo	webrtc/config.cc	/^bool RtpExtension::IsSupportedForVideo(const std::string& uri) {$/;"	f	class:webrtc::RtpExtension
IsTemporaryPath	webrtc/base/fileutils.h	/^  static bool IsTemporaryPath(const Pathname& pathname) {$/;"	f	class:rtc::Filesystem
IsTemporaryPath	webrtc/base/fileutils_mock.h	/^    bool IsTemporaryPath(const Pathname &pathname) {$/;"	f	class:rtc::FakeFileSystem
IsTemporaryPath	webrtc/base/unixfilesystem.cc	/^bool UnixFilesystem::IsTemporaryPath(const Pathname& pathname) {$/;"	f	class:rtc::UnixFilesystem
IsTemporaryPath	webrtc/base/win32filesystem.cc	/^bool Win32Filesystem::IsTemporaryPath(const Pathname& pathname) {$/;"	f	class:rtc::Win32Filesystem
IsThreadRefEqual	webrtc/base/platform_thread.cc	/^bool IsThreadRefEqual(const PlatformThreadRef& a, const PlatformThreadRef& b) {$/;"	f	namespace:rtc
IsTlsConnected	webrtc/base/opensslstreamadapter.cc	/^bool OpenSSLStreamAdapter::IsTlsConnected() {$/;"	f	class:rtc::OpenSSLStreamAdapter
IsUnresolvedIP	webrtc/base/socketaddress.cc	/^bool SocketAddress::IsUnresolvedIP() const {$/;"	f	class:rtc::SocketAddress
IsUnspecOrEmptyIP	webrtc/base/socket_unittest.cc	/^bool IsUnspecOrEmptyIP(const IPAddress& address) {$/;"	f	namespace:rtc
IsValid	webrtc/base/sslidentity.cc	/^bool KeyParams::IsValid() const {$/;"	f	class:rtc::KeyParams
IsValid	webrtc/base/testutils.h	/^  bool IsValid() const { return display_ != NULL; }$/;"	f	struct:testing::XDisplay
IsValid	webrtc/base/weak_ptr.cc	/^bool WeakReference::Flag::IsValid() const {$/;"	f	class:rtc::internal::WeakReference::Flag
IsValid	webrtc/base/window.h	/^  bool IsValid() const { return id_ != 0; }$/;"	f	class:rtc::WindowId
IsValid	webrtc/base/window.h	/^  bool IsValid() const { return index_ != -1; }$/;"	f	class:rtc::DesktopId
IsValid	webrtc/base/winping.h	/^    bool IsValid() { return valid_; }$/;"	f	class:rtc::WinPing
IsValidUrlChar	webrtc/base/urlencode.cc	/^static bool IsValidUrlChar(char ch, bool unsafe_only) {$/;"	f	file:
IsValueInRangeForNumericType	webrtc/base/safe_conversions.h	/^inline bool IsValueInRangeForNumericType(Src value) {$/;"	f	namespace:rtc
IsVisible	webrtc/base/macwindowpicker.cc	/^bool MacWindowPicker::IsVisible(const WindowId& id) {$/;"	f	class:rtc::MacWindowPicker
IsVisible	webrtc/base/win32windowpicker.cc	/^bool Win32WindowPicker::IsVisible(const WindowId& id) {$/;"	f	class:rtc::Win32WindowPicker
IsVisible	webrtc/base/x11windowpicker.cc	/^  bool IsVisible(const WindowId& id) {$/;"	f	class:rtc::XWindowEnumerator
IsVisible	webrtc/base/x11windowpicker.cc	/^bool X11WindowPicker::IsVisible(const WindowId& id) {$/;"	f	class:rtc::X11WindowPicker
IsWindows8OrLater	webrtc/base/win32.h	/^inline bool IsWindows8OrLater() {$/;"	f	namespace:rtc
IsWindowsVistaOrLater	webrtc/base/win32.h	/^inline bool IsWindowsVistaOrLater() {$/;"	f	namespace:rtc
IsWindowsXpOrLater	webrtc/base/win32.h	/^inline bool IsWindowsXpOrLater() {$/;"	f	namespace:rtc
IsacBandwidthInfo	webrtc/modules/audio_coding/codecs/isac/bandwidth_info.h	/^} IsacBandwidthInfo;$/;"	t	typeref:struct:__anon122
IsacSamplingRate	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^enum IsacSamplingRate {kIsacWideband = 16,  kIsacSuperWideband = 32};$/;"	g
IsacSaveEncoderData	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^} IsacSaveEncoderData;$/;"	t	typeref:struct:__anon134
Iterate	webrtc/base/fileutils.cc	/^bool DirectoryIterator::Iterate(const Pathname &dir) {$/;"	f	class:rtc::DirectoryIterator
Iterate	webrtc/base/fileutils_mock.h	/^    virtual bool Iterate(const Pathname& path) {$/;"	f	class:rtc::FakeDirectoryIterator
IterateDirectory	webrtc/base/fileutils.cc	/^DirectoryIterator* FilesystemInterface::IterateDirectory() {$/;"	f	class:rtc::FilesystemInterface
IterateDirectory	webrtc/base/fileutils.h	/^  static DirectoryIterator *IterateDirectory() {$/;"	f	class:rtc::Filesystem
IterateDirectory	webrtc/base/fileutils_mock.h	/^    virtual DirectoryIterator *IterateDirectory() {$/;"	f	class:rtc::FakeFileSystem
IteratorList	webrtc/base/physicalsocketserver.h	/^  typedef std::vector<size_t*> IteratorList;$/;"	t	class:rtc::PhysicalSocketServer
JBabsMax	webrtc/modules/include/module_common_types.h	/^  uint16_t JBabsMax;$/;"	m	struct:webrtc::RTCPVoIPMetric
JBmax	webrtc/modules/include/module_common_types.h	/^  uint16_t JBmax;$/;"	m	struct:webrtc::RTCPVoIPMetric
JBnominal	webrtc/modules/include/module_common_types.h	/^  uint16_t JBnominal;$/;"	m	struct:webrtc::RTCPVoIPMetric
JNI_FLAGS	jni/Android.mk	/^JNI_FLAGS		:= \\$/;"	m
Join	webrtc/base/thread.cc	/^void Thread::Join() {$/;"	f	class:rtc::Thread
Join	webrtc/base/thread_checker_unittest.cc	/^  void Join() {$/;"	f	class:rtc::__anon69::CallDoStuffOnThread
Join	webrtc/base/thread_checker_unittest.cc	/^  void Join() {$/;"	f	class:rtc::__anon69::DeleteThreadCheckerClassOnThread
JsonArrayToBoolVector	webrtc/base/json.cc	/^bool JsonArrayToBoolVector(const Json::Value& in,$/;"	f	namespace:rtc
JsonArrayToDoubleVector	webrtc/base/json.cc	/^bool JsonArrayToDoubleVector(const Json::Value& in,$/;"	f	namespace:rtc
JsonArrayToIntVector	webrtc/base/json.cc	/^bool JsonArrayToIntVector(const Json::Value& in,$/;"	f	namespace:rtc
JsonArrayToStringVector	webrtc/base/json.cc	/^bool JsonArrayToStringVector(const Json::Value& in,$/;"	f	namespace:rtc
JsonArrayToUIntVector	webrtc/base/json.cc	/^bool JsonArrayToUIntVector(const Json::Value& in,$/;"	f	namespace:rtc
JsonArrayToValueVector	webrtc/base/json.cc	/^bool JsonArrayToValueVector(const Json::Value& in,$/;"	f	namespace:rtc
JsonArrayToVector	webrtc/base/json.cc	/^bool JsonArrayToVector(const Json::Value& value,$/;"	f	namespace:rtc::__anon23
JsonValueToString	webrtc/base/json.cc	/^std::string JsonValueToString(const Json::Value& json) {$/;"	f	namespace:rtc
JsonVecOf3	webrtc/base/json_unittest.cc	/^Json::Value JsonVecOf3(const T& a, const T& b, const T& c) {$/;"	f	namespace:rtc::__anon25
KEY_LEN_CHARS	webrtc/system_wrappers/source/trace_impl.cc	/^#define KEY_LEN_CHARS /;"	d	file:
KLABEL	webrtc/base/logging.h	/^#define KLABEL(/;"	d
KLT_NUM_AVG_GAIN	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_tables.h	/^#define KLT_NUM_AVG_GAIN /;"	d
KLT_NUM_AVG_SHAPE	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_tables.h	/^#define KLT_NUM_AVG_SHAPE /;"	d
KLT_NUM_MODELS	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_tables.h	/^#define KLT_NUM_MODELS /;"	d
KLT_ORDER_GAIN	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_tables.h	/^#define KLT_ORDER_GAIN /;"	d
KLT_ORDER_SHAPE	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_tables.h	/^#define KLT_ORDER_SHAPE /;"	d
KLT_STEPSIZE	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_tables.h	/^#define KLT_STEPSIZE /;"	d
KT_DEFAULT	webrtc/base/sslidentity.h	/^enum KeyType { KT_RSA, KT_ECDSA, KT_LAST, KT_DEFAULT = KT_ECDSA };$/;"	e	enum:rtc::KeyType
KT_ECDSA	webrtc/base/sslidentity.h	/^enum KeyType { KT_RSA, KT_ECDSA, KT_LAST, KT_DEFAULT = KT_ECDSA };$/;"	e	enum:rtc::KeyType
KT_LAST	webrtc/base/sslidentity.h	/^enum KeyType { KT_RSA, KT_ECDSA, KT_LAST, KT_DEFAULT = KT_ECDSA };$/;"	e	enum:rtc::KeyType
KT_RSA	webrtc/base/sslidentity.h	/^enum KeyType { KT_RSA, KT_ECDSA, KT_LAST, KT_DEFAULT = KT_ECDSA };$/;"	e	enum:rtc::KeyType
KaiserBesselDerived	webrtc/common_audio/window_generator.cc	/^void WindowGenerator::KaiserBesselDerived(float alpha, size_t length,$/;"	f	class:webrtc::WindowGenerator
KeepRefUntilDone	webrtc/base/keep_ref_until_done.h	/^static inline Callback0<void> KeepRefUntilDone($/;"	f	namespace:rtc
KeepRefUntilDone	webrtc/base/keep_ref_until_done.h	/^static inline Callback0<void> KeepRefUntilDone(ObjectT* object) {$/;"	f	namespace:rtc
KeyParams	webrtc/base/sslidentity.cc	/^KeyParams::KeyParams(KeyType key_type) {$/;"	f	class:rtc::KeyParams
KeyParams	webrtc/base/sslidentity.h	/^class KeyParams {$/;"	c	namespace:rtc
KeyType	webrtc/base/sslidentity.h	/^enum KeyType { KT_RSA, KT_ECDSA, KT_LAST, KT_DEFAULT = KT_ECDSA };$/;"	g	namespace:rtc
KeyboardChannelIndex	webrtc/modules/audio_processing/audio_buffer.cc	/^int KeyboardChannelIndex(const StreamConfig& stream_config) {$/;"	f	namespace:webrtc::__anon178
LASTLABEL	webrtc/base/logging.h	/^#define LASTLABEL /;"	d
LAST_SYSTEM_ERROR	webrtc/base/logging.h	/^#define LAST_SYSTEM_ERROR /;"	d
LATE	webrtc/base/dbus.cc	/^#undef LATE$/;"	d	file:
LATE_BINDING_SYMBOL_TABLE_CLASS_NAME	webrtc/base/latebindingsymboltable_unittest.cc	/^#define LATE_BINDING_SYMBOL_TABLE_CLASS_NAME /;"	d	file:
LATE_BINDING_SYMBOL_TABLE_CLASS_NAME	webrtc/base/libdbusglibsymboltable.cc	/^#define LATE_BINDING_SYMBOL_TABLE_CLASS_NAME /;"	d	file:
LATE_BINDING_SYMBOL_TABLE_CLASS_NAME	webrtc/base/libdbusglibsymboltable.h	/^#define LATE_BINDING_SYMBOL_TABLE_CLASS_NAME /;"	d
LATE_BINDING_SYMBOL_TABLE_DLL_NAME	webrtc/base/latebindingsymboltable_unittest.cc	/^#define LATE_BINDING_SYMBOL_TABLE_DLL_NAME /;"	d	file:
LATE_BINDING_SYMBOL_TABLE_DLL_NAME	webrtc/base/libdbusglibsymboltable.cc	/^#define LATE_BINDING_SYMBOL_TABLE_DLL_NAME /;"	d	file:
LATE_BINDING_SYMBOL_TABLE_SYMBOLS_LIST	webrtc/base/latebindingsymboltable_unittest.cc	/^#define LATE_BINDING_SYMBOL_TABLE_SYMBOLS_LIST /;"	d	file:
LATE_BINDING_SYMBOL_TABLE_SYMBOLS_LIST	webrtc/base/libdbusglibsymboltable.cc	/^#define LATE_BINDING_SYMBOL_TABLE_SYMBOLS_LIST /;"	d	file:
LATE_BINDING_SYMBOL_TABLE_SYMBOLS_LIST	webrtc/base/libdbusglibsymboltable.h	/^#define LATE_BINDING_SYMBOL_TABLE_SYMBOLS_LIST /;"	d
LB_TOTAL_DELAY_SAMPLES	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define LB_TOTAL_DELAY_SAMPLES /;"	d
LE16	webrtc/base/testutils.h	/^#define LE16(/;"	d
LE32	webrtc/base/testutils.h	/^#define LE32(/;"	d
LE64	webrtc/base/testutils.h	/^#define LE64(/;"	d
LEN_CHECK_SUM_WORD8	webrtc/modules/audio_coding/codecs/isac/main/source/isac.c	/^#define LEN_CHECK_SUM_WORD8 /;"	d	file:
LERROR	webrtc/base/logging.h	/^  LERROR = LS_ERROR$/;"	e	enum:rtc::LoggingSeverity
LEVINSON_EPS	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_analysis.c	/^#define LEVINSON_EPS /;"	d	file:
LIBDBUS_GLIB_CLASS_NAME	webrtc/base/libdbusglibsymboltable.h	/^#define LIBDBUS_GLIB_CLASS_NAME /;"	d
LIBDBUS_GLIB_SYMBOLS_LIST	webrtc/base/libdbusglibsymboltable.h	/^#define LIBDBUS_GLIB_SYMBOLS_LIST /;"	d
LIBM_SYMBOLS_CLASS_NAME	webrtc/base/latebindingsymboltable_unittest.cc	/^#define LIBM_SYMBOLS_CLASS_NAME /;"	d	file:
LIBM_SYMBOLS_LIST	webrtc/base/latebindingsymboltable_unittest.cc	/^#define LIBM_SYMBOLS_LIST /;"	d	file:
LIM_PEAK_SPACE_FLAT_DIFF	webrtc/modules/audio_processing/ns/nsx_defines.h	/^#define LIM_PEAK_SPACE_FLAT_DIFF /;"	d
LIM_PEAK_WEIGHT_FLAT_DIFF	webrtc/modules/audio_processing/ns/nsx_defines.h	/^#define LIM_PEAK_WEIGHT_FLAT_DIFF /;"	d
LOCAL_ARM_NEON	jni/Android.mk	/^LOCAL_ARM_NEON  := true$/;"	m
LOCAL_CFLAGS	jni/Android.mk	/^LOCAL_CFLAGS	:= \\$/;"	m
LOCAL_CPPFLAGS	jni/Android.mk	/^LOCAL_CPPFLAGS	:= \\$/;"	m
LOCAL_CXXFLAGS	jni/Android.mk	/^LOCAL_CXXFLAGS	:= \\$/;"	m
LOCAL_C_INCLUDES	jni/Android.mk	/^LOCAL_C_INCLUDES:= \\$/;"	m
LOCAL_LDLIBS	jni/Android.mk	/^LOCAL_LDLIBS	:= -lm -llog$/;"	m
LOCAL_MODULE	jni/Android.mk	/^LOCAL_MODULE    := webrtc_audio_processing$/;"	m
LOCAL_PATH	jni/Android.mk	/^LOCAL_PATH := $(call my-dir)$/;"	m
LOCAL_SRC_FILES	jni/Android.mk	/^LOCAL_SRC_FILES := \\$/;"	m
LOCKABLE	webrtc/base/thread_annotations.h	/^#define LOCKABLE /;"	d
LOCKS_EXCLUDED	webrtc/base/thread_annotations.h	/^#define LOCKS_EXCLUDED(/;"	d
LOCKS_EXCLUDED	webrtc/base/thread_annotations_unittest.cc	/^  void UnprotectedFunction() LOCKS_EXCLUDED(anylock_, lock_, pt_lock_) {$/;"	f	class:__anon68::ThreadSafe
LOCK_RETURNED	webrtc/base/thread_annotations.h	/^#define LOCK_RETURNED(/;"	d
LOCK_RETURNED	webrtc/base/thread_annotations_unittest.cc	/^  const Lock& GetLock() LOCK_RETURNED(lock_) { return lock_; }$/;"	f	class:__anon68::ThreadSafe	file:
LOG	webrtc/base/logging.h	/^#define LOG(/;"	d
LOG	webrtc/system_wrappers/include/logging.h	/^#define LOG(/;"	d
LOG2EXP	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define LOG2EXP /;"	d
LOGI	webrtc/modules/audio_processing/test/android/apmtest/jni/main.c	/^#define LOGI(/;"	d	file:
LOGW	webrtc/modules/audio_processing/test/android/apmtest/jni/main.c	/^#define LOGW(/;"	d	file:
LOG_CHECK_LEVEL	webrtc/base/logging.h	/^#define LOG_CHECK_LEVEL(/;"	d
LOG_CHECK_LEVEL_V	webrtc/base/logging.h	/^#define LOG_CHECK_LEVEL_V(/;"	d
LOG_E	webrtc/base/logging.h	/^#define LOG_E(/;"	d
LOG_ERR	webrtc/base/logging.h	/^#define LOG_ERR(/;"	d
LOG_ERRNO	webrtc/base/logging.h	/^#define LOG_ERRNO(/;"	d
LOG_ERRNO_EX	webrtc/base/logging.h	/^#define LOG_ERRNO_EX(/;"	d
LOG_ERR_EX	webrtc/base/logging.h	/^#define LOG_ERR_EX(/;"	d
LOG_F	webrtc/base/logging.h	/^#define LOG_F(/;"	d
LOG_F	webrtc/system_wrappers/include/logging.h	/^#define LOG_F(/;"	d
LOG_GLE	webrtc/base/logging.h	/^#define LOG_GLE(/;"	d
LOG_GLEM	webrtc/base/logging.h	/^#define LOG_GLEM(/;"	d
LOG_GLE_EX	webrtc/base/logging.h	/^#define LOG_GLE_EX(/;"	d
LOG_SEVERITY_PRECONDITION	webrtc/base/logging.h	/^#define LOG_SEVERITY_PRECONDITION(/;"	d
LOG_SEVERITY_PRECONDITION	webrtc/system_wrappers/include/logging.h	/^#define LOG_SEVERITY_PRECONDITION(/;"	d
LOG_T	webrtc/base/logging.h	/^#define LOG_T(/;"	d
LOG_TAG	WebRTCAudioProcessing_jni.h	/^#define LOG_TAG /;"	d
LOG_TAG	webrtc/base/logging.h	/^#define LOG_TAG(/;"	d
LOG_TAG	webrtc/modules/audio_processing/audio_processing_impl.cc	/^#define LOG_TAG /;"	d	file:
LOG_T_F	webrtc/base/logging.h	/^#define LOG_T_F(/;"	d
LOG_V	webrtc/base/logging.h	/^#define LOG_V(/;"	d
LOG_V	webrtc/system_wrappers/include/logging.h	/^#define LOG_V(/;"	d
LOOP2_A_LENGTH	webrtc/common_audio/signal_processing/filter_ar_fast_q12_armv7.S	/^LOOP2_A_LENGTH:$/;"	l
LOOP_A_LENGTH	webrtc/common_audio/signal_processing/filter_ar_fast_q12_armv7.S	/^LOOP_A_LENGTH:$/;"	l
LOOP_GENERIC	webrtc/common_audio/signal_processing/complex_bit_reverse_arm.S	/^LOOP_GENERIC:$/;"	l
LOOP_LENGTH	webrtc/common_audio/signal_processing/filter_ar_fast_q12_armv7.S	/^LOOP_LENGTH:$/;"	l
LOOP_SHIFT	webrtc/common_audio/signal_processing/complex_bit_reverse_arm.S	/^LOOP_SHIFT:$/;"	l
LOOP_STAGES_7_OR_8	webrtc/common_audio/signal_processing/complex_bit_reverse_arm.S	/^LOOP_STAGES_7_OR_8:$/;"	l
LPC_GAIN_ORDER	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_tables.h	/^#define LPC_GAIN_ORDER /;"	d
LPC_GAIN_SCALE	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_tables.h	/^#define LPC_GAIN_SCALE /;"	d
LPC_HIBAND_ORDER	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_tables.h	/^#define LPC_HIBAND_ORDER /;"	d
LPC_HIBAND_SCALE	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_tables.h	/^#define LPC_HIBAND_SCALE /;"	d
LPC_LOBAND_ORDER	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_tables.h	/^#define LPC_LOBAND_ORDER /;"	d
LPC_LOBAND_SCALE	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_tables.h	/^#define LPC_LOBAND_SCALE /;"	d
LPC_SHAPE_ORDER	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_tables.h	/^#define LPC_SHAPE_ORDER /;"	d
LPCcoeffs_hi	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  double      LPCcoeffs_hi[(ORDERHI+1)*SUBFRAMES*2];$/;"	m	struct:__anon134
LPCcoeffs_lo	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  double      LPCcoeffs_lo[(ORDERLO+1)*SUBFRAMES*2];$/;"	m	struct:__anon134
LPCindex_g	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  int         LPCindex_g[12*2];  \/* KLT_ORDER_GAIN = 12 *\/$/;"	m	struct:__anon134
LPCindex_s	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  int         LPCindex_s[108*2]; \/* KLT_ORDER_SHAPE = 108 *\/$/;"	m	struct:__anon134
LPWINHTTP_PROXY_INFO	webrtc/base/proxydetect.cc	/^} WINHTTP_PROXY_INFO, * LPWINHTTP_PROXY_INFO;$/;"	t	typeref:struct:__anon44	file:
LP_ORDER	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define LP_ORDER /;"	d
LRT_FEATURE_THR	webrtc/modules/audio_processing/ns/defines.h	/^#define LRT_FEATURE_THR /;"	d
LRT_TAVG	webrtc/modules/audio_processing/ns/defines.h	/^#define LRT_TAVG /;"	d
LS_ERROR	webrtc/base/java/src/org/webrtc/Logging.java	/^  public enum Severity { LS_SENSITIVE, LS_VERBOSE, LS_INFO, LS_WARNING, LS_ERROR, LS_NONE }$/;"	e	enum:Logging.Severity	file:
LS_ERROR	webrtc/base/logging.h	/^  LS_ERROR,$/;"	e	enum:rtc::LoggingSeverity
LS_ERROR	webrtc/system_wrappers/include/logging.h	/^  LS_SENSITIVE, LS_VERBOSE, LS_INFO, LS_WARNING, LS_ERROR$/;"	e	enum:webrtc::LoggingSeverity
LS_INFO	webrtc/base/java/src/org/webrtc/Logging.java	/^  public enum Severity { LS_SENSITIVE, LS_VERBOSE, LS_INFO, LS_WARNING, LS_ERROR, LS_NONE }$/;"	e	enum:Logging.Severity	file:
LS_INFO	webrtc/base/logging.h	/^  LS_INFO,$/;"	e	enum:rtc::LoggingSeverity
LS_INFO	webrtc/system_wrappers/include/logging.h	/^  LS_SENSITIVE, LS_VERBOSE, LS_INFO, LS_WARNING, LS_ERROR$/;"	e	enum:webrtc::LoggingSeverity
LS_LOCKED	webrtc/base/diskcache.h	/^  enum LockState { LS_UNLOCKED, LS_LOCKED, LS_UNLOCKING };$/;"	e	enum:rtc::DiskCache::LockState
LS_NONE	webrtc/base/java/src/org/webrtc/Logging.java	/^  public enum Severity { LS_SENSITIVE, LS_VERBOSE, LS_INFO, LS_WARNING, LS_ERROR, LS_NONE }$/;"	e	enum:Logging.Severity	file:
LS_NONE	webrtc/base/logging.h	/^  LS_NONE,$/;"	e	enum:rtc::LoggingSeverity
LS_SENSITIVE	webrtc/base/java/src/org/webrtc/Logging.java	/^  public enum Severity { LS_SENSITIVE, LS_VERBOSE, LS_INFO, LS_WARNING, LS_ERROR, LS_NONE }$/;"	e	enum:Logging.Severity	file:
LS_SENSITIVE	webrtc/base/logging.h	/^  LS_SENSITIVE,$/;"	e	enum:rtc::LoggingSeverity
LS_SENSITIVE	webrtc/system_wrappers/include/logging.h	/^  LS_SENSITIVE, LS_VERBOSE, LS_INFO, LS_WARNING, LS_ERROR$/;"	e	enum:webrtc::LoggingSeverity
LS_UNLOCKED	webrtc/base/diskcache.h	/^  enum LockState { LS_UNLOCKED, LS_LOCKED, LS_UNLOCKING };$/;"	e	enum:rtc::DiskCache::LockState
LS_UNLOCKING	webrtc/base/diskcache.h	/^  enum LockState { LS_UNLOCKED, LS_LOCKED, LS_UNLOCKING };$/;"	e	enum:rtc::DiskCache::LockState
LS_VERBOSE	webrtc/base/java/src/org/webrtc/Logging.java	/^  public enum Severity { LS_SENSITIVE, LS_VERBOSE, LS_INFO, LS_WARNING, LS_ERROR, LS_NONE }$/;"	e	enum:Logging.Severity	file:
LS_VERBOSE	webrtc/base/logging.h	/^  LS_VERBOSE,$/;"	e	enum:rtc::LoggingSeverity
LS_VERBOSE	webrtc/system_wrappers/include/logging.h	/^  LS_SENSITIVE, LS_VERBOSE, LS_INFO, LS_WARNING, LS_ERROR$/;"	e	enum:webrtc::LoggingSeverity
LS_WARNING	webrtc/base/java/src/org/webrtc/Logging.java	/^  public enum Severity { LS_SENSITIVE, LS_VERBOSE, LS_INFO, LS_WARNING, LS_ERROR, LS_NONE }$/;"	e	enum:Logging.Severity	file:
LS_WARNING	webrtc/base/logging.h	/^  LS_WARNING,$/;"	e	enum:rtc::LoggingSeverity
LS_WARNING	webrtc/system_wrappers/include/logging.h	/^  LS_SENSITIVE, LS_VERBOSE, LS_INFO, LS_WARNING, LS_ERROR$/;"	e	enum:webrtc::LoggingSeverity
Label	webrtc/base/win32.h	/^    SID_AND_ATTRIBUTES Label;$/;"	m	struct:_TOKEN_MANDATORY_LABEL
LappedTransform	webrtc/common_audio/lapped_transform.cc	/^LappedTransform::LappedTransform(size_t num_in_channels,$/;"	f	class:webrtc::LappedTransform
LappedTransform	webrtc/common_audio/lapped_transform.h	/^class LappedTransform {$/;"	c	namespace:webrtc
LastError	webrtc/base/file_unittest.cc	/^int LastError() {$/;"	f	namespace:rtc
LateBindingSymbolTable	webrtc/base/latebindingsymboltable.cc	/^LateBindingSymbolTable::LateBindingSymbolTable(const TableInfo *info,$/;"	f	class:rtc::LateBindingSymbolTable
LateBindingSymbolTable	webrtc/base/latebindingsymboltable.h	/^class LateBindingSymbolTable {$/;"	c	namespace:rtc
LatestSequenceNumber	webrtc/modules/include/module_common_types.h	/^inline uint16_t LatestSequenceNumber(uint16_t sequence_number1,$/;"	f	namespace:webrtc
LatestTimestamp	webrtc/modules/include/module_common_types.h	/^inline uint32_t LatestTimestamp(uint32_t timestamp1, uint32_t timestamp2) {$/;"	f	namespace:webrtc
LayoutFromChannels	webrtc/modules/audio_processing/test/test_utils.cc	/^AudioProcessing::ChannelLayout LayoutFromChannels(size_t num_channels) {$/;"	f	namespace:webrtc
LayoutHasKeyboard	webrtc/modules/audio_processing/audio_processing_impl.cc	/^static bool LayoutHasKeyboard(AudioProcessing::ChannelLayout layout) {$/;"	f	namespace:webrtc::__anon180
LegacyAgc	webrtc/modules/audio_processing/agc/legacy/analog_agc.h	/^} LegacyAgc;$/;"	t	typeref:struct:__anon171
Length	webrtc/base/bytebuffer.h	/^  size_t Length() const { return end_ - start_; }$/;"	f	class:rtc::ByteBufferReader
Length	webrtc/base/bytebuffer.h	/^  size_t Length() const { return end_; }$/;"	f	class:rtc::ByteBufferWriter
LengthVerifierFunction	webrtc/base/swap_queue_unittest.cc	/^bool LengthVerifierFunction(const std::vector<int>& v) {$/;"	f	namespace:webrtc::__anon63
LengthVerifierFunctor	webrtc/base/swap_queue_unittest.cc	/^  explicit LengthVerifierFunctor(size_t length) : length_(length) {}$/;"	f	class:webrtc::__anon63::LengthVerifierFunctor
LengthVerifierFunctor	webrtc/base/swap_queue_unittest.cc	/^class LengthVerifierFunctor {$/;"	c	namespace:webrtc::__anon63	file:
Level	webrtc/modules/audio_processing/include/audio_processing.h	/^  enum Level {$/;"	g	class:webrtc::NoiseSuppression
LevelController	webrtc/modules/audio_processing/include/audio_processing.h	/^    struct LevelController {$/;"	s	struct:webrtc::AudioProcessing::Config
LevelController	webrtc/modules/audio_processing/level_controller/level_controller.cc	/^LevelController::LevelController()$/;"	f	class:webrtc::LevelController
LevelController	webrtc/modules/audio_processing/level_controller/level_controller.h	/^class LevelController {$/;"	c	namespace:webrtc
LevelEstimator	webrtc/modules/audio_processing/include/audio_processing.h	/^class LevelEstimator {$/;"	c	namespace:webrtc
LevelEstimatorImpl	webrtc/modules/audio_processing/level_estimator_impl.cc	/^LevelEstimatorImpl::LevelEstimatorImpl(rtc::CriticalSection* crit)$/;"	f	class:webrtc::LevelEstimatorImpl
LevelEstimatorImpl	webrtc/modules/audio_processing/level_estimator_impl.h	/^class LevelEstimatorImpl : public LevelEstimator {$/;"	c	namespace:webrtc
LevelFromGainError	webrtc/modules/audio_processing/agc/agc_manager_direct.cc	/^int LevelFromGainError(int gain_error, int level) {$/;"	f	namespace:webrtc::__anon169
LifeTimeCheck	webrtc/base/bind_unittest.cc	/^  LifeTimeCheck() : ref_count_(0) {}$/;"	f	struct:rtc::__anon4::LifeTimeCheck
LifeTimeCheck	webrtc/base/bind_unittest.cc	/^struct LifeTimeCheck {$/;"	s	namespace:rtc::__anon4	file:
Likelihood	webrtc/modules/audio_processing/include/audio_processing.h	/^  enum Likelihood {$/;"	g	class:webrtc::VoiceDetection
LimitPayloadUb	webrtc/modules/audio_coding/codecs/isac/main/source/encode.c	/^static int LimitPayloadUb(ISACUBEncStruct* ISACencUB_obj,$/;"	f	file:
LimitProbability	webrtc/modules/audio_processing/vad/pitch_based_vad.cc	/^static double LimitProbability(double p) {$/;"	f	namespace:webrtc
LimitToAllowedRange	webrtc/modules/audio_processing/level_controller/gain_applier.cc	/^void LimitToAllowedRange(AudioBuffer* audio) {$/;"	f	namespace:webrtc::__anon207
LimitToAllowedRange	webrtc/modules/audio_processing/level_controller/gain_applier.cc	/^void LimitToAllowedRange(rtc::ArrayView<float> x) {$/;"	f	namespace:webrtc::__anon207
Linear2Loudness	webrtc/modules/audio_processing/agc/utility.cc	/^double Linear2Loudness(double rms) {$/;"	f
Listen	webrtc/base/asyncsocket.cc	/^int AsyncSocketAdapter::Listen(int backlog) {$/;"	f	class:rtc::AsyncSocketAdapter
Listen	webrtc/base/httpserver.cc	/^int HttpListenServer::Listen(const SocketAddress& address) {$/;"	f	class:rtc::HttpListenServer
Listen	webrtc/base/physicalsocketserver.cc	/^int PhysicalSocket::Listen(int backlog) {$/;"	f	class:rtc::PhysicalSocket
Listen	webrtc/base/virtualsocketserver.cc	/^int VirtualSocket::Listen(int backlog) {$/;"	f	class:rtc::VirtualSocket
Listen	webrtc/base/win32socketserver.cc	/^int Win32Socket::Listen(int backlog) {$/;"	f	class:rtc::Win32Socket
ListenQueue	webrtc/base/virtualsocketserver.h	/^  typedef std::deque<SocketAddress> ListenQueue;$/;"	t	class:rtc::VirtualSocket
Load	webrtc/base/latebindingsymboltable.cc	/^bool LateBindingSymbolTable::Load() {$/;"	f	class:rtc::LateBindingSymbolTable
Load	webrtc/base/optionsfile.cc	/^bool OptionsFile::Load() {$/;"	f	class:rtc::OptionsFile
LoadFromPath	webrtc/base/latebindingsymboltable.cc	/^bool LateBindingSymbolTable::LoadFromPath(const char *dll_path) {$/;"	f	class:rtc::LateBindingSymbolTable
LoadFromSystem	webrtc/base/linux.cc	/^bool ProcCpuInfo::LoadFromSystem() {$/;"	f	class:rtc::ProcCpuInfo
LoadNextMessage	webrtc/modules/audio_processing/test/debug_dump_replayer.cc	/^void DebugDumpReplayer::LoadNextMessage() {$/;"	f	class:webrtc::test::DebugDumpReplayer
LoadSymbol	webrtc/base/latebindingsymboltable.cc	/^static bool LoadSymbol(DllHandle handle,$/;"	f	namespace:rtc
Location	webrtc/base/location.cc	/^Location::Location() : function_name_("Unknown"), file_and_line_("Unknown") {}$/;"	f	class:rtc::Location
Location	webrtc/base/location.cc	/^Location::Location(const Location& other)$/;"	f	class:rtc::Location
Location	webrtc/base/location.cc	/^Location::Location(const char* function_name, const char* file_and_line)$/;"	f	class:rtc::Location
Location	webrtc/base/location.h	/^class Location {$/;"	c	namespace:rtc
Lock	webrtc/base/criticalsection.cc	/^void GlobalLockPod::Lock() {$/;"	f	class:rtc::GlobalLockPod
Lock	webrtc/base/thread_annotations_unittest.cc	/^class LOCKABLE Lock {$/;"	c	namespace:__anon68	file:
LockExclusive	webrtc/base/sharedexclusivelock.cc	/^void SharedExclusiveLock::LockExclusive() {$/;"	f	class:rtc::SharedExclusiveLock
LockInOrder	webrtc/base/thread_annotations_unittest.cc	/^  void LockInOrder() {$/;"	f	class:__anon68::ThreadSafe
LockResource	webrtc/base/diskcache.cc	/^bool DiskCache::LockResource(const std::string& id) {$/;"	f	class:rtc::DiskCache
LockRunner	webrtc/base/criticalsection_unittest.cc	/^  LockRunner() : RunnerBase(0) {}$/;"	f	class:rtc::__anon10::LockRunner
LockRunner	webrtc/base/criticalsection_unittest.cc	/^class LockRunner : public RunnerBase {$/;"	c	namespace:rtc::__anon10	file:
LockShared	webrtc/base/sharedexclusivelock.cc	/^void SharedExclusiveLock::LockShared() {$/;"	f	class:rtc::SharedExclusiveLock
LockState	webrtc/base/diskcache.h	/^  enum LockState { LS_UNLOCKED, LS_LOCKED, LS_UNLOCKING };$/;"	g	class:rtc::DiskCache
LockedFlag	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^class LockedFlag {$/;"	c	namespace:webrtc::__anon182	file:
Log	webrtc/base/event_tracer.cc	/^  void Log() {$/;"	f	class:rtc::tracing::__anon12::final
Log	webrtc/base/optional_unittest.cc	/^  void Log(const char* msg) const {$/;"	f	class:rtc::__anon41::Logger	file:
Log2	webrtc/base/optional_unittest.cc	/^  static void Log2(const char* msg, const Logger& a, const Logger& b) {$/;"	f	class:rtc::__anon41::Logger	file:
LogAssert	webrtc/base/common.cc	/^void LogAssert(const char* function, const char* file, int line,$/;"	f	namespace:rtc
LogCheckLevel	webrtc/base/logging.h	/^inline bool LogCheckLevel(LoggingSeverity sev) {$/;"	f	namespace:rtc
LogErrorContext	webrtc/base/logging.h	/^enum LogErrorContext {$/;"	g	namespace:rtc
LogFrom	webrtc/base/optional_unittest.cc	/^  void LogFrom(const char* msg, const Logger& other) const {$/;"	f	class:rtc::__anon41::Logger	file:
LogGetProxyFault	webrtc/base/proxydetect.cc	/^void LogGetProxyFault() {$/;"	f	namespace:rtc
LogMessage	webrtc/base/logging.cc	/^LogMessage::LogMessage(const char* file,$/;"	f	class:rtc::LogMessage
LogMessage	webrtc/base/logging.h	/^class LogMessage {$/;"	c	namespace:rtc
LogMessage	webrtc/system_wrappers/include/logging.h	/^class LogMessage {$/;"	c	namespace:webrtc
LogMessage	webrtc/system_wrappers/source/logging.cc	/^LogMessage::LogMessage(const char* file, int line, LoggingSeverity sev)$/;"	f	class:webrtc::LogMessage
LogMessageVoidify	webrtc/base/logging.h	/^  LogMessageVoidify() { }$/;"	f	class:rtc::LogMessageVoidify
LogMessageVoidify	webrtc/base/logging.h	/^class LogMessageVoidify {$/;"	c	namespace:rtc
LogMessageVoidify	webrtc/system_wrappers/include/logging.h	/^  LogMessageVoidify() { }$/;"	f	class:webrtc::LogMessageVoidify
LogMessageVoidify	webrtc/system_wrappers/include/logging.h	/^class LogMessageVoidify {$/;"	c	namespace:webrtc
LogMultiline	webrtc/base/logging.cc	/^void LogMultiline(LoggingSeverity level, const char* label, bool input,$/;"	f	namespace:rtc
LogMultilineState	webrtc/base/logging.h	/^  LogMultilineState() {$/;"	f	class:rtc::LogMultilineState
LogMultilineState	webrtc/base/logging.h	/^class LogMultilineState {$/;"	c	namespace:rtc
LogOfEnergy	webrtc/common_audio/vad/vad_filterbank.c	/^static void LogOfEnergy(const int16_t* data_in, size_t data_length,$/;"	f	file:
LogOfEnergyInQ8	webrtc/modules/audio_processing/aecm/aecm_core.cc	/^static int16_t LogOfEnergyInQ8(uint32_t energy, int q_domain) {$/;"	f	file:
LogSSLErrors	webrtc/base/opensslidentity.cc	/^static void LogSSLErrors(const std::string& prefix) {$/;"	f	namespace:rtc
LogSink	webrtc/base/logging.h	/^  LogSink() {}$/;"	f	class:rtc::LogSink
LogSink	webrtc/base/logging.h	/^class LogSink {$/;"	c	namespace:rtc
LogSinkImpl	webrtc/base/logging_unittest.cc	/^  LogSinkImpl() {}$/;"	f	class:rtc::LogSinkImpl
LogSinkImpl	webrtc/base/logging_unittest.cc	/^  explicit LogSinkImpl(P* p) : Base(p) {}$/;"	f	class:rtc::LogSinkImpl
LogSinkImpl	webrtc/base/logging_unittest.cc	/^class LogSinkImpl$/;"	c	namespace:rtc	file:
LogStartTime	webrtc/base/logging.cc	/^int64_t LogMessage::LogStartTime() {$/;"	f	class:rtc::LogMessage
LogThread	webrtc/base/logging_unittest.cc	/^class LogThread : public Thread {$/;"	c	namespace:rtc	file:
LogThreads	webrtc/base/logging.cc	/^void LogMessage::LogThreads(bool on) {$/;"	f	class:rtc::LogMessage
LogTimestamps	webrtc/base/logging.cc	/^void LogMessage::LogTimestamps(bool on) {$/;"	f	class:rtc::LogMessage
LogToDebug	webrtc/base/logging.cc	/^void LogMessage::LogToDebug(LoggingSeverity min_sev) {$/;"	f	class:rtc::LogMessage
LogcatTraceContext	webrtc/system_wrappers/include/logcat_trace_context.h	/^class LogcatTraceContext : public webrtc::TraceCallback {$/;"	c	namespace:webrtc
Loggable	webrtc/base/logging.h	/^  static inline bool Loggable(LoggingSeverity sev) { return (sev >= min_sev_); }$/;"	f	class:rtc::LogMessage
Loggable	webrtc/system_wrappers/source/logging.cc	/^bool LogMessage::Loggable(LoggingSeverity sev) {$/;"	f	class:webrtc::LogMessage
Logger	webrtc/base/optional_unittest.cc	/^  Logger() : id_(g_next_id++), origin_(id_) { Log("default constructor"); }$/;"	f	class:rtc::__anon41::Logger
Logger	webrtc/base/optional_unittest.cc	/^  Logger(Logger&& other) : id_(g_next_id++), origin_(other.origin_) {$/;"	f	class:rtc::__anon41::Logger
Logger	webrtc/base/optional_unittest.cc	/^  Logger(const Logger& other) : id_(g_next_id++), origin_(other.origin_) {$/;"	f	class:rtc::__anon41::Logger
Logger	webrtc/base/optional_unittest.cc	/^  Logger(int origin, const Logger& pass_by_ref, Logger pass_by_value)$/;"	f	class:rtc::__anon41::Logger
Logger	webrtc/base/optional_unittest.cc	/^  explicit Logger(int origin) : id_(g_next_id++), origin_(origin) {$/;"	f	class:rtc::__anon41::Logger
Logger	webrtc/base/optional_unittest.cc	/^class Logger {$/;"	c	namespace:rtc::__anon41	file:
Logging	webrtc/base/java/src/org/webrtc/Logging.java	/^public class Logging {$/;"	c
LoggingAdapter	webrtc/base/stream.cc	/^LoggingAdapter::LoggingAdapter(StreamInterface* stream, LoggingSeverity level,$/;"	f	class:rtc::LoggingAdapter
LoggingAdapter	webrtc/base/stream.h	/^class LoggingAdapter : public StreamAdapterInterface {$/;"	c	namespace:rtc
LoggingPoolAdapter	webrtc/base/socketpool.cc	/^LoggingPoolAdapter::LoggingPoolAdapter($/;"	f	class:rtc::LoggingPoolAdapter
LoggingPoolAdapter	webrtc/base/socketpool.h	/^class LoggingPoolAdapter : public StreamPool {$/;"	c	namespace:rtc
LoggingSeverity	webrtc/base/logging.h	/^enum LoggingSeverity {$/;"	g	namespace:rtc
LoggingSeverity	webrtc/system_wrappers/include/logging.h	/^enum LoggingSeverity {$/;"	g	namespace:webrtc
LoggingSocketAdapter	webrtc/base/socketadapters.cc	/^LoggingSocketAdapter::LoggingSocketAdapter(AsyncSocket* socket,$/;"	f	class:rtc::LoggingSocketAdapter
LoggingSocketAdapter	webrtc/base/socketadapters.h	/^class LoggingSocketAdapter : public AsyncSocketAdapter {$/;"	c	namespace:rtc
Lookup	webrtc/base/flags.cc	/^Flag* FlagList::Lookup(const char* name) {$/;"	f	class:rtc::FlagList
LookupBinding	webrtc/base/virtualsocketserver.cc	/^VirtualSocket* VirtualSocketServer::LookupBinding(const SocketAddress& addr) {$/;"	f	class:rtc::VirtualSocketServer
LookupConnection	webrtc/base/virtualsocketserver.cc	/^VirtualSocket* VirtualSocketServer::LookupConnection($/;"	f	class:rtc::VirtualSocketServer
Loudness2Db	webrtc/modules/audio_processing/agc/utility.cc	/^double Loudness2Db(double loudness) {$/;"	f
LoudnessHistogram	webrtc/modules/audio_processing/agc/loudness_histogram.cc	/^LoudnessHistogram::LoudnessHistogram()$/;"	f	class:webrtc::LoudnessHistogram
LoudnessHistogram	webrtc/modules/audio_processing/agc/loudness_histogram.cc	/^LoudnessHistogram::LoudnessHistogram(int window_size)$/;"	f	class:webrtc::LoudnessHistogram
LoudnessHistogram	webrtc/modules/audio_processing/agc/loudness_histogram.h	/^class LoudnessHistogram {$/;"	c	namespace:webrtc
LoudnessHistogramTest	webrtc/modules/audio_processing/agc/loudness_histogram_unittest.cc	/^class LoudnessHistogramTest : public ::testing::Test {$/;"	c	namespace:webrtc	file:
LowestBits	webrtc/base/bitbuffer.cc	/^uint8_t LowestBits(uint8_t byte, size_t bit_count) {$/;"	f	namespace:__anon6
MAXFFTSIZE	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define MAXFFTSIZE /;"	d
MAX_AR_MODEL_ORDER	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define MAX_AR_MODEL_ORDER /;"	d
MAX_BUF_LEN	webrtc/modules/audio_processing/aecm/aecm_defines.h	/^#define MAX_BUF_LEN /;"	d
MAX_DELAY	webrtc/modules/audio_processing/aecm/aecm_defines.h	/^#define MAX_DELAY /;"	d
MAX_DIFF	webrtc/modules/audio_processing/ns/nsx_defines.h	/^#define MAX_DIFF /;"	d
MAX_FLAT_Q10	webrtc/modules/audio_processing/ns/nsx_defines.h	/^#define MAX_FLAT_Q10 /;"	d
MAX_FRAMESAMPLES	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define MAX_FRAMESAMPLES /;"	d
MAX_IP_STATUS	webrtc/base/winping.cc	/^#define MAX_IP_STATUS /;"	d	file:
MAX_ISAC_BW	webrtc/modules/audio_coding/codecs/isac/main/source/bandwidth_estimator.h	/^#define MAX_ISAC_BW /;"	d
MAX_ISAC_BW_LB	webrtc/modules/audio_coding/codecs/isac/main/source/bandwidth_estimator.h	/^#define MAX_ISAC_BW_LB /;"	d
MAX_ISAC_BW_UB	webrtc/modules/audio_coding/codecs/isac/main/source/bandwidth_estimator.h	/^#define MAX_ISAC_BW_UB /;"	d
MAX_ISAC_MD	webrtc/modules/audio_coding/codecs/isac/main/source/bandwidth_estimator.h	/^#define MAX_ISAC_MD /;"	d
MAX_NUM_LAYERS	webrtc/modules/audio_coding/codecs/isac/main/source/isac.c	/^#define MAX_NUM_LAYERS /;"	d	file:
MAX_OPT_SIZE	webrtc/base/winping.cc	/^#define MAX_OPT_SIZE /;"	d	file:
MAX_ORDER	webrtc/modules/audio_coding/codecs/isac/main/source/entropy_coding.c	/^#define MAX_ORDER /;"	d	file:
MAX_PATH	webrtc/base/fileutils.cc	/^#define MAX_PATH /;"	d	file:
MAX_PAYLOAD_LIMIT_ITERATION	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define MAX_PAYLOAD_LIMIT_ITERATION /;"	d
MAX_RESAMP_LEN	webrtc/modules/audio_processing/aec/echo_cancellation.cc	/^#define MAX_RESAMP_LEN /;"	d	file:
MAX_RESAMP_LEN	webrtc/modules/audio_processing/aecm/echo_control_mobile.cc	/^#define MAX_RESAMP_LEN /;"	d	file:
MAX_SWBFRAMESAMPLES	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define MAX_SWBFRAMESAMPLES /;"	d
MAYBE_CallSessionFileRotatingStreamTest	webrtc/base/filerotatingstream_unittest.cc	/^#define MAYBE_CallSessionFileRotatingStreamTest /;"	d	file:
MAYBE_CallSessionFileRotatingStreamTest	webrtc/base/filerotatingstream_unittest.cc	/^class MAYBE_CallSessionFileRotatingStreamTest : public ::testing::Test {$/;"	c	namespace:rtc	file:
MAYBE_ConvertByteArrayToDouble	webrtc/modules/audio_processing/transient/file_utils_unittest.cc	/^#define MAYBE_ConvertByteArrayToDouble /;"	d	file:
MAYBE_ConvertByteArrayToFloat	webrtc/modules/audio_processing/transient/file_utils_unittest.cc	/^#define MAYBE_ConvertByteArrayToFloat /;"	d	file:
MAYBE_ConvertDoubleToByteArray	webrtc/modules/audio_processing/transient/file_utils_unittest.cc	/^#define MAYBE_ConvertDoubleToByteArray /;"	d	file:
MAYBE_ConvertFloatToByteArray	webrtc/modules/audio_processing/transient/file_utils_unittest.cc	/^#define MAYBE_ConvertFloatToByteArray /;"	d	file:
MAYBE_DefaultLocalAddress	webrtc/base/network_unittest.cc	/^#define MAYBE_DefaultLocalAddress /;"	d	file:
MAYBE_ExpectedErrorReturnValues	webrtc/modules/audio_processing/transient/file_utils_unittest.cc	/^#define MAYBE_ExpectedErrorReturnValues /;"	d	file:
MAYBE_FileRotatingStreamTest	webrtc/base/filerotatingstream_unittest.cc	/^#define MAYBE_FileRotatingStreamTest /;"	d	file:
MAYBE_FileRotatingStreamTest	webrtc/base/filerotatingstream_unittest.cc	/^class MAYBE_FileRotatingStreamTest : public ::testing::Test {$/;"	c	namespace:rtc	file:
MAYBE_FilesystemTest	webrtc/base/fileutils_unittest.cc	/^#define MAYBE_FilesystemTest /;"	d	file:
MAYBE_OptionsFileTest	webrtc/base/optionsfile_unittest.cc	/^  MAYBE_OptionsFileTest() {$/;"	f	class:rtc::MAYBE_OptionsFileTest
MAYBE_OptionsFileTest	webrtc/base/optionsfile_unittest.cc	/^#define MAYBE_OptionsFileTest /;"	d	file:
MAYBE_OptionsFileTest	webrtc/base/optionsfile_unittest.cc	/^class MAYBE_OptionsFileTest : public testing::Test {$/;"	c	namespace:rtc	file:
MAYBE_Perf	webrtc/base/logging_unittest.cc	/^#define MAYBE_Perf /;"	d	file:
MAYBE_ReadDoubleBufferFromFile	webrtc/modules/audio_processing/transient/file_utils_unittest.cc	/^#define MAYBE_ReadDoubleBufferFromFile /;"	d	file:
MAYBE_ReadFloatBufferFromFile	webrtc/modules/audio_processing/transient/file_utils_unittest.cc	/^#define MAYBE_ReadFloatBufferFromFile /;"	d	file:
MAYBE_ReadInt16BufferFromFile	webrtc/modules/audio_processing/transient/file_utils_unittest.cc	/^#define MAYBE_ReadInt16BufferFromFile /;"	d	file:
MAYBE_ReadInt16FromFileToDoubleBuffer	webrtc/modules/audio_processing/transient/file_utils_unittest.cc	/^#define MAYBE_ReadInt16FromFileToDoubleBuffer /;"	d	file:
MAYBE_ReadInt16FromFileToFloatBuffer	webrtc/modules/audio_processing/transient/file_utils_unittest.cc	/^#define MAYBE_ReadInt16FromFileToFloatBuffer /;"	d	file:
MAYBE_SKIP_IPV6	webrtc/base/physicalsocketserver_unittest.cc	/^#define MAYBE_SKIP_IPV6 /;"	d	file:
MAYBE_SKIP_IPV6	webrtc/base/socket_unittest.cc	/^#define MAYBE_SKIP_IPV6 /;"	d	file:
MAYBE_SKIP_SCREENCAST_TEST	webrtc/base/testutils.h	/^#define MAYBE_SKIP_SCREENCAST_TEST(/;"	d
MAYBE_SKIP_TEST	webrtc/base/sslstreamadapter_unittest.cc	/^#define MAYBE_SKIP_TEST(/;"	d	file:
MAYBE_TestCountIPMaskBits	webrtc/base/ipaddress_unittest.cc	/^#define MAYBE_TestCountIPMaskBits /;"	d	file:
MAYBE_TestIPv6Toggle	webrtc/base/network_unittest.cc	/^#define MAYBE_TestIPv6Toggle /;"	d	file:
MAYBE_TestTcpIPv6	webrtc/base/testclient_unittest.cc	/^#define MAYBE_TestTcpIPv6 /;"	d	file:
MAYBE_TestUdpIPv6	webrtc/base/testclient_unittest.cc	/^#define MAYBE_TestUdpIPv6 /;"	d	file:
MAYBE_TestUdpReadyToSendIPv4	webrtc/base/physicalsocketserver_unittest.cc	/^#define MAYBE_TestUdpReadyToSendIPv4 /;"	d	file:
MAYBE_TestUdpReadyToSendIPv6	webrtc/base/physicalsocketserver_unittest.cc	/^#define MAYBE_TestUdpReadyToSendIPv6 /;"	d	file:
MAYBE_TestWritableAfterPartialWriteIPv4	webrtc/base/physicalsocketserver_unittest.cc	/^#define MAYBE_TestWritableAfterPartialWriteIPv4 /;"	d	file:
MAYBE_TestWritableAfterPartialWriteIPv6	webrtc/base/physicalsocketserver_unittest.cc	/^#define MAYBE_TestWritableAfterPartialWriteIPv6 /;"	d	file:
MAYBE_ToggleAgc	webrtc/modules/audio_processing/test/debug_dump_test.cc	/^#define MAYBE_ToggleAgc /;"	d	file:
MAYBE_UniformSignedInterval	webrtc/base/random_unittest.cc	/^#define MAYBE_UniformSignedInterval /;"	d	file:
MAYBE_WriteDoubleBufferToFile	webrtc/modules/audio_processing/transient/file_utils_unittest.cc	/^#define MAYBE_WriteDoubleBufferToFile /;"	d	file:
MAYBE_WriteFloatBufferToFile	webrtc/modules/audio_processing/transient/file_utils_unittest.cc	/^#define MAYBE_WriteFloatBufferToFile /;"	d	file:
MAYBE_WriteInt16BufferToFile	webrtc/modules/audio_processing/transient/file_utils_unittest.cc	/^#define MAYBE_WriteInt16BufferToFile /;"	d	file:
MD5	webrtc/base/messagedigest.h	/^inline std::string MD5(const std::string& input) {$/;"	f	namespace:rtc
MD5Context	webrtc/base/md5.h	/^struct MD5Context {$/;"	s	namespace:rtc
MD5Final	webrtc/base/md5.cc	/^void MD5Final(MD5Context* ctx, uint8_t digest[16]) {$/;"	f	namespace:rtc
MD5Init	webrtc/base/md5.cc	/^void MD5Init(MD5Context* ctx) {$/;"	f	namespace:rtc
MD5STEP	webrtc/base/md5.cc	/^#define MD5STEP(/;"	d	file:
MD5Transform	webrtc/base/md5.cc	/^void MD5Transform(uint32_t buf[4], const uint32_t in[16]) {$/;"	f	namespace:rtc
MD5Update	webrtc/base/md5.cc	/^void MD5Update(MD5Context* ctx, const uint8_t* buf, size_t len) {$/;"	f	namespace:rtc
MIN_DIFF	webrtc/modules/audio_processing/ns/nsx_defines.h	/^#define MIN_DIFF /;"	d
MIN_FLAT_Q10	webrtc/modules/audio_processing/ns/nsx_defines.h	/^#define MIN_FLAT_Q10 /;"	d
MIN_ISAC_BW	webrtc/modules/audio_coding/codecs/isac/main/source/bandwidth_estimator.h	/^#define MIN_ISAC_BW /;"	d
MIN_ISAC_BW_LB	webrtc/modules/audio_coding/codecs/isac/main/source/bandwidth_estimator.h	/^#define MIN_ISAC_BW_LB /;"	d
MIN_ISAC_BW_UB	webrtc/modules/audio_coding/codecs/isac/main/source/bandwidth_estimator.h	/^#define MIN_ISAC_BW_UB /;"	d
MIN_ISAC_MD	webrtc/modules/audio_coding/codecs/isac/main/source/bandwidth_estimator.h	/^#define MIN_ISAC_MD /;"	d
MIN_MSE_COUNT	webrtc/modules/audio_processing/aecm/aecm_defines.h	/^#define MIN_MSE_COUNT /;"	d
MIN_MSE_DIFF	webrtc/modules/audio_processing/aecm/aecm_defines.h	/^#define MIN_MSE_DIFF /;"	d
MOSCQ	webrtc/modules/include/module_common_types.h	/^  uint8_t MOSCQ;$/;"	m	struct:webrtc::RTCPVoIPMetric
MOSLQ	webrtc/modules/include/module_common_types.h	/^  uint8_t MOSLQ;$/;"	m	struct:webrtc::RTCPVoIPMetric
MQID_ANY	webrtc/base/messagequeue.h	/^const uint32_t MQID_ANY = static_cast<uint32_t>(-1);$/;"	m	namespace:rtc
MQID_DISPOSE	webrtc/base/messagequeue.h	/^const uint32_t MQID_DISPOSE = static_cast<uint32_t>(-2);$/;"	m	namespace:rtc
MSE_RESOLUTION	webrtc/modules/audio_processing/aecm/aecm_defines.h	/^#define MSE_RESOLUTION /;"	d
MSG_GENERATE	webrtc/base/rtccertificategenerator.cc	/^  MSG_GENERATE,$/;"	e	enum:rtc::__anon53::__anon54	file:
MSG_GENERATE_DONE	webrtc/base/rtccertificategenerator.cc	/^  MSG_GENERATE_DONE,$/;"	e	enum:rtc::__anon53::__anon54	file:
MSG_ID_ADDRESS_BOUND	webrtc/base/virtualsocketserver.cc	/^  MSG_ID_ADDRESS_BOUND,$/;"	e	enum:rtc::__anon73	file:
MSG_ID_CONNECT	webrtc/base/virtualsocketserver.cc	/^  MSG_ID_CONNECT,$/;"	e	enum:rtc::__anon73	file:
MSG_ID_DISCONNECT	webrtc/base/virtualsocketserver.cc	/^  MSG_ID_DISCONNECT,$/;"	e	enum:rtc::__anon73	file:
MSG_ID_PACKET	webrtc/base/virtualsocketserver.cc	/^  MSG_ID_PACKET,$/;"	e	enum:rtc::__anon73	file:
MSG_MAX	webrtc/base/stream.h	/^    MSG_POST_EVENT = 0xF1F1, MSG_MAX = MSG_POST_EVENT$/;"	e	enum:rtc::StreamInterface::__anon62
MSG_POST_EVENT	webrtc/base/stream.h	/^    MSG_POST_EVENT = 0xF1F1, MSG_MAX = MSG_POST_EVENT$/;"	e	enum:rtc::StreamInterface::__anon62
MSG_READ	webrtc/base/httpbase.cc	/^  MSG_READ$/;"	e	enum:rtc::__anon16	file:
MSG_TIMEOUT	webrtc/base/autodetectproxy.h	/^  enum { MSG_TIMEOUT = SignalThread::ST_MSG_FIRST_AVAILABLE,$/;"	e	enum:rtc::AutoDetectProxy::__anon2
MSG_TIMEOUT	webrtc/base/openssladapter.h	/^  enum { MSG_TIMEOUT };$/;"	e	enum:rtc::OpenSSLAdapter::__anon38
MSG_TIMEOUT	webrtc/base/opensslstreamadapter.h	/^  enum { MSG_TIMEOUT = MSG_MAX+1};$/;"	e	enum:rtc::OpenSSLStreamAdapter::__anon39
MSG_UNRESOLVABLE	webrtc/base/autodetectproxy.h	/^         MSG_UNRESOLVABLE,$/;"	e	enum:rtc::AutoDetectProxy::__anon2
MUL_ACCUM_1	webrtc/common_audio/signal_processing/resample_by_2.c	/^#define MUL_ACCUM_1(/;"	d	file:
MUL_ACCUM_1	webrtc/common_audio/signal_processing/resample_by_2.c	/^static __inline int32_t MUL_ACCUM_1(int32_t tbl_value,$/;"	f	file:
MUL_ACCUM_1	webrtc/common_audio/signal_processing/resample_by_2_mips.c	/^#define MUL_ACCUM_1(/;"	d	file:
MUL_ACCUM_2	webrtc/common_audio/signal_processing/resample_by_2.c	/^#define MUL_ACCUM_2(/;"	d	file:
MUL_ACCUM_2	webrtc/common_audio/signal_processing/resample_by_2.c	/^static __inline int32_t MUL_ACCUM_2(int32_t tbl_value,$/;"	f	file:
MUL_ACCUM_2	webrtc/common_audio/signal_processing/resample_by_2_mips.c	/^#define MUL_ACCUM_2(/;"	d	file:
MUTEX_CLEANUP	webrtc/base/openssladapter.cc	/^  #define MUTEX_CLEANUP(/;"	d	file:
MUTEX_LOCK	webrtc/base/openssladapter.cc	/^  #define MUTEX_LOCK(/;"	d	file:
MUTEX_SETUP	webrtc/base/openssladapter.cc	/^  #define MUTEX_SETUP(/;"	d	file:
MUTEX_TYPE	webrtc/base/openssladapter.cc	/^  #define MUTEX_TYPE /;"	d	file:
MUTEX_UNLOCK	webrtc/base/openssladapter.cc	/^  #define MUTEX_UNLOCK(/;"	d	file:
MU_DIFF	webrtc/modules/audio_processing/aecm/aecm_defines.h	/^#define MU_DIFF /;"	d
MU_MAX	webrtc/modules/audio_processing/aecm/aecm_defines.h	/^#define MU_MAX /;"	d
MU_MIN	webrtc/modules/audio_processing/aecm/aecm_defines.h	/^#define MU_MIN /;"	d
M_PI	webrtc/base/mathutils.h	/^#define M_PI /;"	d
M_PI	webrtc/modules/audio_coding/codecs/isac/main/source/fft.c	/^# define M_PI /;"	d	file:
MacIfAddrsConverter	webrtc/base/macifaddrs_converter.cc	/^  MacIfAddrsConverter() : ip_attribute_getter_(new IPv6AttributesGetter()) {}$/;"	f	class:rtc::__anon29::MacIfAddrsConverter
MacIfAddrsConverter	webrtc/base/macifaddrs_converter.cc	/^class MacIfAddrsConverter : public IfAddrsConverter {$/;"	c	namespace:rtc::__anon29	file:
MacOSVersionName	webrtc/base/macutils.h	/^enum MacOSVersionName {$/;"	g	namespace:rtc
MacWindowPicker	webrtc/base/macwindowpicker.cc	/^MacWindowPicker::MacWindowPicker() : lib_handle_(NULL), get_window_list_(NULL),$/;"	f	class:rtc::MacWindowPicker
MacWindowPicker	webrtc/base/macwindowpicker.h	/^class MacWindowPicker : public WindowPicker {$/;"	c	namespace:rtc
MakeArrayView	webrtc/base/array_view.h	/^inline ArrayView<T> MakeArrayView(T* data, size_t size) {$/;"	f	namespace:rtc
MakeCertificate	webrtc/base/opensslidentity.cc	/^static X509* MakeCertificate(EVP_PKEY* pkey, const SSLIdentityParams& params) {$/;"	f	namespace:rtc
MakeCheckOpString	webrtc/base/checks.h	/^std::string* MakeCheckOpString(const t1& v1, const t2& v2, const char* names) {$/;"	f	namespace:rtc
MakeKey	webrtc/base/opensslidentity.cc	/^static EVP_PKEY* MakeKey(const KeyParams& key_params) {$/;"	f	namespace:rtc
MakeNetworkKey	webrtc/base/network.cc	/^std::string MakeNetworkKey(const std::string& name, const IPAddress& prefix,$/;"	f	namespace:rtc
MapBufferSizeToSamples	webrtc/modules/audio_processing/aec/system_delay_unittest.cc	/^  int SystemDelayTest::MapBufferSizeToSamples(int size_in_ms,$/;"	f	class:webrtc::__anon162::SystemDelayTest
MapError	webrtc/modules/audio_processing/echo_cancellation_impl.cc	/^AudioProcessing::Error MapError(int err) {$/;"	f	namespace:webrtc::__anon193
MapError	webrtc/modules/audio_processing/echo_control_mobile_impl.cc	/^AudioProcessing::Error MapError(int err) {$/;"	f	namespace:webrtc::__anon194
MapSetting	webrtc/modules/audio_processing/echo_cancellation_impl.cc	/^int16_t MapSetting(EchoCancellation::SuppressionLevel level) {$/;"	f	namespace:webrtc::__anon193
MapSetting	webrtc/modules/audio_processing/echo_control_mobile_impl.cc	/^int16_t MapSetting(EchoControlMobile::RoutingMode mode) {$/;"	f	namespace:webrtc::__anon194
MapSetting	webrtc/modules/audio_processing/gain_control_impl.cc	/^int16_t MapSetting(GainControl::Mode mode) {$/;"	f	namespace:webrtc::__anon198
MapToErbBands	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer.cc	/^void MapToErbBands(const float* pow,$/;"	f	namespace:webrtc::__anon202
MapVector	webrtc/base/linux.h	/^  typedef std::vector<SimpleMap> MapVector;$/;"	t	class:rtc::ConfigParser
MaskFiltstr	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^} MaskFiltstr;$/;"	t	typeref:struct:__anon125
MaskRangeMean	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.cc	/^float NonlinearBeamformer::MaskRangeMean(size_t first, size_t last) {$/;"	f	class:webrtc::NonlinearBeamformer
Match	webrtc/base/messagequeue.h	/^  inline bool Match(MessageHandler* handler, uint32_t id) const {$/;"	f	struct:rtc::Message
MatchHeader	webrtc/base/httpbase.cc	/^bool MatchHeader(const char* str, size_t len, HttpHeader header) {$/;"	f	namespace:rtc
Matrix	webrtc/modules/audio_processing/beamformer/matrix.h	/^  Matrix() : num_rows_(0), num_columns_(0) {}$/;"	f	class:webrtc::Matrix
Matrix	webrtc/modules/audio_processing/beamformer/matrix.h	/^  Matrix(const T* data, size_t num_rows, size_t num_columns)$/;"	f	class:webrtc::Matrix
Matrix	webrtc/modules/audio_processing/beamformer/matrix.h	/^  Matrix(size_t num_rows, size_t num_columns)$/;"	f	class:webrtc::Matrix
Matrix	webrtc/modules/audio_processing/beamformer/matrix.h	/^class Matrix {$/;"	c	namespace:webrtc
MatrixF	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.h	/^  typedef Matrix<float> MatrixF;$/;"	t	class:webrtc::NonlinearBeamformer
MatrixTestHelpers	webrtc/modules/audio_processing/beamformer/matrix_test_helpers.h	/^class MatrixTestHelpers {$/;"	c	namespace:webrtc
MaxAbsValueW16	webrtc/common_audio/signal_processing/include/signal_processing_library.h	/^typedef int16_t (*MaxAbsValueW16)(const int16_t* vector, size_t length);$/;"	t
MaxAbsValueW32	webrtc/common_audio/signal_processing/include/signal_processing_library.h	/^typedef int32_t (*MaxAbsValueW32)(const int32_t* vector, size_t length);$/;"	t
MaxAudioFrame	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^int16_t MaxAudioFrame(const AudioFrame& frame) {$/;"	f	namespace:webrtc::__anon183
MaxDelay	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  double                    MaxDelay;$/;"	m	struct:__anon144
MaxPermAlloced	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  unsigned int MaxPermAlloced;$/;"	m	struct:__anon133
MaxSendSize	webrtc/base/physicalsocketserver_unittest.cc	/^  int MaxSendSize() const { return max_send_size_; }$/;"	f	class:rtc::PhysicalSocketTest
MaxValueW16	webrtc/common_audio/signal_processing/include/signal_processing_library.h	/^typedef int16_t (*MaxValueW16)(const int16_t* vector, size_t length);$/;"	t
MaxValueW32	webrtc/common_audio/signal_processing/include/signal_processing_library.h	/^typedef int32_t (*MaxValueW32)(const int32_t* vector, size_t length);$/;"	t
MaybeEndTest	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^bool AudioProcessingImplLockTest::MaybeEndTest() {$/;"	f	class:webrtc::__anon181::AudioProcessingImplLockTest
MaybeEndTest	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^  bool MaybeEndTest() {$/;"	f	class:webrtc::__anon182::CallSimulator
MaybeInitialize	webrtc/modules/audio_processing/audio_processing_impl.cc	/^int AudioProcessingImpl::MaybeInitialize($/;"	f	class:webrtc::AudioProcessingImpl
MaybeInitializeCapture	webrtc/modules/audio_processing/audio_processing_impl.cc	/^int AudioProcessingImpl::MaybeInitializeCapture($/;"	f	class:webrtc::AudioProcessingImpl
MaybeInitializeRender	webrtc/modules/audio_processing/audio_processing_impl.cc	/^int AudioProcessingImpl::MaybeInitializeRender($/;"	f	class:webrtc::AudioProcessingImpl
MaybeLogDelayAdjustment	webrtc/modules/audio_processing/aec/aec_core.cc	/^void MaybeLogDelayAdjustment(int moved_ms, DelaySource source) {$/;"	f	namespace:webrtc::__anon145
MaybeRecreateApm	webrtc/modules/audio_processing/test/debug_dump_replayer.cc	/^void DebugDumpReplayer::MaybeRecreateApm(const audioproc::Config& msg) {$/;"	f	class:webrtc::test::DebugDumpReplayer
MaybeRemapSendError	webrtc/base/physicalsocketserver.cc	/^void PhysicalSocket::MaybeRemapSendError() {$/;"	f	class:rtc::PhysicalSocket
MaybeResetBuffer	webrtc/modules/audio_processing/test/debug_dump_replayer.cc	/^void MaybeResetBuffer(std::unique_ptr<ChannelBuffer<float>>* buffer,$/;"	f	namespace:webrtc::test::__anon222
MaybeResetBuffer	webrtc/modules/audio_processing/test/debug_dump_test.cc	/^void MaybeResetBuffer(std::unique_ptr<ChannelBuffer<float>>* buffer,$/;"	f	namespace:webrtc::test::__anon223
MaybeUpdateHistograms	webrtc/modules/audio_processing/audio_processing_impl.cc	/^void AudioProcessingImpl::MaybeUpdateHistograms() {$/;"	f	class:webrtc::AudioProcessingImpl
Md5	webrtc/base/md5digest_unittest.cc	/^std::string Md5(const std::string& input) {$/;"	f	namespace:rtc
Md5Digest	webrtc/base/md5digest.h	/^  Md5Digest() {$/;"	f	class:rtc::Md5Digest
Md5Digest	webrtc/base/md5digest.h	/^class Md5Digest : public MessageDigest {$/;"	c	namespace:rtc
Mean	webrtc/modules/audio_processing/vad/vad_circular_buffer.cc	/^double VadCircularBuffer::Mean() {$/;"	f	class:webrtc::VadCircularBuffer
MeanEstimatorFloat	webrtc/modules/audio_processing/utility/delay_estimator_wrapper.cc	/^static void MeanEstimatorFloat(float new_value,$/;"	f	file:
MeanTimeDifference	webrtc/base/timestampaligner_unittest.cc	/^double MeanTimeDifference(int nsamples, int window_size) {$/;"	f	namespace:rtc::__anon71
MeanVarianceEstimator	webrtc/modules/audio_processing/echo_detector/mean_variance_estimator.h	/^class MeanVarianceEstimator {$/;"	c	namespace:webrtc
MediaPayloadBytes	webrtc/common_types.h	/^  size_t MediaPayloadBytes() const {$/;"	f	struct:webrtc::StreamDataCounters
MemoryStream	webrtc/base/stream.cc	/^MemoryStream::MemoryStream()$/;"	f	class:rtc::MemoryStream
MemoryStream	webrtc/base/stream.cc	/^MemoryStream::MemoryStream(const char* data)$/;"	f	class:rtc::MemoryStream
MemoryStream	webrtc/base/stream.cc	/^MemoryStream::MemoryStream(const void* data, size_t length)$/;"	f	class:rtc::MemoryStream
MemoryStream	webrtc/base/stream.h	/^class MemoryStream : public MemoryStreamBase {$/;"	c	namespace:rtc
MemoryStreamBase	webrtc/base/stream.cc	/^MemoryStreamBase::MemoryStreamBase()$/;"	f	class:rtc::MemoryStreamBase
MemoryStreamBase	webrtc/base/stream.h	/^class MemoryStreamBase : public StreamInterface {$/;"	c	namespace:rtc
MergeFrequencyBands	webrtc/modules/audio_processing/audio_buffer.cc	/^void AudioBuffer::MergeFrequencyBands() {$/;"	f	class:webrtc::AudioBuffer
MergeNetworkList	webrtc/base/network.cc	/^void NetworkManagerBase::MergeNetworkList(const NetworkList& new_networks,$/;"	f	class:rtc::NetworkManagerBase
MergeNetworkList	webrtc/base/network_unittest.cc	/^  NetworkManager::Stats MergeNetworkList($/;"	f	class:rtc::NetworkTest
Message	webrtc/base/messagequeue.h	/^  Message()$/;"	f	struct:rtc::Message
Message	webrtc/base/messagequeue.h	/^struct Message {$/;"	s	namespace:rtc
MessageAddress	webrtc/base/virtualsocketserver.cc	/^  explicit MessageAddress(const SocketAddress& a) : addr(a) { }$/;"	f	struct:rtc::MessageAddress
MessageAddress	webrtc/base/virtualsocketserver.cc	/^struct MessageAddress : public MessageData {$/;"	s	namespace:rtc	file:
MessageClient	webrtc/base/thread_unittest.cc	/^  MessageClient(Thread* pth, Socket* socket)$/;"	f	class:MessageClient
MessageClient	webrtc/base/thread_unittest.cc	/^class MessageClient : public MessageHandler, public TestGenerator {$/;"	c	file:
MessageData	webrtc/base/messagequeue.h	/^  MessageData() {}$/;"	f	class:rtc::MessageData
MessageData	webrtc/base/messagequeue.h	/^class MessageData {$/;"	c	namespace:rtc
MessageDigest	webrtc/base/messagedigest.h	/^class MessageDigest {$/;"	c	namespace:rtc
MessageDigestFactory	webrtc/base/messagedigest.h	/^class MessageDigestFactory {$/;"	c	namespace:rtc
MessageHandler	webrtc/base/messagehandler.h	/^  MessageHandler() {}$/;"	f	class:rtc::MessageHandler
MessageHandler	webrtc/base/messagehandler.h	/^class MessageHandler {$/;"	c	namespace:rtc
MessageList	webrtc/base/messagequeue.h	/^typedef std::list<Message> MessageList;$/;"	t	namespace:rtc
MessageQueue	webrtc/base/messagequeue.cc	/^MessageQueue::MessageQueue(SocketServer* ss, bool init_queue)$/;"	f	class:rtc::MessageQueue
MessageQueue	webrtc/base/messagequeue.cc	/^MessageQueue::MessageQueue(std::unique_ptr<SocketServer> ss, bool init_queue)$/;"	f	class:rtc::MessageQueue
MessageQueue	webrtc/base/messagequeue.h	/^class MessageQueue {$/;"	c	namespace:rtc
MessageQueueManager	webrtc/base/messagequeue.cc	/^MessageQueueManager::MessageQueueManager() : locked_(false) {}$/;"	f	class:rtc::MessageQueueManager
MessageQueueManager	webrtc/base/messagequeue.h	/^class MessageQueueManager {$/;"	c	namespace:rtc
MessageQueueTest	webrtc/base/messagequeue_unittest.cc	/^  MessageQueueTest() : MessageQueue(SocketServer::CreateDefault(), true) {}$/;"	f	class:MessageQueueTest
MessageQueueTest	webrtc/base/messagequeue_unittest.cc	/^class MessageQueueTest: public testing::Test, public MessageQueue {$/;"	c	file:
MessageReceived	webrtc/base/dbus_unittest.cc	/^  bool MessageReceived() {$/;"	f	class:rtc::DBusSigFilterTest
MessageWindow	webrtc/base/win32socketserver.h	/^    explicit MessageWindow(Win32SocketServer* ss) : ss_(ss) {}$/;"	f	class:rtc::Win32SocketServer::MessageWindow
MessageWindow	webrtc/base/win32socketserver.h	/^  class MessageWindow : public Win32Window {$/;"	c	class:rtc::Win32SocketServer
MethodBindTester	webrtc/base/bind_unittest.cc	/^struct MethodBindTester {$/;"	s	namespace:rtc::__anon4	file:
MethodFunctor0	webrtc/base/bind.h	/^  MethodFunctor0(MethodT method, ObjectT* object)$/;"	f	class:rtc::MethodFunctor0
MethodFunctor0	webrtc/base/bind.h	/^class MethodFunctor0 {$/;"	c	namespace:rtc
MethodFunctor1	webrtc/base/bind.h	/^  MethodFunctor1(MethodT method, ObjectT* object,$/;"	f	class:rtc::MethodFunctor1
MethodFunctor1	webrtc/base/bind.h	/^class MethodFunctor1 {$/;"	c	namespace:rtc
MethodFunctor2	webrtc/base/bind.h	/^  MethodFunctor2(MethodT method, ObjectT* object,$/;"	f	class:rtc::MethodFunctor2
MethodFunctor2	webrtc/base/bind.h	/^class MethodFunctor2 {$/;"	c	namespace:rtc
MethodFunctor3	webrtc/base/bind.h	/^  MethodFunctor3(MethodT method, ObjectT* object,$/;"	f	class:rtc::MethodFunctor3
MethodFunctor3	webrtc/base/bind.h	/^class MethodFunctor3 {$/;"	c	namespace:rtc
MethodFunctor4	webrtc/base/bind.h	/^  MethodFunctor4(MethodT method, ObjectT* object,$/;"	f	class:rtc::MethodFunctor4
MethodFunctor4	webrtc/base/bind.h	/^class MethodFunctor4 {$/;"	c	namespace:rtc
MethodFunctor5	webrtc/base/bind.h	/^  MethodFunctor5(MethodT method, ObjectT* object,$/;"	f	class:rtc::MethodFunctor5
MethodFunctor5	webrtc/base/bind.h	/^class MethodFunctor5 {$/;"	c	namespace:rtc
MethodFunctor6	webrtc/base/bind.h	/^  MethodFunctor6(MethodT method, ObjectT* object,$/;"	f	class:rtc::MethodFunctor6
MethodFunctor6	webrtc/base/bind.h	/^class MethodFunctor6 {$/;"	c	namespace:rtc
MethodFunctor7	webrtc/base/bind.h	/^  MethodFunctor7(MethodT method,$/;"	f	class:rtc::MethodFunctor7
MethodFunctor7	webrtc/base/bind.h	/^class MethodFunctor7 {$/;"	c	namespace:rtc
MethodFunctor8	webrtc/base/bind.h	/^  MethodFunctor8(MethodT method,$/;"	f	class:rtc::MethodFunctor8
MethodFunctor8	webrtc/base/bind.h	/^class MethodFunctor8 {$/;"	c	namespace:rtc
MethodFunctor9	webrtc/base/bind.h	/^  MethodFunctor9(MethodT method,$/;"	f	class:rtc::MethodFunctor9
MethodFunctor9	webrtc/base/bind.h	/^class MethodFunctor9 {$/;"	c	namespace:rtc
MethodOnDifferentThreadImpl	webrtc/base/thread_checker_unittest.cc	/^void ThreadCheckerClass::MethodOnDifferentThreadImpl() {$/;"	f	class:rtc::ThreadCheckerClass
Metrics	webrtc/modules/audio_processing/include/audio_processing.h	/^  struct Metrics {$/;"	s	class:webrtc::EchoCancellation
Metrics	webrtc/modules/audio_processing/level_controller/level_controller.h	/^    Metrics() { Initialize(AudioProcessing::kSampleRate48kHz); }$/;"	f	class:webrtc::LevelController::Metrics
Metrics	webrtc/modules/audio_processing/level_controller/level_controller.h	/^  class Metrics {$/;"	c	class:webrtc::LevelController
MinDiff	webrtc/base/mod_ops.h	/^inline T MinDiff(T a, T b) {$/;"	f	namespace:webrtc
MinSample	webrtc/system_wrappers/source/metrics_default.cc	/^  int MinSample() const {$/;"	f	class:webrtc::metrics::__anon251::RtcHistogram
MinSample	webrtc/system_wrappers/source/metrics_default.cc	/^  int MinSample(const std::string& name) const {$/;"	f	class:webrtc::metrics::__anon251::RtcHistogramMap
MinSample	webrtc/system_wrappers/source/metrics_default.cc	/^int MinSample(const std::string& name) {$/;"	f	namespace:webrtc::metrics
MinValueW16	webrtc/common_audio/signal_processing/include/signal_processing_library.h	/^typedef int16_t (*MinValueW16)(const int16_t* vector, size_t length);$/;"	t
MinValueW32	webrtc/common_audio/signal_processing/include/signal_processing_library.h	/^typedef int32_t (*MinValueW32)(const int32_t* vector, size_t length);$/;"	t
MixStereoToMono	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^void MixStereoToMono(const float* stereo, float* mono,$/;"	f	namespace:webrtc::__anon183
MixStereoToMono	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^void MixStereoToMono(const int16_t* stereo, int16_t* mono,$/;"	f	namespace:webrtc::__anon183
MockAgc	webrtc/modules/audio_processing/agc/mock_agc.h	/^class MockAgc : public Agc {$/;"	c	namespace:webrtc
MockAudioProcessing	webrtc/modules/audio_processing/include/mock_audio_processing.h	/^  MockAudioProcessing()$/;"	f	class:webrtc::test::MockAudioProcessing
MockAudioProcessing	webrtc/modules/audio_processing/include/mock_audio_processing.h	/^class MockAudioProcessing : public AudioProcessing {$/;"	c	namespace:webrtc::test
MockEchoCancellation	webrtc/modules/audio_processing/include/mock_audio_processing.h	/^class MockEchoCancellation : public EchoCancellation {$/;"	c	namespace:webrtc::test
MockEchoControlMobile	webrtc/modules/audio_processing/include/mock_audio_processing.h	/^class MockEchoControlMobile : public EchoControlMobile {$/;"	c	namespace:webrtc::test
MockGainControl	webrtc/modules/audio_processing/include/mock_audio_processing.h	/^class MockGainControl : public GainControl {$/;"	c	namespace:webrtc::test
MockHighPassFilter	webrtc/modules/audio_processing/include/mock_audio_processing.h	/^class MockHighPassFilter : public HighPassFilter {$/;"	c	namespace:webrtc::test
MockInitialize	webrtc/modules/audio_processing/audio_processing_impl_unittest.cc	/^  explicit MockInitialize(const webrtc::Config& config)$/;"	f	class:webrtc::MockInitialize
MockInitialize	webrtc/modules/audio_processing/audio_processing_impl_unittest.cc	/^class MockInitialize : public AudioProcessingImpl {$/;"	c	namespace:webrtc	file:
MockLevelEstimator	webrtc/modules/audio_processing/include/mock_audio_processing.h	/^class MockLevelEstimator : public LevelEstimator {$/;"	c	namespace:webrtc::test
MockNoiseSuppression	webrtc/modules/audio_processing/include/mock_audio_processing.h	/^class MockNoiseSuppression : public NoiseSuppression {$/;"	c	namespace:webrtc::test
MockNonlinearBeamformer	webrtc/modules/audio_processing/beamformer/mock_nonlinear_beamformer.h	/^  MockNonlinearBeamformer(const std::vector<Point>& array_geometry)$/;"	f	class:webrtc::MockNonlinearBeamformer
MockNonlinearBeamformer	webrtc/modules/audio_processing/beamformer/mock_nonlinear_beamformer.h	/^  MockNonlinearBeamformer(const std::vector<Point>& array_geometry,$/;"	f	class:webrtc::MockNonlinearBeamformer
MockNonlinearBeamformer	webrtc/modules/audio_processing/beamformer/mock_nonlinear_beamformer.h	/^class MockNonlinearBeamformer : public NonlinearBeamformer {$/;"	c	namespace:webrtc
MockSource	webrtc/common_audio/resampler/sinc_resampler_unittest.cc	/^class MockSource : public SincResamplerCallback {$/;"	c	namespace:webrtc	file:
MockVad	webrtc/common_audio/vad/mock/mock_vad.h	/^class MockVad : public Vad {$/;"	c	namespace:webrtc
MockVoiceDetection	webrtc/modules/audio_processing/include/mock_audio_processing.h	/^class MockVoiceDetection : public VoiceDetection {$/;"	c	namespace:webrtc::test
Mode	webrtc/base/filerotatingstream.h	/^  enum Mode { kRead, kWrite };$/;"	g	class:rtc::FileRotatingStream
Mode	webrtc/modules/audio_processing/include/audio_processing.h	/^  enum Mode {$/;"	g	class:webrtc::GainControl
ModifyTestVar	webrtc/base/sequenced_task_checker_unittest.cc	/^  void ModifyTestVar() {$/;"	f	class:rtc::TestAnnotations
Module	webrtc/modules/include/module.h	/^class Module {$/;"	c	namespace:webrtc
Monitor	webrtc/base/testutils.h	/^  void Monitor(AsyncSocket* socket) {$/;"	f	class:testing::StreamSink
Monitor	webrtc/base/testutils.h	/^  void Monitor(StreamInterface* stream) {$/;"	f	class:testing::StreamSink
MonitorEnumProc	webrtc/base/win32windowpicker.cc	/^BOOL CALLBACK Win32WindowPicker::MonitorEnumProc(HMONITOR h_monitor,$/;"	f	class:rtc::Win32WindowPicker
MoveFile	webrtc/base/fileutils.h	/^  static bool MoveFile(const Pathname &old_path, const Pathname &new_path) {$/;"	f	class:rtc::Filesystem
MoveFile	webrtc/base/fileutils_mock.h	/^    bool MoveFile(const Pathname &old_path, const Pathname &new_path) {$/;"	f	class:rtc::FakeFileSystem
MoveFile	webrtc/base/unixfilesystem.cc	/^bool UnixFilesystem::MoveFile(const Pathname &old_path,$/;"	f	class:rtc::UnixFilesystem
MoveFile	webrtc/base/win32filesystem.cc	/^bool Win32Filesystem::MoveFile(const Pathname &old_path,$/;"	f	class:rtc::Win32Filesystem
MoveFrames	webrtc/common_audio/blocker.cc	/^void MoveFrames(const float* const* src,$/;"	f	namespace:__anon77
MoveReadPositionBackward	webrtc/common_audio/audio_ring_buffer.cc	/^void AudioRingBuffer::MoveReadPositionBackward(size_t frames) {$/;"	f	class:webrtc::AudioRingBuffer
MoveReadPositionForward	webrtc/common_audio/audio_ring_buffer.cc	/^void AudioRingBuffer::MoveReadPositionForward(size_t frames) {$/;"	f	class:webrtc::AudioRingBuffer
MoveToFront	webrtc/base/macwindowpicker.cc	/^bool MacWindowPicker::MoveToFront(const WindowId& id) {$/;"	f	class:rtc::MacWindowPicker
MoveToFront	webrtc/base/win32windowpicker.cc	/^bool Win32WindowPicker::MoveToFront(const WindowId& id) {$/;"	f	class:rtc::Win32WindowPicker
MoveToFront	webrtc/base/x11windowpicker.cc	/^  bool MoveToFront(const WindowId& id) {$/;"	f	class:rtc::XWindowEnumerator
MoveToFront	webrtc/base/x11windowpicker.cc	/^bool X11WindowPicker::MoveToFront(const WindowId& id) {$/;"	f	class:rtc::X11WindowPicker
MovingMoments	webrtc/modules/audio_processing/transient/moving_moments.cc	/^MovingMoments::MovingMoments(size_t length)$/;"	f	class:webrtc::MovingMoments
MovingMoments	webrtc/modules/audio_processing/transient/moving_moments.h	/^class MovingMoments {$/;"	c	namespace:webrtc
MovingMomentsTest	webrtc/modules/audio_processing/transient/moving_moments_unittest.cc	/^class MovingMomentsTest : public ::testing::Test {$/;"	c	namespace:webrtc	file:
MsanCheckInitialized	webrtc/base/sanitizer.h	/^inline void MsanCheckInitialized(const T& mem) {$/;"	f	namespace:rtc
MsanMarkUninitialized	webrtc/base/sanitizer.h	/^inline void MsanMarkUninitialized(const T& mem) {$/;"	f	namespace:rtc
MulIm	webrtc/modules/audio_processing/aec/aec_core.cc	/^__inline static float MulIm(float aRe, float aIm, float bRe, float bIm) {$/;"	f	namespace:webrtc
MulIm	webrtc/modules/audio_processing/aec/aec_core_neon.cc	/^__inline static float MulIm(float aRe, float aIm, float bRe, float bIm) {$/;"	f	namespace:webrtc
MulIm	webrtc/modules/audio_processing/aec/aec_core_sse2.cc	/^__inline static float MulIm(float aRe, float aIm, float bRe, float bIm) {$/;"	f	namespace:webrtc
MulRe	webrtc/modules/audio_processing/aec/aec_core.cc	/^__inline static float MulRe(float aRe, float aIm, float bRe, float bIm) {$/;"	f	namespace:webrtc
MulRe	webrtc/modules/audio_processing/aec/aec_core_neon.cc	/^__inline static float MulRe(float aRe, float aIm, float bRe, float bIm) {$/;"	f	namespace:webrtc
MulRe	webrtc/modules/audio_processing/aec/aec_core_sse2.cc	/^__inline static float MulRe(float aRe, float aIm, float bRe, float bIm) {$/;"	f	namespace:webrtc
MultiSZBytesToStringArray	webrtc/base/win32regkey.cc	/^HRESULT RegKey::MultiSZBytesToStringArray(const uint8_t* buffer,$/;"	f	class:rtc::RegKey
Multiply	webrtc/base/bind_unittest.cc	/^  int Multiply(int a, int b) const { ++call_count; return a * b; }$/;"	f	struct:rtc::__anon4::MethodBindTester
Multiply	webrtc/base/bind_unittest.cc	/^int Multiply(int a, int b) { return a * b; }$/;"	f	namespace:rtc::__anon4
Multiply	webrtc/modules/audio_processing/beamformer/matrix.h	/^  Matrix& Multiply(const Matrix& lhs, const Matrix& rhs) {$/;"	f	class:webrtc::Matrix
Multiply	webrtc/modules/audio_processing/beamformer/matrix.h	/^  Matrix& Multiply(const Matrix& rhs) {$/;"	f	class:webrtc::Matrix
Multiply	webrtc/modules/audio_processing/beamformer/matrix.h	/^  Matrix& Multiply(const T* const* lhs,$/;"	f	class:webrtc::Matrix
Mute	webrtc/modules/include/module_common_types.h	/^inline void AudioFrame::Mute() {$/;"	f	class:webrtc::AudioFrame
MyExperiment	webrtc/modules/audio_processing/config_unittest.cc	/^  MyExperiment()$/;"	f	struct:webrtc::__anon191::MyExperiment
MyExperiment	webrtc/modules/audio_processing/config_unittest.cc	/^  MyExperiment(int factor, int offset)$/;"	f	struct:webrtc::__anon191::MyExperiment
MyExperiment	webrtc/modules/audio_processing/config_unittest.cc	/^struct MyExperiment {$/;"	s	namespace:webrtc::__anon191	file:
MyTaskRunner	webrtc/base/task_unittest.cc	/^class MyTaskRunner : public TaskRunner {$/;"	c	namespace:rtc	file:
MyWinHttpGetProxyForUrl	webrtc/base/proxydetect.cc	/^BOOL MyWinHttpGetProxyForUrl(pfnWinHttpGetProxyForUrl pWHGPFU,$/;"	f	namespace:rtc
NAT	webrtc/base/nattypes.h	/^class NAT {$/;"	c	namespace:rtc
NATInternalSocketFactory	webrtc/base/natsocketfactory.h	/^class NATInternalSocketFactory {$/;"	c	namespace:rtc
NATProxyServer	webrtc/base/natserver.cc	/^  NATProxyServer(SocketFactory* int_factory, const SocketAddress& int_addr,$/;"	f	class:rtc::NATProxyServer
NATProxyServer	webrtc/base/natserver.cc	/^class NATProxyServer : public ProxyServer {$/;"	c	namespace:rtc	file:
NATProxyServerSocket	webrtc/base/natserver.cc	/^  NATProxyServerSocket(AsyncSocket* socket)$/;"	f	class:rtc::NATProxyServerSocket
NATProxyServerSocket	webrtc/base/natserver.cc	/^class NATProxyServerSocket : public AsyncProxyServerSocket {$/;"	c	namespace:rtc	file:
NATServer	webrtc/base/natserver.cc	/^NATServer::NATServer($/;"	f	class:rtc::NATServer
NATServer	webrtc/base/natserver.h	/^class NATServer : public sigslot::has_slots<> {$/;"	c	namespace:rtc
NATSocket	webrtc/base/natsocketfactory.cc	/^  explicit NATSocket(NATInternalSocketFactory* sf, int family, int type)$/;"	f	class:rtc::NATSocket
NATSocket	webrtc/base/natsocketfactory.cc	/^class NATSocket : public AsyncSocket, public sigslot::has_slots<> {$/;"	c	namespace:rtc	file:
NATSocketFactory	webrtc/base/natsocketfactory.cc	/^NATSocketFactory::NATSocketFactory(SocketFactory* factory,$/;"	f	class:rtc::NATSocketFactory
NATSocketFactory	webrtc/base/natsocketfactory.h	/^class NATSocketFactory : public SocketFactory, public NATInternalSocketFactory {$/;"	c	namespace:rtc
NATSocketServer	webrtc/base/natsocketfactory.cc	/^NATSocketServer::NATSocketServer(SocketServer* server)$/;"	f	class:rtc::NATSocketServer
NATSocketServer	webrtc/base/natsocketfactory.h	/^class NATSocketServer : public SocketServer, public NATInternalSocketFactory {$/;"	c	namespace:rtc
NATType	webrtc/base/nattypes.h	/^enum NATType {$/;"	g	namespace:rtc
NAT_ADDR_RESTRICTED	webrtc/base/nattypes.h	/^  NAT_ADDR_RESTRICTED,$/;"	e	enum:rtc::NATType
NAT_OPEN_CONE	webrtc/base/nattypes.h	/^  NAT_OPEN_CONE,$/;"	e	enum:rtc::NATType
NAT_PORT_RESTRICTED	webrtc/base/nattypes.h	/^  NAT_PORT_RESTRICTED,$/;"	e	enum:rtc::NATType
NAT_SERVER_TCP_PORT	webrtc/base/natserver.h	/^const int NAT_SERVER_TCP_PORT = 4238;$/;"	m	namespace:rtc
NAT_SERVER_UDP_PORT	webrtc/base/natserver.h	/^const int NAT_SERVER_UDP_PORT = 4237;$/;"	m	namespace:rtc
NAT_SYMMETRIC	webrtc/base/nattypes.h	/^  NAT_SYMMETRIC$/;"	e	enum:rtc::NATType
NETWORK_BIND_ADDRESS_NOT_FOUND	webrtc/base/networkmonitor.h	/^  NETWORK_BIND_ADDRESS_NOT_FOUND = -3,$/;"	e	enum:rtc::NetworkBindingResults
NETWORK_BIND_FAILURE	webrtc/base/networkmonitor.h	/^  NETWORK_BIND_FAILURE = -1,  \/\/ Generic error$/;"	e	enum:rtc::NetworkBindingResults
NETWORK_BIND_NETWORK_CHANGED	webrtc/base/networkmonitor.h	/^  NETWORK_BIND_NETWORK_CHANGED = -4$/;"	e	enum:rtc::NetworkBindingResults
NETWORK_BIND_NOT_IMPLEMENTED	webrtc/base/networkmonitor.h	/^  NETWORK_BIND_NOT_IMPLEMENTED = -2,$/;"	e	enum:rtc::NetworkBindingResults
NETWORK_BIND_SUCCESS	webrtc/base/networkmonitor.h	/^  NETWORK_BIND_SUCCESS = 0,   \/\/ No error$/;"	e	enum:rtc::NetworkBindingResults
NFACTOR	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define NFACTOR /;"	d
NLP_COMP_HIGH	webrtc/modules/audio_processing/aecm/aecm_defines.h	/^#define NLP_COMP_HIGH /;"	d
NLP_COMP_LOW	webrtc/modules/audio_processing/aecm/aecm_defines.h	/^#define NLP_COMP_LOW /;"	d
NOISE_UPDATE	webrtc/modules/audio_processing/ns/defines.h	/^#define NOISE_UPDATE /;"	d
NOISE_UPDATE_Q8	webrtc/modules/audio_processing/ns/nsx_defines.h	/^#define NOISE_UPDATE_Q8 /;"	d
NOMINMAX	webrtc/base/win32.h	/^#define NOMINMAX$/;"	d
NONAME	webrtc/base/bind.h	/^#define NONAME$/;"	d
NONAME	webrtc/base/bind.h	/^#undef NONAME$/;"	d
NONE	webrtc/base/sslstreamadapter.h	/^  NONE,$/;"	m	class:rtc::SSLPeerCertificateDigestError
NO_GTEST	webrtc/base/gunit_prod.h	/^#define NO_GTEST$/;"	d
NO_MEMBER_TEMPLATES	webrtc/base/linked_ptr.h	/^#define NO_MEMBER_TEMPLATES$/;"	d
NO_RETURN	webrtc/typedefs.h	/^#define NO_RETURN /;"	d
NO_RETURN	webrtc/typedefs.h	/^#define NO_RETURN$/;"	d
NO_THREAD_SAFETY_ANALYSIS	webrtc/base/thread_annotations.h	/^#define NO_THREAD_SAFETY_ANALYSIS /;"	d
NSLevelConvert	WebRTCAudioProcessing_jni.cc	/^static webrtc::NoiseSuppression::Level NSLevelConvert(int level)$/;"	f	file:
NSParaExtract	webrtc/modules/audio_processing/ns/ns_core.h	/^} NSParaExtract;$/;"	t	typeref:struct:NSParaExtract_
NSParaExtract_	webrtc/modules/audio_processing/ns/ns_core.h	/^typedef struct NSParaExtract_ {$/;"	s
NS_CREATE	webrtc/modules/audio_processing/noise_suppression_impl.cc	/^#define NS_CREATE /;"	d	file:
NS_FREE	webrtc/modules/audio_processing/noise_suppression_impl.cc	/^#define NS_FREE /;"	d	file:
NS_INIT	webrtc/modules/audio_processing/noise_suppression_impl.cc	/^#define NS_INIT /;"	d	file:
NS_SET_POLICY	webrtc/modules/audio_processing/noise_suppression_impl.cc	/^#define NS_SET_POLICY /;"	d	file:
NULL	webrtc/common_types.h	/^#define NULL /;"	d
NUMBEROFCHANNELAPSECTIONS	webrtc/modules/audio_coding/codecs/isac/main/source/filterbank_tables.h	/^#define NUMBEROFCHANNELAPSECTIONS /;"	d
NUMBEROFCOMPOSITEAPSECTIONS	webrtc/modules/audio_coding/codecs/isac/main/source/filterbank_tables.h	/^#define NUMBEROFCOMPOSITEAPSECTIONS /;"	d
NUM_AR_RC_QUANT_BAUNDARY	webrtc/modules/audio_coding/codecs/isac/main/source/spectrum_ar_model_tables.h	/^#define NUM_AR_RC_QUANT_BAUNDARY /;"	d
NUM_BLOCKS_IN_SAT_BEFORE_CHANGE_TARGET	webrtc/modules/audio_processing/agc/legacy/analog_agc.c	/^#define NUM_BLOCKS_IN_SAT_BEFORE_CHANGE_TARGET /;"	d	file:
NUM_HIGH_BANDS_MAX	webrtc/modules/audio_processing/aec/aec_core.h	/^#define NUM_HIGH_BANDS_MAX /;"	d
NUM_HIGH_BANDS_MAX	webrtc/modules/audio_processing/ns/defines.h	/^#define NUM_HIGH_BANDS_MAX /;"	d
NUM_HIGH_BANDS_MAX	webrtc/modules/audio_processing/ns/nsx_defines.h	/^#define NUM_HIGH_BANDS_MAX /;"	d
NUM_SAMPLES	webrtc/base/virtualsocketserver.cc	/^const int NUM_SAMPLES = 1000;$/;"	m	namespace:rtc	file:
NackConfig	webrtc/config.h	/^  NackConfig() : rtp_history_ms(0) {}$/;"	f	struct:webrtc::NackConfig
NackConfig	webrtc/config.h	/^struct NackConfig {$/;"	s	namespace:webrtc
NaluInfo	webrtc/modules/include/module_common_types.h	/^struct NaluInfo {$/;"	s	namespace:webrtc
Name	webrtc/base/fileutils.cc	/^std::string DirectoryIterator::Name() const {$/;"	f	class:rtc::DirectoryIterator
Name	webrtc/base/fileutils_mock.h	/^    virtual std::string Name() const {$/;"	f	class:rtc::FakeDirectoryIterator
Name	webrtc/base/httpcommon.cc	/^  static inline const char* Name(E val) { return Names[val]; }$/;"	f	struct:rtc::Enum
Names	webrtc/base/httpcommon.cc	/^  static const char** Names;$/;"	m	struct:rtc::Enum	file:
NatTcpTest	webrtc/base/nat_unittest.cc	/^  NatTcpTest()$/;"	f	class:NatTcpTest
NatTcpTest	webrtc/base/nat_unittest.cc	/^class NatTcpTest : public testing::Test, public sigslot::has_slots<> {$/;"	c	file:
NativeRate	webrtc/modules/audio_processing/include/audio_processing.h	/^  enum NativeRate {$/;"	g	class:webrtc::AudioProcessing
Negate	webrtc/base/bind_unittest.cc	/^int Negate(int a) { return -a; }$/;"	f	namespace:rtc::__anon4
NegotiateAuthContext	webrtc/base/httpcommon.cc	/^  NegotiateAuthContext(const std::string& auth, CredHandle c1, CtxtHandle c2)$/;"	f	struct:rtc::NegotiateAuthContext
NegotiateAuthContext	webrtc/base/httpcommon.cc	/^struct NegotiateAuthContext : public HttpAuthContext {$/;"	s	namespace:rtc	file:
Network	webrtc/base/network.cc	/^Network::Network(const std::string& name,$/;"	f	class:rtc::Network
Network	webrtc/base/network.h	/^class Network {$/;"	c	namespace:rtc
NetworkBinderInterface	webrtc/base/networkmonitor.h	/^class NetworkBinderInterface {$/;"	c	namespace:rtc
NetworkBindingResults	webrtc/base/networkmonitor.h	/^enum NetworkBindingResults {$/;"	g	namespace:rtc
NetworkEntry	webrtc/base/virtualsocketserver.h	/^  struct NetworkEntry {$/;"	s	class:rtc::VirtualSocket
NetworkList	webrtc/base/network.h	/^  typedef std::vector<Network*> NetworkList;$/;"	t	class:rtc::NetworkManager
NetworkManager	webrtc/base/network.cc	/^NetworkManager::NetworkManager() {$/;"	f	class:rtc::NetworkManager
NetworkManager	webrtc/base/network.h	/^class NetworkManager : public DefaultLocalAddressProvider {$/;"	c	namespace:rtc
NetworkManagerBase	webrtc/base/network.cc	/^NetworkManagerBase::NetworkManagerBase()$/;"	f	class:rtc::NetworkManagerBase
NetworkManagerBase	webrtc/base/network.h	/^class NetworkManagerBase : public NetworkManager {$/;"	c	namespace:rtc
NetworkMap	webrtc/base/network.h	/^  typedef std::map<std::string, Network*> NetworkMap;$/;"	t	class:rtc::NetworkManagerBase
NetworkMonitorBase	webrtc/base/networkmonitor.cc	/^NetworkMonitorBase::NetworkMonitorBase() : worker_thread_(Thread::Current()) {}$/;"	f	class:rtc::NetworkMonitorBase
NetworkMonitorBase	webrtc/base/networkmonitor.h	/^class NetworkMonitorBase : public NetworkMonitorInterface,$/;"	c	namespace:rtc
NetworkMonitorFactory	webrtc/base/networkmonitor.cc	/^NetworkMonitorFactory::NetworkMonitorFactory() {}$/;"	f	class:rtc::NetworkMonitorFactory
NetworkMonitorFactory	webrtc/base/networkmonitor.h	/^class NetworkMonitorFactory {$/;"	c	namespace:rtc
NetworkMonitorInterface	webrtc/base/networkmonitor.cc	/^NetworkMonitorInterface::NetworkMonitorInterface() {}$/;"	f	class:rtc::NetworkMonitorInterface
NetworkMonitorInterface	webrtc/base/networkmonitor.h	/^class NetworkMonitorInterface {$/;"	c	namespace:rtc
NetworkQueue	webrtc/base/virtualsocketserver.h	/^  typedef std::deque<NetworkEntry> NetworkQueue;$/;"	t	class:rtc::VirtualSocket
NetworkRoute	webrtc/base/networkroute.h	/^  NetworkRoute()$/;"	f	struct:rtc::NetworkRoute
NetworkRoute	webrtc/base/networkroute.h	/^  NetworkRoute(bool connected,$/;"	f	struct:rtc::NetworkRoute
NetworkRoute	webrtc/base/networkroute.h	/^struct NetworkRoute {$/;"	s	namespace:rtc
NetworkState	webrtc/common_types.h	/^enum NetworkState {$/;"	g	namespace:webrtc
NetworkStatistics	webrtc/common_types.h	/^struct NetworkStatistics {$/;"	s	namespace:webrtc
NetworkTest	webrtc/base/network_unittest.cc	/^  NetworkTest() : callback_called_(false) {}$/;"	f	class:rtc::NetworkTest
NetworkTest	webrtc/base/network_unittest.cc	/^class NetworkTest : public testing::Test, public sigslot::has_slots<>  {$/;"	c	namespace:rtc	file:
NetworkToHost16	webrtc/base/byteorder.h	/^inline uint16_t NetworkToHost16(uint16_t n) {$/;"	f	namespace:rtc
NetworkToHost32	webrtc/base/byteorder.h	/^inline uint32_t NetworkToHost32(uint32_t n) {$/;"	f	namespace:rtc
NetworkToHost64	webrtc/base/byteorder.h	/^inline uint64_t NetworkToHost64(uint64_t n) {$/;"	f	namespace:rtc
NewClosure	webrtc/base/task_queue.h	/^static std::unique_ptr<QueuedTask> NewClosure(const Closure& closure) {$/;"	f	namespace:rtc
NewClosure	webrtc/base/task_queue.h	/^static std::unique_ptr<QueuedTask> NewClosure(const Closure& closure,$/;"	f	namespace:rtc
NewObjectCreatedOnTaskQueue	webrtc/base/weak_ptr_unittest.cc	/^std::unique_ptr<T> NewObjectCreatedOnTaskQueue() {$/;"	f	namespace:rtc
NewReference	webrtc/base/stream.cc	/^StreamInterface* StreamReference::NewReference() {$/;"	f	class:rtc::StreamReference
NewSocketPool	webrtc/base/socketpool.cc	/^NewSocketPool::NewSocketPool(SocketFactory* factory) : factory_(factory) {$/;"	f	class:rtc::NewSocketPool
NewSocketPool	webrtc/base/socketpool.h	/^class NewSocketPool : public StreamPool {$/;"	c	namespace:rtc
New_BOOL	webrtc/base/flags.h	/^  static FlagValue New_BOOL(int b) {$/;"	f	union:rtc::FlagValue
New_FLOAT	webrtc/base/flags.h	/^  static FlagValue New_FLOAT(float f) {$/;"	f	union:rtc::FlagValue
New_INT	webrtc/base/flags.h	/^  static FlagValue New_INT(int i) {$/;"	f	union:rtc::FlagValue
New_STRING	webrtc/base/flags.h	/^  static FlagValue New_STRING(const char* s) {$/;"	f	union:rtc::FlagValue
Next	webrtc/base/autodetectproxy.cc	/^void AutoDetectProxy::Next() {$/;"	f	class:rtc::AutoDetectProxy
Next	webrtc/base/fileutils.cc	/^bool DirectoryIterator::Next() {$/;"	f	class:rtc::DirectoryIterator
Next	webrtc/base/fileutils_mock.h	/^    virtual bool Next() {$/;"	f	class:rtc::FakeDirectoryIterator
Next	webrtc/base/thread_unittest.cc	/^  int Next(int prev) {$/;"	f	class:TestGenerator
NextBucketIndex	webrtc/base/ratetracker.cc	/^size_t RateTracker::NextBucketIndex(size_t bucket_index) const {$/;"	f	class:rtc::RateTracker
NextDelay	webrtc/base/virtualsocket_unittest.cc	/^  uint32_t NextDelay() {$/;"	f	struct:Sender
NextOutput	webrtc/base/random.h	/^  uint64_t NextOutput() {$/;"	f	class:webrtc::Random
NextPacket	webrtc/base/testclient.cc	/^TestClient::Packet* TestClient::NextPacket(int timeout_ms) {$/;"	f	class:rtc::TestClient
No	webrtc/base/bind.h	/^  struct No { char dummy[2]; };$/;"	s	class:rtc::detail::IsRefCounted
NoGcm	webrtc/base/sslstreamadapter.cc	/^CryptoOptions CryptoOptions::NoGcm() {$/;"	f	class:rtc::CryptoOptions
NoType	webrtc/base/template_util.h	/^struct NoType {$/;"	s	namespace:rtc::internal
NodeAt	webrtc/modules/audio_processing/transient/wpd_tree.cc	/^WPDNode* WPDTree::NodeAt(int level, int index) {$/;"	f	class:webrtc::WPDTree
NoiseEstimate	webrtc/modules/audio_processing/noise_suppression_impl.cc	/^std::vector<float> NoiseSuppressionImpl::NoiseEstimate() {$/;"	f	class:webrtc::NoiseSuppressionImpl
NoiseEstimation	webrtc/modules/audio_processing/ns/ns_core.c	/^static void NoiseEstimation(NoiseSuppressionC* self,$/;"	f	file:
NoiseEstimation	webrtc/modules/audio_processing/ns/nsx_core.h	/^typedef void (*NoiseEstimation)(NoiseSuppressionFixedC* inst,$/;"	t
NoiseEstimationC	webrtc/modules/audio_processing/ns/nsx_core.c	/^static void NoiseEstimationC(NoiseSuppressionFixedC* inst,$/;"	f	file:
NoiseLevelEstimator	webrtc/modules/audio_processing/level_controller/noise_level_estimator.cc	/^NoiseLevelEstimator::NoiseLevelEstimator() {$/;"	f	class:webrtc::NoiseLevelEstimator
NoiseLevelEstimator	webrtc/modules/audio_processing/level_controller/noise_level_estimator.h	/^class NoiseLevelEstimator {$/;"	c	namespace:webrtc
NoiseSpectrumEstimator	webrtc/modules/audio_processing/level_controller/noise_spectrum_estimator.cc	/^NoiseSpectrumEstimator::NoiseSpectrumEstimator(ApmDataDumper* data_dumper)$/;"	f	class:webrtc::NoiseSpectrumEstimator
NoiseSpectrumEstimator	webrtc/modules/audio_processing/level_controller/noise_spectrum_estimator.h	/^class NoiseSpectrumEstimator {$/;"	c	namespace:webrtc
NoiseSuppression	webrtc/modules/audio_processing/include/audio_processing.h	/^class NoiseSuppression {$/;"	c	namespace:webrtc
NoiseSuppressionC	webrtc/modules/audio_processing/ns/ns_core.h	/^} NoiseSuppressionC;$/;"	t	typeref:struct:NoiseSuppressionC_
NoiseSuppressionC_	webrtc/modules/audio_processing/ns/ns_core.h	/^typedef struct NoiseSuppressionC_ {$/;"	s
NoiseSuppressionFixedC	webrtc/modules/audio_processing/ns/nsx_core.h	/^} NoiseSuppressionFixedC;$/;"	t	typeref:struct:NoiseSuppressionFixedC_
NoiseSuppressionFixedC_	webrtc/modules/audio_processing/ns/nsx_core.h	/^typedef struct NoiseSuppressionFixedC_ {$/;"	s
NoiseSuppressionImpl	webrtc/modules/audio_processing/noise_suppression_impl.cc	/^NoiseSuppressionImpl::NoiseSuppressionImpl(rtc::CriticalSection* crit)$/;"	f	class:webrtc::NoiseSuppressionImpl
NoiseSuppressionImpl	webrtc/modules/audio_processing/noise_suppression_impl.h	/^class NoiseSuppressionImpl : public NoiseSuppression {$/;"	c	namespace:webrtc
None	webrtc/base/testutils.h	/^#undef None$/;"	d
NonlinearBeamformer	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.cc	/^NonlinearBeamformer::NonlinearBeamformer($/;"	f	class:webrtc::NonlinearBeamformer
NonlinearBeamformer	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.h	/^class NonlinearBeamformer : public LappedTransform::Callback {$/;"	c	namespace:webrtc
NoopCallback	webrtc/common_audio/lapped_transform_unittest.cc	/^  NoopCallback() : block_num_(0) {}$/;"	f	class:__anon81::NoopCallback
NoopCallback	webrtc/common_audio/lapped_transform_unittest.cc	/^class NoopCallback : public webrtc::LappedTransform::Callback {$/;"	c	namespace:__anon81	file:
NoopSwapQueueItemVerifierFunction	webrtc/base/swap_queue.h	/^bool NoopSwapQueueItemVerifierFunction(const T&) {$/;"	f	namespace:webrtc::internal
Norm	webrtc/modules/audio_processing/beamformer/covariance_matrix_generator.cc	/^float Norm(const ComplexMatrix<float>& x) {$/;"	f	namespace:webrtc::__anon185
Norm	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.cc	/^float Norm(const ComplexMatrix<float>& mat,$/;"	f	namespace:webrtc::__anon188
Normal	webrtc/base/virtualsocketserver.cc	/^static double Normal(double x, double mean, double stddev) {$/;"	f	namespace:rtc
Normalize	webrtc/base/pathutils.cc	/^void Pathname::Normalize() {$/;"	f	class:rtc::Pathname
NormalizeCovMats	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.cc	/^void NonlinearBeamformer::NormalizeCovMats() {$/;"	f	class:webrtc::NonlinearBeamformer
NormalizeRealBuffer	webrtc/modules/audio_processing/ns/nsx_core.h	/^typedef void (*NormalizeRealBuffer)(NoiseSuppressionFixedC* inst,$/;"	t
NormalizeRealBufferC	webrtc/modules/audio_processing/ns/nsx_core.c	/^static void NormalizeRealBufferC(NoiseSuppressionFixedC* inst,$/;"	f	file:
Normalized	webrtc/base/ipaddress.cc	/^IPAddress IPAddress::Normalized() const {$/;"	f	class:rtc::IPAddress
NormalizedCovarianceEstimator	webrtc/modules/audio_processing/echo_detector/normalized_covariance_estimator.h	/^class NormalizedCovarianceEstimator {$/;"	c	namespace:webrtc
NotifyReadableForTest	webrtc/base/bufferqueue.h	/^  virtual void NotifyReadableForTest() {}$/;"	f	class:rtc::BufferQueue
NotifyWritableForTest	webrtc/base/bufferqueue.h	/^  virtual void NotifyWritableForTest() {}$/;"	f	class:rtc::BufferQueue
NotifyingAsyncClosure	webrtc/base/asyncinvoker-inl.h	/^  NotifyingAsyncClosure(AsyncInvoker* invoker,$/;"	f	class:rtc::NotifyingAsyncClosure
NotifyingAsyncClosure	webrtc/base/asyncinvoker-inl.h	/^class NotifyingAsyncClosure : public NotifyingAsyncClosureBase {$/;"	c	namespace:rtc
NotifyingAsyncClosure	webrtc/base/asyncinvoker-inl.h	/^class NotifyingAsyncClosure<void, FunctorT, HostT>$/;"	c	namespace:rtc
NotifyingAsyncClosureBase	webrtc/base/asyncinvoker-inl.h	/^class NotifyingAsyncClosureBase : public AsyncClosure,$/;"	c	namespace:rtc
NotifyingAsyncClosureBase	webrtc/base/asyncinvoker.cc	/^NotifyingAsyncClosureBase::NotifyingAsyncClosureBase($/;"	f	class:rtc::NotifyingAsyncClosureBase
NowSeconds	webrtc/base/rtccertificate_unittest.cc	/^  uint64_t NowSeconds() const {$/;"	f	class:rtc::RTCCertificateTest
NsHandle	webrtc/modules/audio_processing/ns/noise_suppression.h	/^typedef struct NsHandleT NsHandle;$/;"	t	typeref:struct:NsHandleT
NsModes	webrtc/common_types.h	/^enum NsModes {$/;"	g	namespace:webrtc
NsState	webrtc/modules/audio_processing/noise_suppression_impl.cc	/^typedef NsHandle NsState;$/;"	t	file:
NsState	webrtc/modules/audio_processing/noise_suppression_impl.cc	/^typedef NsxHandle NsState;$/;"	t	file:
NsxHandle	webrtc/modules/audio_processing/ns/noise_suppression_x.h	/^typedef struct NsxHandleT NsxHandle;$/;"	t	typeref:struct:NsxHandleT
NtpTime	webrtc/system_wrappers/include/ntp_time.h	/^  NtpTime() : seconds_(0), fractions_(0) {}$/;"	f	class:webrtc::NtpTime
NtpTime	webrtc/system_wrappers/include/ntp_time.h	/^  NtpTime(uint32_t seconds, uint32_t fractions)$/;"	f	class:webrtc::NtpTime
NtpTime	webrtc/system_wrappers/include/ntp_time.h	/^  explicit NtpTime(const Clock& clock) {$/;"	f	class:webrtc::NtpTime
NtpTime	webrtc/system_wrappers/include/ntp_time.h	/^class NtpTime {$/;"	c	namespace:webrtc
NullRunFunction	webrtc/base/platform_thread_unittest.cc	/^bool NullRunFunction(void* obj) {$/;"	f	namespace:rtc::__anon43
NullSocketServer	webrtc/base/nullsocketserver.cc	/^NullSocketServer::NullSocketServer() : event_(false, false) {}$/;"	f	class:rtc::NullSocketServer
NullSocketServer	webrtc/base/nullsocketserver.h	/^class NullSocketServer : public SocketServer {$/;"	c	namespace:rtc
NullSocketServerTest	webrtc/base/nullsocketserver_unittest.cc	/^  NullSocketServerTest() {}$/;"	f	class:rtc::NullSocketServerTest
NullSocketServerTest	webrtc/base/nullsocketserver_unittest.cc	/^class NullSocketServerTest$/;"	c	namespace:rtc	file:
NullStream	webrtc/base/stream.cc	/^NullStream::NullStream() {$/;"	f	class:rtc::NullStream
NullStream	webrtc/base/stream.h	/^class NullStream : public StreamInterface {$/;"	c	namespace:rtc
NullaryConst	webrtc/base/bind_unittest.cc	/^  int NullaryConst() const { ++call_count; return 2; }$/;"	f	struct:rtc::__anon4::MethodBindTester
NullaryInt	webrtc/base/bind_unittest.cc	/^  int NullaryInt() { ++call_count; return 1; }$/;"	f	struct:rtc::__anon4::MethodBindTester
NullaryVoid	webrtc/base/bind_unittest.cc	/^  void NullaryVoid() { ++call_count; }$/;"	f	struct:rtc::__anon4::MethodBindTester
NullaryVoid	webrtc/base/bind_unittest.cc	/^  void NullaryVoid() {}$/;"	f	struct:rtc::__anon4::LifeTimeCheck
NumBandsFromSamplesPerChannel	webrtc/modules/audio_processing/audio_buffer.cc	/^size_t NumBandsFromSamplesPerChannel(size_t num_frames) {$/;"	f	namespace:webrtc::__anon178
NumCancellersRequired	webrtc/modules/audio_processing/echo_cancellation_impl.cc	/^size_t EchoCancellationImpl::NumCancellersRequired($/;"	f	class:webrtc::EchoCancellationImpl
NumCancellersRequired	webrtc/modules/audio_processing/echo_control_mobile_impl.cc	/^size_t EchoControlMobileImpl::NumCancellersRequired($/;"	f	class:webrtc::EchoControlMobileImpl
NumChannels	webrtc/common_audio/wav_header.cc	/^  uint16_t NumChannels;$/;"	m	struct:webrtc::__anon112::FmtSubchunk	file:
NumEvents	webrtc/system_wrappers/source/metrics_default.cc	/^  int NumEvents(const std::string& name, int sample) const {$/;"	f	class:webrtc::metrics::__anon251::RtcHistogramMap
NumEvents	webrtc/system_wrappers/source/metrics_default.cc	/^  int NumEvents(int sample) const {$/;"	f	class:webrtc::metrics::__anon251::RtcHistogram
NumEvents	webrtc/system_wrappers/source/metrics_default.cc	/^int NumEvents(const std::string& name, int sample) {$/;"	f	namespace:webrtc::metrics
NumSamples	webrtc/system_wrappers/source/metrics_default.cc	/^  int NumSamples() const {$/;"	f	class:webrtc::metrics::__anon251::RtcHistogram
NumSamples	webrtc/system_wrappers/source/metrics_default.cc	/^  int NumSamples(const std::string& name) const {$/;"	f	class:webrtc::metrics::__anon251::RtcHistogramMap
NumSamples	webrtc/system_wrappers/source/metrics_default.cc	/^int NumSamples(const std::string& name) {$/;"	f	namespace:webrtc::metrics
NumberOfNodesAtLevel	webrtc/modules/audio_processing/transient/wpd_tree.h	/^  static int NumberOfNodesAtLevel(int level) {$/;"	f	class:webrtc::WPDTree
ODD_A_LENGTH	webrtc/common_audio/signal_processing/filter_ar_fast_q12_armv7.S	/^ODD_A_LENGTH:$/;"	l
ODD_LENGTH	webrtc/common_audio/signal_processing/filter_ar_fast_q12_armv7.S	/^ODD_LENGTH:$/;"	l
OFFSET_ENV_TO_RMS	webrtc/modules/audio_processing/agc/legacy/analog_agc.c	/^#define OFFSET_ENV_TO_RMS /;"	d	file:
OK_ECDSA_ciphers	webrtc/base/opensslstreamadapter.cc	/^static const cipher_list OK_ECDSA_ciphers[] = {$/;"	m	namespace:rtc	file:
OK_RSA_ciphers	webrtc/base/opensslstreamadapter.cc	/^static const cipher_list OK_RSA_ciphers[] = {$/;"	m	namespace:rtc	file:
OMXFFTSpec_R_F32_	webrtc/common_audio/real_fourier_openmax.h	/^  typedef void OMXFFTSpec_R_F32_;$/;"	t	class:webrtc::RealFourierOpenmax
ONE_MINUS_DD_PR_SNR_Q11	webrtc/modules/audio_processing/ns/nsx_defines.h	/^#define ONE_MINUS_DD_PR_SNR_Q11 /;"	d
ONE_MINUS_GAMMA_PAUSE_Q8	webrtc/modules/audio_processing/ns/nsx_defines.h	/^#define ONE_MINUS_GAMMA_PAUSE_Q8 /;"	d
ONE_MINUS_PROB_RANGE_Q8	webrtc/modules/audio_processing/ns/nsx_defines.h	/^#define ONE_MINUS_PROB_RANGE_Q8 /;"	d
ONE_Q14	webrtc/modules/audio_processing/aecm/aecm_defines.h	/^#define ONE_Q14 /;"	d
OPT_DONTFRAGMENT	webrtc/base/socket.h	/^    OPT_DONTFRAGMENT,$/;"	e	enum:rtc::Socket::Option
OPT_DSCP	webrtc/base/socket.h	/^    OPT_DSCP,        \/\/ DSCP code$/;"	e	enum:rtc::Socket::Option
OPT_IPV6_V6ONLY	webrtc/base/socket.h	/^    OPT_IPV6_V6ONLY, \/\/ Whether the socket is IPv6 only.$/;"	e	enum:rtc::Socket::Option
OPT_NODELAY	webrtc/base/socket.h	/^    OPT_NODELAY,     \/\/ whether Nagle algorithm is enabled$/;"	e	enum:rtc::Socket::Option
OPT_RCVBUF	webrtc/base/socket.h	/^    OPT_RCVBUF,      \/\/ receive buffer size$/;"	e	enum:rtc::Socket::Option
OPT_RTP_SENDTIME_EXTN_ID	webrtc/base/socket.h	/^    OPT_RTP_SENDTIME_EXTN_ID,  \/\/ This is a non-traditional socket option param.$/;"	e	enum:rtc::Socket::Option
OPT_SNDBUF	webrtc/base/socket.h	/^    OPT_SNDBUF,      \/\/ send buffer size$/;"	e	enum:rtc::Socket::Option
ORDERHI	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define ORDERHI /;"	d
ORDERLO	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define ORDERLO /;"	d
ORDER_HOST	webrtc/base/bytebuffer.h	/^    ORDER_HOST,         \/\/ Use the native order of the host.$/;"	e	enum:rtc::ByteBuffer::ByteOrder
ORDER_NETWORK	webrtc/base/bytebuffer.h	/^    ORDER_NETWORK = 0,  \/\/ Default, use network byte order (big endian).$/;"	e	enum:rtc::ByteBuffer::ByteOrder
OTHER_PLATFORM_FILES	jni/audio_processing.mk	/^OTHER_PLATFORM_FILES	:= \\$/;"	m
OVERLAPS_RANGE	webrtc/base/safe_conversions_impl.h	/^  OVERLAPS_RANGE,$/;"	e	enum:rtc::internal::DstRange
ObtainDocumentStream	webrtc/base/httpbase_unittest.cc	/^void HttpBaseTest::ObtainDocumentStream() {$/;"	f	class:rtc::HttpBaseTest
OldEnergy	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  double    OldEnergy;$/;"	m	struct:__anon125
Oldest	webrtc/modules/audio_processing/vad/vad_circular_buffer.cc	/^double VadCircularBuffer::Oldest() const {$/;"	f	class:webrtc::VadCircularBuffer
OnAccept	webrtc/base/testechoserver.h	/^  void OnAccept(AsyncSocket* socket) {$/;"	f	class:rtc::TestEchoServer
OnAcceptEvent	webrtc/base/nat_unittest.cc	/^  void OnAcceptEvent(AsyncSocket* socket) {$/;"	f	class:NatTcpTest
OnAcceptEvent	webrtc/base/proxyserver.cc	/^void ProxyServer::OnAcceptEvent(AsyncSocket* socket) {$/;"	f	class:rtc::ProxyServer
OnBindingDestroyed	webrtc/base/proxyserver.cc	/^void ProxyServer::OnBindingDestroyed(ProxyBinding* binding) {$/;"	f	class:rtc::ProxyServer
OnChildStopped	webrtc/base/taskparent.cc	/^void TaskParent::OnChildStopped(Task *child) {$/;"	f	class:rtc::TaskParent
OnClose	webrtc/base/socket_unittest.cc	/^  void OnClose(AsyncSocket* socket, int error) {$/;"	f	class:rtc::SocketCloser
OnClose	webrtc/base/testechoserver.h	/^  void OnClose(AsyncPacketSocket* socket, int err) {$/;"	f	class:rtc::TestEchoServer
OnClose	webrtc/base/win32window.h	/^  virtual bool OnClose() { return true; }$/;"	f	class:rtc::Win32Window
OnCloseEvent	webrtc/base/asyncsocket.cc	/^void AsyncSocketAdapter::OnCloseEvent(AsyncSocket* socket, int err) {$/;"	f	class:rtc::AsyncSocketAdapter
OnCloseEvent	webrtc/base/asynctcpsocket.cc	/^void AsyncTCPSocketBase::OnCloseEvent(AsyncSocket* socket, int error) {$/;"	f	class:rtc::AsyncTCPSocketBase
OnCloseEvent	webrtc/base/autodetectproxy.cc	/^void AutoDetectProxy::OnCloseEvent(AsyncSocket * socket, int error) {$/;"	f	class:rtc::AutoDetectProxy
OnCloseEvent	webrtc/base/nat_unittest.cc	/^  void OnCloseEvent(AsyncSocket* socket, int error) {$/;"	f	class:NatTcpTest
OnCloseEvent	webrtc/base/natsocketfactory.cc	/^  void OnCloseEvent(AsyncSocket* socket, int error) {$/;"	f	class:rtc::NATSocket
OnCloseEvent	webrtc/base/openssladapter.cc	/^OpenSSLAdapter::OnCloseEvent(AsyncSocket* socket, int err) {$/;"	f	class:rtc::OpenSSLAdapter
OnCloseEvent	webrtc/base/socketadapters.cc	/^void AsyncHttpsProxySocket::OnCloseEvent(AsyncSocket * socket, int err) {$/;"	f	class:rtc::AsyncHttpsProxySocket
OnCloseEvent	webrtc/base/socketadapters.cc	/^void LoggingSocketAdapter::OnCloseEvent(AsyncSocket * socket, int err) {$/;"	f	class:rtc::LoggingSocketAdapter
OnCloseEvent	webrtc/base/socketstream.cc	/^void SocketStream::OnCloseEvent(AsyncSocket* socket, int err) {$/;"	f	class:rtc::SocketStream
OnCloseEvent	webrtc/base/testutils.h	/^  void OnCloseEvent(AsyncSocket* socket, int error) {$/;"	f	class:testing::SocketTestClient
OnCloseEvent	webrtc/base/testutils.h	/^  void OnCloseEvent(AsyncSocket* socket, int error) {$/;"	f	class:testing::StreamSink
OnClosed	webrtc/base/httpserver_unittest.cc	/^    void OnClosed(HttpServer*) {$/;"	f	struct:rtc::__anon20::HttpServerMonitor
OnComplete	webrtc/base/httpbase.cc	/^HttpBase::OnComplete(HttpError err) {$/;"	f	class:rtc::HttpBase
OnConfigEvent	webrtc/modules/audio_processing/test/debug_dump_replayer.cc	/^void DebugDumpReplayer::OnConfigEvent(const audioproc::Config& msg) {$/;"	f	class:webrtc::test::DebugDumpReplayer
OnConnectEvent	webrtc/base/asyncsocket.cc	/^void AsyncSocketAdapter::OnConnectEvent(AsyncSocket* socket) {$/;"	f	class:rtc::AsyncSocketAdapter
OnConnectEvent	webrtc/base/asynctcpsocket.cc	/^void AsyncTCPSocketBase::OnConnectEvent(AsyncSocket* socket) {$/;"	f	class:rtc::AsyncTCPSocketBase
OnConnectEvent	webrtc/base/autodetectproxy.cc	/^void AutoDetectProxy::OnConnectEvent(AsyncSocket * socket) {$/;"	f	class:rtc::AutoDetectProxy
OnConnectEvent	webrtc/base/nat_unittest.cc	/^  void OnConnectEvent(AsyncSocket* socket) {$/;"	f	class:NatTcpTest
OnConnectEvent	webrtc/base/natsocketfactory.cc	/^  void OnConnectEvent(AsyncSocket* socket) {$/;"	f	class:rtc::NATSocket
OnConnectEvent	webrtc/base/openssladapter.cc	/^OpenSSLAdapter::OnConnectEvent(AsyncSocket* socket) {$/;"	f	class:rtc::OpenSSLAdapter
OnConnectEvent	webrtc/base/socketadapters.cc	/^void AsyncHttpsProxySocket::OnConnectEvent(AsyncSocket * socket) {$/;"	f	class:rtc::AsyncHttpsProxySocket
OnConnectEvent	webrtc/base/socketadapters.cc	/^void AsyncSSLSocket::OnConnectEvent(AsyncSocket * socket) {$/;"	f	class:rtc::AsyncSSLSocket
OnConnectEvent	webrtc/base/socketadapters.cc	/^void AsyncSocksProxySocket::OnConnectEvent(AsyncSocket* socket) {$/;"	f	class:rtc::AsyncSocksProxySocket
OnConnectEvent	webrtc/base/socketadapters.cc	/^void LoggingSocketAdapter::OnConnectEvent(AsyncSocket * socket) {$/;"	f	class:rtc::LoggingSocketAdapter
OnConnectEvent	webrtc/base/socketstream.cc	/^void SocketStream::OnConnectEvent(AsyncSocket* socket) {$/;"	f	class:rtc::SocketStream
OnConnectEvent	webrtc/base/testutils.h	/^  void OnConnectEvent(AsyncSocket* socket) {$/;"	f	class:testing::SocketTestClient
OnConnectEvent	webrtc/base/testutils.h	/^  void OnConnectEvent(AsyncSocket* socket) {$/;"	f	class:testing::StreamSink
OnConnectRequest	webrtc/base/proxyserver.cc	/^void ProxyBinding::OnConnectRequest(AsyncProxyServerSocket* socket,$/;"	f	class:rtc::ProxyBinding
OnConnectionClosed	webrtc/base/httpserver.cc	/^void HttpListenServer::OnConnectionClosed(HttpServer* server,$/;"	f	class:rtc::HttpListenServer
OnConnectionClosed	webrtc/base/httpserver_unittest.cc	/^    void OnConnectionClosed(HttpServer*, int, StreamInterface* stream) {$/;"	f	struct:rtc::__anon20::HttpServerMonitor
OnDnsNotify	webrtc/base/win32socketserver.cc	/^bool Win32Socket::EventSink::OnDnsNotify(WPARAM wParam, LPARAM lParam,$/;"	f	class:rtc::Win32Socket::EventSink
OnDnsNotify	webrtc/base/win32socketserver.cc	/^void Win32Socket::OnDnsNotify(HANDLE task, int error) {$/;"	f	class:rtc::Win32Socket
OnDocumentEvent	webrtc/base/httpbase.cc	/^HttpBase::OnDocumentEvent(StreamInterface* stream, int events, int error) {$/;"	f	class:rtc::HttpBase
OnDoneHappy	webrtc/base/task_unittest.cc	/^  void OnDoneHappy(const int id) {$/;"	f	class:rtc::TaskTest
OnEvent	webrtc/base/opensslstreamadapter.cc	/^void OpenSSLStreamAdapter::OnEvent(StreamInterface* stream, int events,$/;"	f	class:rtc::OpenSSLStreamAdapter
OnEvent	webrtc/base/physicalsocketserver.cc	/^  virtual void OnEvent(uint32_t ff, int err) {}$/;"	f	class:rtc::EventDispatcher
OnEvent	webrtc/base/physicalsocketserver.cc	/^void SocketDispatcher::OnEvent(uint32_t ff, int err) {$/;"	f	class:rtc::SocketDispatcher
OnEvent	webrtc/base/sslstreamadapter_unittest.cc	/^  virtual void OnEvent(rtc::StreamInterface *stream, int sig, int err) {$/;"	f	class:SSLStreamAdapterTestBase
OnEvent	webrtc/base/stream.cc	/^void LoggingAdapter::OnEvent(StreamInterface* stream, int events, int err) {$/;"	f	class:rtc::LoggingAdapter
OnEvent	webrtc/base/stream.cc	/^void StreamAdapterInterface::OnEvent(StreamInterface* stream,$/;"	f	class:rtc::StreamAdapterInterface
OnEvent	webrtc/base/testutils.h	/^  void OnEvent(StreamInterface* stream, int events, int error) {$/;"	f	class:testing::StreamSink
OnEventIn	webrtc/base/sslstreamadapter_unittest.cc	/^  void OnEventIn(rtc::StreamInterface* stream, int sig, int err) {$/;"	f	class:SSLDummyStreamBase
OnEventOut	webrtc/base/sslstreamadapter_unittest.cc	/^  void OnEventOut(rtc::StreamInterface* stream, int sig, int err) {$/;"	f	class:SSLDummyStreamBase
OnExternalClose	webrtc/base/proxyserver.cc	/^void ProxyBinding::OnExternalClose(AsyncSocket* socket, int err) {$/;"	f	class:rtc::ProxyBinding
OnExternalConnect	webrtc/base/proxyserver.cc	/^void ProxyBinding::OnExternalConnect(AsyncSocket* socket) {$/;"	f	class:rtc::ProxyBinding
OnExternalRead	webrtc/base/proxyserver.cc	/^void ProxyBinding::OnExternalRead(AsyncSocket* socket) {$/;"	f	class:rtc::ProxyBinding
OnExternalUDPPacket	webrtc/base/natserver.cc	/^void NATServer::OnExternalUDPPacket($/;"	f	class:rtc::NATServer
OnExternalWrite	webrtc/base/proxyserver.cc	/^void ProxyBinding::OnExternalWrite(AsyncSocket* socket) {$/;"	f	class:rtc::ProxyBinding
OnHeaderAvailable	webrtc/base/httpclient.cc	/^HttpError HttpClient::OnHeaderAvailable(bool ignore_data, bool chunked,$/;"	f	class:rtc::HttpClient
OnHttpClientComplete	webrtc/base/httprequest.cc	/^void HttpMonitor::OnHttpClientComplete(HttpClient * http, HttpErrorType error) {$/;"	f	class:HttpMonitor
OnHttpStreamEvent	webrtc/base/httpbase.cc	/^HttpBase::OnHttpStreamEvent(StreamInterface* stream, int events, int error) {$/;"	f	class:rtc::HttpBase
OnInitEvent	webrtc/modules/audio_processing/test/debug_dump_replayer.cc	/^void DebugDumpReplayer::OnInitEvent(const audioproc::Init& msg) {$/;"	f	class:webrtc::test::DebugDumpReplayer
OnInternalClose	webrtc/base/proxyserver.cc	/^void ProxyBinding::OnInternalClose(AsyncSocket* socket, int err) {$/;"	f	class:rtc::ProxyBinding
OnInternalRead	webrtc/base/proxyserver.cc	/^void ProxyBinding::OnInternalRead(AsyncSocket* socket) {$/;"	f	class:rtc::ProxyBinding
OnInternalUDPPacket	webrtc/base/natserver.cc	/^void NATServer::OnInternalUDPPacket($/;"	f	class:rtc::NATServer
OnInternalWrite	webrtc/base/proxyserver.cc	/^void ProxyBinding::OnInternalWrite(AsyncSocket* socket) {$/;"	f	class:rtc::ProxyBinding
OnLocalTimeout	webrtc/base/task_unittest.cc	/^  void OnLocalTimeout() {$/;"	f	class:rtc::IdTimeoutTask
OnLogMessage	webrtc/base/logsinks.cc	/^void FileRotatingLogSink::OnLogMessage(const std::string& message) {$/;"	f	class:rtc::FileRotatingLogSink
OnMainThreadDestroyed	webrtc/base/signalthread.cc	/^void SignalThread::OnMainThreadDestroyed() {$/;"	f	class:rtc::SignalThread
OnMessage	webrtc/base/asyncinvoker.cc	/^void AsyncInvoker::OnMessage(Message* msg) {$/;"	f	class:rtc::AsyncInvoker
OnMessage	webrtc/base/autodetectproxy.cc	/^void AutoDetectProxy::OnMessage(Message *msg) {$/;"	f	class:rtc::AutoDetectProxy
OnMessage	webrtc/base/dbus.cc	/^void DBusSigFilter::OnMessage(Message *message) {$/;"	f	class:rtc::DBusSigFilter
OnMessage	webrtc/base/fakenetwork.h	/^  virtual void OnMessage(Message* msg) {$/;"	f	class:rtc::FakeNetworkManager
OnMessage	webrtc/base/messagehandler.h	/^  virtual void OnMessage(Message* msg) { result_ = std::move(functor_()); }$/;"	f	class:rtc::FunctorMessageHandler
OnMessage	webrtc/base/messagehandler.h	/^  virtual void OnMessage(Message* msg) {$/;"	f	class:rtc::FunctorMessageHandler
OnMessage	webrtc/base/messagequeue_unittest.cc	/^  void OnMessage(Message* msg) { }$/;"	f	class:DeletedMessageHandler
OnMessage	webrtc/base/network.cc	/^void BasicNetworkManager::OnMessage(Message* msg) {$/;"	f	class:rtc::BasicNetworkManager
OnMessage	webrtc/base/networkmonitor.cc	/^void NetworkMonitorBase::OnMessage(Message* msg) {$/;"	f	class:rtc::NetworkMonitorBase
OnMessage	webrtc/base/nullsocketserver_unittest.cc	/^  virtual void OnMessage(Message* message) {$/;"	f	class:rtc::NullSocketServerTest
OnMessage	webrtc/base/openssladapter.cc	/^OpenSSLAdapter::OnMessage(Message* msg) {$/;"	f	class:rtc::OpenSSLAdapter
OnMessage	webrtc/base/opensslstreamadapter.cc	/^void OpenSSLStreamAdapter::OnMessage(Message* msg) {$/;"	f	class:rtc::OpenSSLStreamAdapter
OnMessage	webrtc/base/sharedexclusivelock_unittest.cc	/^  virtual void OnMessage(Message* message) {$/;"	f	class:rtc::ReadTask	file:
OnMessage	webrtc/base/sharedexclusivelock_unittest.cc	/^  virtual void OnMessage(Message* message) {$/;"	f	class:rtc::WriteTask	file:
OnMessage	webrtc/base/signalthread.cc	/^void SignalThread::OnMessage(Message *msg) {$/;"	f	class:rtc::SignalThread
OnMessage	webrtc/base/socket_unittest.cc	/^  void OnMessage(Message* msg) {$/;"	f	class:rtc::Sleeper
OnMessage	webrtc/base/stream.cc	/^void StreamInterface::OnMessage(Message* msg) {$/;"	f	class:rtc::StreamInterface
OnMessage	webrtc/base/thread_unittest.cc	/^  virtual void OnMessage(Message *pmsg) {$/;"	f	class:MessageClient
OnMessage	webrtc/base/thread_unittest.cc	/^  virtual void OnMessage(Message* message) {$/;"	f	class:ComThreadTest
OnMessage	webrtc/base/virtualsocket_unittest.cc	/^  void OnMessage(Message* pmsg) {$/;"	f	struct:Receiver
OnMessage	webrtc/base/virtualsocket_unittest.cc	/^  void OnMessage(Message* pmsg) {$/;"	f	struct:Sender
OnMessage	webrtc/base/virtualsocketserver.cc	/^void VirtualSocket::OnMessage(Message* pmsg) {$/;"	f	class:rtc::VirtualSocket
OnMessage	webrtc/base/win32socketserver.cc	/^bool Win32Socket::EventSink::OnMessage(UINT uMsg, WPARAM wParam,$/;"	f	class:rtc::Win32Socket::EventSink
OnMessage	webrtc/base/win32socketserver.cc	/^bool Win32SocketServer::MessageWindow::OnMessage(UINT wm, WPARAM wp,$/;"	f	class:rtc::Win32SocketServer::MessageWindow
OnMessage	webrtc/base/win32window.cc	/^bool Win32Window::OnMessage(UINT uMsg, WPARAM wParam, LPARAM lParam,$/;"	f	class:rtc::Win32Window
OnMessage	webrtc/base/win32window_unittest.cc	/^  virtual bool OnMessage(UINT uMsg, WPARAM wParam,$/;"	f	class:TestWindow
OnMessageQueueDestroyed	webrtc/base/virtualsocketserver.h	/^  void OnMessageQueueDestroyed() { msg_queue_ = NULL; }$/;"	f	class:rtc::VirtualSocketServer
OnMonitoringStatusChanged	webrtc/base/dbus.cc	/^void DBusMonitor::OnMonitoringStatusChanged(DBusMonitorStatus status) {$/;"	f	class:rtc::DBusMonitor
OnMovedFrom	webrtc/base/buffer.h	/^  void OnMovedFrom() {$/;"	f	class:rtc::BufferT
OnNcDestroy	webrtc/base/win32socketserver.cc	/^void Win32Socket::EventSink::OnNcDestroy() {$/;"	f	class:rtc::Win32Socket::EventSink
OnNcDestroy	webrtc/base/win32window.h	/^  virtual void OnNcDestroy() { }$/;"	f	class:rtc::Win32Window
OnNcDestroy	webrtc/base/win32window_unittest.cc	/^  virtual void OnNcDestroy() {$/;"	f	class:TestWindow
OnNetworksChanged	webrtc/base/network.cc	/^void BasicNetworkManager::OnNetworksChanged() {$/;"	f	class:rtc::BasicNetworkManager
OnNetworksChanged	webrtc/base/network_unittest.cc	/^  void OnNetworksChanged() {$/;"	f	class:rtc::NetworkTest
OnNetworksChanged	webrtc/base/networkmonitor.cc	/^void NetworkMonitorBase::OnNetworksChanged() {$/;"	f	class:rtc::NetworkMonitorBase
OnPacket	webrtc/base/testclient.cc	/^void TestClient::OnPacket(AsyncPacketSocket* socket, const char* buf,$/;"	f	class:rtc::TestClient
OnPacket	webrtc/base/testechoserver.h	/^  void OnPacket(AsyncPacketSocket* socket, const char* buf, size_t size,$/;"	f	class:rtc::TestEchoServer
OnPacket	webrtc/base/thread_unittest.cc	/^  void OnPacket(AsyncPacketSocket* socket, const char* buf, size_t size,$/;"	f	class:SocketClient
OnPosixSignalReceived	webrtc/base/physicalsocketserver.cc	/^  void OnPosixSignalReceived(int signum) {$/;"	f	class:rtc::PosixSignalHandler
OnPreEvent	webrtc/base/physicalsocketserver.cc	/^  virtual void OnPreEvent(uint32_t ff) { WSAResetEvent(hev_); }$/;"	f	class:rtc::EventDispatcher
OnPreEvent	webrtc/base/physicalsocketserver.cc	/^void SocketDispatcher::OnPreEvent(uint32_t ff) {$/;"	f	class:rtc::SocketDispatcher
OnProxyDetectionComplete	webrtc/base/sslsocketfactory.cc	/^  void OnProxyDetectionComplete(SignalThread* thread) {$/;"	f	class:rtc::ProxySocketAdapter	file:
OnQueueDestroyed	webrtc/base/thread_unittest.cc	/^  void OnQueueDestroyed() {$/;"	f	class:SetNameOnSignalQueueDestroyedTester
OnReadEvent	webrtc/base/asyncsocket.cc	/^void AsyncSocketAdapter::OnReadEvent(AsyncSocket* socket) {$/;"	f	class:rtc::AsyncSocketAdapter
OnReadEvent	webrtc/base/asynctcpsocket.cc	/^void AsyncTCPSocketBase::OnReadEvent(AsyncSocket* socket) {$/;"	f	class:rtc::AsyncTCPSocketBase
OnReadEvent	webrtc/base/asyncudpsocket.cc	/^void AsyncUDPSocket::OnReadEvent(AsyncSocket* socket) {$/;"	f	class:rtc::AsyncUDPSocket
OnReadEvent	webrtc/base/autodetectproxy.cc	/^void AutoDetectProxy::OnReadEvent(AsyncSocket * socket) {$/;"	f	class:rtc::AutoDetectProxy
OnReadEvent	webrtc/base/httpserver.cc	/^void HttpListenServer::OnReadEvent(AsyncSocket* socket) {$/;"	f	class:rtc::HttpListenServer
OnReadEvent	webrtc/base/natsocketfactory.cc	/^  void OnReadEvent(AsyncSocket* socket) {$/;"	f	class:rtc::NATSocket
OnReadEvent	webrtc/base/openssladapter.cc	/^OpenSSLAdapter::OnReadEvent(AsyncSocket* socket) {$/;"	f	class:rtc::OpenSSLAdapter
OnReadEvent	webrtc/base/socketadapters.cc	/^void BufferedReadAdapter::OnReadEvent(AsyncSocket * socket) {$/;"	f	class:rtc::BufferedReadAdapter
OnReadEvent	webrtc/base/socketstream.cc	/^void SocketStream::OnReadEvent(AsyncSocket* socket) {$/;"	f	class:rtc::SocketStream
OnReadEvent	webrtc/base/testutils.h	/^  void OnReadEvent(AsyncSocket* socket) {$/;"	f	class:testing::SocketTestClient
OnReadEvent	webrtc/base/testutils.h	/^  void OnReadEvent(AsyncSocket* socket) {$/;"	f	class:testing::SocketTestServer
OnReadEvent	webrtc/base/testutils.h	/^  void OnReadEvent(AsyncSocket* socket) {$/;"	f	class:testing::StreamSink
OnReadPacket	webrtc/base/virtualsocket_unittest.cc	/^  void OnReadPacket(AsyncPacketSocket* s, const char* data, size_t size,$/;"	f	struct:Receiver
OnReadyToSend	webrtc/base/asynctcpsocket_unittest.cc	/^  void OnReadyToSend(rtc::AsyncPacketSocket* socket) {$/;"	f	class:rtc::AsyncTCPSocketTest
OnReadyToSend	webrtc/base/asyncudpsocket_unittest.cc	/^  void OnReadyToSend(rtc::AsyncPacketSocket* socket) {$/;"	f	class:rtc::AsyncUdpSocketTest
OnReadyToSend	webrtc/base/testclient.cc	/^void TestClient::OnReadyToSend(AsyncPacketSocket* socket) {$/;"	f	class:rtc::TestClient
OnReplyQueueGone	webrtc/base/task_queue_libevent.cc	/^  void OnReplyQueueGone() {$/;"	f	class:rtc::TaskQueue::PostAndReplyTask
OnRequest	webrtc/base/httpserver_unittest.cc	/^    void OnRequest(HttpServer*, HttpServerTransaction* t) {$/;"	f	struct:rtc::__anon20::HttpServerMonitor
OnRequestComplete	webrtc/base/httpserver_unittest.cc	/^    void OnRequestComplete(HttpServer*, HttpServerTransaction* t, int) {$/;"	f	struct:rtc::__anon20::HttpServerMonitor
OnResolveResult	webrtc/base/autodetectproxy.cc	/^void AutoDetectProxy::OnResolveResult(AsyncResolverInterface* resolver) {$/;"	f	class:rtc::AutoDetectProxy
OnResolveResult	webrtc/base/httpclient.cc	/^void HttpClient::OnResolveResult(AsyncResolverInterface* resolver) {$/;"	f	class:rtc::HttpClient
OnResolveResult	webrtc/base/physicalsocketserver.cc	/^void PhysicalSocket::OnResolveResult(AsyncResolverInterface* resolver) {$/;"	f	class:rtc::PhysicalSocket
OnReverseStreamEvent	webrtc/modules/audio_processing/test/debug_dump_replayer.cc	/^void DebugDumpReplayer::OnReverseStreamEvent($/;"	f	class:webrtc::test::DebugDumpReplayer
OnRotation	webrtc/base/filerotatingstream.cc	/^void CallSessionFileRotatingStream::OnRotation() {$/;"	f	class:rtc::CallSessionFileRotatingStream
OnRotation	webrtc/base/filerotatingstream.h	/^  virtual void OnRotation() {}$/;"	f	class:rtc::FileRotatingStream
OnSSLAdapterCloseEvent	webrtc/base/ssladapter_unittest.cc	/^  void OnSSLAdapterCloseEvent(rtc::AsyncSocket* socket, int error) {$/;"	f	class:SSLAdapterTestDummyClient
OnSSLAdapterReadEvent	webrtc/base/ssladapter_unittest.cc	/^  void OnSSLAdapterReadEvent(rtc::AsyncSocket* socket) {$/;"	f	class:SSLAdapterTestDummyClient
OnSSLStreamAdapterEvent	webrtc/base/ssladapter_unittest.cc	/^  void OnSSLStreamAdapterEvent(rtc::StreamInterface* stream, int sig, int err) {$/;"	f	class:SSLAdapterTestDummyServer
OnServerSocketReadEvent	webrtc/base/ssladapter_unittest.cc	/^  void OnServerSocketReadEvent(rtc::AsyncSocket* socket) {$/;"	f	class:SSLAdapterTestDummyServer
OnSignal	webrtc/base/sigslot_unittest.cc	/^  void OnSignal() {$/;"	f	class:SigslotReceiver
OnSignalCallback	webrtc/base/sigslottester.h	/^  void OnSignalCallback() { callback_count_++; }$/;"	f	class:rtc::SigslotTester0
OnSignalCallback	webrtc/base/sigslottester.h	/^  void OnSignalCallback(A1 arg1) {$/;"	f	class:rtc::SigslotTester1
OnSignalCallback	webrtc/base/sigslottester.h	/^  void OnSignalCallback(A1 arg1, A2 arg2) {$/;"	f	class:rtc::SigslotTester2
OnSignalCallback	webrtc/base/sigslottester.h	/^  void OnSignalCallback(A1 arg1, A2 arg2, A3 arg3) {$/;"	f	class:rtc::SigslotTester3
OnSignalCallback	webrtc/base/sigslottester.h	/^  void OnSignalCallback(A1 arg1, A2 arg2, A3 arg3, A4 arg4) {$/;"	f	class:rtc::SigslotTester4
OnSignalCallback	webrtc/base/sigslottester.h	/^  void OnSignalCallback(A1 arg1, A2 arg2, A3 arg3, A4 arg4, A5 arg5) {$/;"	f	class:rtc::SigslotTester5
OnSocketNotify	webrtc/base/win32socketserver.cc	/^bool Win32Socket::EventSink::OnSocketNotify(UINT uMsg, WPARAM wParam,$/;"	f	class:rtc::Win32Socket::EventSink
OnSocketNotify	webrtc/base/win32socketserver.cc	/^void Win32Socket::OnSocketNotify(SOCKET socket, int event, int error) {$/;"	f	class:rtc::Win32Socket
OnSocketServerReadyToSend	webrtc/base/virtualsocketserver.cc	/^void VirtualSocket::OnSocketServerReadyToSend() {$/;"	f	class:rtc::VirtualSocket
OnStopped	webrtc/base/taskparent.cc	/^void TaskParent::OnStopped(Task *task) {$/;"	f	class:rtc::TaskParent
OnStreamEvent	webrtc/base/socketpool.cc	/^ReuseSocketPool::OnStreamEvent(StreamInterface* stream, int events, int err) {$/;"	f	class:rtc::ReuseSocketPool
OnStreamEvent	webrtc/base/socketpool.cc	/^void StreamCache::OnStreamEvent(StreamInterface* stream, int events, int err) {$/;"	f	class:rtc::StreamCache
OnStreamEvent	webrtc/modules/audio_processing/test/debug_dump_replayer.cc	/^void DebugDumpReplayer::OnStreamEvent(const audioproc::Stream& msg) {$/;"	f	class:webrtc::test::DebugDumpReplayer
OnTimeout	webrtc/base/autodetectproxy.cc	/^void AutoDetectProxy::OnTimeout() {$/;"	f	class:rtc::AutoDetectProxy
OnTimeout	webrtc/base/task.cc	/^int Task::OnTimeout() {$/;"	f	class:rtc::Task
OnTimeout	webrtc/base/task_unittest.cc	/^  void OnTimeout() {$/;"	f	class:rtc::AbortShouldWakeTest	file:
OnTimeout	webrtc/base/task_unittest.cc	/^  void OnTimeout() {$/;"	f	class:rtc::TaskAbortTest	file:
OnTimeoutChange	webrtc/base/task_unittest.cc	/^  virtual void OnTimeoutChange() {$/;"	f	class:rtc::MyTaskRunner
OnTimeoutChange	webrtc/base/taskrunner.h	/^  virtual void OnTimeoutChange() {$/;"	f	class:rtc::TaskRunner
OnTimeoutHappy	webrtc/base/task_unittest.cc	/^  void OnTimeoutHappy(const int id) {$/;"	f	class:rtc::TaskTest
OnTimeoutId	webrtc/base/task_unittest.cc	/^  void OnTimeoutId(const int id) {$/;"	f	class:rtc::TimeoutChangeTest	file:
OnTimeoutStuck	webrtc/base/task_unittest.cc	/^  void OnTimeoutStuck(const int id) {$/;"	f	class:rtc::TaskTest
OnWakeup	webrtc/base/task_queue_libevent.cc	/^void TaskQueue::OnWakeup(int socket, short flags, void* context) {  \/\/ NOLINT$/;"	f	class:rtc::TaskQueue
OnWorkComplete	webrtc/base/signalthread_unittest.cc	/^  void OnWorkComplete(rtc::SignalThread* thread) {$/;"	f	class:SignalThreadTest
OnWorkDone	webrtc/base/autodetectproxy_unittest.cc	/^  void OnWorkDone(rtc::SignalThread *thread) {$/;"	f	class:rtc::AutoDetectProxyTest	file:
OnWorkDone	webrtc/base/nethelpers.cc	/^void AsyncResolver::OnWorkDone() {$/;"	f	class:rtc::AsyncResolver
OnWorkDone	webrtc/base/signalthread.h	/^  virtual void OnWorkDone() { }$/;"	f	class:rtc::SignalThread
OnWorkDone	webrtc/base/signalthread_unittest.cc	/^    virtual void OnWorkDone() {$/;"	f	class:SignalThreadTest::SlowSignalThread
OnWorkDone	webrtc/base/signalthread_unittest.cc	/^  void OnWorkDone(SignalThread* signal_thread) {$/;"	f	class:OwnerThread
OnWorkStart	webrtc/base/signalthread.h	/^  virtual void OnWorkStart() { }$/;"	f	class:rtc::SignalThread
OnWorkStart	webrtc/base/signalthread_unittest.cc	/^    virtual void OnWorkStart() {$/;"	f	class:SignalThreadTest::SlowSignalThread
OnWorkStop	webrtc/base/signalthread.h	/^  virtual void OnWorkStop() { }$/;"	f	class:rtc::SignalThread
OnWorkStop	webrtc/base/signalthread_unittest.cc	/^    virtual void OnWorkStop() {$/;"	f	class:SignalThreadTest::SlowSignalThread
OnWriteEvent	webrtc/base/asyncsocket.cc	/^void AsyncSocketAdapter::OnWriteEvent(AsyncSocket* socket) {$/;"	f	class:rtc::AsyncSocketAdapter
OnWriteEvent	webrtc/base/asynctcpsocket.cc	/^void AsyncTCPSocketBase::OnWriteEvent(AsyncSocket* socket) {$/;"	f	class:rtc::AsyncTCPSocketBase
OnWriteEvent	webrtc/base/asyncudpsocket.cc	/^void AsyncUDPSocket::OnWriteEvent(AsyncSocket* socket) {$/;"	f	class:rtc::AsyncUDPSocket
OnWriteEvent	webrtc/base/natsocketfactory.cc	/^  void OnWriteEvent(AsyncSocket* socket) {$/;"	f	class:rtc::NATSocket
OnWriteEvent	webrtc/base/openssladapter.cc	/^OpenSSLAdapter::OnWriteEvent(AsyncSocket* socket) {$/;"	f	class:rtc::OpenSSLAdapter
OnWriteEvent	webrtc/base/socketstream.cc	/^void SocketStream::OnWriteEvent(AsyncSocket* socket) {$/;"	f	class:rtc::SocketStream
OnWriteEvent	webrtc/base/testutils.h	/^  void OnWriteEvent(AsyncSocket* socket) {$/;"	f	class:testing::SocketTestClient
OnWriteEvent	webrtc/base/testutils.h	/^  void OnWriteEvent(AsyncSocket* socket) {$/;"	f	class:testing::StreamSink
OneTimeEvent	webrtc/base/onetimeevent.h	/^  OneTimeEvent() {}$/;"	f	class:webrtc::OneTimeEvent
OneTimeEvent	webrtc/base/onetimeevent.h	/^class OneTimeEvent {$/;"	c	namespace:webrtc
OouraFft	webrtc/modules/audio_processing/utility/ooura_fft.cc	/^OouraFft::OouraFft() {$/;"	f	class:webrtc::OouraFft
OouraFft	webrtc/modules/audio_processing/utility/ooura_fft.h	/^class OouraFft {$/;"	c	namespace:webrtc
Open	webrtc/base/file.cc	/^File File::Open(const std::string& path) {$/;"	f	class:rtc::File
Open	webrtc/base/filerotatingstream.cc	/^bool FileRotatingStream::Open() {$/;"	f	class:rtc::FileRotatingStream
Open	webrtc/base/linux.cc	/^bool ConfigParser::Open(const std::string& filename) {$/;"	f	class:rtc::ConfigParser
Open	webrtc/base/stream.cc	/^bool FileStream::Open(const std::string& filename, const char* mode,$/;"	f	class:rtc::FileStream
Open	webrtc/base/win32regkey.cc	/^HRESULT RegKey::Open(HKEY parent_key, const wchar_t* key_name) {$/;"	f	class:rtc::RegKey
Open	webrtc/base/win32regkey.cc	/^HRESULT RegKey::Open(HKEY parent_key,$/;"	f	class:rtc::RegKey
Open	webrtc/system_wrappers/source/file_impl.cc	/^FileWrapper FileWrapper::Open(const char* file_name_utf8, bool read_only) {$/;"	f	class:webrtc::FileWrapper
OpenConeNAT	webrtc/base/nattypes.cc	/^class OpenConeNAT : public NAT {$/;"	c	namespace:rtc	file:
OpenCurrentFile	webrtc/base/filerotatingstream.cc	/^bool FileRotatingStream::OpenCurrentFile() {$/;"	f	class:rtc::FileRotatingStream
OpenFile	webrtc/base/fileutils.h	/^  static FileStream *OpenFile(const Pathname &filename,$/;"	f	class:rtc::Filesystem
OpenFile	webrtc/base/fileutils_mock.h	/^    virtual FileStream * OpenFile($/;"	f	class:rtc::FakeFileSystem
OpenFile	webrtc/base/proxydetect_unittest.cc	/^  virtual FileStream* OpenFile(const Pathname& filename,$/;"	f	class:rtc::FirefoxPrefsFileSystem
OpenFile	webrtc/base/unixfilesystem.cc	/^FileStream *UnixFilesystem::OpenFile(const Pathname &filename,$/;"	f	class:rtc::UnixFilesystem
OpenFile	webrtc/base/win32filesystem.cc	/^FileStream *Win32Filesystem::OpenFile(const Pathname &filename,$/;"	f	class:rtc::Win32Filesystem
OpenFile	webrtc/modules/audio_processing/test/test_utils.cc	/^FILE* OpenFile(const std::string& filename, const char* mode) {$/;"	f	namespace:webrtc
OpenFile	webrtc/system_wrappers/source/file_impl.cc	/^bool FileWrapper::OpenFile(const char* file_name_utf8, bool read_only) {$/;"	f	class:webrtc::FileWrapper
OpenFileAndReadMessage	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^void OpenFileAndReadMessage(std::string filename,$/;"	f	namespace:webrtc::__anon183
OpenFileAndWriteMessage	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^void OpenFileAndWriteMessage(const std::string filename,$/;"	f	namespace:webrtc::__anon183
OpenFromFileHandle	webrtc/system_wrappers/source/file_impl.cc	/^bool FileWrapper::OpenFromFileHandle(FILE* handle) {$/;"	f	class:webrtc::FileWrapper
OpenPlatformFile	webrtc/base/platform_file.cc	/^PlatformFile OpenPlatformFile(const std::string& path) {$/;"	f	namespace:rtc
OpenSSLAdapter	webrtc/base/openssladapter.cc	/^OpenSSLAdapter::OpenSSLAdapter(AsyncSocket* socket)$/;"	f	class:rtc::OpenSSLAdapter
OpenSSLAdapter	webrtc/base/openssladapter.h	/^class OpenSSLAdapter : public SSLAdapter, public MessageHandler {$/;"	c	namespace:rtc
OpenSSLCertificate	webrtc/base/opensslidentity.h	/^  explicit OpenSSLCertificate(X509* x509) : x509_(x509) {$/;"	f	class:rtc::OpenSSLCertificate
OpenSSLCertificate	webrtc/base/opensslidentity.h	/^class OpenSSLCertificate : public SSLCertificate {$/;"	c	namespace:rtc
OpenSSLDigest	webrtc/base/openssldigest.cc	/^OpenSSLDigest::OpenSSLDigest(const std::string& algorithm) {$/;"	f	class:rtc::OpenSSLDigest
OpenSSLDigest	webrtc/base/openssldigest.h	/^class OpenSSLDigest : public MessageDigest {$/;"	c	namespace:rtc
OpenSSLIdentity	webrtc/base/opensslidentity.cc	/^OpenSSLIdentity::OpenSSLIdentity(OpenSSLKeyPair* key_pair,$/;"	f	class:rtc::OpenSSLIdentity
OpenSSLIdentity	webrtc/base/opensslidentity.h	/^class OpenSSLIdentity : public SSLIdentity {$/;"	c	namespace:rtc
OpenSSLKeyPair	webrtc/base/opensslidentity.h	/^  explicit OpenSSLKeyPair(EVP_PKEY* pkey) : pkey_(pkey) {$/;"	f	class:rtc::OpenSSLKeyPair
OpenSSLKeyPair	webrtc/base/opensslidentity.h	/^class OpenSSLKeyPair {$/;"	c	namespace:rtc
OpenSSLStreamAdapter	webrtc/base/opensslstreamadapter.cc	/^OpenSSLStreamAdapter::OpenSSLStreamAdapter(StreamInterface* stream)$/;"	f	class:rtc::OpenSSLStreamAdapter
OpenSSLStreamAdapter	webrtc/base/opensslstreamadapter.h	/^class OpenSSLStreamAdapter : public SSLStreamAdapter {$/;"	c	namespace:rtc
OpenShare	webrtc/base/stream.cc	/^bool FileStream::OpenShare(const std::string& filename, const char* mode,$/;"	f	class:rtc::FileStream
OpenStore	webrtc/base/optionsfile_unittest.cc	/^  void OpenStore() {$/;"	f	class:rtc::MAYBE_OptionsFileTest
Option	webrtc/base/socket.h	/^  enum Option {$/;"	g	class:rtc::Socket
Option	webrtc/modules/audio_processing/include/config.h	/^    explicit Option(T* v): value(v) {}$/;"	f	struct:webrtc::Config::Option
Option	webrtc/modules/audio_processing/include/config.h	/^  struct Option : BaseOption {$/;"	s	class:webrtc::Config
OptionMap	webrtc/modules/audio_processing/include/config.h	/^  typedef std::map<ConfigOptionID, BaseOption*> OptionMap;$/;"	t	class:webrtc::Config
Optional	webrtc/base/optional.h	/^  Optional() : has_value_(false), empty_('\\0') {$/;"	f	class:rtc::final
Optional	webrtc/base/optional.h	/^  Optional(Optional&& m) : has_value_(m.has_value_) {$/;"	f	class:rtc::final
Optional	webrtc/base/optional.h	/^  Optional(const Optional& m) : has_value_(m.has_value_) {$/;"	f	class:rtc::final
Optional	webrtc/base/optional.h	/^  explicit Optional(T&& value) : has_value_(true) {$/;"	f	class:rtc::final
Optional	webrtc/base/optional.h	/^  explicit Optional(const T& value) : has_value_(true) {$/;"	f	class:rtc::final
Options	webrtc/base/winping.cc	/^    struct ip_option_information Options; \/\/ Reply options$/;"	m	struct:rtc::icmp_echo_reply	typeref:struct:rtc::icmp_echo_reply::ip_option_information	file:
OptionsData	webrtc/base/winping.h	/^    PUCHAR  OptionsData;        \/\/ Pointer to options data$/;"	m	struct:rtc::ip_option_information
OptionsFile	webrtc/base/optionsfile.cc	/^OptionsFile::OptionsFile(const std::string &path) : path_(path) {$/;"	f	class:rtc::OptionsFile
OptionsFile	webrtc/base/optionsfile.h	/^class OptionsFile {$/;"	c	namespace:rtc
OptionsMap	webrtc/base/optionsfile.h	/^  typedef std::map<std::string, std::string> OptionsMap;$/;"	t	class:rtc::OptionsFile
OptionsMap	webrtc/base/virtualsocketserver.h	/^  typedef std::map<Option, int> OptionsMap;$/;"	t	class:rtc::VirtualSocket
OptionsSize	webrtc/base/winping.h	/^    UCHAR   OptionsSize;        \/\/ Size in bytes of options data$/;"	m	struct:rtc::ip_option_information
Order	webrtc/base/bytebuffer.h	/^  ByteOrder Order() const { return byte_order_; }$/;"	f	class:rtc::ByteBuffer
OutStream	webrtc/common_types.h	/^class OutStream : public RewindableStream {$/;"	c	namespace:webrtc
OutputFilePath	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^std::string OutputFilePath(std::string name,$/;"	f	namespace:webrtc::__anon183
OutputToDebug	webrtc/base/logging.cc	/^void LogMessage::OutputToDebug(const std::string& str,$/;"	f	class:rtc::LogMessage
OutputWasBitexact	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^  bool OutputWasBitexact() { return bitexact_output_; }$/;"	f	class:webrtc::test::AudioProcessingSimulator
OverUseDetectorOptions	webrtc/common_types.h	/^  OverUseDetectorOptions()$/;"	f	struct:webrtc::OverUseDetectorOptions
OverUseDetectorOptions	webrtc/common_types.h	/^struct OverUseDetectorOptions {$/;"	s	namespace:webrtc
Overdrive	webrtc/modules/audio_processing/aec/aec_core.cc	/^static void Overdrive(float overdrive_scaling,$/;"	f	namespace:webrtc
OverdriveNEON	webrtc/modules/audio_processing/aec/aec_core_neon.cc	/^static void OverdriveNEON(float overdrive_scaling,$/;"	f	namespace:webrtc
OverdriveSSE2	webrtc/modules/audio_processing/aec/aec_core_sse2.cc	/^static void OverdriveSSE2(float overdrive_scaling,$/;"	f	namespace:webrtc
OwnerThread	webrtc/base/signalthread_unittest.cc	/^  explicit OwnerThread(SignalThreadTest* harness)$/;"	f	class:OwnerThread
OwnerThread	webrtc/base/signalthread_unittest.cc	/^class OwnerThread : public Thread, public sigslot::has_slots<> {$/;"	c	file:
PACKET_MAXIMUMS	webrtc/base/physicalsocketserver.cc	/^const uint16_t PACKET_MAXIMUMS[] = {$/;"	m	namespace:rtc	file:
PACKET_MAXIMUMS	webrtc/base/win32socketserver.cc	/^static const uint16_t PACKET_MAXIMUMS[] = {$/;"	m	namespace:rtc	file:
PART_LEN	webrtc/modules/audio_processing/aec/aec_core.h	/^#define PART_LEN /;"	d
PART_LEN	webrtc/modules/audio_processing/aecm/aecm_defines.h	/^#define PART_LEN /;"	d
PART_LEN1	webrtc/modules/audio_processing/aec/aec_core.h	/^#define PART_LEN1 /;"	d
PART_LEN1	webrtc/modules/audio_processing/aecm/aecm_defines.h	/^#define PART_LEN1 /;"	d
PART_LEN2	webrtc/modules/audio_processing/aec/aec_core.h	/^#define PART_LEN2 /;"	d
PART_LEN2	webrtc/modules/audio_processing/aecm/aecm_defines.h	/^#define PART_LEN2 /;"	d
PART_LEN4	webrtc/modules/audio_processing/aecm/aecm_defines.h	/^#define PART_LEN4 /;"	d
PART_LEN_SHIFT	webrtc/modules/audio_processing/aecm/aecm_defines.h	/^#define PART_LEN_SHIFT /;"	d
PCorr	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_estimator.c	/^static void PCorr(const double *in, double *outcorr)$/;"	f	file:
PFstr	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  PitchFiltstr  PFstr;$/;"	m	struct:__anon130
PFstr_wght	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  PitchFiltstr  PFstr_wght;$/;"	m	struct:__anon130
PI	webrtc/base/virtualsocketserver.cc	/^static double PI = 4 * atan(1.0);$/;"	m	namespace:rtc	file:
PI	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define PI /;"	d
PICMPV6_ECHO_REPLY	webrtc/base/winping.cc	/^} ICMPV6_ECHO_REPLY, *PICMPV6_ECHO_REPLY;$/;"	t	namespace:rtc	typeref:struct:rtc::icmpv6_echo_reply_lh	file:
PICMP_ECHO_REPLY	webrtc/base/winping.cc	/^} ICMP_ECHO_REPLY, * PICMP_ECHO_REPLY;$/;"	t	namespace:rtc	typeref:struct:rtc::icmp_echo_reply	file:
PING_FAIL	webrtc/base/winping.h	/^    enum PingResult { PING_FAIL, PING_INVALID_PARAMS,$/;"	e	enum:rtc::WinPing::PingResult
PING_INVALID_PARAMS	webrtc/base/winping.h	/^    enum PingResult { PING_FAIL, PING_INVALID_PARAMS,$/;"	e	enum:rtc::WinPing::PingResult
PING_SUCCESS	webrtc/base/winping.h	/^                      PING_TOO_LARGE, PING_TIMEOUT, PING_SUCCESS };$/;"	e	enum:rtc::WinPing::PingResult
PING_TIMEOUT	webrtc/base/winping.h	/^                      PING_TOO_LARGE, PING_TIMEOUT, PING_SUCCESS };$/;"	e	enum:rtc::WinPing::PingResult
PING_TOO_LARGE	webrtc/base/winping.h	/^                      PING_TOO_LARGE, PING_TIMEOUT, PING_SUCCESS };$/;"	e	enum:rtc::WinPing::PingResult
PIP_OPTION_INFORMATION	webrtc/base/winping.h	/^} IP_OPTION_INFORMATION, * PIP_OPTION_INFORMATION;$/;"	t	namespace:rtc	typeref:struct:rtc::ip_option_information
PITCH_BUFFSIZE	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define PITCH_BUFFSIZE /;"	d
PITCH_BW	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define PITCH_BW /;"	d
PITCH_CORR_LEN2	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define PITCH_CORR_LEN2 /;"	d
PITCH_CORR_STEP2	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define PITCH_CORR_STEP2 /;"	d
PITCH_DAMPORDER	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define PITCH_DAMPORDER /;"	d
PITCH_DOWNSTEP	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define PITCH_DOWNSTEP /;"	d
PITCH_FILTDELAY	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define PITCH_FILTDELAY /;"	d
PITCH_FRACORDER	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define PITCH_FRACORDER /;"	d
PITCH_FRACS	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define PITCH_FRACS /;"	d
PITCH_FRAME_LEN	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define PITCH_FRAME_LEN /;"	d
PITCH_GAIN_STEPSIZE	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define PITCH_GAIN_STEPSIZE /;"	d
PITCH_GRAN_PER_SUBFRAME	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define PITCH_GRAN_PER_SUBFRAME /;"	d
PITCH_INTBUFFSIZE	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define PITCH_INTBUFFSIZE /;"	d
PITCH_LAG_SPAN2	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define PITCH_LAG_SPAN2 /;"	d
PITCH_MAX_GAIN	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define PITCH_MAX_GAIN /;"	d
PITCH_MAX_GAIN_06	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define PITCH_MAX_GAIN_06 /;"	d
PITCH_MAX_GAIN_Q12	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define PITCH_MAX_GAIN_Q12 /;"	d
PITCH_MAX_LAG	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define PITCH_MAX_LAG /;"	d
PITCH_MAX_NUM_PEAKS	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define PITCH_MAX_NUM_PEAKS /;"	d
PITCH_MIN_LAG	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define PITCH_MIN_LAG /;"	d
PITCH_PEAK_DECAY	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define PITCH_PEAK_DECAY /;"	d
PITCH_SUBFRAMES	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define PITCH_SUBFRAMES /;"	d
PITCH_SUBFRAME_LEN	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define PITCH_SUBFRAME_LEN /;"	d
PITCH_UPDATE	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define PITCH_UPDATE /;"	d
PITCH_UPSTEP	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define PITCH_UPSTEP /;"	d
PITCH_WLPCASYM	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define PITCH_WLPCASYM /;"	d
PITCH_WLPCBUFLEN	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define PITCH_WLPCBUFLEN /;"	d
PITCH_WLPCORDER	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define PITCH_WLPCORDER /;"	d
PITCH_WLPCWINLEN	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define PITCH_WLPCWINLEN /;"	d
PIcmp6CloseHandle	webrtc/base/winping.h	/^typedef BOOL (WINAPI *PIcmp6CloseHandle)(HANDLE icmp_handle);$/;"	t	namespace:rtc
PIcmp6CreateFile	webrtc/base/winping.h	/^typedef HANDLE (WINAPI *PIcmp6CreateFile)();$/;"	t	namespace:rtc
PIcmp6SendEcho2	webrtc/base/winping.h	/^typedef DWORD (WINAPI *PIcmp6SendEcho2)($/;"	t	namespace:rtc
PIcmpCloseHandle	webrtc/base/winping.h	/^typedef BOOL (WINAPI *PIcmpCloseHandle)(HANDLE icmp_handle);$/;"	t	namespace:rtc
PIcmpCreateFile	webrtc/base/winping.h	/^typedef HANDLE (WINAPI *PIcmpCreateFile)();$/;"	t	namespace:rtc
PIcmpSendEcho	webrtc/base/winping.h	/^typedef DWORD (WINAPI *PIcmpSendEcho)($/;"	t	namespace:rtc
PLOG	webrtc/base/logging.h	/^#define PLOG(/;"	d
POLYNOMIAL	webrtc/modules/audio_coding/codecs/isac/main/source/crc.c	/^#define POLYNOMIAL /;"	d	file:
POSTQORDER	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define POSTQORDER /;"	d
POST_LOOP2_A_LENGTH	webrtc/common_audio/signal_processing/filter_ar_fast_q12_armv7.S	/^POST_LOOP2_A_LENGTH:$/;"	l
POST_LOOP_A_LENGTH	webrtc/common_audio/signal_processing/filter_ar_fast_q12_armv7.S	/^POST_LOOP_A_LENGTH:$/;"	l
PRE_LOOP_STAGES_7_OR_8	webrtc/common_audio/signal_processing/complex_bit_reverse_arm.S	/^PRE_LOOP_STAGES_7_OR_8:$/;"	l
PRINT_CONFIG	webrtc/modules/audio_processing/test/unpack.cc	/^#define PRINT_CONFIG(/;"	d	file:
PRIOR_UPDATE	webrtc/modules/audio_processing/ns/defines.h	/^#define PRIOR_UPDATE /;"	d
PRIOR_UPDATE_Q14	webrtc/modules/audio_processing/ns/nsx_defines.h	/^#define PRIOR_UPDATE_Q14 /;"	d
PRId64	webrtc/base/format_macros.h	/^#define PRId64 /;"	d
PRIdNS	webrtc/base/format_macros.h	/^#define PRIdNS /;"	d
PRIu64	webrtc/base/format_macros.h	/^#define PRIu64 /;"	d
PRIuNS	webrtc/base/format_macros.h	/^#define PRIuNS /;"	d
PRIuS	webrtc/base/format_macros.h	/^#define PRIuS /;"	d
PRIx64	webrtc/base/format_macros.h	/^#define PRIx64 /;"	d
PRIxNS	webrtc/base/format_macros.h	/^#define PRIxNS /;"	d
PROB_RANGE	webrtc/modules/audio_processing/ns/defines.h	/^#define PROB_RANGE /;"	d
PROXY_HTTPS	webrtc/base/proxyinfo.h	/^  PROXY_HTTPS,$/;"	e	enum:rtc::ProxyType
PROXY_NONE	webrtc/base/proxyinfo.h	/^  PROXY_NONE,$/;"	e	enum:rtc::ProxyType
PROXY_SOCKS5	webrtc/base/proxyinfo.h	/^  PROXY_SOCKS5,$/;"	e	enum:rtc::ProxyType
PROXY_UNKNOWN	webrtc/base/proxyinfo.h	/^  PROXY_UNKNOWN$/;"	e	enum:rtc::ProxyType
PR_BLOCK	webrtc/base/httpbase.h	/^  enum ProcessResult { PR_CONTINUE, PR_BLOCK, PR_COMPLETE };$/;"	e	enum:rtc::HttpParser::ProcessResult
PR_COMPLETE	webrtc/base/httpbase.h	/^  enum ProcessResult { PR_CONTINUE, PR_BLOCK, PR_COMPLETE };$/;"	e	enum:rtc::HttpParser::ProcessResult
PR_CONTINUE	webrtc/base/httpbase.h	/^  enum ProcessResult { PR_CONTINUE, PR_BLOCK, PR_COMPLETE };$/;"	e	enum:rtc::HttpParser::ProcessResult
PS_AUTHENTICATE	webrtc/base/socketadapters.h	/^    PS_INIT, PS_LEADER, PS_AUTHENTICATE, PS_SKIP_HEADERS, PS_ERROR_HEADERS,$/;"	e	enum:rtc::AsyncHttpsProxySocket::ProxyState
PS_ERROR	webrtc/base/socketadapters.h	/^    PS_TUNNEL_HEADERS, PS_SKIP_BODY, PS_TUNNEL, PS_WAIT_CLOSE, PS_ERROR$/;"	e	enum:rtc::AsyncHttpsProxySocket::ProxyState
PS_ERROR_HEADERS	webrtc/base/socketadapters.h	/^    PS_INIT, PS_LEADER, PS_AUTHENTICATE, PS_SKIP_HEADERS, PS_ERROR_HEADERS,$/;"	e	enum:rtc::AsyncHttpsProxySocket::ProxyState
PS_INIT	webrtc/base/socketadapters.h	/^    PS_INIT, PS_LEADER, PS_AUTHENTICATE, PS_SKIP_HEADERS, PS_ERROR_HEADERS,$/;"	e	enum:rtc::AsyncHttpsProxySocket::ProxyState
PS_LEADER	webrtc/base/socketadapters.h	/^    PS_INIT, PS_LEADER, PS_AUTHENTICATE, PS_SKIP_HEADERS, PS_ERROR_HEADERS,$/;"	e	enum:rtc::AsyncHttpsProxySocket::ProxyState
PS_SKIP_BODY	webrtc/base/socketadapters.h	/^    PS_TUNNEL_HEADERS, PS_SKIP_BODY, PS_TUNNEL, PS_WAIT_CLOSE, PS_ERROR$/;"	e	enum:rtc::AsyncHttpsProxySocket::ProxyState
PS_SKIP_HEADERS	webrtc/base/socketadapters.h	/^    PS_INIT, PS_LEADER, PS_AUTHENTICATE, PS_SKIP_HEADERS, PS_ERROR_HEADERS,$/;"	e	enum:rtc::AsyncHttpsProxySocket::ProxyState
PS_TUNNEL	webrtc/base/socketadapters.h	/^    PS_TUNNEL_HEADERS, PS_SKIP_BODY, PS_TUNNEL, PS_WAIT_CLOSE, PS_ERROR$/;"	e	enum:rtc::AsyncHttpsProxySocket::ProxyState
PS_TUNNEL_HEADERS	webrtc/base/socketadapters.h	/^    PS_TUNNEL_HEADERS, PS_SKIP_BODY, PS_TUNNEL, PS_WAIT_CLOSE, PS_ERROR$/;"	e	enum:rtc::AsyncHttpsProxySocket::ProxyState
PS_WAIT_CLOSE	webrtc/base/socketadapters.h	/^    PS_TUNNEL_HEADERS, PS_SKIP_BODY, PS_TUNNEL, PS_WAIT_CLOSE, PS_ERROR$/;"	e	enum:rtc::AsyncHttpsProxySocket::ProxyState
PTOKEN_MANDATORY_LABEL	webrtc/base/win32.h	/^} TOKEN_MANDATORY_LABEL, *PTOKEN_MANDATORY_LABEL;$/;"	t	typeref:struct:_TOKEN_MANDATORY_LABEL
PT_GUARDED_BY	webrtc/base/thread_annotations.h	/^#define PT_GUARDED_BY(/;"	d
PT_GUARDED_VAR	webrtc/base/thread_annotations.h	/^#define PT_GUARDED_VAR /;"	d
PT_GUARDED_VAR	webrtc/base/thread_annotations_unittest.cc	/^  int* pt_protected_by_anything_ PT_GUARDED_VAR;$/;"	m	class:__anon68::ThreadSafe	file:
PackAddressForNAT	webrtc/base/natsocketfactory.cc	/^size_t PackAddressForNAT(char* buf, size_t buf_size,$/;"	f	namespace:rtc
PackRenderAudioBuffer	webrtc/modules/audio_processing/echo_cancellation_impl.cc	/^void EchoCancellationImpl::PackRenderAudioBuffer($/;"	f	class:webrtc::EchoCancellationImpl
PackRenderAudioBuffer	webrtc/modules/audio_processing/echo_control_mobile_impl.cc	/^void EchoControlMobileImpl::PackRenderAudioBuffer($/;"	f	class:webrtc::EchoControlMobileImpl
PackRenderAudioBuffer	webrtc/modules/audio_processing/gain_control_impl.cc	/^void GainControlImpl::PackRenderAudioBuffer($/;"	f	class:webrtc::GainControlImpl
PackRenderAudioBuffer	webrtc/modules/audio_processing/residual_echo_detector.cc	/^void ResidualEchoDetector::PackRenderAudioBuffer($/;"	f	class:webrtc::ResidualEchoDetector
PackageName	WebRTCAudioProcessing_jni.h	/^#define PackageName(/;"	d
Packet	webrtc/base/testclient.cc	/^TestClient::Packet::Packet(const Packet& p)$/;"	f	class:rtc::TestClient::Packet
Packet	webrtc/base/testclient.cc	/^TestClient::Packet::Packet(const SocketAddress& a,$/;"	f	class:rtc::TestClient::Packet
Packet	webrtc/base/testclient.h	/^  struct Packet {$/;"	s	class:rtc::TestClient
Packet	webrtc/base/virtualsocketserver.cc	/^  Packet(const char* data, size_t size, const SocketAddress& from)$/;"	f	class:rtc::Packet
Packet	webrtc/base/virtualsocketserver.cc	/^class Packet : public MessageData {$/;"	c	namespace:rtc	file:
PacketLength	webrtc/base/asynctcpsocket.cc	/^typedef uint16_t PacketLength;$/;"	t	namespace:rtc	file:
PacketOptions	webrtc/base/asyncpacketsocket.h	/^  PacketOptions() : dscp(DSCP_NO_CHANGE), packet_id(-1) {}$/;"	f	struct:rtc::PacketOptions
PacketOptions	webrtc/base/asyncpacketsocket.h	/^  explicit PacketOptions(DiffServCodePoint dscp) : dscp(dscp), packet_id(-1) {}$/;"	f	struct:rtc::PacketOptions
PacketOptions	webrtc/base/asyncpacketsocket.h	/^struct PacketOptions {$/;"	s	namespace:rtc
PacketTime	webrtc/base/asyncpacketsocket.h	/^  PacketTime() : timestamp(-1), not_before(-1) {}$/;"	f	struct:rtc::PacketTime
PacketTime	webrtc/base/asyncpacketsocket.h	/^  PacketTime(int64_t timestamp, int64_t not_before)$/;"	f	struct:rtc::PacketTime
PacketTime	webrtc/base/asyncpacketsocket.h	/^struct PacketTime {$/;"	s	namespace:rtc
PacketTime	webrtc/common_types.h	/^  PacketTime() : timestamp(-1), not_before(-1) {}$/;"	f	struct:webrtc::PacketTime
PacketTime	webrtc/common_types.h	/^  PacketTime(int64_t timestamp, int64_t not_before)$/;"	f	struct:webrtc::PacketTime
PacketTime	webrtc/common_types.h	/^struct PacketTime {$/;"	s	namespace:webrtc
PacketTimeUpdateParams	webrtc/base/asyncpacketsocket.cc	/^PacketTimeUpdateParams::PacketTimeUpdateParams()$/;"	f	class:rtc::PacketTimeUpdateParams
PacketTimeUpdateParams	webrtc/base/asyncpacketsocket.h	/^struct PacketTimeUpdateParams {$/;"	s	namespace:rtc
PairDirection	webrtc/modules/audio_processing/beamformer/array_util.cc	/^Point PairDirection(const Point& a, const Point& b) {$/;"	f	namespace:webrtc
Parse	webrtc/base/httpcommon.cc	/^  static inline bool Parse(E& val, const std::string& name) {$/;"	f	struct:rtc::Enum
Parse	webrtc/base/linux.cc	/^bool ConfigParser::Parse(MapVector* key_val_pairs) {$/;"	f	class:rtc::ConfigParser
ParseArrayGeometry	webrtc/modules/audio_processing/test/test_utils.cc	/^std::vector<Point> ParseArrayGeometry(const std::string& mic_positions) {$/;"	f	namespace:webrtc
ParseArrayGeometry	webrtc/modules/audio_processing/test/test_utils.cc	/^std::vector<Point> ParseArrayGeometry(const std::string& mic_positions,$/;"	f	namespace:webrtc
ParseLine	webrtc/base/linux.cc	/^bool ConfigParser::ParseLine(std::string* key, std::string* value) {$/;"	f	class:rtc::ConfigParser
ParseList	webrtc/modules/audio_processing/test/test_utils.h	/^std::vector<T> ParseList(const std::string& to_parse) {$/;"	f	namespace:webrtc
ParseProxy	webrtc/base/proxydetect.cc	/^bool ParseProxy(const std::string& saddress, ProxyInfo* proxy) {$/;"	f	namespace:rtc
ParseSection	webrtc/base/linux.cc	/^bool ConfigParser::ParseSection(SimpleMap* key_val_pair) {$/;"	f	class:rtc::ConfigParser
PartitionDelay	webrtc/modules/audio_processing/aec/aec_core.cc	/^static int PartitionDelay(int num_partitions,$/;"	f	namespace:webrtc
PartitionDelayNEON	webrtc/modules/audio_processing/aec/aec_core_neon.cc	/^static int PartitionDelayNEON($/;"	f	namespace:webrtc
PartitionDelaySSE2	webrtc/modules/audio_processing/aec/aec_core_sse2.cc	/^static int PartitionDelaySSE2($/;"	f	namespace:webrtc
Pathname	webrtc/base/pathutils.cc	/^Pathname::Pathname()$/;"	f	class:rtc::Pathname
Pathname	webrtc/base/pathutils.cc	/^Pathname::Pathname(const std::string& folder, const std::string& filename)$/;"	f	class:rtc::Pathname
Pathname	webrtc/base/pathutils.cc	/^Pathname::Pathname(const std::string& pathname)$/;"	f	class:rtc::Pathname
Pathname	webrtc/base/pathutils.h	/^class Pathname {$/;"	c	namespace:rtc
PayloadFrequencies	webrtc/common_types.h	/^enum PayloadFrequencies {$/;"	g	namespace:webrtc
PeakLevel	webrtc/modules/audio_processing/level_controller/level_controller.cc	/^float PeakLevel(const AudioBuffer& audio) {$/;"	f	namespace:webrtc::__anon208
PeakLevelEstimator	webrtc/modules/audio_processing/level_controller/peak_level_estimator.cc	/^PeakLevelEstimator::PeakLevelEstimator(float initial_peak_level_dbfs) {$/;"	f	class:webrtc::PeakLevelEstimator
PeakLevelEstimator	webrtc/modules/audio_processing/level_controller/peak_level_estimator.h	/^class PeakLevelEstimator {$/;"	c	namespace:webrtc
Peek	webrtc/base/messagequeue.cc	/^bool MessageQueue::Peek(Message *pmsg, int cmsWait) {$/;"	f	class:rtc::MessageQueue
PeekBits	webrtc/base/bitbuffer.cc	/^bool BitBuffer::PeekBits(uint32_t* val, size_t bit_count) {$/;"	f	class:rtc::BitBuffer
PemToDer	webrtc/base/sslidentity.cc	/^bool SSLIdentity::PemToDer(const std::string& pem_type,$/;"	f	class:rtc::SSLIdentity
PerfTestData	webrtc/base/criticalsection_unittest.cc	/^  PerfTestData(int expected_count, Event* event)$/;"	f	class:rtc::PerfTestData
PerfTestData	webrtc/base/criticalsection_unittest.cc	/^class PerfTestData {$/;"	c	namespace:rtc	file:
PerfTestThread	webrtc/base/criticalsection_unittest.cc	/^  PerfTestThread() : thread_(&ThreadFunc, this, "CsPerf") {}$/;"	f	class:rtc::PerfTestThread
PerfTestThread	webrtc/base/criticalsection_unittest.cc	/^class PerfTestThread {$/;"	c	namespace:rtc	file:
PerformBasicParameterSanityChecks	webrtc/modules/audio_processing/test/audioproc_float.cc	/^void PerformBasicParameterSanityChecks(const SimulationSettings& settings) {$/;"	f	namespace:webrtc::test::__anon221
Perm	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  int Perm[MAXFFTSIZE];$/;"	m	struct:__anon133
PhaseAlignmentMasks	webrtc/modules/audio_processing/beamformer/covariance_matrix_generator.cc	/^void CovarianceMatrixGenerator::PhaseAlignmentMasks($/;"	f	class:webrtc::CovarianceMatrixGenerator
PhysicalSocket	webrtc/base/physicalsocketserver.cc	/^PhysicalSocket::PhysicalSocket(PhysicalSocketServer* ss, SOCKET s)$/;"	f	class:rtc::PhysicalSocket
PhysicalSocket	webrtc/base/physicalsocketserver.h	/^class PhysicalSocket : public AsyncSocket, public sigslot::has_slots<> {$/;"	c	namespace:rtc
PhysicalSocketServer	webrtc/base/physicalsocketserver.cc	/^PhysicalSocketServer::PhysicalSocketServer()$/;"	f	class:rtc::PhysicalSocketServer
PhysicalSocketServer	webrtc/base/physicalsocketserver.h	/^class PhysicalSocketServer : public SocketServer {$/;"	c	namespace:rtc
PhysicalSocketTest	webrtc/base/physicalsocketserver_unittest.cc	/^  PhysicalSocketTest()$/;"	f	class:rtc::PhysicalSocketTest
PhysicalSocketTest	webrtc/base/physicalsocketserver_unittest.cc	/^class PhysicalSocketTest : public SocketTest {$/;"	c	namespace:rtc	file:
Ping	webrtc/base/winping.cc	/^WinPing::PingResult WinPing::Ping(IPAddress ip,$/;"	f	class:rtc::WinPing
PingResult	webrtc/base/winping.h	/^    enum PingResult { PING_FAIL, PING_INVALID_PARAMS,$/;"	g	class:rtc::WinPing
PitchAnalysis	webrtc/modules/audio_processing/vad/vad_audio_proc.cc	/^void VadAudioProc::PitchAnalysis(double* log_pitch_gains,$/;"	f	class:webrtc::VadAudioProc
PitchAnalysisStruct	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^} PitchAnalysisStruct;$/;"	t	typeref:struct:__anon130
PitchAnalysisStruct	webrtc/modules/audio_processing/vad/vad_audio_proc.cc	/^struct VadAudioProc::PitchAnalysisStruct : public ::PitchAnalysisStruct {};$/;"	s	class:webrtc::VadAudioProc	file:
PitchBasedVad	webrtc/modules/audio_processing/vad/pitch_based_vad.cc	/^PitchBasedVad::PitchBasedVad()$/;"	f	class:webrtc::PitchBasedVad
PitchBasedVad	webrtc/modules/audio_processing/vad/pitch_based_vad.h	/^class PitchBasedVad {$/;"	c	namespace:webrtc
PitchFilterOperation	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_filter.c	/^} PitchFilterOperation;$/;"	t	typeref:enum:__anon123	file:
PitchFilterParam	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_filter.c	/^} PitchFilterParam;$/;"	t	typeref:struct:__anon124	file:
PitchFiltstr	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^} PitchFiltstr;$/;"	t	typeref:struct:__anon128
PitchInterpolation	webrtc/modules/audio_processing/vad/pitch_internal.cc	/^static void PitchInterpolation(double old_val, const double* in, double* out) {$/;"	f	file:
PlatformFile	webrtc/base/platform_file.h	/^typedef HANDLE PlatformFile;$/;"	t	namespace:rtc
PlatformThread	webrtc/base/platform_thread.cc	/^PlatformThread::PlatformThread(ThreadRunFunction func,$/;"	f	class:rtc::PlatformThread
PlatformThread	webrtc/base/platform_thread.h	/^class PlatformThread {$/;"	c	namespace:rtc
PlatformThreadId	webrtc/base/platform_thread_types.h	/^typedef DWORD PlatformThreadId;$/;"	t	namespace:rtc
PlatformThreadRef	webrtc/base/platform_thread_types.h	/^typedef DWORD PlatformThreadRef;$/;"	t	namespace:rtc
PlayoutDelay	webrtc/common_types.h	/^struct PlayoutDelay {$/;"	s	namespace:webrtc
PlusThreeBlockerCallback	webrtc/common_audio/blocker_unittest.cc	/^class PlusThreeBlockerCallback : public webrtc::BlockerCallback {$/;"	c	namespace:__anon78	file:
Point	webrtc/base/virtualsocketserver.h	/^  typedef std::pair<double, double> Point;$/;"	t	class:rtc::VirtualSocketServer
PointerType	webrtc/base/bind.h	/^struct PointerType {$/;"	s	namespace:rtc::detail
PointwiseAbsoluteValue	webrtc/modules/audio_processing/beamformer/matrix.h	/^  Matrix& PointwiseAbsoluteValue() {$/;"	f	class:webrtc::Matrix
PointwiseAbsoluteValue	webrtc/modules/audio_processing/beamformer/matrix.h	/^  Matrix& PointwiseAbsoluteValue(const Matrix& operand) {$/;"	f	class:webrtc::Matrix
PointwiseConjugate	webrtc/modules/audio_processing/beamformer/complex_matrix.h	/^  ComplexMatrix& PointwiseConjugate() {$/;"	f	class:webrtc::ComplexMatrix
PointwiseConjugate	webrtc/modules/audio_processing/beamformer/complex_matrix.h	/^  ComplexMatrix& PointwiseConjugate(const ComplexMatrix& operand) {$/;"	f	class:webrtc::ComplexMatrix
PointwiseDivide	webrtc/modules/audio_processing/beamformer/matrix.h	/^  Matrix& PointwiseDivide(const Matrix& lhs, const Matrix& rhs) {$/;"	f	class:webrtc::Matrix
PointwiseDivide	webrtc/modules/audio_processing/beamformer/matrix.h	/^  Matrix& PointwiseDivide(const Matrix& operand) {$/;"	f	class:webrtc::Matrix
PointwiseMultiply	webrtc/modules/audio_processing/beamformer/matrix.h	/^  Matrix& PointwiseMultiply(const Matrix& lhs, const Matrix& rhs) {$/;"	f	class:webrtc::Matrix
PointwiseMultiply	webrtc/modules/audio_processing/beamformer/matrix.h	/^  Matrix& PointwiseMultiply(const Matrix& operand) {$/;"	f	class:webrtc::Matrix
PointwiseSquare	webrtc/modules/audio_processing/beamformer/matrix.h	/^  Matrix& PointwiseSquare() {$/;"	f	class:webrtc::Matrix
PointwiseSquare	webrtc/modules/audio_processing/beamformer/matrix.h	/^  Matrix& PointwiseSquare(const Matrix& operand) {$/;"	f	class:webrtc::Matrix
PointwiseSquareRoot	webrtc/modules/audio_processing/beamformer/matrix.h	/^  Matrix& PointwiseSquareRoot() {$/;"	f	class:webrtc::Matrix
PointwiseSquareRoot	webrtc/modules/audio_processing/beamformer/matrix.h	/^  Matrix& PointwiseSquareRoot(const Matrix& operand) {$/;"	f	class:webrtc::Matrix
PoisonValue	webrtc/base/optional.h	/^  void PoisonValue() {$/;"	f	class:rtc::final
PoleZeroFilter	webrtc/modules/audio_processing/vad/pole_zero_filter.cc	/^PoleZeroFilter::PoleZeroFilter(const float* numerator_coefficients,$/;"	f	class:webrtc::PoleZeroFilter
PoleZeroFilter	webrtc/modules/audio_processing/vad/pole_zero_filter.h	/^class PoleZeroFilter {$/;"	c	namespace:webrtc
PoleZeroFilterTest	webrtc/modules/audio_processing/vad/pole_zero_filter_unittest.cc	/^  PoleZeroFilterTest()$/;"	f	class:webrtc::PoleZeroFilterTest
PoleZeroFilterTest	webrtc/modules/audio_processing/vad/pole_zero_filter_unittest.cc	/^class PoleZeroFilterTest : public ::testing::Test {$/;"	c	namespace:webrtc	file:
PollTasks	webrtc/base/taskrunner.cc	/^void TaskRunner::PollTasks() {$/;"	f	class:rtc::TaskRunner
Pop	webrtc/modules/audio_processing/echo_detector/circular_buffer.cc	/^rtc::Optional<float> CircularBuffer::Pop() {$/;"	f	class:webrtc::CircularBuffer
PopSendMessageFromThread	webrtc/base/thread.cc	/^bool Thread::PopSendMessageFromThread(const Thread* source, _SendMessage* msg) {$/;"	f	class:rtc::Thread
PopulateAudioFrame	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^void PopulateAudioFrame(AudioFrame* frame,$/;"	f	namespace:webrtc::__anon181
PopulateAudioFrame	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^void PopulateAudioFrame(float** frame,$/;"	f	namespace:webrtc::__anon181
PortAsString	webrtc/base/socketaddress.cc	/^std::string SocketAddress::PortAsString() const {$/;"	f	class:rtc::SocketAddress
PortRestrictedNAT	webrtc/base/nattypes.cc	/^class PortRestrictedNAT : public NAT {$/;"	c	namespace:rtc	file:
PosixSignalDeliveryTest	webrtc/base/physicalsocketserver_unittest.cc	/^class PosixSignalDeliveryTest : public testing::Test {$/;"	c	namespace:rtc	file:
PosixSignalDispatcher	webrtc/base/physicalsocketserver.cc	/^  PosixSignalDispatcher(PhysicalSocketServer *owner) : owner_(owner) {$/;"	f	class:rtc::PosixSignalDispatcher
PosixSignalDispatcher	webrtc/base/physicalsocketserver.cc	/^class PosixSignalDispatcher : public Dispatcher {$/;"	c	namespace:rtc	file:
PosixSignalHandler	webrtc/base/physicalsocketserver.cc	/^  PosixSignalHandler() {$/;"	f	class:rtc::PosixSignalHandler	file:
PosixSignalHandler	webrtc/base/physicalsocketserver.cc	/^class PosixSignalHandler {$/;"	c	namespace:rtc	file:
Post	webrtc/base/messagequeue.cc	/^void MessageQueue::Post(const Location& posted_from,$/;"	f	class:rtc::MessageQueue
PostAndReplyTask	webrtc/base/task_queue_libevent.cc	/^  PostAndReplyTask(std::unique_ptr<QueuedTask> task,$/;"	f	class:rtc::TaskQueue::PostAndReplyTask
PostAndReplyTask	webrtc/base/task_queue_libevent.cc	/^class TaskQueue::PostAndReplyTask : public QueuedTask {$/;"	c	class:rtc::TaskQueue	file:
PostAt	webrtc/base/messagequeue.cc	/^void MessageQueue::PostAt(const Location& posted_from,$/;"	f	class:rtc::MessageQueue
PostClosed	webrtc/base/win32socketserver.cc	/^void Win32Socket::PostClosed() {$/;"	f	class:rtc::Win32Socket
PostDelayed	webrtc/base/messagequeue.cc	/^void MessageQueue::PostDelayed(const Location& posted_from,$/;"	f	class:rtc::MessageQueue
PostDelayedTask	webrtc/base/task_queue.h	/^  void PostDelayedTask(const Closure& closure, uint32_t milliseconds) {$/;"	f	class:rtc::TaskQueue
PostDelayedTask	webrtc/base/task_queue_gcd.cc	/^void TaskQueue::PostDelayedTask(std::unique_ptr<QueuedTask> task,$/;"	f	class:rtc::TaskQueue
PostDelayedTask	webrtc/base/task_queue_libevent.cc	/^void TaskQueue::PostDelayedTask(std::unique_ptr<QueuedTask> task,$/;"	f	class:rtc::TaskQueue
PostDelayedTask	webrtc/base/task_queue_win.cc	/^void TaskQueue::PostDelayedTask(std::unique_ptr<QueuedTask> task,$/;"	f	class:rtc::TaskQueue
PostEvent	webrtc/base/stream.cc	/^void StreamInterface::PostEvent(Thread* t, int events, int err) {$/;"	f	class:rtc::StreamInterface
PostEvent	webrtc/base/stream.cc	/^void StreamInterface::PostEvent(int events, int err) {$/;"	f	class:rtc::StreamInterface
PostFiltBankstr	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^} PostFiltBankstr;$/;"	t	typeref:struct:__anon127
PostFilter	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.cc	/^void NonlinearBeamformer::PostFilter(ChannelBuffer<float>* data) {$/;"	f	class:webrtc::NonlinearBeamformer
PostFilterTransform	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.cc	/^PostFilterTransform::PostFilterTransform(size_t num_channels,$/;"	f	class:webrtc::PostFilterTransform
PostFilterTransform	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.h	/^class PostFilterTransform : public LappedTransform::Callback {$/;"	c	namespace:webrtc
PostRead	webrtc/base/sharedexclusivelock_unittest.cc	/^  void PostRead(int* value) {$/;"	f	class:rtc::ReadTask
PostStateHiF	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  float    PostStateHiF[ORDERHI+1];$/;"	m	struct:__anon125
PostStateHiG	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  float    PostStateHiG[ORDERHI+1];$/;"	m	struct:__anon125
PostStateLoF	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  float    PostStateLoF[ORDERLO+1];$/;"	m	struct:__anon125
PostStateLoG	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  float    PostStateLoG[ORDERLO+1];$/;"	m	struct:__anon125
PostTask	webrtc/base/task_queue.h	/^  void PostTask(const Closure& closure) {$/;"	f	class:rtc::TaskQueue
PostTask	webrtc/base/task_queue_gcd.cc	/^void TaskQueue::PostTask(std::unique_ptr<QueuedTask> task) {$/;"	f	class:rtc::TaskQueue
PostTask	webrtc/base/task_queue_libevent.cc	/^void TaskQueue::PostTask(std::unique_ptr<QueuedTask> task) {$/;"	f	class:rtc::TaskQueue
PostTask	webrtc/base/task_queue_win.cc	/^void TaskQueue::PostTask(std::unique_ptr<QueuedTask> task) {$/;"	f	class:rtc::TaskQueue
PostTaskAndReply	webrtc/base/task_queue.h	/^  void PostTaskAndReply(const Closure& task,$/;"	f	class:rtc::TaskQueue
PostTaskAndReply	webrtc/base/task_queue.h	/^  void PostTaskAndReply(const Closure1& task, const Closure2& reply) {$/;"	f	class:rtc::TaskQueue
PostTaskAndReply	webrtc/base/task_queue.h	/^  void PostTaskAndReply(const Closure1& task,$/;"	f	class:rtc::TaskQueue
PostTaskAndReply	webrtc/base/task_queue.h	/^  void PostTaskAndReply(std::unique_ptr<QueuedTask> task,$/;"	f	class:rtc::TaskQueue
PostTaskAndReply	webrtc/base/task_queue_gcd.cc	/^void TaskQueue::PostTaskAndReply(std::unique_ptr<QueuedTask> task,$/;"	f	class:rtc::TaskQueue
PostTaskAndReply	webrtc/base/task_queue_libevent.cc	/^void TaskQueue::PostTaskAndReply(std::unique_ptr<QueuedTask> task,$/;"	f	class:rtc::TaskQueue
PostTaskAndReply	webrtc/base/task_queue_win.cc	/^void TaskQueue::PostTaskAndReply(std::unique_ptr<QueuedTask> task,$/;"	f	class:rtc::TaskQueue
PostTaskAndReplyContext	webrtc/base/task_queue_gcd.cc	/^  explicit PostTaskAndReplyContext(QueueContext* first_queue_ctx,$/;"	f	struct:rtc::TaskQueue::PostTaskAndReplyContext
PostTaskAndReplyContext	webrtc/base/task_queue_gcd.cc	/^struct TaskQueue::PostTaskAndReplyContext : public TaskQueue::TaskContext {$/;"	s	class:rtc::TaskQueue	file:
PostWrite	webrtc/base/sharedexclusivelock_unittest.cc	/^  void PostWrite(int value) {$/;"	f	class:rtc::WriteTask
Power	webrtc/modules/audio_processing/residual_echo_detector.cc	/^float Power(rtc::ArrayView<const float> input) {$/;"	f	namespace:__anon217
PowerEstimator	webrtc/modules/audio_processing/intelligibility/intelligibility_utils.cc	/^PowerEstimator<T>::PowerEstimator(size_t num_freqs, float decay)$/;"	f	class:webrtc::intelligibility::PowerEstimator
PowerEstimator	webrtc/modules/audio_processing/intelligibility/intelligibility_utils.h	/^class PowerEstimator {$/;"	c	namespace:webrtc::intelligibility
PowerLevel	webrtc/modules/audio_processing/aec/aec_core.cc	/^PowerLevel::PowerLevel()$/;"	f	class:webrtc::PowerLevel
PowerLevel	webrtc/modules/audio_processing/aec/aec_core.h	/^typedef struct PowerLevel {$/;"	s	namespace:webrtc
PowerLevel	webrtc/modules/audio_processing/aec/aec_core.h	/^} PowerLevel;$/;"	t	namespace:webrtc	typeref:struct:webrtc::PowerLevel
PowerSpectrum	webrtc/modules/audio_processing/level_controller/signal_classifier.cc	/^void PowerSpectrum(const OouraFft* ooura_fft,$/;"	f	namespace:webrtc::__anon213
PreFiltBankstr	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^} PreFiltBankstr;$/;"	t	typeref:struct:__anon126
PreFiltBankstr	webrtc/modules/audio_processing/vad/vad_audio_proc.cc	/^struct VadAudioProc::PreFiltBankstr : public ::PreFiltBankstr {};$/;"	s	class:webrtc::VadAudioProc	file:
PreRun	webrtc/base/thread.cc	/^void* Thread::PreRun(void* pv) {$/;"	f	class:rtc::Thread
PreStateHiF	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  float    PreStateHiF[ORDERHI+1];$/;"	m	struct:__anon125
PreStateHiG	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  float    PreStateHiG[ORDERHI+1];$/;"	m	struct:__anon125
PreStateLoF	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  float    PreStateLoF[ORDERLO+1];$/;"	m	struct:__anon125
PreStateLoG	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  float    PreStateLoG[ORDERLO+1];$/;"	m	struct:__anon125
PrepareFrame	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^void CaptureProcessor::PrepareFrame() {$/;"	f	class:webrtc::__anon181::CaptureProcessor
PrepareFrame	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^void RenderProcessor::PrepareFrame() {$/;"	f	class:webrtc::__anon181::RenderProcessor
PrepareFrame	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^  void PrepareFrame() {$/;"	f	class:webrtc::__anon182::TimedThreadApiProcessor	file:
PrepareProcessStreamCall	webrtc/modules/audio_processing/test/aec_dump_based_simulator.cc	/^void AecDumpBasedSimulator::PrepareProcessStreamCall($/;"	f	class:webrtc::test::AecDumpBasedSimulator
PrepareProcessStreamCall	webrtc/modules/audio_processing/test/wav_based_simulator.cc	/^void WavBasedSimulator::PrepareProcessStreamCall() {$/;"	f	class:webrtc::test::WavBasedSimulator
PrepareReplyTask	webrtc/base/task_queue_libevent.cc	/^void TaskQueue::PrepareReplyTask(PostAndReplyTask* reply_task) {$/;"	f	class:rtc::TaskQueue
PrepareReverseProcessStreamCall	webrtc/modules/audio_processing/test/aec_dump_based_simulator.cc	/^void AecDumpBasedSimulator::PrepareReverseProcessStreamCall($/;"	f	class:webrtc::test::AecDumpBasedSimulator
PrepareReverseProcessStreamCall	webrtc/modules/audio_processing/test/wav_based_simulator.cc	/^void WavBasedSimulator::PrepareReverseProcessStreamCall() {$/;"	f	class:webrtc::test::WavBasedSimulator
PrepareSpectrum	webrtc/modules/audio_processing/ns/nsx_core.h	/^typedef void (*PrepareSpectrum)(NoiseSuppressionFixedC* inst,$/;"	t
PrepareSpectrumC	webrtc/modules/audio_processing/ns/nsx_core.c	/^static void PrepareSpectrumC(NoiseSuppressionFixedC* inst, int16_t* freq_buf) {$/;"	f	file:
PrepareValidate	webrtc/base/httpclient.cc	/^bool HttpClient::PrepareValidate() {$/;"	f	class:rtc::HttpClient
PrevExceed	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  int    PrevExceed;$/;"	m	struct:__anon132
Print	webrtc/base/flags.cc	/^void Flag::Print(bool print_current_value) {$/;"	f	class:rtc::Flag
Print	webrtc/base/flags.cc	/^void FlagList::Print(const char* file, bool print_current_value) {$/;"	f	class:rtc::FlagList
PrintCert	webrtc/base/opensslidentity.cc	/^static void PrintCert(X509* x509) {$/;"	f	namespace:rtc
PrintError	webrtc/base/checks.cc	/^void PrintError(const char* format, ...) {$/;"	f	namespace:rtc
PrintFlagValue	webrtc/base/flags.cc	/^static void PrintFlagValue(Flag::Type type, FlagValue* p) {$/;"	f	namespace:rtc
PriorityQueue	webrtc/base/messagequeue.h	/^  class PriorityQueue : public std::priority_queue<DelayedMessage> {$/;"	c	class:rtc::MessageQueue
PrivateKeyToPEMString	webrtc/base/fakesslidentity.h	/^  virtual std::string PrivateKeyToPEMString() const {$/;"	f	class:rtc::FakeSSLIdentity
PrivateKeyToPEMString	webrtc/base/opensslidentity.cc	/^std::string OpenSSLIdentity::PrivateKeyToPEMString() const {$/;"	f	class:rtc::OpenSSLIdentity
PrivateKeyToPEMString	webrtc/base/opensslidentity.cc	/^std::string OpenSSLKeyPair::PrivateKeyToPEMString() const {$/;"	f	class:rtc::OpenSSLKeyPair
ProcCpuInfo	webrtc/base/linux.cc	/^ProcCpuInfo::ProcCpuInfo() {$/;"	f	class:rtc::ProcCpuInfo
ProcCpuInfo	webrtc/base/linux.h	/^class ProcCpuInfo {$/;"	c	namespace:rtc
Process	webrtc/base/httpbase.cc	/^HttpParser::Process(const char* buffer, size_t len, size_t* processed,$/;"	f	class:rtc::HttpParser
Process	webrtc/base/task.cc	/^int Task::Process(int state) {$/;"	f	class:rtc::Task
Process	webrtc/modules/audio_processing/agc/agc.cc	/^int Agc::Process(const int16_t* audio, size_t length, int sample_rate_hz) {$/;"	f	class:webrtc::Agc
Process	webrtc/modules/audio_processing/agc/agc_manager_direct.cc	/^void AgcManagerDirect::Process(const int16_t* audio,$/;"	f	class:webrtc::AgcManagerDirect
Process	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^bool CaptureProcessor::Process() {$/;"	f	class:webrtc::__anon181::CaptureProcessor
Process	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^bool RenderProcessor::Process() {$/;"	f	class:webrtc::__anon181::RenderProcessor
Process	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^bool StatsProcessor::Process() {$/;"	f	class:webrtc::__anon181::StatsProcessor
Process	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^bool TimedThreadApiProcessor::Process() {$/;"	f	class:webrtc::__anon182::TimedThreadApiProcessor
Process	webrtc/modules/audio_processing/high_pass_filter_impl.cc	/^  void Process(int16_t* data, size_t length) {$/;"	f	class:webrtc::HighPassFilterImpl::BiquadFilter
Process	webrtc/modules/audio_processing/level_controller/biquad_filter.cc	/^void BiQuadFilter::Process(rtc::ArrayView<const float> x,$/;"	f	class:webrtc::BiQuadFilter
Process	webrtc/modules/audio_processing/level_controller/gain_applier.cc	/^int GainApplier::Process(float new_gain, AudioBuffer* audio) {$/;"	f	class:webrtc::GainApplier
Process	webrtc/modules/audio_processing/level_controller/level_controller.cc	/^void LevelController::Process(AudioBuffer* audio) {$/;"	f	class:webrtc::LevelController
Process	webrtc/modules/audio_processing/rms_level.cc	/^void RMSLevel::Process(const int16_t* data, size_t length) {$/;"	f	class:webrtc::RMSLevel
Process	webrtc/modules/audio_processing/test/aec_dump_based_simulator.cc	/^void AecDumpBasedSimulator::Process() {$/;"	f	class:webrtc::test::AecDumpBasedSimulator
Process	webrtc/modules/audio_processing/test/debug_dump_test.cc	/^void DebugDumpGenerator::Process(size_t num_blocks) {$/;"	f	class:webrtc::test::__anon223::DebugDumpGenerator
Process	webrtc/modules/audio_processing/test/wav_based_simulator.cc	/^void WavBasedSimulator::Process() {$/;"	f	class:webrtc::test::WavBasedSimulator
Process	webrtc/modules/audio_processing/typing_detection.cc	/^bool TypingDetection::Process(bool key_pressed, bool vad_activity) {$/;"	f	class:webrtc::TypingDetection
ProcessAllMessageQueues	webrtc/base/messagequeue.cc	/^void MessageQueueManager::ProcessAllMessageQueues() {$/;"	f	class:rtc::MessageQueueManager
ProcessAllMessageQueuesInternal	webrtc/base/messagequeue.cc	/^void MessageQueueManager::ProcessAllMessageQueuesInternal() {$/;"	f	class:rtc::MessageQueueManager
ProcessAudioBlock	webrtc/common_audio/lapped_transform_unittest.cc	/^  virtual void ProcessAudioBlock(const complex<float>* const* in_block,$/;"	f	class:__anon81::FftCheckerCallback
ProcessAudioBlock	webrtc/common_audio/lapped_transform_unittest.cc	/^  virtual void ProcessAudioBlock(const complex<float>* const* in_block,$/;"	f	class:__anon81::NoopCallback
ProcessAudioBlock	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.cc	/^void NonlinearBeamformer::ProcessAudioBlock(const complex_f* const* input,$/;"	f	class:webrtc::NonlinearBeamformer
ProcessAudioBlock	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.cc	/^void PostFilterTransform::ProcessAudioBlock(const complex<float>* const* input,$/;"	f	class:webrtc::PostFilterTransform
ProcessAudioBlock	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer.cc	/^void IntelligibilityEnhancer::ProcessAudioBlock($/;"	f	class:webrtc::IntelligibilityEnhancer
ProcessBlock	webrtc/common_audio/lapped_transform.cc	/^void LappedTransform::BlockThunk::ProcessBlock(const float* const* input,$/;"	f	class:webrtc::LappedTransform::BlockThunk
ProcessCapture	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^  int ProcessCapture() {$/;"	f	class:webrtc::__anon182::TimedThreadApiProcessor	file:
ProcessCaptureAudio	webrtc/modules/audio_processing/echo_cancellation_impl.cc	/^int EchoCancellationImpl::ProcessCaptureAudio(AudioBuffer* audio,$/;"	f	class:webrtc::EchoCancellationImpl
ProcessCaptureAudio	webrtc/modules/audio_processing/echo_control_mobile_impl.cc	/^int EchoControlMobileImpl::ProcessCaptureAudio(AudioBuffer* audio,$/;"	f	class:webrtc::EchoControlMobileImpl
ProcessCaptureAudio	webrtc/modules/audio_processing/gain_control_impl.cc	/^int GainControlImpl::ProcessCaptureAudio(AudioBuffer* audio,$/;"	f	class:webrtc::GainControlImpl
ProcessCaptureAudio	webrtc/modules/audio_processing/high_pass_filter_impl.cc	/^void HighPassFilterImpl::ProcessCaptureAudio(AudioBuffer* audio) {$/;"	f	class:webrtc::HighPassFilterImpl
ProcessCaptureAudio	webrtc/modules/audio_processing/noise_suppression_impl.cc	/^void NoiseSuppressionImpl::ProcessCaptureAudio(AudioBuffer* audio) {$/;"	f	class:webrtc::NoiseSuppressionImpl
ProcessCaptureAudio	webrtc/modules/audio_processing/voice_detection_impl.cc	/^void VoiceDetectionImpl::ProcessCaptureAudio(AudioBuffer* audio) {$/;"	f	class:webrtc::VoiceDetectionImpl
ProcessCaptureStreamLocked	webrtc/modules/audio_processing/audio_processing_impl.cc	/^int AudioProcessingImpl::ProcessCaptureStreamLocked() {$/;"	f	class:webrtc::AudioProcessingImpl
ProcessChunk	webrtc/common_audio/blocker.cc	/^void Blocker::ProcessChunk(const float* const* input,$/;"	f	class:webrtc::Blocker
ProcessChunk	webrtc/common_audio/lapped_transform.cc	/^void LappedTransform::ProcessChunk(const float* const* in_chunk,$/;"	f	class:webrtc::LappedTransform
ProcessChunk	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.cc	/^void PostFilterTransform::ProcessChunk(float* const* data, float* final_mask) {$/;"	f	class:webrtc::PostFilterTransform
ProcessChunk	webrtc/modules/audio_processing/vad/voice_activity_detector.cc	/^void VoiceActivityDetector::ProcessChunk(const int16_t* audio,$/;"	f	class:webrtc::VoiceActivityDetector
ProcessData	webrtc/base/httpbase.cc	/^HttpBase::ProcessData(const char* data, size_t len, size_t& read,$/;"	f	class:rtc::HttpBase
ProcessDebugDump	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^void ApmTest::ProcessDebugDump(const std::string& in_filename,$/;"	f	class:webrtc::__anon183::ApmTest
ProcessDelayVerificationTest	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^void ApmTest::ProcessDelayVerificationTest(int delay_ms, int system_delay_ms,$/;"	f	class:webrtc::__anon183::ApmTest
ProcessExtended	webrtc/modules/audio_processing/aec/echo_cancellation.cc	/^static void ProcessExtended(Aec* self,$/;"	f	namespace:webrtc
ProcessFormat	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^  static void ProcessFormat(int input_rate,$/;"	f	class:webrtc::__anon183::AudioProcessingTest
ProcessHeader	webrtc/base/httpbase.cc	/^HttpBase::ProcessHeader(const char* name, size_t nlen, const char* value,$/;"	f	class:rtc::HttpBase
ProcessHeaderComplete	webrtc/base/httpbase.cc	/^HttpBase::ProcessHeaderComplete(bool chunked, size_t& data_size,$/;"	f	class:rtc::HttpBase
ProcessInput	webrtc/base/asynctcpsocket.cc	/^void AsyncTCPSocket::ProcessInput(char * data, size_t* len) {$/;"	f	class:rtc::AsyncTCPSocket
ProcessInput	webrtc/base/socketadapters.cc	/^void AsyncHttpsProxySocket::ProcessInput(char* data, size_t* len) {$/;"	f	class:rtc::AsyncHttpsProxySocket
ProcessInput	webrtc/base/socketadapters.cc	/^void AsyncSSLServerSocket::ProcessInput(char* data, size_t* len) {$/;"	f	class:rtc::AsyncSSLServerSocket
ProcessInput	webrtc/base/socketadapters.cc	/^void AsyncSSLSocket::ProcessInput(char* data, size_t* len) {$/;"	f	class:rtc::AsyncSSLSocket
ProcessInput	webrtc/base/socketadapters.cc	/^void AsyncSocksProxyServerSocket::ProcessInput(char* data, size_t* len) {$/;"	f	class:rtc::AsyncSocksProxyServerSocket
ProcessInput	webrtc/base/socketadapters.cc	/^void AsyncSocksProxySocket::ProcessInput(char* data, size_t* len) {$/;"	f	class:rtc::AsyncSocksProxySocket
ProcessLeader	webrtc/base/httpbase.cc	/^HttpBase::ProcessLeader(const char* line, size_t len, HttpError* error) {$/;"	f	class:rtc::HttpBase
ProcessLine	webrtc/base/httpbase.cc	/^HttpParser::ProcessLine(const char* line, size_t len, HttpError* error) {$/;"	f	class:rtc::HttpParser
ProcessLine	webrtc/base/socketadapters.cc	/^void AsyncHttpsProxySocket::ProcessLine(char * data, size_t len) {$/;"	f	class:rtc::AsyncHttpsProxySocket
ProcessMessages	webrtc/base/thread.cc	/^bool Thread::ProcessMessages(int cmsLoop) {$/;"	f	class:rtc::Thread
ProcessMessagesUntilIdle	webrtc/base/virtualsocketserver.cc	/^bool VirtualSocketServer::ProcessMessagesUntilIdle() {$/;"	f	class:rtc::VirtualSocketServer
ProcessMuted	webrtc/modules/audio_processing/rms_level.cc	/^void RMSLevel::ProcessMuted(size_t length) {$/;"	f	class:webrtc::RMSLevel
ProcessNearendBlock	webrtc/modules/audio_processing/aec/aec_core.cc	/^static void ProcessNearendBlock($/;"	f	namespace:webrtc
ProcessNormal	webrtc/modules/audio_processing/aec/echo_cancellation.cc	/^static int ProcessNormal(Aec* aecpc,$/;"	f	namespace:webrtc
ProcessOneFrame	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer_unittest.cc	/^void ProcessOneFrame(int sample_rate_hz,$/;"	f	namespace:webrtc::__anon190
ProcessOneFrame	webrtc/modules/audio_processing/echo_cancellation_bit_exact_unittest.cc	/^void ProcessOneFrame(int sample_rate_hz,$/;"	f	namespace:webrtc::__anon192
ProcessOneFrame	webrtc/modules/audio_processing/echo_control_mobile_unittest.cc	/^void ProcessOneFrame(int sample_rate_hz,$/;"	f	namespace:webrtc::__anon195
ProcessOneFrame	webrtc/modules/audio_processing/gain_control_unittest.cc	/^void ProcessOneFrame(int sample_rate_hz,$/;"	f	namespace:webrtc::__anon199
ProcessOneFrame	webrtc/modules/audio_processing/high_pass_filter_unittest.cc	/^std::vector<float> ProcessOneFrame(const std::vector<float>& frame_input,$/;"	f	namespace:webrtc::__anon201
ProcessOneFrame	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer_unittest.cc	/^void ProcessOneFrame(int sample_rate_hz,$/;"	f	namespace:webrtc::__anon203
ProcessOneFrame	webrtc/modules/audio_processing/noise_suppression_unittest.cc	/^void ProcessOneFrame(int sample_rate_hz,$/;"	f	namespace:webrtc::__anon216
ProcessOneFrame	webrtc/modules/audio_processing/voice_detection_unittest.cc	/^void ProcessOneFrame(int sample_rate_hz,$/;"	f	namespace:webrtc::__anon244
ProcessQueuedMessages	webrtc/base/task_queue_win.cc	/^bool TaskQueue::ProcessQueuedMessages(DelayedTasks* delayed_tasks) {$/;"	f	class:rtc::TaskQueue
ProcessRender	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^  int ProcessRender() {$/;"	f	class:webrtc::__anon182::TimedThreadApiProcessor	file:
ProcessRenderAudio	webrtc/modules/audio_processing/echo_cancellation_impl.cc	/^void EchoCancellationImpl::ProcessRenderAudio($/;"	f	class:webrtc::EchoCancellationImpl
ProcessRenderAudio	webrtc/modules/audio_processing/echo_control_mobile_impl.cc	/^void EchoControlMobileImpl::ProcessRenderAudio($/;"	f	class:webrtc::EchoControlMobileImpl
ProcessRenderAudio	webrtc/modules/audio_processing/gain_control_impl.cc	/^void GainControlImpl::ProcessRenderAudio($/;"	f	class:webrtc::GainControlImpl
ProcessRenderAudio	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer.cc	/^void IntelligibilityEnhancer::ProcessRenderAudio(AudioBuffer* audio) {$/;"	f	class:webrtc::IntelligibilityEnhancer
ProcessRenderStreamLocked	webrtc/modules/audio_processing/audio_processing_impl.cc	/^int AudioProcessingImpl::ProcessRenderStreamLocked() {$/;"	f	class:webrtc::AudioProcessingImpl
ProcessResponse	webrtc/base/task.cc	/^int Task::ProcessResponse() {$/;"	f	class:rtc::Task
ProcessResult	webrtc/base/httpbase.h	/^  enum ProcessResult { PR_CONTINUE, PR_BLOCK, PR_COMPLETE };$/;"	g	class:rtc::HttpParser
ProcessReverseStream	webrtc/modules/audio_processing/audio_processing_impl.cc	/^int AudioProcessingImpl::ProcessReverseStream(AudioFrame* frame) {$/;"	f	class:webrtc::AudioProcessingImpl
ProcessReverseStream	webrtc/modules/audio_processing/audio_processing_impl.cc	/^int AudioProcessingImpl::ProcessReverseStream(const float* const* src,$/;"	f	class:webrtc::AudioProcessingImpl
ProcessReverseStream	webrtc/modules/audio_processing/test/audio_processing_simulator.cc	/^void AudioProcessingSimulator::ProcessReverseStream(bool fixed_interface) {$/;"	f	class:webrtc::test::AudioProcessingSimulator
ProcessReverseStreamImpl1	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  ProcessReverseStreamImpl1,$/;"	m	class:webrtc::__anon181::RenderApiImpl	file:
ProcessReverseStreamImpl2	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  ProcessReverseStreamImpl2,$/;"	m	class:webrtc::__anon181::RenderApiImpl	file:
ProcessSignal	webrtc/base/dbus_unittest.cc	/^  virtual void ProcessSignal(DBusMessage *message) {$/;"	f	class:rtc::DBusSigFilterTest	file:
ProcessStart	webrtc/base/task_unittest.cc	/^  virtual int ProcessStart() {$/;"	f	class:rtc::AbortTask
ProcessStart	webrtc/base/task_unittest.cc	/^  virtual int ProcessStart() {$/;"	f	class:rtc::HappyTask
ProcessStart	webrtc/base/task_unittest.cc	/^  virtual int ProcessStart() {$/;"	f	class:rtc::IdTimeoutTask
ProcessStart	webrtc/base/task_unittest.cc	/^  virtual int ProcessStart() {$/;"	f	class:rtc::SetBoolOnDeleteTask
ProcessStart	webrtc/base/task_unittest.cc	/^  virtual int ProcessStart() {$/;"	f	class:rtc::StuckTask
ProcessStream	webrtc/modules/audio_processing/audio_processing_impl.cc	/^int AudioProcessingImpl::ProcessStream(AudioFrame* frame) {$/;"	f	class:webrtc::AudioProcessingImpl
ProcessStream	webrtc/modules/audio_processing/audio_processing_impl.cc	/^int AudioProcessingImpl::ProcessStream(const float* const* src,$/;"	f	class:webrtc::AudioProcessingImpl
ProcessStream	webrtc/modules/audio_processing/level_estimator_impl.cc	/^void LevelEstimatorImpl::ProcessStream(AudioBuffer* audio) {$/;"	f	class:webrtc::LevelEstimatorImpl
ProcessStream	webrtc/modules/audio_processing/test/audio_processing_simulator.cc	/^void AudioProcessingSimulator::ProcessStream(bool fixed_interface) {$/;"	f	class:webrtc::test::AudioProcessingSimulator
ProcessStreamChooser	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^int ApmTest::ProcessStreamChooser(Format format) {$/;"	f	class:webrtc::__anon183::ApmTest
ProcessStreamImpl1	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  ProcessStreamImpl1,$/;"	m	class:webrtc::__anon181::CaptureApiImpl	file:
ProcessStreamImpl2	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  ProcessStreamImpl2,$/;"	m	class:webrtc::__anon181::CaptureApiImpl	file:
ProcessThreadAttached	webrtc/modules/include/module.h	/^  virtual void ProcessThreadAttached(ProcessThread* process_thread) {}$/;"	f	class:webrtc::Module
ProcessWithDefaultStreamParameters	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^void ApmTest::ProcessWithDefaultStreamParameters(AudioFrame* frame) {$/;"	f	class:webrtc::__anon183::ApmTest
ProcessingConfig	webrtc/modules/audio_processing/include/audio_processing.h	/^class ProcessingConfig {$/;"	c	namespace:webrtc
ProcessingTypes	webrtc/common_types.h	/^enum ProcessingTypes {$/;"	g	namespace:webrtc
ProcessorType	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^enum class ProcessorType { kRender, kCapture };$/;"	c	namespace:webrtc::__anon182	file:
ProxyBinding	webrtc/base/proxyserver.cc	/^ProxyBinding::ProxyBinding(AsyncProxyServerSocket* int_socket,$/;"	f	class:rtc::ProxyBinding
ProxyBinding	webrtc/base/proxyserver.h	/^class ProxyBinding : public sigslot::has_slots<> {$/;"	c	namespace:rtc
ProxyDetectTest	webrtc/base/proxydetect_unittest.cc	/^class ProxyDetectTest : public testing::Test {$/;"	c	namespace:rtc	file:
ProxyInfo	webrtc/base/proxyinfo.cc	/^ProxyInfo::ProxyInfo() : type(PROXY_NONE), autodetect(false) {$/;"	f	class:rtc::ProxyInfo
ProxyInfo	webrtc/base/proxyinfo.h	/^struct ProxyInfo {$/;"	s	namespace:rtc
ProxyItemMatch	webrtc/base/proxydetect.cc	/^bool ProxyItemMatch(const Url<char>& url, char * item, size_t len) {$/;"	f	namespace:rtc
ProxyListMatch	webrtc/base/proxydetect.cc	/^bool ProxyListMatch(const Url<char>& url, const std::string& proxy_list,$/;"	f	namespace:rtc
ProxyServer	webrtc/base/proxyserver.cc	/^ProxyServer::ProxyServer($/;"	f	class:rtc::ProxyServer
ProxyServer	webrtc/base/proxyserver.h	/^class ProxyServer : public sigslot::has_slots<> {$/;"	c	namespace:rtc
ProxySocketAdapter	webrtc/base/sslsocketfactory.cc	/^  ProxySocketAdapter(SslSocketFactory* factory, int family, int type)$/;"	f	class:rtc::ProxySocketAdapter
ProxySocketAdapter	webrtc/base/sslsocketfactory.cc	/^class ProxySocketAdapter : public AsyncSocketAdapter {$/;"	c	namespace:rtc	file:
ProxyState	webrtc/base/socketadapters.h	/^  enum ProxyState {$/;"	g	class:rtc::AsyncHttpsProxySocket
ProxyTest	webrtc/base/proxy_unittest.cc	/^  ProxyTest() : ss_(new rtc::VirtualSocketServer(NULL)) {$/;"	f	class:ProxyTest
ProxyTest	webrtc/base/proxy_unittest.cc	/^class ProxyTest : public testing::Test {$/;"	c	file:
ProxyToString	webrtc/base/proxyinfo.cc	/^const char * ProxyToString(ProxyType proxy) {$/;"	f	namespace:rtc
ProxyType	webrtc/base/proxyinfo.h	/^enum ProxyType {$/;"	g	namespace:rtc
PublicKeyToPEMString	webrtc/base/fakesslidentity.h	/^  virtual std::string PublicKeyToPEMString() const {$/;"	f	class:rtc::FakeSSLIdentity
PublicKeyToPEMString	webrtc/base/opensslidentity.cc	/^std::string OpenSSLIdentity::PublicKeyToPEMString() const {$/;"	f	class:rtc::OpenSSLIdentity
PublicKeyToPEMString	webrtc/base/opensslidentity.cc	/^std::string OpenSSLKeyPair::PublicKeyToPEMString() const {$/;"	f	class:rtc::OpenSSLKeyPair
Pump	webrtc/base/win32socketserver.cc	/^void Win32SocketServer::Pump() {$/;"	f	class:rtc::Win32SocketServer
Purge	webrtc/base/diskcache.cc	/^bool DiskCache::Purge() {$/;"	f	class:rtc::DiskCache
PurgeFiles	webrtc/base/diskcache_win32.cc	/^bool DiskCacheWin32::PurgeFiles() {$/;"	f	class:rtc::DiskCacheWin32
PurgeNetworkPackets	webrtc/base/virtualsocketserver.cc	/^void VirtualSocketServer::PurgeNetworkPackets(VirtualSocket* socket,$/;"	f	class:rtc::VirtualSocketServer
Push	webrtc/common_audio/resampler/resampler.cc	/^int Resampler::Push(const int16_t * samplesIn, size_t lengthIn,$/;"	f	class:webrtc::Resampler
Push	webrtc/modules/audio_processing/echo_detector/circular_buffer.cc	/^void CircularBuffer::Push(float value) {$/;"	f	class:webrtc::CircularBuffer
PushBack	webrtc/base/scopedptrcollection.h	/^  void PushBack(T* t) {$/;"	f	class:rtc::ScopedPtrCollection
PushResampler	webrtc/common_audio/resampler/include/push_resampler.h	/^class PushResampler {$/;"	c	namespace:webrtc
PushResampler	webrtc/common_audio/resampler/push_resampler.cc	/^PushResampler<T>::PushResampler()$/;"	f	class:webrtc::PushResampler
PushSincResampler	webrtc/common_audio/resampler/push_sinc_resampler.cc	/^PushSincResampler::PushSincResampler(size_t source_frames,$/;"	f	class:webrtc::PushSincResampler
PushSincResampler	webrtc/common_audio/resampler/push_sinc_resampler.h	/^class PushSincResampler : public SincResamplerCallback {$/;"	c	namespace:webrtc
PushSincResamplerTest	webrtc/common_audio/resampler/push_sinc_resampler_unittest.cc	/^  PushSincResamplerTest()$/;"	f	class:webrtc::PushSincResamplerTest
PushSincResamplerTest	webrtc/common_audio/resampler/push_sinc_resampler_unittest.cc	/^class PushSincResamplerTest : public ::testing::TestWithParam<$/;"	c	namespace:webrtc	file:
QLOOKAHEAD	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define QLOOKAHEAD /;"	d
QORDER	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define QORDER /;"	d
QORDER_ALL	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define QORDER_ALL /;"	d
QUANTILE	webrtc/modules/audio_processing/ns/defines.h	/^#define QUANTILE /;"	d
QuadraticInterpolation	webrtc/modules/audio_processing/vad/vad_audio_proc.cc	/^static float QuadraticInterpolation(float prev_val,$/;"	f	namespace:webrtc
QueryDefaultLocalAddress	webrtc/base/network.cc	/^IPAddress BasicNetworkManager::QueryDefaultLocalAddress(int family) const {$/;"	f	class:rtc::BasicNetworkManager
QueueAPC	webrtc/base/platform_thread.cc	/^bool PlatformThread::QueueAPC(PAPCFUNC function, ULONG_PTR data) {$/;"	f	class:rtc::PlatformThread
QueueAPC	webrtc/base/task_queue.h	/^    bool QueueAPC(PAPCFUNC apc_function, ULONG_PTR data) {$/;"	f	class:rtc::TaskQueue::WorkerThread
QueueContext	webrtc/base/task_queue_gcd.cc	/^  explicit QueueContext(TaskQueue* q) : queue(q), is_active(true) {}$/;"	f	struct:rtc::TaskQueue::QueueContext
QueueContext	webrtc/base/task_queue_gcd.cc	/^struct TaskQueue::QueueContext {$/;"	s	class:rtc::TaskQueue	file:
QueueContext	webrtc/base/task_queue_libevent.cc	/^  explicit QueueContext(TaskQueue* q) : queue(q), is_active(true) {}$/;"	f	struct:rtc::TaskQueue::QueueContext
QueueContext	webrtc/base/task_queue_libevent.cc	/^struct TaskQueue::QueueContext {$/;"	s	class:rtc::TaskQueue	file:
QueueData	webrtc/base/testutils.h	/^  void QueueData(const char* data, size_t len) {$/;"	f	class:testing::SocketTestClient
QueueData	webrtc/base/testutils.h	/^  void QueueData(const char* data, size_t len) {$/;"	f	class:testing::StreamSource
QueueRenderAudio	webrtc/modules/audio_processing/audio_processing_impl.cc	/^void AudioProcessingImpl::QueueRenderAudio(AudioBuffer* audio) {$/;"	f	class:webrtc::AudioProcessingImpl
QueueString	webrtc/base/testutils.h	/^  void QueueString(const char* data) {$/;"	f	class:testing::SocketTestClient
QueueString	webrtc/base/testutils.h	/^  void QueueString(const char* data) {$/;"	f	class:testing::StreamSource
QueueStringF	webrtc/base/testutils.h	/^  void QueueStringF(const char* format, ...) {$/;"	f	class:testing::SocketTestClient
QueueStringF	webrtc/base/testutils.h	/^  void QueueStringF(const char* format, ...) {$/;"	f	class:testing::StreamSource
QueuedTask	webrtc/base/task_queue.h	/^  QueuedTask() {}$/;"	f	class:rtc::QueuedTask
QueuedTask	webrtc/base/task_queue.h	/^class QueuedTask {$/;"	c	namespace:rtc
Quit	webrtc/base/messagequeue.cc	/^void MessageQueue::Quit() {$/;"	f	class:rtc::MessageQueue
Quit	webrtc/base/win32socketserver.h	/^  virtual void Quit() {$/;"	f	class:rtc::Win32Thread
QuitGMainloop	webrtc/base/dbus.cc	/^  void QuitGMainloop() {$/;"	f	class:rtc::DBusMonitor::DBusMonitoringThread	file:
R0	webrtc/base/sha1.cc	/^#define R0(/;"	d	file:
R1	webrtc/base/sha1.cc	/^#define R1(/;"	d	file:
R2	webrtc/base/sha1.cc	/^#define R2(/;"	d	file:
R3	webrtc/base/sha1.cc	/^#define R3(/;"	d	file:
R4	webrtc/base/sha1.cc	/^#define R4(/;"	d	file:
RCU_BOTTLENECK_BPS	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define RCU_BOTTLENECK_BPS /;"	d
RCU_TRANSCODING_SCALE	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define RCU_TRANSCODING_SCALE /;"	d
RCU_TRANSCODING_SCALE_INVERSE	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define RCU_TRANSCODING_SCALE_INVERSE /;"	d
RCU_TRANSCODING_SCALE_UB	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define RCU_TRANSCODING_SCALE_UB /;"	d
RCU_TRANSCODING_SCALE_UB_INVERSE	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define RCU_TRANSCODING_SCALE_UB_INVERSE /;"	d
REAL	webrtc/modules/audio_coding/codecs/isac/main/source/fft.c	/^# define REAL /;"	d	file:
REDIRECT_ALWAYS	webrtc/base/httpclient.h	/^  enum RedirectAction { REDIRECT_DEFAULT, REDIRECT_ALWAYS, REDIRECT_NEVER };$/;"	e	enum:rtc::HttpClient::RedirectAction
REDIRECT_DEFAULT	webrtc/base/httpclient.h	/^  enum RedirectAction { REDIRECT_DEFAULT, REDIRECT_ALWAYS, REDIRECT_NEVER };$/;"	e	enum:rtc::HttpClient::RedirectAction
REDIRECT_NEVER	webrtc/base/httpclient.h	/^  enum RedirectAction { REDIRECT_DEFAULT, REDIRECT_ALWAYS, REDIRECT_NEVER };$/;"	e	enum:rtc::HttpClient::RedirectAction
RERL	webrtc/modules/include/module_common_types.h	/^  uint8_t RERL;$/;"	m	struct:webrtc::RTCPVoIPMetric
RESOLUTION_CHANNEL16	webrtc/modules/audio_processing/aecm/aecm_defines.h	/^#define RESOLUTION_CHANNEL16 /;"	d
RESOLUTION_CHANNEL32	webrtc/modules/audio_processing/aecm/aecm_defines.h	/^#define RESOLUTION_CHANNEL32 /;"	d
RESOLUTION_SUPGAIN	webrtc/modules/audio_processing/aecm/aecm_defines.h	/^#define RESOLUTION_SUPGAIN /;"	d
RESTRICT_LOGGING_PRECONDITION	webrtc/system_wrappers/include/logging.h	/^#define RESTRICT_LOGGING_PRECONDITION(/;"	d
RETURN_ON_ERR	webrtc/modules/audio_processing/audio_processing_impl.cc	/^#define RETURN_ON_ERR(/;"	d	file:
RMS	webrtc/modules/audio_processing/level_estimator_impl.cc	/^int LevelEstimatorImpl::RMS() {$/;"	f	class:webrtc::LevelEstimatorImpl
RMS	webrtc/modules/audio_processing/rms_level.cc	/^int RMSLevel::RMS() {$/;"	f	class:webrtc::RMSLevel
RMSLevel	webrtc/modules/audio_processing/rms_level.cc	/^RMSLevel::RMSLevel()$/;"	f	class:webrtc::RMSLevel
RMSLevel	webrtc/modules/audio_processing/rms_level.h	/^class RMSLevel {$/;"	c	namespace:webrtc
RSA	webrtc/base/sslidentity.cc	/^KeyParams KeyParams::RSA(int mod_size, int pub_exp) {$/;"	f	class:rtc::KeyParams
RSAParams	webrtc/base/sslidentity.h	/^struct RSAParams {$/;"	s	namespace:rtc
RTCCertificate	webrtc/base/rtccertificate.cc	/^RTCCertificate::RTCCertificate(SSLIdentity* identity)$/;"	f	class:rtc::RTCCertificate
RTCCertificate	webrtc/base/rtccertificate.h	/^class RTCCertificate : public RefCountInterface {$/;"	c	namespace:rtc
RTCCertificateGenerationTask	webrtc/base/rtccertificategenerator.cc	/^  RTCCertificateGenerationTask($/;"	f	class:rtc::__anon53::RTCCertificateGenerationTask
RTCCertificateGenerationTask	webrtc/base/rtccertificategenerator.cc	/^class RTCCertificateGenerationTask : public RefCountInterface,$/;"	c	namespace:rtc::__anon53	file:
RTCCertificateGenerator	webrtc/base/rtccertificategenerator.cc	/^RTCCertificateGenerator::RTCCertificateGenerator($/;"	f	class:rtc::RTCCertificateGenerator
RTCCertificateGenerator	webrtc/base/rtccertificategenerator.h	/^class RTCCertificateGenerator : public RTCCertificateGeneratorInterface {$/;"	c	namespace:rtc
RTCCertificateGeneratorCallback	webrtc/base/rtccertificategenerator.h	/^class RTCCertificateGeneratorCallback : public RefCountInterface {$/;"	c	namespace:rtc
RTCCertificateGeneratorFixture	webrtc/base/rtccertificategenerator_unittest.cc	/^  RTCCertificateGeneratorFixture()$/;"	f	class:rtc::RTCCertificateGeneratorFixture
RTCCertificateGeneratorFixture	webrtc/base/rtccertificategenerator_unittest.cc	/^class RTCCertificateGeneratorFixture : public RTCCertificateGeneratorCallback {$/;"	c	namespace:rtc	file:
RTCCertificateGeneratorInterface	webrtc/base/rtccertificategenerator.h	/^class RTCCertificateGeneratorInterface {$/;"	c	namespace:rtc
RTCCertificateGeneratorTest	webrtc/base/rtccertificategenerator_unittest.cc	/^  RTCCertificateGeneratorTest()$/;"	f	class:rtc::RTCCertificateGeneratorTest
RTCCertificateGeneratorTest	webrtc/base/rtccertificategenerator_unittest.cc	/^class RTCCertificateGeneratorTest$/;"	c	namespace:rtc	file:
RTCCertificatePEM	webrtc/base/rtccertificate.h	/^  RTCCertificatePEM($/;"	f	class:rtc::RTCCertificatePEM
RTCCertificatePEM	webrtc/base/rtccertificate.h	/^class RTCCertificatePEM {$/;"	c	namespace:rtc
RTCCertificateTest	webrtc/base/rtccertificate_unittest.cc	/^  RTCCertificateTest() {}$/;"	f	class:rtc::RTCCertificateTest
RTCCertificateTest	webrtc/base/rtccertificate_unittest.cc	/^class RTCCertificateTest : public testing::Test {$/;"	c	namespace:rtc	file:
RTCPVoIPMetric	webrtc/modules/include/module_common_types.h	/^struct RTCPVoIPMetric {$/;"	s	namespace:webrtc
RTC_ARCH_CPU_BIG_ENDIAN	webrtc/base/basictypes.h	/^#define RTC_ARCH_CPU_BIG_ENDIAN$/;"	d
RTC_ARCH_CPU_LITTLE_ENDIAN	webrtc/base/basictypes.h	/^#define RTC_ARCH_CPU_LITTLE_ENDIAN$/;"	d
RTC_CHECK	webrtc/base/checks.h	/^#define RTC_CHECK(/;"	d
RTC_CHECK_EQ	webrtc/base/checks.h	/^#define RTC_CHECK_EQ(/;"	d
RTC_CHECK_GE	webrtc/base/checks.h	/^#define RTC_CHECK_GE(/;"	d
RTC_CHECK_GT	webrtc/base/checks.h	/^#define RTC_CHECK_GT(/;"	d
RTC_CHECK_LE	webrtc/base/checks.h	/^#define RTC_CHECK_LE(/;"	d
RTC_CHECK_LT	webrtc/base/checks.h	/^#define RTC_CHECK_LT(/;"	d
RTC_CHECK_NE	webrtc/base/checks.h	/^#define RTC_CHECK_NE(/;"	d
RTC_CHECK_OP	webrtc/base/checks.h	/^#define RTC_CHECK_OP(/;"	d
RTC_CHECK_RUNS_SERIALIZED	webrtc/base/race_checker.h	/^#define RTC_CHECK_RUNS_SERIALIZED(/;"	d
RTC_DCHECK	webrtc/base/checks.h	/^#define RTC_DCHECK(/;"	d
RTC_DCHECK_CALLED_SEQUENTIALLY	webrtc/base/sequenced_task_checker.h	/^#define RTC_DCHECK_CALLED_SEQUENTIALLY(/;"	d
RTC_DCHECK_EQ	webrtc/base/checks.h	/^#define RTC_DCHECK_EQ(/;"	d
RTC_DCHECK_GE	webrtc/base/checks.h	/^#define RTC_DCHECK_GE(/;"	d
RTC_DCHECK_GT	webrtc/base/checks.h	/^#define RTC_DCHECK_GT(/;"	d
RTC_DCHECK_IS_ON	webrtc/base/checks.h	/^#define RTC_DCHECK_IS_ON /;"	d
RTC_DCHECK_LE	webrtc/base/checks.h	/^#define RTC_DCHECK_LE(/;"	d
RTC_DCHECK_LT	webrtc/base/checks.h	/^#define RTC_DCHECK_LT(/;"	d
RTC_DCHECK_NE	webrtc/base/checks.h	/^#define RTC_DCHECK_NE(/;"	d
RTC_DCHECK_RUNS_SERIALIZED	webrtc/base/race_checker.h	/^#define RTC_DCHECK_RUNS_SERIALIZED(/;"	d
RTC_DCHECK_RUN_ON	webrtc/base/thread_checker.h	/^#define RTC_DCHECK_RUN_ON(/;"	d
RTC_DEFINE_STATIC_LOCAL	webrtc/base/basictypes.h	/^#define RTC_DEFINE_STATIC_LOCAL(/;"	d
RTC_DEPRECATED	webrtc/base/deprecation.h	/^#define RTC_DEPRECATED /;"	d
RTC_DEPRECATED	webrtc/base/deprecation.h	/^#define RTC_DEPRECATED$/;"	d
RTC_DISALLOW_ASSIGN	webrtc/base/constructormagic.h	/^#define RTC_DISALLOW_ASSIGN(/;"	d
RTC_DISALLOW_COPY_AND_ASSIGN	webrtc/base/constructormagic.h	/^#define RTC_DISALLOW_COPY_AND_ASSIGN(/;"	d
RTC_DISALLOW_IMPLICIT_CONSTRUCTORS	webrtc/base/constructormagic.h	/^#define RTC_DISALLOW_IMPLICIT_CONSTRUCTORS(/;"	d
RTC_EAT_STREAM_PARAMETERS	webrtc/base/checks.h	/^#define RTC_EAT_STREAM_PARAMETERS(/;"	d
RTC_EAT_STREAM_PARAMETERS_OP	webrtc/base/checks.h	/^#define RTC_EAT_STREAM_PARAMETERS_OP(/;"	d
RTC_FROM_HERE	webrtc/base/location.h	/^#define RTC_FROM_HERE /;"	d
RTC_FROM_HERE_WITH_FUNCTION	webrtc/base/location.h	/^#define RTC_FROM_HERE_WITH_FUNCTION(/;"	d
RTC_HAS_ASAN	webrtc/base/sanitizer.h	/^#define RTC_HAS_ASAN /;"	d
RTC_HAS_MSAN	webrtc/base/sanitizer.h	/^#define RTC_HAS_MSAN /;"	d
RTC_HISTOGRAMS_COMMON	webrtc/system_wrappers/include/metrics.h	/^#define RTC_HISTOGRAMS_COMMON(/;"	d
RTC_HISTOGRAMS_COUNTS_100	webrtc/system_wrappers/include/metrics.h	/^#define RTC_HISTOGRAMS_COUNTS_100(/;"	d
RTC_HISTOGRAMS_COUNTS_1000	webrtc/system_wrappers/include/metrics.h	/^#define RTC_HISTOGRAMS_COUNTS_1000(/;"	d
RTC_HISTOGRAMS_COUNTS_10000	webrtc/system_wrappers/include/metrics.h	/^#define RTC_HISTOGRAMS_COUNTS_10000(/;"	d
RTC_HISTOGRAMS_COUNTS_100000	webrtc/system_wrappers/include/metrics.h	/^#define RTC_HISTOGRAMS_COUNTS_100000(/;"	d
RTC_HISTOGRAMS_COUNTS_200	webrtc/system_wrappers/include/metrics.h	/^#define RTC_HISTOGRAMS_COUNTS_200(/;"	d
RTC_HISTOGRAMS_COUNTS_500	webrtc/system_wrappers/include/metrics.h	/^#define RTC_HISTOGRAMS_COUNTS_500(/;"	d
RTC_HISTOGRAMS_ENUMERATION	webrtc/system_wrappers/include/metrics.h	/^#define RTC_HISTOGRAMS_ENUMERATION(/;"	d
RTC_HISTOGRAMS_PERCENTAGE	webrtc/system_wrappers/include/metrics.h	/^#define RTC_HISTOGRAMS_PERCENTAGE(/;"	d
RTC_HISTOGRAM_BOOLEAN	webrtc/system_wrappers/include/metrics.h	/^#define RTC_HISTOGRAM_BOOLEAN(/;"	d
RTC_HISTOGRAM_COMMON_BLOCK	webrtc/system_wrappers/include/metrics.h	/^#define RTC_HISTOGRAM_COMMON_BLOCK(/;"	d
RTC_HISTOGRAM_COMMON_BLOCK_SLOW	webrtc/system_wrappers/include/metrics.h	/^#define RTC_HISTOGRAM_COMMON_BLOCK_SLOW(/;"	d
RTC_HISTOGRAM_COUNTS	webrtc/system_wrappers/include/metrics.h	/^#define RTC_HISTOGRAM_COUNTS(/;"	d
RTC_HISTOGRAM_COUNTS_100	webrtc/system_wrappers/include/metrics.h	/^#define RTC_HISTOGRAM_COUNTS_100(/;"	d
RTC_HISTOGRAM_COUNTS_1000	webrtc/system_wrappers/include/metrics.h	/^#define RTC_HISTOGRAM_COUNTS_1000(/;"	d
RTC_HISTOGRAM_COUNTS_10000	webrtc/system_wrappers/include/metrics.h	/^#define RTC_HISTOGRAM_COUNTS_10000(/;"	d
RTC_HISTOGRAM_COUNTS_100000	webrtc/system_wrappers/include/metrics.h	/^#define RTC_HISTOGRAM_COUNTS_100000(/;"	d
RTC_HISTOGRAM_COUNTS_200	webrtc/system_wrappers/include/metrics.h	/^#define RTC_HISTOGRAM_COUNTS_200(/;"	d
RTC_HISTOGRAM_COUNTS_500	webrtc/system_wrappers/include/metrics.h	/^#define RTC_HISTOGRAM_COUNTS_500(/;"	d
RTC_HISTOGRAM_COUNTS_SPARSE	webrtc/system_wrappers/include/metrics.h	/^#define RTC_HISTOGRAM_COUNTS_SPARSE(/;"	d
RTC_HISTOGRAM_COUNTS_SPARSE_100	webrtc/system_wrappers/include/metrics.h	/^#define RTC_HISTOGRAM_COUNTS_SPARSE_100(/;"	d
RTC_HISTOGRAM_ENUMERATION	webrtc/system_wrappers/include/metrics.h	/^#define RTC_HISTOGRAM_ENUMERATION(/;"	d
RTC_HISTOGRAM_PERCENTAGE	webrtc/system_wrappers/include/metrics.h	/^#define RTC_HISTOGRAM_PERCENTAGE(/;"	d
RTC_IS_ALIGNED	webrtc/base/basictypes.h	/^#define RTC_IS_ALIGNED(/;"	d
RTC_LAZY_STREAM	webrtc/base/checks.h	/^#define RTC_LAZY_STREAM(/;"	d
RTC_LOG_TAG	webrtc/base/checks.cc	/^#define RTC_LOG_TAG /;"	d	file:
RTC_NOTREACHED	webrtc/base/checks.h	/^#define RTC_NOTREACHED(/;"	d
RTC_NO_SANITIZE	webrtc/base/sanitizer.h	/^#define RTC_NO_SANITIZE(/;"	d
RTC_POP_IGNORING_WUNDEF	webrtc/base/ignore_wundef.h	/^#define RTC_POP_IGNORING_WUNDEF(/;"	d
RTC_PUSH_IGNORING_WUNDEF	webrtc/base/ignore_wundef.h	/^#define RTC_PUSH_IGNORING_WUNDEF(/;"	d
RTC_UNREACHABLE_CODE_HIT	webrtc/base/checks.h	/^#define RTC_UNREACHABLE_CODE_HIT /;"	d
RTC_UNUSED	webrtc/base/common.h	/^#define RTC_UNUSED(/;"	d
RTC_UNUSED2	webrtc/base/common.h	/^#define RTC_UNUSED2(/;"	d
RTC_UNUSED3	webrtc/base/common.h	/^#define RTC_UNUSED3(/;"	d
RTC_UNUSED4	webrtc/base/common.h	/^#define RTC_UNUSED4(/;"	d
RTC_UNUSED5	webrtc/base/common.h	/^#define RTC_UNUSED5(/;"	d
RTPAudioHeader	webrtc/modules/include/module_common_types.h	/^struct RTPAudioHeader {$/;"	s	namespace:webrtc
RTPFragmentationHeader	webrtc/modules/include/module_common_types.h	/^  RTPFragmentationHeader()$/;"	f	class:webrtc::RTPFragmentationHeader
RTPFragmentationHeader	webrtc/modules/include/module_common_types.h	/^class RTPFragmentationHeader {$/;"	c	namespace:webrtc
RTPHeader	webrtc/common_types.cc	/^RTPHeader::RTPHeader()$/;"	f	class:webrtc::RTPHeader
RTPHeader	webrtc/common_types.h	/^struct RTPHeader {$/;"	s	namespace:webrtc
RTPHeaderExtension	webrtc/common_types.cc	/^RTPHeaderExtension::RTPHeaderExtension()$/;"	f	class:webrtc::RTPHeaderExtension
RTPHeaderExtension	webrtc/common_types.h	/^struct RTPHeaderExtension {$/;"	s	namespace:webrtc
RTPTypeHeader	webrtc/modules/include/module_common_types.h	/^union RTPTypeHeader {$/;"	u	namespace:webrtc
RTPVideoHeader	webrtc/modules/include/module_common_types.h	/^struct RTPVideoHeader {$/;"	s	namespace:webrtc
RTPVideoHeaderH264	webrtc/modules/include/module_common_types.h	/^struct RTPVideoHeaderH264 {$/;"	s	namespace:webrtc
RTPVideoHeaderVP8	webrtc/modules/include/module_common_types.h	/^struct RTPVideoHeaderVP8 {$/;"	s	namespace:webrtc
RTPVideoHeaderVP9	webrtc/modules/include/module_common_types.h	/^struct RTPVideoHeaderVP9 {$/;"	s	namespace:webrtc
RTPVideoTypeHeader	webrtc/modules/include/module_common_types.h	/^union RTPVideoTypeHeader {$/;"	u	namespace:webrtc
RTP_PAYLOAD_NAME_SIZE	webrtc/common_types.h	/^#define RTP_PAYLOAD_NAME_SIZE /;"	d
RUN_ON	webrtc/base/thread_checker.h	/^#define RUN_ON(/;"	d
RUN_ON	webrtc/base/thread_checker_unittest.cc	/^  void fun_acccess_var() RUN_ON(thread_) { var_thread_ = 13; }$/;"	f	class:rtc::ThreadAnnotateTest	file:
RUN_ON	webrtc/base/thread_checker_unittest.cc	/^  void function() RUN_ON(thread_) {}$/;"	f	class:rtc::ThreadAnnotateTest	file:
RWLockWrapper	webrtc/system_wrappers/include/rw_lock_wrapper.h	/^class LOCKABLE RWLockWrapper {$/;"	c	namespace:webrtc
RXX_BUFFER_LEN	webrtc/modules/audio_processing/agc/legacy/analog_agc.h	/^#define RXX_BUFFER_LEN /;"	d
RXconfig	webrtc/modules/include/module_common_types.h	/^  uint8_t RXconfig;$/;"	m	struct:webrtc::RTCPVoIPMetric
RaceChecker	webrtc/base/race_checker.cc	/^RaceChecker::RaceChecker() {}$/;"	f	class:rtc::RaceChecker
RaceChecker	webrtc/base/race_checker.h	/^class LOCKABLE RaceChecker {$/;"	c	namespace:rtc
RaceCheckerScope	webrtc/base/race_checker.cc	/^RaceCheckerScope::RaceCheckerScope(const RaceChecker* race_checker)$/;"	f	class:rtc::internal::RaceCheckerScope
RaceCheckerScope	webrtc/base/race_checker.h	/^class SCOPED_LOCKABLE RaceCheckerScope {$/;"	c	namespace:rtc::internal
RaceCheckerScopeDoNothing	webrtc/base/race_checker.h	/^class SCOPED_LOCKABLE RaceCheckerScopeDoNothing {$/;"	c	namespace:rtc::internal
RaceDetected	webrtc/base/race_checker.cc	/^bool RaceCheckerScope::RaceDetected() const {$/;"	f	class:rtc::internal::RaceCheckerScope
RadiansToDegrees	webrtc/modules/audio_processing/beamformer/array_util.h	/^T RadiansToDegrees(T angle_radians) {$/;"	f	namespace:webrtc
RaiseFlag	webrtc/base/platform_thread.cc	/^void CALLBACK RaiseFlag(ULONG_PTR param) {$/;"	f	namespace:rtc::__anon42
RaiseSigTermRunnable	webrtc/base/physicalsocketserver_unittest.cc	/^class RaiseSigTermRunnable : public Runnable {$/;"	c	namespace:rtc	file:
Rand	webrtc/base/random.cc	/^bool Random::Rand<bool>() {$/;"	f	class:webrtc::Random
Rand	webrtc/base/random.cc	/^double Random::Rand<double>() {$/;"	f	class:webrtc::Random
Rand	webrtc/base/random.cc	/^float Random::Rand<float>() {$/;"	f	class:webrtc::Random
Rand	webrtc/base/random.cc	/^int32_t Random::Rand(int32_t low, int32_t high) {$/;"	f	class:webrtc::Random
Rand	webrtc/base/random.cc	/^uint32_t Random::Rand(uint32_t low, uint32_t high) {$/;"	f	class:webrtc::Random
Rand	webrtc/base/random.cc	/^uint32_t Random::Rand(uint32_t t) {$/;"	f	class:webrtc::Random
Rand	webrtc/base/random.h	/^  T Rand() {$/;"	f	class:webrtc::Random
RandFloat	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  float RandFloat() {$/;"	f	class:webrtc::__anon181::RandomGenerator
RandInt	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  int RandInt(int max) {$/;"	f	class:webrtc::__anon181::RandomGenerator
RandInt	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  int RandInt(int min, int max) {$/;"	f	class:webrtc::__anon181::RandomGenerator
Random	webrtc/base/random.cc	/^Random::Random(uint64_t seed) {$/;"	f	class:webrtc::Random
Random	webrtc/base/random.h	/^class Random {$/;"	c	namespace:webrtc
Random	webrtc/base/virtualsocketserver.cc	/^static double Random() {$/;"	f	namespace:rtc
RandomGenerator	webrtc/base/helpers.cc	/^class RandomGenerator {$/;"	c	namespace:rtc	file:
RandomGenerator	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  RandomGenerator() : rand_gen_(42U) {}$/;"	f	class:webrtc::__anon181::RandomGenerator
RandomGenerator	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^class RandomGenerator {$/;"	c	namespace:webrtc::__anon181	file:
RandomStressTest	webrtc/common_audio/ring_buffer_unittest.cc	/^static void RandomStressTest(int** data_ptr) {$/;"	f	namespace:webrtc
RandomTest	webrtc/base/helpers_unittest.cc	/^class RandomTest : public testing::Test {};$/;"	c	namespace:rtc	file:
RangeCheck	webrtc/base/safe_conversions_impl.h	/^inline RangeCheckResult RangeCheck(Src value) {$/;"	f	namespace:rtc::internal
RangeCheckImpl	webrtc/base/safe_conversions_impl.h	/^struct RangeCheckImpl {};$/;"	s	namespace:rtc::internal
RangeCheckImpl	webrtc/base/safe_conversions_impl.h	/^struct RangeCheckImpl<Dst, Src, DST_SIGNED, SRC_SIGNED, OVERLAPS_RANGE> {$/;"	s	namespace:rtc::internal
RangeCheckImpl	webrtc/base/safe_conversions_impl.h	/^struct RangeCheckImpl<Dst, Src, DST_SIGNED, SRC_UNSIGNED, OVERLAPS_RANGE> {$/;"	s	namespace:rtc::internal
RangeCheckImpl	webrtc/base/safe_conversions_impl.h	/^struct RangeCheckImpl<Dst, Src, DST_UNSIGNED, SRC_SIGNED, OVERLAPS_RANGE> {$/;"	s	namespace:rtc::internal
RangeCheckImpl	webrtc/base/safe_conversions_impl.h	/^struct RangeCheckImpl<Dst, Src, DST_UNSIGNED, SRC_UNSIGNED, OVERLAPS_RANGE> {$/;"	s	namespace:rtc::internal
RangeCheckImpl	webrtc/base/safe_conversions_impl.h	/^struct RangeCheckImpl<Dst, Src, IsDstSigned, IsSrcSigned, CONTAINS_RANGE> {$/;"	s	namespace:rtc::internal
RangeCheckResult	webrtc/base/safe_conversions_impl.h	/^enum RangeCheckResult {$/;"	g	namespace:rtc::internal
Rate	webrtc/base/rate_statistics.cc	/^rtc::Optional<uint32_t> RateStatistics::Rate(int64_t now_ms) const {$/;"	f	class:webrtc::RateStatistics
RateLimitTest	webrtc/base/rate_limiter_unittest.cc	/^  RateLimitTest()$/;"	f	class:webrtc::RateLimitTest
RateLimitTest	webrtc/base/rate_limiter_unittest.cc	/^class RateLimitTest : public ::testing::Test {$/;"	c	namespace:webrtc	file:
RateLimiter	webrtc/base/rate_limiter.cc	/^RateLimiter::RateLimiter(Clock* clock, int64_t max_window_ms)$/;"	f	class:webrtc::RateLimiter
RateLimiter	webrtc/base/rate_limiter.h	/^class RateLimiter {$/;"	c	namespace:webrtc
RateLimiter	webrtc/base/ratelimiter.h	/^  RateLimiter(size_t max, double period)$/;"	f	class:rtc::RateLimiter
RateLimiter	webrtc/base/ratelimiter.h	/^class RateLimiter {$/;"	c	namespace:rtc
RateModel	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^} RateModel;$/;"	t	typeref:struct:__anon132
RateStatistics	webrtc/base/rate_statistics.cc	/^RateStatistics::RateStatistics(int64_t window_size_ms, float scale)$/;"	f	class:webrtc::RateStatistics
RateStatistics	webrtc/base/rate_statistics.h	/^class RateStatistics {$/;"	c	namespace:webrtc
RateStatisticsTest	webrtc/base/rate_statistics_unittest.cc	/^  RateStatisticsTest() : stats_(kWindowMs, 8000) {}$/;"	f	class:__anon48::RateStatisticsTest
RateStatisticsTest	webrtc/base/rate_statistics_unittest.cc	/^class RateStatisticsTest : public ::testing::Test {$/;"	c	namespace:__anon48	file:
RateTracker	webrtc/base/ratetracker.cc	/^RateTracker::RateTracker(int64_t bucket_milliseconds, size_t bucket_count)$/;"	f	class:rtc::RateTracker
RateTracker	webrtc/base/ratetracker.h	/^class RateTracker {$/;"	c	namespace:rtc
RateTrackerForTest	webrtc/base/ratetracker_unittest.cc	/^  RateTrackerForTest() : RateTracker(kBucketIntervalMs, 10u), time_(0) {}$/;"	f	class:rtc::RateTrackerForTest
RateTrackerForTest	webrtc/base/ratetracker_unittest.cc	/^class RateTrackerForTest : public RateTracker {$/;"	c	namespace:rtc	file:
RawFile	webrtc/modules/audio_processing/test/test_utils.cc	/^RawFile::RawFile(const std::string& filename)$/;"	f	class:webrtc::RawFile
RawFileCloseFunctor	webrtc/modules/audio_processing/logging/apm_data_dumper.h	/^struct RawFileCloseFunctor {$/;"	s	namespace:webrtc
RawVideoType	webrtc/common_types.h	/^enum RawVideoType {$/;"	g	namespace:webrtc
ReInit	webrtc/modules/audio_processing/aec/aec_core.cc	/^void BlockBuffer::ReInit() {$/;"	f	class:webrtc::BlockBuffer
Read	webrtc/base/file_posix.cc	/^size_t File::Read(uint8_t* buffer, size_t length) {$/;"	f	class:rtc::File
Read	webrtc/base/file_win.cc	/^size_t File::Read(uint8_t* buffer, size_t length) {$/;"	f	class:rtc::File
Read	webrtc/base/filerotatingstream.cc	/^StreamResult FileRotatingStream::Read(void* buffer,$/;"	f	class:rtc::FileRotatingStream
Read	webrtc/base/fileutils_mock.h	/^    virtual StreamResult Read(void* buffer, size_t buffer_len,$/;"	f	class:rtc::FakeFileStream
Read	webrtc/base/opensslstreamadapter.cc	/^StreamResult OpenSSLStreamAdapter::Read(void* data, size_t data_len,$/;"	f	class:rtc::OpenSSLStreamAdapter
Read	webrtc/base/proxyserver.cc	/^void ProxyBinding::Read(AsyncSocket* socket, FifoBuffer* buffer) {$/;"	f	class:rtc::ProxyBinding
Read	webrtc/base/socketstream.cc	/^StreamResult SocketStream::Read(void* buffer, size_t buffer_len,$/;"	f	class:rtc::SocketStream
Read	webrtc/base/stream.cc	/^StreamResult FifoBuffer::Read(void* buffer, size_t bytes,$/;"	f	class:rtc::FifoBuffer
Read	webrtc/base/stream.cc	/^StreamResult FileStream::Read(void* buffer, size_t buffer_len,$/;"	f	class:rtc::FileStream
Read	webrtc/base/stream.cc	/^StreamResult LoggingAdapter::Read(void* buffer, size_t buffer_len,$/;"	f	class:rtc::LoggingAdapter
Read	webrtc/base/stream.cc	/^StreamResult MemoryStreamBase::Read(void* buffer, size_t bytes,$/;"	f	class:rtc::MemoryStreamBase
Read	webrtc/base/stream.cc	/^StreamResult NullStream::Read(void* buffer, size_t buffer_len,$/;"	f	class:rtc::NullStream
Read	webrtc/base/stream.cc	/^StreamResult StreamAdapterInterface::Read(void* buffer,$/;"	f	class:rtc::StreamAdapterInterface
Read	webrtc/base/stream.cc	/^StreamResult StreamTap::Read(void* buffer, size_t buffer_len,$/;"	f	class:rtc::StreamTap
Read	webrtc/base/stream.cc	/^StreamResult StringStream::Read(void* buffer, size_t buffer_len,$/;"	f	class:rtc::StringStream
Read	webrtc/base/stream_unittest.cc	/^  virtual StreamResult Read(void* buffer, size_t buffer_len,$/;"	f	class:rtc::TestStream
Read	webrtc/base/testutils.h	/^  virtual StreamResult Read(void* buffer, size_t buffer_len,$/;"	f	class:testing::StreamSource
Read	webrtc/base/transformadapter.cc	/^TransformAdapter::Read(void * buffer, size_t buffer_len,$/;"	f	class:rtc::TransformAdapter
Read	webrtc/common_audio/audio_ring_buffer.cc	/^void AudioRingBuffer::Read(float* const* data, size_t channels, size_t frames) {$/;"	f	class:webrtc::AudioRingBuffer
Read	webrtc/common_audio/wav_file.cc	/^  virtual size_t Read(void* buf, size_t num_bytes) {$/;"	f	class:webrtc::ReadableWavFile
Read	webrtc/common_audio/wav_header_unittest.cc	/^  virtual size_t Read(void* buf, size_t num_bytes) {$/;"	f	class:webrtc::ReadableWavBuffer
Read	webrtc/modules/audio_processing/test/test_utils.cc	/^bool ChannelBufferWavReader::Read(ChannelBuffer<float>* buffer) {$/;"	f	class:webrtc::ChannelBufferWavReader
Read	webrtc/system_wrappers/source/file_impl.cc	/^int FileWrapper::Read(void* buf, size_t length) {$/;"	f	class:webrtc::FileWrapper
ReadAll	webrtc/base/stream.cc	/^StreamResult StreamInterface::ReadAll(void* buffer, size_t buffer_len,$/;"	f	class:rtc::StreamInterface
ReadAndDeinterleave	webrtc/modules/audio_processing/test/debug_dump_test.cc	/^void DebugDumpGenerator::ReadAndDeinterleave(ResampleInputAudioFile* audio,$/;"	f	class:webrtc::test::__anon223::DebugDumpGenerator
ReadAndWriteTest	webrtc/common_audio/audio_ring_buffer_unittest.cc	/^void ReadAndWriteTest(const ChannelBuffer<float>& input,$/;"	f	namespace:webrtc
ReadAt	webrtc/base/file_posix.cc	/^size_t File::ReadAt(uint8_t* buffer, size_t length, size_t offset) {$/;"	f	class:rtc::File
ReadAt	webrtc/base/file_win.cc	/^size_t File::ReadAt(uint8_t* buffer, size_t length, size_t offset) {$/;"	f	class:rtc::File
ReadBits	webrtc/base/bitbuffer.cc	/^bool BitBuffer::ReadBits(uint32_t* val, size_t bit_count) {$/;"	f	class:rtc::BitBuffer
ReadBuffers	webrtc/modules/audio_processing/transient/transient_suppression_test.cc	/^bool ReadBuffers(FILE* in_file,$/;"	f	namespace:webrtc
ReadBytes	webrtc/base/bytebuffer.cc	/^bool ByteBufferReader::ReadBytes(char* val, size_t len) {$/;"	f	class:rtc::ByteBufferReader
ReadCacheBody	webrtc/base/httpclient.cc	/^HttpError HttpClient::ReadCacheBody(const std::string& id) {$/;"	f	class:rtc::HttpClient
ReadCacheHeaders	webrtc/base/httpclient.cc	/^HttpError HttpClient::ReadCacheHeaders(const std::string& id, bool override) {$/;"	f	class:rtc::HttpClient
ReadChunk	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^bool ReadChunk(FILE* file, int16_t* int_data, float* float_data,$/;"	f	namespace:webrtc::__anon183
ReadCpuMaxFreq	webrtc/base/linux.cc	/^int ReadCpuMaxFreq() {$/;"	f	namespace:rtc
ReadData	webrtc/base/testutils.h	/^  std::string ReadData() {$/;"	f	class:testing::SocketTestClient
ReadData	webrtc/base/testutils.h	/^  std::string ReadData() {$/;"	f	class:testing::StreamSource
ReadDocumentStreamData	webrtc/base/httpbase_unittest.cc	/^void HttpBaseTest::ReadDocumentStreamData(const char* expected_data) {$/;"	f	class:rtc::HttpBaseTest
ReadDoubleBufferFromFile	webrtc/modules/audio_processing/transient/file_utils.cc	/^size_t ReadDoubleBufferFromFile(FileWrapper* file,$/;"	f	namespace:webrtc
ReadExponentialGolomb	webrtc/base/bitbuffer.cc	/^bool BitBuffer::ReadExponentialGolomb(uint32_t* val) {$/;"	f	class:rtc::BitBuffer
ReadFirefoxPrefs	webrtc/base/proxydetect.cc	/^bool ReadFirefoxPrefs(const Pathname& filename,$/;"	f	namespace:rtc
ReadFloatBufferFromFile	webrtc/modules/audio_processing/transient/file_utils.cc	/^size_t ReadFloatBufferFromFile(FileWrapper* file,$/;"	f	namespace:webrtc
ReadFloatSamplesFromStereoFile	webrtc/modules/audio_processing/test/bitexactness_tools.cc	/^void ReadFloatSamplesFromStereoFile(size_t samples_per_channel,$/;"	f	namespace:webrtc::test
ReadFourCC	webrtc/common_audio/wav_header.cc	/^static inline std::string ReadFourCC(uint32_t x) {$/;"	f	namespace:webrtc
ReadFrame	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^bool ApmTest::ReadFrame(FILE* file, AudioFrame* frame) {$/;"	f	class:webrtc::__anon183::ApmTest
ReadFrame	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^bool ApmTest::ReadFrame(FILE* file, AudioFrame* frame,$/;"	f	class:webrtc::__anon183::ApmTest
ReadFrameWithRewind	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^void ApmTest::ReadFrameWithRewind(FILE* file, AudioFrame* frame) {$/;"	f	class:webrtc::__anon183::ApmTest
ReadFrameWithRewind	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^void ApmTest::ReadFrameWithRewind(FILE* file, AudioFrame* frame,$/;"	f	class:webrtc::__anon183::ApmTest
ReadFramesAvailable	webrtc/common_audio/audio_ring_buffer.cc	/^size_t AudioRingBuffer::ReadFramesAvailable() const {$/;"	f	class:webrtc::AudioRingBuffer
ReadFront	webrtc/base/bufferqueue.cc	/^bool BufferQueue::ReadFront(void* buffer, size_t bytes, size_t* bytes_read) {$/;"	f	class:rtc::BufferQueue
ReadInt16BufferFromFile	webrtc/modules/audio_processing/transient/file_utils.cc	/^size_t ReadInt16BufferFromFile(FileWrapper* file,$/;"	f	namespace:webrtc
ReadInt16FromFileToDoubleBuffer	webrtc/modules/audio_processing/transient/file_utils.cc	/^size_t ReadInt16FromFileToDoubleBuffer(FileWrapper* file,$/;"	f	namespace:webrtc
ReadInt16FromFileToFloatBuffer	webrtc/modules/audio_processing/transient/file_utils.cc	/^size_t ReadInt16FromFileToFloatBuffer(FileWrapper* file,$/;"	f	namespace:webrtc
ReadLE16	webrtc/common_audio/wav_header.cc	/^static inline uint16_t ReadLE16(uint16_t x) { return x; }$/;"	f	namespace:webrtc
ReadLE32	webrtc/common_audio/wav_header.cc	/^static inline uint32_t ReadLE32(uint32_t x) { return x; }$/;"	f	namespace:webrtc
ReadLine	webrtc/base/stream.cc	/^StreamResult StreamInterface::ReadLine(std::string* line) {$/;"	f	class:rtc::StreamInterface
ReadLinuxUname	webrtc/base/linux.cc	/^std::string ReadLinuxUname() {$/;"	f	namespace:rtc
ReadLockScoped	webrtc/system_wrappers/include/rw_lock_wrapper.h	/^class SCOPED_LOCKABLE ReadLockScoped {$/;"	c	namespace:webrtc
ReadMessageBytesFromFile	webrtc/modules/audio_processing/test/protobuf_utils.cc	/^size_t ReadMessageBytesFromFile(FILE* file, std::unique_ptr<uint8_t[]>* bytes) {$/;"	f	namespace:webrtc
ReadMessageFromFile	webrtc/modules/audio_processing/test/protobuf_utils.cc	/^bool ReadMessageFromFile(FILE* file, ::google::protobuf::MessageLite* msg) {$/;"	f	namespace:webrtc
ReadOffset	webrtc/base/stream.cc	/^StreamResult FifoBuffer::ReadOffset(void* buffer, size_t bytes,$/;"	f	class:rtc::FifoBuffer
ReadOffsetLocked	webrtc/base/stream.cc	/^StreamResult FifoBuffer::ReadOffsetLocked(void* buffer,$/;"	f	class:rtc::FifoBuffer
ReadProtected	webrtc/base/thread_annotations_unittest.cc	/^  void ReadProtected() {$/;"	f	class:__anon68::ThreadSafe
ReadResource	webrtc/base/diskcache.cc	/^StreamInterface* DiskCache::ReadResource(const std::string& id,$/;"	f	class:rtc::DiskCache
ReadSamples	webrtc/common_audio/wav_file.cc	/^size_t WavReader::ReadSamples(size_t num_samples, float* samples) {$/;"	f	class:webrtc::WavReader
ReadSamples	webrtc/common_audio/wav_file.cc	/^size_t WavReader::ReadSamples(size_t num_samples, int16_t* samples) {$/;"	f	class:webrtc::WavReader
ReadSignedExponentialGolomb	webrtc/base/bitbuffer.cc	/^bool BitBuffer::ReadSignedExponentialGolomb(int32_t* val) {$/;"	f	class:rtc::BitBuffer
ReadString	webrtc/base/bytebuffer.cc	/^bool ByteBufferReader::ReadString(std::string* val, size_t len) {$/;"	f	class:rtc::ByteBufferReader
ReadTask	webrtc/base/sharedexclusivelock_unittest.cc	/^  ReadTask(SharedExclusiveLock* shared_exclusive_lock, int* value, Event* done)$/;"	f	class:rtc::ReadTask
ReadTask	webrtc/base/sharedexclusivelock_unittest.cc	/^class ReadTask : public SharedExclusiveTask {$/;"	c	namespace:rtc	file:
ReadUInt16	webrtc/base/bitbuffer.cc	/^bool BitBuffer::ReadUInt16(uint16_t* val) {$/;"	f	class:rtc::BitBuffer
ReadUInt16	webrtc/base/bytebuffer.cc	/^bool ByteBufferReader::ReadUInt16(uint16_t* val) {$/;"	f	class:rtc::ByteBufferReader
ReadUInt24	webrtc/base/bytebuffer.cc	/^bool ByteBufferReader::ReadUInt24(uint32_t* val) {$/;"	f	class:rtc::ByteBufferReader
ReadUInt32	webrtc/base/bitbuffer.cc	/^bool BitBuffer::ReadUInt32(uint32_t* val) {$/;"	f	class:rtc::BitBuffer
ReadUInt32	webrtc/base/bytebuffer.cc	/^bool ByteBufferReader::ReadUInt32(uint32_t* val) {$/;"	f	class:rtc::ByteBufferReader
ReadUInt64	webrtc/base/bytebuffer.cc	/^bool ByteBufferReader::ReadUInt64(uint64_t* val) {$/;"	f	class:rtc::ByteBufferReader
ReadUInt8	webrtc/base/bitbuffer.cc	/^bool BitBuffer::ReadUInt8(uint8_t* val) {$/;"	f	class:rtc::BitBuffer
ReadUInt8	webrtc/base/bytebuffer.cc	/^bool ByteBufferReader::ReadUInt8(uint8_t* val) {$/;"	f	class:rtc::ByteBufferReader
ReadUVarint	webrtc/base/bytebuffer.cc	/^bool ByteBufferReader::ReadUVarint(uint64_t* val) {$/;"	f	class:rtc::ByteBufferReader
ReadWavHeader	webrtc/common_audio/wav_header.cc	/^bool ReadWavHeader(ReadableWav* readable,$/;"	f	namespace:webrtc
ReadableWav	webrtc/common_audio/wav_header.h	/^class ReadableWav {$/;"	c	namespace:webrtc
ReadableWavBuffer	webrtc/common_audio/wav_header_unittest.cc	/^  ReadableWavBuffer(const uint8_t* buf, size_t size)$/;"	f	class:webrtc::ReadableWavBuffer
ReadableWavBuffer	webrtc/common_audio/wav_header_unittest.cc	/^  ReadableWavBuffer(const uint8_t* buf, size_t size, bool check_read_size)$/;"	f	class:webrtc::ReadableWavBuffer
ReadableWavBuffer	webrtc/common_audio/wav_header_unittest.cc	/^class ReadableWavBuffer : public ReadableWav {$/;"	c	namespace:webrtc	file:
ReadableWavFile	webrtc/common_audio/wav_file.cc	/^  explicit ReadableWavFile(FILE* file) : file_(file) {}$/;"	f	class:webrtc::ReadableWavFile
ReadableWavFile	webrtc/common_audio/wav_file.cc	/^class ReadableWavFile : public ReadableWav {$/;"	c	namespace:webrtc	file:
ReadyToProcess	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^  bool ReadyToProcess() {$/;"	f	class:webrtc::__anon182::TimedThreadApiProcessor	file:
ReadyToProcessCapture	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^  bool ReadyToProcessCapture() {$/;"	f	class:webrtc::__anon182::TimedThreadApiProcessor	file:
ReadyToProcessRender	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^  bool ReadyToProcessRender() {$/;"	f	class:webrtc::__anon182::TimedThreadApiProcessor	file:
RealFFT	webrtc/common_audio/signal_processing/real_fft.c	/^struct RealFFT {$/;"	s	file:
RealFFTTest	webrtc/common_audio/signal_processing/real_fft_unittest.cc	/^   RealFFTTest() {$/;"	f	class:webrtc::__anon98::RealFFTTest
RealFFTTest	webrtc/common_audio/signal_processing/real_fft_unittest.cc	/^class RealFFTTest : public ::testing::Test {$/;"	c	namespace:webrtc::__anon98	file:
RealFourier	webrtc/common_audio/real_fourier.h	/^class RealFourier {$/;"	c	namespace:webrtc
RealFourierOoura	webrtc/common_audio/real_fourier_ooura.cc	/^RealFourierOoura::RealFourierOoura(int fft_order)$/;"	f	class:webrtc::RealFourierOoura
RealFourierOoura	webrtc/common_audio/real_fourier_ooura.h	/^class RealFourierOoura : public RealFourier {$/;"	c	namespace:webrtc
RealFourierOpenmax	webrtc/common_audio/real_fourier_openmax.cc	/^RealFourierOpenmax::RealFourierOpenmax(int fft_order)$/;"	f	class:webrtc::RealFourierOpenmax
RealFourierOpenmax	webrtc/common_audio/real_fourier_openmax.h	/^class RealFourierOpenmax : public RealFourier {$/;"	c	namespace:webrtc
RealFourierTest	webrtc/common_audio/real_fourier_unittest.cc	/^  RealFourierTest()$/;"	f	class:webrtc::RealFourierTest
RealFourierTest	webrtc/common_audio/real_fourier_unittest.cc	/^class RealFourierTest : public ::testing::Test {$/;"	c	namespace:webrtc	file:
RecalcNextTimeout	webrtc/base/taskrunner.cc	/^void TaskRunner::RecalcNextTimeout(Task *exclude_task) {$/;"	f	class:rtc::TaskRunner
ReceiveSends	webrtc/base/messagequeue.cc	/^void MessageQueue::ReceiveSends() {$/;"	f	class:rtc::MessageQueue
ReceiveSends	webrtc/base/thread.cc	/^void Thread::ReceiveSends() {$/;"	f	class:rtc::Thread
ReceiveSendsFromThread	webrtc/base/thread.cc	/^void Thread::ReceiveSendsFromThread(const Thread* source) {$/;"	f	class:rtc::Thread
Receiver	webrtc/base/virtualsocket_unittest.cc	/^  Receiver(Thread* th, AsyncSocket* s, uint32_t bw)$/;"	f	struct:Receiver
Receiver	webrtc/base/virtualsocket_unittest.cc	/^struct Receiver : public MessageHandler, public sigslot::has_slots<> {$/;"	s	file:
RecordSignal	webrtc/base/physicalsocketserver_unittest.cc	/^  static void RecordSignal(int signum) {$/;"	f	class:rtc::PosixSignalDeliveryTest
RecurseDeleteSubKey	webrtc/base/win32regkey.cc	/^HRESULT RegKey::RecurseDeleteSubKey(const wchar_t* key_name) {$/;"	f	class:rtc::RegKey
Recv	webrtc/base/asyncsocket.cc	/^int AsyncSocketAdapter::Recv(void* pv, size_t cb, int64_t* timestamp) {$/;"	f	class:rtc::AsyncSocketAdapter
Recv	webrtc/base/openssladapter.cc	/^int OpenSSLAdapter::Recv(void* pv, size_t cb, int64_t* timestamp) {$/;"	f	class:rtc::OpenSSLAdapter
Recv	webrtc/base/physicalsocketserver.cc	/^int PhysicalSocket::Recv(void* buffer, size_t length, int64_t* timestamp) {$/;"	f	class:rtc::PhysicalSocket
Recv	webrtc/base/socketadapters.cc	/^int BufferedReadAdapter::Recv(void* pv, size_t cb, int64_t* timestamp) {$/;"	f	class:rtc::BufferedReadAdapter
Recv	webrtc/base/socketadapters.cc	/^int LoggingSocketAdapter::Recv(void* pv, size_t cb, int64_t* timestamp) {$/;"	f	class:rtc::LoggingSocketAdapter
Recv	webrtc/base/virtualsocketserver.cc	/^int VirtualSocket::Recv(void* pv, size_t cb, int64_t* timestamp) {$/;"	f	class:rtc::VirtualSocket
Recv	webrtc/base/win32socketserver.cc	/^int Win32Socket::Recv(void* buffer, size_t length, int64_t* timestamp) {$/;"	f	class:rtc::Win32Socket
RecvBuffer	webrtc/base/virtualsocketserver.h	/^  typedef std::list<Packet*> RecvBuffer;$/;"	t	class:rtc::VirtualSocket
RecvFrom	webrtc/base/asyncsocket.cc	/^int AsyncSocketAdapter::RecvFrom(void* pv,$/;"	f	class:rtc::AsyncSocketAdapter
RecvFrom	webrtc/base/openssladapter.cc	/^int OpenSSLAdapter::RecvFrom(void* pv,$/;"	f	class:rtc::OpenSSLAdapter
RecvFrom	webrtc/base/physicalsocketserver.cc	/^int PhysicalSocket::RecvFrom(void* buffer,$/;"	f	class:rtc::PhysicalSocket
RecvFrom	webrtc/base/socketadapters.cc	/^int LoggingSocketAdapter::RecvFrom(void* pv,$/;"	f	class:rtc::LoggingSocketAdapter
RecvFrom	webrtc/base/virtualsocketserver.cc	/^int VirtualSocket::RecvFrom(void* pv,$/;"	f	class:rtc::VirtualSocket
RecvFrom	webrtc/base/win32socketserver.cc	/^int Win32Socket::RecvFrom(void* buffer,$/;"	f	class:rtc::Win32Socket
RedirectAction	webrtc/base/httpclient.h	/^  enum RedirectAction { REDIRECT_DEFAULT, REDIRECT_ALWAYS, REDIRECT_NEVER };$/;"	g	class:rtc::HttpClient
Ref	webrtc/base/bind_unittest.cc	/^const int* Ref(const int& a) { return &a; }$/;"	f	namespace:rtc::__anon5
RefArgument	webrtc/base/bind_unittest.cc	/^  void RefArgument(const scoped_refptr<LifeTimeCheck>& object) {$/;"	f	struct:rtc::__anon4::MethodBindTester
RefClass	webrtc/base/refcountedobject_unittest.cc	/^  RefClass() {}$/;"	f	class:rtc::__anon50::RefClass
RefClass	webrtc/base/refcountedobject_unittest.cc	/^class RefClass : public RefCountInterface {$/;"	c	namespace:rtc::__anon50	file:
RefClassWithMixedValues	webrtc/base/refcountedobject_unittest.cc	/^  RefClassWithMixedValues(std::unique_ptr<A> a, int b, const std::string& c)$/;"	f	class:rtc::__anon50::RefClassWithMixedValues
RefClassWithMixedValues	webrtc/base/refcountedobject_unittest.cc	/^class RefClassWithMixedValues : public RefCountInterface {$/;"	c	namespace:rtc::__anon50	file:
RefClassWithRvalue	webrtc/base/refcountedobject_unittest.cc	/^  explicit RefClassWithRvalue(std::unique_ptr<A> a) : a_(std::move(a)) {}$/;"	f	class:rtc::__anon50::RefClassWithRvalue
RefClassWithRvalue	webrtc/base/refcountedobject_unittest.cc	/^class RefClassWithRvalue : public RefCountInterface {$/;"	c	namespace:rtc::__anon50	file:
RefCount	webrtc/base/callback_unittest.cc	/^  int RefCount() const { return count_; }$/;"	f	class:rtc::__anon8::RefCountedBindTester
RefCountInterface	webrtc/base/refcount.h	/^class RefCountInterface {$/;"	c	namespace:rtc
RefCountedBindTester	webrtc/base/callback_unittest.cc	/^  RefCountedBindTester() : count_(0) {}$/;"	f	class:rtc::__anon8::RefCountedBindTester
RefCountedBindTester	webrtc/base/callback_unittest.cc	/^class RefCountedBindTester : public RefCountInterface {$/;"	c	namespace:rtc::__anon8	file:
RefCountedModule	webrtc/modules/include/module.h	/^class RefCountedModule : public Module {$/;"	c	namespace:webrtc
RefCountedObject	webrtc/base/refcountedobject.h	/^  RefCountedObject() {}$/;"	f	class:rtc::RefCountedObject
RefCountedObject	webrtc/base/refcountedobject.h	/^  RefCountedObject(P0&& p0, P1&& p1, Args&&... args)$/;"	f	class:rtc::RefCountedObject
RefCountedObject	webrtc/base/refcountedobject.h	/^  explicit RefCountedObject(P0&& p0) : T(std::forward<P0>(p0)) {}$/;"	f	class:rtc::RefCountedObject
RefCountedObject	webrtc/base/refcountedobject.h	/^class RefCountedObject : public T {$/;"	c	namespace:rtc
ReferenceDetectionValue	webrtc/modules/audio_processing/transient/transient_detector.cc	/^float TransientDetector::ReferenceDetectionValue(const float* data,$/;"	f	class:webrtc::TransientDetector
RefinedAdaptiveFilter	webrtc/modules/audio_processing/include/audio_processing.h	/^  RefinedAdaptiveFilter() : enabled(false) {}$/;"	f	struct:webrtc::RefinedAdaptiveFilter
RefinedAdaptiveFilter	webrtc/modules/audio_processing/include/audio_processing.h	/^  explicit RefinedAdaptiveFilter(bool enabled) : enabled(enabled) {}$/;"	f	struct:webrtc::RefinedAdaptiveFilter
RefinedAdaptiveFilter	webrtc/modules/audio_processing/include/audio_processing.h	/^struct RefinedAdaptiveFilter {$/;"	s	namespace:webrtc
RefreshF	webrtc/common_audio/channel_buffer.cc	/^void IFChannelBuffer::RefreshF() const {$/;"	f	class:webrtc::IFChannelBuffer
RefreshI	webrtc/common_audio/channel_buffer.cc	/^void IFChannelBuffer::RefreshI() const {$/;"	f	class:webrtc::IFChannelBuffer
RegKey	webrtc/base/win32regkey.cc	/^RegKey::RegKey() {$/;"	f	class:rtc::RegKey
RegKey	webrtc/base/win32regkey.h	/^class RegKey {$/;"	c	namespace:rtc
RegKeyHelperFunctionsTest	webrtc/base/win32regkey_unittest.cc	/^void RegKeyHelperFunctionsTest() {$/;"	f	namespace:rtc
RegKeyNonStaticFunctionsTest	webrtc/base/win32regkey_unittest.cc	/^void RegKeyNonStaticFunctionsTest() {$/;"	f	namespace:rtc
RegKeyStaticFunctionsTest	webrtc/base/win32regkey_unittest.cc	/^void RegKeyStaticFunctionsTest() {$/;"	f	namespace:rtc
Register	webrtc/base/flags.cc	/^void FlagList::Register(Flag* flag) {$/;"	f	class:rtc::FlagList
RegisterAllFilters	webrtc/base/dbus.cc	/^  void RegisterAllFilters() {$/;"	f	class:rtc::DBusMonitor::DBusMonitoringThread	file:
RegressorPower	webrtc/modules/audio_processing/aec/aec_core.cc	/^static void RegressorPower(int num_partitions,$/;"	f	namespace:webrtc
Release	webrtc/base/bind_unittest.cc	/^  void Release() { --ref_count_; }$/;"	f	struct:rtc::__anon4::LifeTimeCheck
Release	webrtc/base/race_checker.cc	/^void RaceChecker::Release() const {$/;"	f	class:rtc::RaceChecker
Release	webrtc/base/refcountedobject.h	/^  virtual int Release() const {$/;"	f	class:rtc::RefCountedObject
Release	webrtc/base/signalthread.cc	/^void SignalThread::Release() {$/;"	f	class:rtc::SignalThread
Release	webrtc/base/stream.h	/^    void Release() {$/;"	f	class:rtc::StreamReference::StreamRefCount
ReleaseDBusGlibSymbol	webrtc/base/dbus.cc	/^static void ReleaseDBusGlibSymbol() {$/;"	f	namespace:rtc
ReleaseFactory	webrtc/base/networkmonitor.cc	/^void NetworkMonitorFactory::ReleaseFactory(NetworkMonitorFactory* factory) {$/;"	f	class:rtc::NetworkMonitorFactory
ReleaseIfAddrs	webrtc/base/network_unittest.cc	/^  void ReleaseIfAddrs(struct ifaddrs* list) {$/;"	f	class:rtc::NetworkTest
ReleaseResource	webrtc/base/diskcache.cc	/^void DiskCache::ReleaseResource(const std::string& id, size_t index) const {$/;"	f	class:rtc::DiskCache
ReleaseStore	webrtc/base/atomicops.h	/^  static void ReleaseStore(volatile int* i, int value) {$/;"	f	class:rtc::AtomicOps
RemainingBitCount	webrtc/base/bitbuffer.cc	/^uint64_t BitBuffer::RemainingBitCount() const {$/;"	f	class:rtc::BitBuffer
Remove	webrtc/base/httpserver.cc	/^HttpServer::Remove(int connection_id) {$/;"	f	class:rtc::HttpServer
Remove	webrtc/base/messagequeue.cc	/^void MessageQueueManager::Remove(MessageQueue *message_queue) {$/;"	f	class:rtc::MessageQueueManager
Remove	webrtc/base/natsocketfactory.cc	/^void NATSocketServer::TranslatorMap::Remove($/;"	f	class:rtc::NATSocketServer::TranslatorMap
Remove	webrtc/base/physicalsocketserver.cc	/^void PhysicalSocketServer::Remove(Dispatcher *pdispatcher) {$/;"	f	class:rtc::PhysicalSocketServer
Remove	webrtc/base/scopedptrcollection.h	/^  void Remove(T* t) {$/;"	f	class:rtc::ScopedPtrCollection
RemoveClient	webrtc/base/natsocketfactory.cc	/^void NATSocketServer::Translator::RemoveClient($/;"	f	class:rtc::NATSocketServer::Translator
RemoveConnection	webrtc/base/virtualsocketserver.cc	/^void VirtualSocketServer::RemoveConnection(const SocketAddress& local,$/;"	f	class:rtc::VirtualSocketServer
RemoveDcLevel	webrtc/modules/audio_processing/level_controller/signal_classifier.cc	/^void RemoveDcLevel(rtc::ArrayView<float> x) {$/;"	f	namespace:webrtc::__anon213
RemoveFile	webrtc/base/platform_file.cc	/^bool RemoveFile(const std::string& path) {$/;"	f	namespace:rtc
RemoveInterface	webrtc/base/fakenetwork.h	/^  void RemoveInterface(const SocketAddress& iface) {$/;"	f	class:rtc::FakeNetworkManager
RemoveInternal	webrtc/base/messagequeue.cc	/^void MessageQueueManager::RemoveInternal(MessageQueue *message_queue) {$/;"	f	class:rtc::MessageQueueManager
RemoveLogToStream	webrtc/base/logging.cc	/^void LogMessage::RemoveLogToStream(LogSink* stream) {$/;"	f	class:rtc::LogMessage
RemoveMean	webrtc/modules/audio_processing/vad/gmm.cc	/^static void RemoveMean(const double* in,$/;"	f	namespace:webrtc
RemoveOldestEntryAndUpdate	webrtc/modules/audio_processing/agc/loudness_histogram.cc	/^void LoudnessHistogram::RemoveOldestEntryAndUpdate() {$/;"	f	class:webrtc::LoudnessHistogram
RemoveServer	webrtc/base/firewallsocketserver.cc	/^void FirewallManager::RemoveServer(FirewallSocketServer* server) {$/;"	f	class:rtc::FirewallManager
RemoveTransient	webrtc/modules/audio_processing/agc/loudness_histogram.cc	/^void LoudnessHistogram::RemoveTransient() {$/;"	f	class:webrtc::LoudnessHistogram
RemoveTransient	webrtc/modules/audio_processing/vad/vad_circular_buffer.cc	/^int VadCircularBuffer::RemoveTransient(int width_threshold,$/;"	f	class:webrtc::VadCircularBuffer
RemoveTranslator	webrtc/base/natsocketfactory.cc	/^void NATSocketServer::RemoveTranslator($/;"	f	class:rtc::NATSocketServer
RemoveTranslator	webrtc/base/natsocketfactory.cc	/^void NATSocketServer::Translator::RemoveTranslator($/;"	f	class:rtc::NATSocketServer::Translator
RemoveValue	webrtc/base/optionsfile.cc	/^bool OptionsFile::RemoveValue(const std::string& option) {$/;"	f	class:rtc::OptionsFile
RenderAndCapture	webrtc/modules/audio_processing/aec/system_delay_unittest.cc	/^void SystemDelayTest::RenderAndCapture(int device_buffer_ms) {$/;"	f	class:webrtc::__anon162::SystemDelayTest
RenderApiImpl	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^enum class RenderApiImpl {$/;"	c	namespace:webrtc::__anon181	file:
RenderMinusCaptureCounters	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  int RenderMinusCaptureCounters() const {$/;"	f	class:webrtc::__anon181::FrameCounters
RenderMinusCaptureCounters	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^  int RenderMinusCaptureCounters() const {$/;"	f	class:webrtc::__anon182::FrameCounters
RenderMultiBandProcessingActive	webrtc/modules/audio_processing/audio_processing_impl.cc	/^bool AudioProcessingImpl::ApmSubmoduleStates::RenderMultiBandProcessingActive()$/;"	f	class:webrtc::AudioProcessingImpl::ApmSubmoduleStates
RenderMultiBandSubModulesActive	webrtc/modules/audio_processing/audio_processing_impl.cc	/^bool AudioProcessingImpl::ApmSubmoduleStates::RenderMultiBandSubModulesActive()$/;"	f	class:webrtc::AudioProcessingImpl::ApmSubmoduleStates
RenderProcessor	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^RenderProcessor::RenderProcessor(int max_frame_size,$/;"	f	class:webrtc::__anon181::RenderProcessor
RenderProcessor	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^class RenderProcessor {$/;"	c	namespace:webrtc::__anon181	file:
RenderProcessorThreadFunc	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  static bool RenderProcessorThreadFunc(void* context) {$/;"	f	class:webrtc::__anon181::AudioProcessingImplLockTest	file:
RenderProcessorThreadFunc	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^  static bool RenderProcessorThreadFunc(void* context) {$/;"	f	class:webrtc::__anon182::CallSimulator	file:
RenderQueueItemVerifier	webrtc/modules/audio_processing/render_queue_item_verifier.h	/^  explicit RenderQueueItemVerifier(size_t minimum_capacity)$/;"	f	class:webrtc::RenderQueueItemVerifier
RenderQueueItemVerifier	webrtc/modules/audio_processing/render_queue_item_verifier.h	/^class RenderQueueItemVerifier {$/;"	c	namespace:webrtc
ReplySize	webrtc/base/winping.cc	/^inline uint32_t ReplySize(uint32_t data_size, int family) {$/;"	f	namespace:rtc
ReplyTaskDone	webrtc/base/task_queue_libevent.cc	/^void TaskQueue::ReplyTaskDone(PostAndReplyTask* reply_task) {$/;"	f	class:rtc::TaskQueue
ReportConditionalErrorAndExit	webrtc/modules/audio_processing/test/audioproc_float.cc	/^void ReportConditionalErrorAndExit(bool condition, std::string message) {$/;"	f	namespace:webrtc::test::__anon221
ReportWSAError	webrtc/base/win32socketserver.cc	/^void ReportWSAError(LPCSTR context, int error, const SocketAddress& address) {$/;"	f	namespace:rtc
ReportWSAError	webrtc/base/win32socketserver.cc	/^void ReportWSAError(LPCSTR context, int error, const SocketAddress& address) {}$/;"	f	namespace:rtc
RequestConnectedStream	webrtc/base/socketpool.cc	/^NewSocketPool::RequestConnectedStream(const SocketAddress& remote, int* err) {$/;"	f	class:rtc::NewSocketPool
RequestConnectedStream	webrtc/base/socketpool.cc	/^ReuseSocketPool::RequestConnectedStream(const SocketAddress& remote, int* err) {$/;"	f	class:rtc::ReuseSocketPool
RequestConnectedStream	webrtc/base/socketpool.cc	/^StreamInterface* LoggingPoolAdapter::RequestConnectedStream($/;"	f	class:rtc::LoggingPoolAdapter
RequestConnectedStream	webrtc/base/socketpool.cc	/^StreamInterface* StreamCache::RequestConnectedStream($/;"	f	class:rtc::StreamCache
Resample	webrtc/base/virtualsocketserver.cc	/^VirtualSocketServer::Function* VirtualSocketServer::Resample(Function* f,$/;"	f	class:rtc::VirtualSocketServer
Resample	webrtc/common_audio/resampler/push_resampler.cc	/^int PushResampler<T>::Resample(const T* src, size_t src_length, T* dst,$/;"	f	class:webrtc::PushResampler
Resample	webrtc/common_audio/resampler/push_sinc_resampler.cc	/^size_t PushSincResampler::Resample(const float* source,$/;"	f	class:webrtc::PushSincResampler
Resample	webrtc/common_audio/resampler/push_sinc_resampler.cc	/^size_t PushSincResampler::Resample(const int16_t* source,$/;"	f	class:webrtc::PushSincResampler
Resample	webrtc/common_audio/resampler/sinc_resampler.cc	/^void SincResampler::Resample(size_t frames, float* destination) {$/;"	f	class:webrtc::SincResampler
ResampleBenchmarkTest	webrtc/common_audio/resampler/push_sinc_resampler_unittest.cc	/^void PushSincResamplerTest::ResampleBenchmarkTest(bool int_format) {$/;"	f	class:webrtc::PushSincResamplerTest
ResampleConverter	webrtc/common_audio/audio_converter.cc	/^  ResampleConverter(size_t src_channels, size_t src_frames, size_t dst_channels,$/;"	f	class:webrtc::ResampleConverter
ResampleConverter	webrtc/common_audio/audio_converter.cc	/^class ResampleConverter : public AudioConverter {$/;"	c	namespace:webrtc	file:
ResampleTest	webrtc/common_audio/resampler/push_sinc_resampler_unittest.cc	/^void PushSincResamplerTest::ResampleTest(bool int_format) {$/;"	f	class:webrtc::PushSincResamplerTest
Resampler	webrtc/common_audio/resampler/include/resampler.h	/^class Resampler$/;"	c	namespace:webrtc
Resampler	webrtc/common_audio/resampler/resampler.cc	/^Resampler::Resampler()$/;"	f	class:webrtc::Resampler
Resampler	webrtc/common_audio/resampler/resampler.cc	/^Resampler::Resampler(int inFreq, int outFreq, size_t num_channels)$/;"	f	class:webrtc::Resampler
ResamplerMode	webrtc/common_audio/resampler/include/resampler.h	/^    enum ResamplerMode$/;"	g	class:webrtc::Resampler
ResamplerTest	webrtc/common_audio/resampler/resampler_unittest.cc	/^ResamplerTest::ResamplerTest() {}$/;"	f	class:webrtc::__anon86::ResamplerTest
ResamplerTest	webrtc/common_audio/resampler/resampler_unittest.cc	/^class ResamplerTest : public testing::Test {$/;"	c	namespace:webrtc::__anon86	file:
Reserve	webrtc/base/scopedptrcollection.h	/^  void Reserve(size_t size) {$/;"	f	class:rtc::ScopedPtrCollection
ReserveSize	webrtc/base/stream.cc	/^bool FileStream::ReserveSize(size_t size) {$/;"	f	class:rtc::FileStream
ReserveSize	webrtc/base/stream.cc	/^bool MemoryStreamBase::ReserveSize(size_t size) {$/;"	f	class:rtc::MemoryStreamBase
ReserveSize	webrtc/base/stream.cc	/^bool StreamAdapterInterface::ReserveSize(size_t size) {$/;"	f	class:rtc::StreamAdapterInterface
ReserveSize	webrtc/base/stream.cc	/^bool StreamInterface::ReserveSize(size_t size) {$/;"	f	class:rtc::StreamInterface
ReserveSize	webrtc/base/stream.cc	/^bool StringStream::ReserveSize(size_t size) {$/;"	f	class:rtc::StringStream
ReserveSize	webrtc/base/transformadapter.cc	/^bool TransformAdapter::ReserveSize(size_t size) {$/;"	f	class:rtc::TransformAdapter
ReserveWriteBuffer	webrtc/base/bytebuffer.cc	/^char* ByteBufferWriter::ReserveWriteBuffer(size_t len) {$/;"	f	class:rtc::ByteBufferWriter
Reserved	webrtc/base/winping.cc	/^    USHORT  Reserved;           \/\/ Reserved for system use$/;"	m	struct:rtc::icmp_echo_reply	file:
Reset	webrtc/base/event.cc	/^void Event::Reset() {$/;"	f	class:rtc::Event
Reset	webrtc/base/event_tracer_unittest.cc	/^  void Reset() {$/;"	f	class:__anon13::TestStatistics
Reset	webrtc/base/exp_filter.cc	/^void ExpFilter::Reset(float alpha) {$/;"	f	class:rtc::ExpFilter
Reset	webrtc/base/rate_statistics.cc	/^void RateStatistics::Reset() {$/;"	f	class:webrtc::RateStatistics
Reset	webrtc/base/rollingaccumulator.h	/^  void Reset() {$/;"	f	class:rtc::RollingAccumulator
Reset	webrtc/common_audio/resampler/resampler.cc	/^int Resampler::Reset(int inFreq, int outFreq, size_t num_channels)$/;"	f	class:webrtc::Resampler
Reset	webrtc/modules/audio_processing/aec/aec_core.cc	/^void DivergentFilterFraction::Reset() {$/;"	f	class:webrtc::DivergentFilterFraction
Reset	webrtc/modules/audio_processing/agc/agc.cc	/^void Agc::Reset() {$/;"	f	class:webrtc::Agc
Reset	webrtc/modules/audio_processing/agc/loudness_histogram.cc	/^void LoudnessHistogram::Reset() {$/;"	f	class:webrtc::LoudnessHistogram
Reset	webrtc/modules/audio_processing/high_pass_filter_impl.cc	/^  void Reset() {$/;"	f	class:webrtc::HighPassFilterImpl::BiquadFilter
Reset	webrtc/modules/audio_processing/level_controller/level_controller.cc	/^void LevelController::Metrics::Reset() {$/;"	f	class:webrtc::LevelController::Metrics
Reset	webrtc/modules/audio_processing/rms_level.cc	/^void RMSLevel::Reset() {$/;"	f	class:webrtc::RMSLevel
Reset	webrtc/modules/audio_processing/utility/block_mean_calculator.cc	/^void BlockMeanCalculator::Reset() {$/;"	f	class:webrtc::BlockMeanCalculator
Reset	webrtc/modules/audio_processing/vad/vad_circular_buffer.cc	/^void VadCircularBuffer::Reset() {$/;"	f	class:webrtc::VadCircularBuffer
Reset	webrtc/modules/include/module_common_types.h	/^inline void AudioFrame::Reset() {$/;"	f	class:webrtc::AudioFrame
Reset	webrtc/system_wrappers/include/ntp_time.h	/^  void Reset() {$/;"	f	class:webrtc::NtpTime
Reset	webrtc/system_wrappers/source/metrics_default.cc	/^  void Reset() {$/;"	f	class:webrtc::metrics::__anon251::RtcHistogram
Reset	webrtc/system_wrappers/source/metrics_default.cc	/^  void Reset() {$/;"	f	class:webrtc::metrics::__anon251::RtcHistogramMap
Reset	webrtc/system_wrappers/source/metrics_default.cc	/^void Reset() {$/;"	f	namespace:webrtc::metrics
ResetAdaptiveChannel	webrtc/modules/audio_processing/aecm/aecm_core.h	/^typedef void (*ResetAdaptiveChannel)(AecmCore* aecm);$/;"	t
ResetAdaptiveChannelC	webrtc/modules/audio_processing/aecm/aecm_core.cc	/^static void ResetAdaptiveChannelC(AecmCore* aecm) {$/;"	f	file:
ResetBuffer	webrtc/modules/audio_processing/vad/vad_audio_proc.cc	/^void VadAudioProc::ResetBuffer() {$/;"	f	class:webrtc::VadAudioProc
ResetIdentitiesWithValidity	webrtc/base/sslstreamadapter_unittest.cc	/^  void ResetIdentitiesWithValidity(int not_before, int not_after) {$/;"	f	class:SSLStreamAdapterTestBase
ResetIfNeeded	webrtc/common_audio/resampler/resampler.cc	/^int Resampler::ResetIfNeeded(int inFreq, int outFreq, size_t num_channels)$/;"	f	class:webrtc::Resampler
ResetTimeout	webrtc/base/task.cc	/^void Task::ResetTimeout() {$/;"	f	class:rtc::Task
ResidualEchoDetector	webrtc/modules/audio_processing/include/audio_processing.h	/^    struct ResidualEchoDetector {$/;"	s	struct:webrtc::AudioProcessing::Config
ResidualEchoDetector	webrtc/modules/audio_processing/residual_echo_detector.cc	/^ResidualEchoDetector::ResidualEchoDetector()$/;"	f	class:webrtc::ResidualEchoDetector
ResidualEchoDetector	webrtc/modules/audio_processing/residual_echo_detector.h	/^class ResidualEchoDetector {$/;"	c	namespace:webrtc
Resize	webrtc/base/bytebuffer.cc	/^void ByteBufferWriter::Resize(size_t size) {$/;"	f	class:rtc::ByteBufferWriter
Resize	webrtc/modules/audio_processing/beamformer/matrix.h	/^  void Resize() {$/;"	f	class:webrtc::Matrix
Resize	webrtc/modules/audio_processing/beamformer/matrix.h	/^  void Resize(size_t num_rows, size_t num_columns) {$/;"	f	class:webrtc::Matrix
ResolveHostname	webrtc/base/nethelpers.cc	/^int ResolveHostname(const std::string& hostname, int family,$/;"	f	namespace:rtc
ResourceFilePath	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^std::string ResourceFilePath(std::string name, int sample_rate_hz) {$/;"	f	namespace:webrtc::__anon183
Respond	webrtc/base/httpserver.cc	/^HttpServer::Connection::Respond(HttpServerTransaction* transaction) {$/;"	f	class:rtc::HttpServer::Connection
Respond	webrtc/base/httpserver.cc	/^HttpServer::Respond(HttpServerTransaction* transaction) {$/;"	f	class:rtc::HttpServer
Restart	webrtc/base/messagequeue.cc	/^void MessageQueue::Restart() {$/;"	f	class:rtc::MessageQueue
Restore	webrtc/base/win32regkey.cc	/^HRESULT RegKey::Restore(const wchar_t* full_key_name,$/;"	f	class:rtc::RegKey
ResumeTimeout	webrtc/base/task.cc	/^void Task::ResumeTimeout() {$/;"	f	class:rtc::Task
Return42	webrtc/base/bind_unittest.cc	/^int Return42() { return 42; }$/;"	f	namespace:rtc::__anon4
ReturnConnectedStream	webrtc/base/socketpool.cc	/^NewSocketPool::ReturnConnectedStream(StreamInterface* stream) {$/;"	f	class:rtc::NewSocketPool
ReturnConnectedStream	webrtc/base/socketpool.cc	/^ReuseSocketPool::ReturnConnectedStream(StreamInterface* stream) {$/;"	f	class:rtc::ReuseSocketPool
ReturnConnectedStream	webrtc/base/socketpool.cc	/^void LoggingPoolAdapter::ReturnConnectedStream(StreamInterface* stream) {$/;"	f	class:rtc::LoggingPoolAdapter
ReturnConnectedStream	webrtc/base/socketpool.cc	/^void StreamCache::ReturnConnectedStream(StreamInterface* stream) {$/;"	f	class:rtc::StreamCache
ReturnTrace	webrtc/system_wrappers/source/trace_impl.cc	/^void Trace::ReturnTrace() {$/;"	f	class:webrtc::Trace
ReuseSocketPool	webrtc/base/socketpool.cc	/^ReuseSocketPool::ReuseSocketPool(SocketFactory* factory)$/;"	f	class:rtc::ReuseSocketPool
ReuseSocketPool	webrtc/base/socketpool.h	/^class ReuseSocketPool : public StreamPool, public sigslot::has_slots<> {$/;"	c	namespace:rtc
ReverseDiff	webrtc/base/mod_ops.h	/^inline T ReverseDiff(T a, T b) {$/;"	f	namespace:webrtc
Rewind	webrtc/base/stream.h	/^  inline bool Rewind() { return SetPosition(0); }$/;"	f	class:rtc::StreamInterface
Rewind	webrtc/base/transformadapter.cc	/^bool TransformAdapter::Rewind() {$/;"	f	class:rtc::TransformAdapter
Rewind	webrtc/system_wrappers/source/file_impl.cc	/^int FileWrapper::Rewind() {$/;"	f	class:webrtc::FileWrapper
RewindableStream	webrtc/common_types.h	/^class RewindableStream {$/;"	c	namespace:webrtc
Rfactor	webrtc/modules/include/module_common_types.h	/^  uint8_t Rfactor;$/;"	m	struct:webrtc::RTCPVoIPMetric
RiffChunkSize	webrtc/common_audio/wav_header.cc	/^static inline uint32_t RiffChunkSize(size_t bytes_in_payload) {$/;"	f	namespace:webrtc
RingBuffer	webrtc/common_audio/ring_buffer.h	/^typedef struct RingBuffer {$/;"	s
RingBuffer	webrtc/common_audio/ring_buffer.h	/^} RingBuffer;$/;"	t	typeref:struct:RingBuffer
Rms	webrtc/modules/audio_processing/vad/vad_audio_proc.cc	/^void VadAudioProc::Rms(double* rms, size_t length_rms) {$/;"	f	class:webrtc::VadAudioProc
Rng	webrtc/base/helpers.cc	/^RandomGenerator& Rng() {$/;"	f	namespace:rtc::__anon15
RobustValidation	webrtc/modules/audio_processing/utility/delay_estimator.cc	/^static int RobustValidation(const BinaryDelayEstimator* self,$/;"	f	file:
RollingAccumulator	webrtc/base/rollingaccumulator.h	/^  explicit RollingAccumulator(size_t max_count)$/;"	f	class:rtc::RollingAccumulator
RollingAccumulator	webrtc/base/rollingaccumulator.h	/^class RollingAccumulator {$/;"	c	namespace:rtc
RotateFiles	webrtc/base/filerotatingstream.cc	/^void FileRotatingStream::RotateFiles() {$/;"	f	class:rtc::FileRotatingStream
Round	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.cc	/^size_t Round(float x) {$/;"	f	namespace:webrtc::__anon188
RoundTripTime	webrtc/base/winping.cc	/^    ULONG   RoundTripTime;      \/\/ RTT in milliseconds$/;"	m	struct:rtc::icmp_echo_reply	file:
RoundTripTime	webrtc/base/winping.cc	/^  unsigned int    RoundTripTime;$/;"	m	struct:rtc::icmpv6_echo_reply_lh	file:
RouteCmp	webrtc/base/natserver.cc	/^RouteCmp::RouteCmp(NAT* nat) : symmetric(nat->IsSymmetric()) {$/;"	f	class:rtc::RouteCmp
RouteCmp	webrtc/base/natserver.h	/^struct RouteCmp {$/;"	s	namespace:rtc
RoutingMode	webrtc/modules/audio_processing/include/audio_processing.h	/^  enum RoutingMode {$/;"	g	class:webrtc::EchoControlMobile
Row	webrtc/system_wrappers/include/aligned_array.h	/^  T* Row(size_t row) {$/;"	f	class:webrtc::AlignedArray
Row	webrtc/system_wrappers/include/aligned_array.h	/^  const T* Row(size_t row) const {$/;"	f	class:webrtc::AlignedArray
RtcHistogram	webrtc/system_wrappers/source/metrics_default.cc	/^  RtcHistogram(const std::string& name, int min, int max, int bucket_count)$/;"	f	class:webrtc::metrics::__anon251::RtcHistogram
RtcHistogram	webrtc/system_wrappers/source/metrics_default.cc	/^class RtcHistogram {$/;"	c	namespace:webrtc::metrics::__anon251	file:
RtcHistogramMap	webrtc/system_wrappers/source/metrics_default.cc	/^  RtcHistogramMap() {}$/;"	f	class:webrtc::metrics::__anon251::RtcHistogramMap
RtcHistogramMap	webrtc/system_wrappers/source/metrics_default.cc	/^class RtcHistogramMap {$/;"	c	namespace:webrtc::metrics::__anon251	file:
RtcUnused	webrtc/base/common.h	/^inline void RtcUnused(const void*) {}$/;"	f
RtcpList	webrtc/system_wrappers/include/rtp_to_ntp.h	/^typedef std::list<RtcpMeasurement> RtcpList;$/;"	t	namespace:webrtc
RtcpMeasurement	webrtc/system_wrappers/include/rtp_to_ntp.h	/^struct RtcpMeasurement {$/;"	s	namespace:webrtc
RtcpMode	webrtc/common_types.h	/^enum class RtcpMode { kOff, kCompound, kReducedSize };$/;"	c	namespace:webrtc
RtcpPacketTypeCounter	webrtc/common_types.h	/^  RtcpPacketTypeCounter()$/;"	f	struct:webrtc::RtcpPacketTypeCounter
RtcpPacketTypeCounter	webrtc/common_types.h	/^struct RtcpPacketTypeCounter {$/;"	s	namespace:webrtc
RtcpPacketTypeCounterObserver	webrtc/common_types.h	/^class RtcpPacketTypeCounterObserver {$/;"	c	namespace:webrtc
RtcpStatistics	webrtc/common_types.h	/^  RtcpStatistics()$/;"	f	struct:webrtc::RtcpStatistics
RtcpStatistics	webrtc/common_types.h	/^struct RtcpStatistics {$/;"	s	namespace:webrtc
RtcpStatisticsCallback	webrtc/common_types.h	/^class RtcpStatisticsCallback {$/;"	c	namespace:webrtc
RtlGenRandomProc	webrtc/base/helpers.cc	/^  typedef BOOL (WINAPI *RtlGenRandomProc)(PVOID, ULONG);$/;"	t	class:rtc::SecureRandomGenerator	file:
RtpExtension	webrtc/config.h	/^  RtpExtension() : id(0) {}$/;"	f	struct:webrtc::RtpExtension
RtpExtension	webrtc/config.h	/^  RtpExtension(const std::string& uri, int id) : uri(uri), id(id) {}$/;"	f	struct:webrtc::RtpExtension
RtpExtension	webrtc/config.h	/^struct RtpExtension {$/;"	s	namespace:webrtc
RtpPacketCounter	webrtc/common_types.h	/^  RtpPacketCounter()$/;"	f	struct:webrtc::RtpPacketCounter
RtpPacketCounter	webrtc/common_types.h	/^struct RtpPacketCounter {$/;"	s	namespace:webrtc
RtpVideoCodecTypes	webrtc/modules/include/module_common_types.h	/^enum RtpVideoCodecTypes {$/;"	g	namespace:webrtc
Rule	webrtc/base/firewallsocketserver.h	/^  struct Rule {$/;"	s	class:rtc::FirewallSocketServer
Run	webrtc/base/autodetectproxy_unittest.cc	/^  bool Run(int timeout_ms) {$/;"	f	class:rtc::AutoDetectProxyTest
Run	webrtc/base/callback.h	/^    virtual R Run() {$/;"	f	struct:rtc::Callback0::HelperImpl
Run	webrtc/base/callback.h	/^    virtual R Run(P1 p1) {$/;"	f	struct:rtc::Callback1::HelperImpl
Run	webrtc/base/callback.h	/^    virtual R Run(P1 p1, P2 p2) {$/;"	f	struct:rtc::Callback2::HelperImpl
Run	webrtc/base/callback.h	/^    virtual R Run(P1 p1, P2 p2, P3 p3) {$/;"	f	struct:rtc::Callback3::HelperImpl
Run	webrtc/base/callback.h	/^    virtual R Run(P1 p1, P2 p2, P3 p3, P4 p4) {$/;"	f	struct:rtc::Callback4::HelperImpl
Run	webrtc/base/callback.h	/^    virtual R Run(P1 p1, P2 p2, P3 p3, P4 p4, P5 p5) {$/;"	f	struct:rtc::Callback5::HelperImpl
Run	webrtc/base/criticalsection_unittest.cc	/^  bool Run() {$/;"	f	class:rtc::__anon10::RunnerBase
Run	webrtc/base/dbus.cc	/^  virtual void Run() {$/;"	f	class:rtc::DBusMonitor::DBusMonitoringThread
Run	webrtc/base/logging_unittest.cc	/^  void Run() {$/;"	f	class:rtc::LogThread	file:
Run	webrtc/base/physicalsocketserver_unittest.cc	/^  void Run(Thread *thread) {$/;"	f	class:rtc::RaiseSigTermRunnable	file:
Run	webrtc/base/platform_thread.cc	/^void PlatformThread::Run() {$/;"	f	class:rtc::PlatformThread
Run	webrtc/base/proxy_unittest.cc	/^  void Run() {$/;"	f	class:AutoDetectProxyRunner
Run	webrtc/base/rate_limiter_unittest.cc	/^  void Run() {$/;"	f	class:webrtc::ThreadTask
Run	webrtc/base/sequenced_task_checker_unittest.cc	/^  static bool Run(void* obj) {$/;"	f	class:rtc::__anon56::CallCalledSequentiallyOnThread	file:
Run	webrtc/base/sequenced_task_checker_unittest.cc	/^  static bool Run(void* obj) {$/;"	f	class:rtc::__anon56::DeleteSequencedCheckerOnThread	file:
Run	webrtc/base/signalthread.cc	/^void SignalThread::Run() {$/;"	f	class:rtc::SignalThread
Run	webrtc/base/signalthread.cc	/^void SignalThread::Worker::Run() {$/;"	f	class:rtc::SignalThread::Worker
Run	webrtc/base/signalthread_unittest.cc	/^  virtual void Run() {$/;"	f	class:OwnerThread
Run	webrtc/base/thread.cc	/^void ComThread::Run() {$/;"	f	class:rtc::ComThread
Run	webrtc/base/thread.cc	/^void Thread::Run() {$/;"	f	class:rtc::Thread
Run	webrtc/base/thread_unittest.cc	/^  virtual void Run() {$/;"	f	class:SignalWhenDestroyedThread
Run	webrtc/base/win32socketserver.h	/^  virtual void Run() {$/;"	f	class:rtc::Win32Thread
Run	webrtc/common_audio/resampler/push_sinc_resampler.cc	/^void PushSincResampler::Run(size_t frames, float* destination) {$/;"	f	class:webrtc::PushSincResampler
Run	webrtc/common_audio/resampler/push_sinc_resampler_unittest.cc	/^  void Run(size_t frames, float* destination) {$/;"	f	class:webrtc::ZeroSource
Run	webrtc/common_audio/resampler/sinusoidal_linear_chirp_source.cc	/^void SinusoidalLinearChirpSource::Run(size_t frames, float* destination) {$/;"	f	class:webrtc::SinusoidalLinearChirpSource
Run	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^  EventTypeWrapper Run() {$/;"	f	class:webrtc::__anon182::CallSimulator
RunAudioConverterTest	webrtc/common_audio/audio_converter_unittest.cc	/^void RunAudioConverterTest(size_t src_channels,$/;"	f	namespace:webrtc
RunBinarySpectra	webrtc/modules/audio_processing/utility/delay_estimator_unittest.cc	/^void DelayEstimatorTest::RunBinarySpectra(BinaryDelayEstimator* binary1,$/;"	f	class:__anon232::DelayEstimatorTest
RunBinarySpectraTest	webrtc/modules/audio_processing/utility/delay_estimator_unittest.cc	/^void DelayEstimatorTest::RunBinarySpectraTest(int near_offset,$/;"	f	class:__anon232::DelayEstimatorTest
RunBitExactnessTest	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer_unittest.cc	/^void RunBitExactnessTest(int sample_rate_hz,$/;"	f	namespace:webrtc::__anon190
RunBitExactnessTest	webrtc/modules/audio_processing/gain_control_unittest.cc	/^void RunBitExactnessTest(int sample_rate_hz,$/;"	f	namespace:webrtc::__anon199
RunBitexactnessTest	webrtc/modules/audio_processing/echo_cancellation_bit_exact_unittest.cc	/^void RunBitexactnessTest(int sample_rate_hz,$/;"	f	namespace:webrtc::__anon192
RunBitexactnessTest	webrtc/modules/audio_processing/echo_control_mobile_unittest.cc	/^void RunBitexactnessTest(int sample_rate_hz,$/;"	f	namespace:webrtc::__anon195
RunBitexactnessTest	webrtc/modules/audio_processing/high_pass_filter_unittest.cc	/^void RunBitexactnessTest(int sample_rate,$/;"	f	namespace:webrtc::__anon201
RunBitexactnessTest	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer_unittest.cc	/^void RunBitexactnessTest(int sample_rate_hz,$/;"	f	namespace:webrtc::__anon203
RunBitexactnessTest	webrtc/modules/audio_processing/level_controller/level_controller_unittest.cc	/^void RunBitexactnessTest(int sample_rate_hz,$/;"	f	namespace:webrtc::__anon210
RunBitexactnessTest	webrtc/modules/audio_processing/level_estimator_unittest.cc	/^void RunBitexactnessTest(int sample_rate_hz,$/;"	f	namespace:webrtc::__anon214
RunBitexactnessTest	webrtc/modules/audio_processing/noise_suppression_unittest.cc	/^void RunBitexactnessTest(int sample_rate_hz,$/;"	f	namespace:webrtc::__anon216
RunBitexactnessTest	webrtc/modules/audio_processing/voice_detection_unittest.cc	/^void RunBitexactnessTest(int sample_rate_hz,$/;"	f	namespace:webrtc::__anon244
RunManualVolumeChangeIsPossibleTest	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^void ApmTest::RunManualVolumeChangeIsPossibleTest(int sample_rate) {$/;"	f	class:webrtc::__anon183::ApmTest
RunMethodOnDifferentTaskQueue	webrtc/base/sequenced_task_checker_unittest.cc	/^void RunMethodOnDifferentTaskQueue(bool expect_true) {$/;"	f	namespace:rtc::__anon56
RunMethodOnDifferentThread	webrtc/base/sequenced_task_checker_unittest.cc	/^void RunMethodOnDifferentThread(bool expect_true) {$/;"	f	namespace:rtc::__anon56
RunNextEvent	webrtc/modules/audio_processing/test/debug_dump_replayer.cc	/^bool DebugDumpReplayer::RunNextEvent() {$/;"	f	class:webrtc::test::DebugDumpReplayer
RunQuantizedVolumeDoesNotGetStuckTest	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^void ApmTest::RunQuantizedVolumeDoesNotGetStuckTest(int sample_rate) {$/;"	f	class:webrtc::__anon183::ApmTest
RunStableStartup	webrtc/modules/audio_processing/aec/system_delay_unittest.cc	/^void SystemDelayTest::RunStableStartup() {$/;"	f	class:webrtc::__anon162::SystemDelayTest
RunStandaloneSubmodule	webrtc/modules/audio_processing/level_controller/level_controller_complexity_unittest.cc	/^void RunStandaloneSubmodule(int sample_rate_hz, size_t num_channels) {$/;"	f	namespace:webrtc::__anon209
RunTask	webrtc/base/rate_limiter_unittest.cc	/^bool RunTask(void* thread_task) {$/;"	f	namespace:webrtc
RunTask	webrtc/base/task_queue_gcd.cc	/^  static void RunTask(void* context) {$/;"	f	struct:rtc::TaskQueue::PostTaskAndReplyContext
RunTask	webrtc/base/task_queue_gcd.cc	/^  static void RunTask(void* context) {$/;"	f	struct:rtc::TaskQueue::TaskContext
RunTask	webrtc/base/task_queue_libevent.cc	/^void TaskQueue::RunTask(int fd, short flags, void* context) {  \/\/ NOLINT$/;"	f	class:rtc::TaskQueue
RunTasks	webrtc/base/taskrunner.cc	/^void TaskRunner::RunTasks() {$/;"	f	class:rtc::TaskRunner
RunTest	webrtc/common_audio/blocker_unittest.cc	/^  void RunTest(Blocker* blocker,$/;"	f	class:webrtc::BlockerTest
RunTest	webrtc/modules/audio_processing/agc/loudness_histogram_unittest.cc	/^void LoudnessHistogramTest::RunTest(bool enable_circular_buff,$/;"	f	class:webrtc::LoudnessHistogramTest
RunTest	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^bool AudioProcessingImplLockTest::RunTest() {$/;"	f	class:webrtc::__anon181::AudioProcessingImplLockTest
RunTimer	webrtc/base/task_queue_libevent.cc	/^void TaskQueue::RunTimer(int fd, short flags, void* context) {  \/\/ NOLINT$/;"	f	class:rtc::TaskQueue
RunTogetherWithApm	webrtc/modules/audio_processing/level_controller/level_controller_complexity_unittest.cc	/^void RunTogetherWithApm(std::string test_description,$/;"	f	namespace:webrtc::__anon209
Runnable	webrtc/base/thread.h	/^  Runnable() {}$/;"	f	class:rtc::Runnable
Runnable	webrtc/base/thread.h	/^class Runnable {$/;"	c	namespace:rtc
RunnerBase	webrtc/base/criticalsection_unittest.cc	/^  explicit RunnerBase(int value)$/;"	f	class:rtc::__anon10::RunnerBase
RunnerBase	webrtc/base/criticalsection_unittest.cc	/^class RunnerBase : public MessageHandler {$/;"	c	namespace:rtc::__anon10	file:
RunningForTest	webrtc/base/thread.h	/^  bool RunningForTest() { return running(); }$/;"	f	class:rtc::Thread
RuntimeParameterSettingScheme	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^enum class RuntimeParameterSettingScheme {$/;"	c	namespace:webrtc::__anon181	file:
Rxx160_LPw32	webrtc/modules/audio_processing/agc/legacy/analog_agc.h	/^  int32_t Rxx160_LPw32;    \/\/ Low pass filtered frame energies$/;"	m	struct:__anon171
Rxx160w32	webrtc/modules/audio_processing/agc/legacy/analog_agc.h	/^  int32_t Rxx160w32;       \/\/ Average energy for one frame$/;"	m	struct:__anon171
Rxx16_LPw32	webrtc/modules/audio_processing/agc/legacy/analog_agc.h	/^  int32_t Rxx16_LPw32;     \/\/ Low pass filtered subframe energies$/;"	m	struct:__anon171
Rxx16_LPw32Max	webrtc/modules/audio_processing/agc/legacy/analog_agc.h	/^  int32_t Rxx16_LPw32Max;  \/\/ Keeps track of largest energy subframe$/;"	m	struct:__anon171
Rxx16_vectorw32	webrtc/modules/audio_processing/agc/legacy/analog_agc.h	/^  int32_t Rxx16_vectorw32[RXX_BUFFER_LEN];  \/\/ Array with subframe energies$/;"	m	struct:__anon171
Rxx16pos	webrtc/modules/audio_processing/agc/legacy/analog_agc.h	/^  int16_t Rxx16pos;          \/\/ Current position in the Rxx16_vectorw32$/;"	m	struct:__anon171
Rxx16w32_array	webrtc/modules/audio_processing/agc/legacy/analog_agc.h	/^  int32_t Rxx16w32_array[2][5];  \/\/ Energy values of microphone signal$/;"	m	struct:__anon171
S16ToFloat	webrtc/common_audio/audio_util.cc	/^void S16ToFloat(const int16_t* src, size_t size, float* dest) {$/;"	f	namespace:webrtc
S16ToFloat	webrtc/common_audio/include/audio_util.h	/^static inline float S16ToFloat(int16_t v) {$/;"	f	namespace:webrtc
SAME_WRAP	webrtc/common_audio/ring_buffer.h	/^enum Wrap { SAME_WRAP, DIFF_WRAP };$/;"	e	enum:Wrap
SCOPE6_ID_MAX	webrtc/base/macifaddrs_converter.cc	/^#define SCOPE6_ID_MAX /;"	d	file:
SCOPED_LOCKABLE	webrtc/base/thread_annotations.h	/^#define SCOPED_LOCKABLE /;"	d
SD_FEATURE_THR	webrtc/modules/audio_processing/ns/defines.h	/^#define SD_FEATURE_THR /;"	d
SECURITY_ERRORS	webrtc/base/win32securityerrors.cc	/^const ConstantLabel SECURITY_ERRORS[] = {$/;"	m	namespace:rtc	file:
SECURITY_MANDATORY_MEDIUM_RID	webrtc/base/win32.h	/^#define SECURITY_MANDATORY_MEDIUM_RID /;"	d
SECURITY_WIN32	webrtc/base/httpcommon.cc	/^#define SECURITY_WIN32$/;"	d	file:
SECURITY_WIN32	webrtc/base/socketadapters.cc	/^#define SECURITY_WIN32$/;"	d	file:
SEC_E_CERT_EXPIRED	webrtc/base/httpbase.cc	/^#define SEC_E_CERT_EXPIRED /;"	d	file:
SERIAL_RAND_BITS	webrtc/base/opensslidentity.cc	/^static const int SERIAL_RAND_BITS = 64;$/;"	m	namespace:rtc	file:
SE_CLOSE	webrtc/base/stream.h	/^enum StreamEvent { SE_OPEN = 1, SE_READ = 2, SE_WRITE = 4, SE_CLOSE = 8 };$/;"	e	enum:rtc::StreamEvent
SE_OPEN	webrtc/base/stream.h	/^enum StreamEvent { SE_OPEN = 1, SE_READ = 2, SE_WRITE = 4, SE_CLOSE = 8 };$/;"	e	enum:rtc::StreamEvent
SE_READ	webrtc/base/stream.h	/^enum StreamEvent { SE_OPEN = 1, SE_READ = 2, SE_WRITE = 4, SE_CLOSE = 8 };$/;"	e	enum:rtc::StreamEvent
SE_WRITE	webrtc/base/stream.h	/^enum StreamEvent { SE_OPEN = 1, SE_READ = 2, SE_WRITE = 4, SE_CLOSE = 8 };$/;"	e	enum:rtc::StreamEvent
SF_FEATURE_THR	webrtc/modules/audio_processing/ns/defines.h	/^#define SF_FEATURE_THR /;"	d
SHA1Final	webrtc/base/sha1.cc	/^void SHA1Final(SHA1_CTX* context, uint8_t digest[SHA1_DIGEST_SIZE]) {$/;"	f	namespace:rtc
SHA1HANDSOFF	webrtc/base/sha1.cc	/^#define SHA1HANDSOFF$/;"	d	file:
SHA1Init	webrtc/base/sha1.cc	/^void SHA1Init(SHA1_CTX* context) {$/;"	f	namespace:rtc
SHA1Transform	webrtc/base/sha1.cc	/^void SHA1Transform(uint32_t state[5], const uint8_t buffer[64]) {$/;"	f	namespace:rtc::__anon57
SHA1Update	webrtc/base/sha1.cc	/^void SHA1Update(SHA1_CTX* context, const uint8_t* data, size_t input_len) {$/;"	f	namespace:rtc
SHA1_CTX	webrtc/base/sha1.h	/^struct SHA1_CTX {$/;"	s	namespace:rtc
SHA1_DIGEST_SIZE	webrtc/base/sha1.h	/^#define SHA1_DIGEST_SIZE /;"	d
SHAPrintContext	webrtc/base/sha1.cc	/^void SHAPrintContext(SHA1_CTX *context, char *msg) {$/;"	f	namespace:rtc::__anon57
SHARED_LOCKS_REQUIRED	webrtc/base/thread_annotations.h	/^#define SHARED_LOCKS_REQUIRED(/;"	d
SHARED_LOCKS_REQUIRED	webrtc/base/thread_annotations_unittest.cc	/^  void ReadProtectedFunction() SHARED_LOCKS_REQUIRED(lock_, pt_lock_) {$/;"	f	class:__anon68::ThreadSafe	file:
SHARED_LOCK_FUNCTION	webrtc/base/sharedexclusivelock.h	/^  explicit SharedScope(SharedExclusiveLock* lock) SHARED_LOCK_FUNCTION(lock)$/;"	f	class:rtc::SharedScope
SHARED_LOCK_FUNCTION	webrtc/base/thread_annotations.h	/^#define SHARED_LOCK_FUNCTION(/;"	d
SHARED_LOCK_FUNCTION	webrtc/base/thread_annotations_unittest.cc	/^  void EnterRead() const SHARED_LOCK_FUNCTION() {}$/;"	f	class:__anon68::Lock
SHARED_LOCK_FUNCTION	webrtc/system_wrappers/include/rw_lock_wrapper.h	/^  ReadLockScoped(RWLockWrapper& rw_lock) SHARED_LOCK_FUNCTION(rw_lock)$/;"	f	class:webrtc::ReadLockScoped
SHARED_TRYLOCK_FUNCTION	webrtc/base/thread_annotations.h	/^#define SHARED_TRYLOCK_FUNCTION(/;"	d
SHARED_TRYLOCK_FUNCTION	webrtc/base/thread_annotations_unittest.cc	/^  bool TryEnterRead() const SHARED_TRYLOCK_FUNCTION(true) { return true; }$/;"	f	class:__anon68::Lock
SIGNAL_PROCESSING_FILES	jni/common.mk	/^SIGNAL_PROCESSING_FILES		:= \\$/;"	m
SIGNAL_PROCESSING_INCLUDES	jni/common.mk	/^SIGNAL_PROCESSING_INCLUDES	:= \\$/;"	m
SIGNAL_PROCESSING_PATH	jni/common.mk	/^SIGNAL_PROCESSING_PATH		:= ..\/webrtc\/common_audio\/signal_processing$/;"	m
SIGSLOT_DEFAULT_MT_POLICY	webrtc/base/sigslot.h	/^#		define SIGSLOT_DEFAULT_MT_POLICY /;"	d
SIGSLOT_DEFAULT_MT_POLICY	webrtc/base/sigslot.h	/^#define SIGSLOT_DEFAULT_MT_POLICY /;"	d
SIG_NAME	webrtc/base/dbus_unittest.cc	/^#define SIG_NAME /;"	d	file:
SIMULATED_WAIT	webrtc/base/gunit.h	/^#define SIMULATED_WAIT(/;"	d
SIMULATED_WAIT_	webrtc/base/gunit.h	/^#define SIMULATED_WAIT_(/;"	d
SIMULT	webrtc/modules/audio_processing/ns/defines.h	/^#define SIMULT /;"	d
SIMULT	webrtc/modules/audio_processing/ns/nsx_defines.h	/^#define SIMULT /;"	d
SIN60	webrtc/modules/audio_coding/codecs/isac/main/source/fft.c	/^# define SIN60 /;"	d	file:
SIN72	webrtc/modules/audio_coding/codecs/isac/main/source/fft.c	/^# define SIN72 /;"	d	file:
SIOCGIFAFLAG_IN6	webrtc/base/macifaddrs_converter.cc	/^#define SIOCGIFAFLAG_IN6 /;"	d	file:
SIZE_UNKNOWN	webrtc/base/stringutils.h	/^const size_t SIZE_UNKNOWN = static_cast<size_t>(-1);$/;"	m	namespace:rtc
SI_ARCH_ARM	webrtc/base/systeminfo.h	/^    SI_ARCH_ARM = 2$/;"	e	enum:rtc::SystemInfo::Architecture
SI_ARCH_UNKNOWN	webrtc/base/systeminfo.h	/^    SI_ARCH_UNKNOWN = -1,$/;"	e	enum:rtc::SystemInfo::Architecture
SI_ARCH_X64	webrtc/base/systeminfo.h	/^    SI_ARCH_X64 = 1,$/;"	e	enum:rtc::SystemInfo::Architecture
SI_ARCH_X86	webrtc/base/systeminfo.h	/^    SI_ARCH_X86 = 0,$/;"	e	enum:rtc::SystemInfo::Architecture
SOCKET	webrtc/base/physicalsocketserver.h	/^typedef int SOCKET;$/;"	t
SOCKET_EACCES	webrtc/base/socket.h	/^#define SOCKET_EACCES /;"	d
SOCKET_ERROR	webrtc/base/socket.h	/^#define SOCKET_ERROR /;"	d
SPECT_DIFF_TAVG	webrtc/modules/audio_processing/ns/defines.h	/^#define SPECT_DIFF_TAVG /;"	d
SPECT_DIFF_TAVG_Q8	webrtc/modules/audio_processing/ns/nsx_defines.h	/^#define SPECT_DIFF_TAVG_Q8 /;"	d
SPECT_FLAT_TAVG_Q14	webrtc/modules/audio_processing/ns/nsx_defines.h	/^#define SPECT_FLAT_TAVG_Q14 /;"	d
SPECT_FL_TAVG	webrtc/modules/audio_processing/ns/defines.h	/^#define SPECT_FL_TAVG /;"	d
SPEECH_UPDATE	webrtc/modules/audio_processing/ns/defines.h	/^#define SPEECH_UPDATE /;"	d
SPL_LEVINSON_MAXORDER	webrtc/common_audio/signal_processing/levinson_durbin.c	/^#define SPL_LEVINSON_MAXORDER /;"	d	file:
SPL_LPC_TO_REFL_COEF_MAX_AR_MODEL_ORDER	webrtc/common_audio/signal_processing/lpc_to_refl_coef.c	/^#define SPL_LPC_TO_REFL_COEF_MAX_AR_MODEL_ORDER /;"	d	file:
SRC_SIGNED	webrtc/base/safe_conversions_impl.h	/^  SRC_SIGNED$/;"	e	enum:rtc::internal::SrcSign
SRC_UNSIGNED	webrtc/base/safe_conversions_impl.h	/^  SRC_UNSIGNED,$/;"	e	enum:rtc::internal::SrcSign
SRTP_AEAD_AES_128_GCM	webrtc/base/sslstreamadapter.h	/^const int SRTP_AEAD_AES_128_GCM = 0x0007;$/;"	m	namespace:rtc
SRTP_AEAD_AES_256_GCM	webrtc/base/sslstreamadapter.h	/^const int SRTP_AEAD_AES_256_GCM = 0x0008;$/;"	m	namespace:rtc
SRTP_AES128_CM_SHA1_32	webrtc/base/sslstreamadapter.h	/^const int SRTP_AES128_CM_SHA1_32 = 0x0002;$/;"	m	namespace:rtc
SRTP_AES128_CM_SHA1_80	webrtc/base/sslstreamadapter.h	/^const int SRTP_AES128_CM_SHA1_80 = 0x0001;$/;"	m	namespace:rtc
SRTP_INVALID_CRYPTO_SUITE	webrtc/base/sslstreamadapter.h	/^const int SRTP_INVALID_CRYPTO_SUITE = 0;$/;"	m	namespace:rtc
SR_BLOCK	webrtc/base/stream.h	/^enum StreamResult { SR_ERROR, SR_SUCCESS, SR_BLOCK, SR_EOS };$/;"	e	enum:rtc::StreamResult
SR_EOS	webrtc/base/stream.h	/^enum StreamResult { SR_ERROR, SR_SUCCESS, SR_BLOCK, SR_EOS };$/;"	e	enum:rtc::StreamResult
SR_ERROR	webrtc/base/stream.h	/^enum StreamResult { SR_ERROR, SR_SUCCESS, SR_BLOCK, SR_EOS };$/;"	e	enum:rtc::StreamResult
SR_SUCCESS	webrtc/base/stream.h	/^enum StreamResult { SR_ERROR, SR_SUCCESS, SR_BLOCK, SR_EOS };$/;"	e	enum:rtc::StreamResult
SSE_CLOSE	webrtc/base/testutils.h	/^  SSE_CLOSE = SE_CLOSE,$/;"	e	enum:testing::StreamSinkEvent
SSE_ERROR	webrtc/base/testutils.h	/^  SSE_ERROR = 16$/;"	e	enum:testing::StreamSinkEvent
SSE_MSG_TRUNC	webrtc/base/sslstreamadapter.h	/^enum { SSE_MSG_TRUNC = 0xff0001 };$/;"	e	enum:rtc::__anon61
SSE_OPEN	webrtc/base/testutils.h	/^  SSE_OPEN  = SE_OPEN,$/;"	e	enum:testing::StreamSinkEvent
SSE_READ	webrtc/base/testutils.h	/^  SSE_READ  = SE_READ,$/;"	e	enum:testing::StreamSinkEvent
SSE_WRITE	webrtc/base/testutils.h	/^  SSE_WRITE = SE_WRITE,$/;"	e	enum:testing::StreamSinkEvent
SSL	webrtc/base/openssladapter.h	/^typedef struct ssl_st SSL;$/;"	t	typeref:struct:ssl_st
SSL	webrtc/base/opensslstreamadapter.h	/^typedef struct ssl_st SSL;$/;"	t	typeref:struct:ssl_st
SSLAdapter	webrtc/base/ssladapter.h	/^  explicit SSLAdapter(AsyncSocket* socket)$/;"	f	class:rtc::SSLAdapter
SSLAdapter	webrtc/base/ssladapter.h	/^class SSLAdapter : public AsyncSocketAdapter {$/;"	c	namespace:rtc
SSLAdapterTestBase	webrtc/base/ssladapter_unittest.cc	/^  explicit SSLAdapterTestBase(const rtc::SSLMode& ssl_mode,$/;"	f	class:SSLAdapterTestBase
SSLAdapterTestBase	webrtc/base/ssladapter_unittest.cc	/^class SSLAdapterTestBase : public testing::Test,$/;"	c	file:
SSLAdapterTestDTLS_ECDSA	webrtc/base/ssladapter_unittest.cc	/^  SSLAdapterTestDTLS_ECDSA()$/;"	f	class:SSLAdapterTestDTLS_ECDSA
SSLAdapterTestDTLS_ECDSA	webrtc/base/ssladapter_unittest.cc	/^class SSLAdapterTestDTLS_ECDSA : public SSLAdapterTestBase {$/;"	c	file:
SSLAdapterTestDTLS_RSA	webrtc/base/ssladapter_unittest.cc	/^  SSLAdapterTestDTLS_RSA()$/;"	f	class:SSLAdapterTestDTLS_RSA
SSLAdapterTestDTLS_RSA	webrtc/base/ssladapter_unittest.cc	/^class SSLAdapterTestDTLS_RSA : public SSLAdapterTestBase {$/;"	c	file:
SSLAdapterTestDummyClient	webrtc/base/ssladapter_unittest.cc	/^  explicit SSLAdapterTestDummyClient(const rtc::SSLMode& ssl_mode)$/;"	f	class:SSLAdapterTestDummyClient
SSLAdapterTestDummyClient	webrtc/base/ssladapter_unittest.cc	/^class SSLAdapterTestDummyClient : public sigslot::has_slots<> {$/;"	c	file:
SSLAdapterTestDummyServer	webrtc/base/ssladapter_unittest.cc	/^  explicit SSLAdapterTestDummyServer(const rtc::SSLMode& ssl_mode,$/;"	f	class:SSLAdapterTestDummyServer
SSLAdapterTestDummyServer	webrtc/base/ssladapter_unittest.cc	/^class SSLAdapterTestDummyServer : public sigslot::has_slots<> {$/;"	c	file:
SSLAdapterTestTLS_ECDSA	webrtc/base/ssladapter_unittest.cc	/^  SSLAdapterTestTLS_ECDSA()$/;"	f	class:SSLAdapterTestTLS_ECDSA
SSLAdapterTestTLS_ECDSA	webrtc/base/ssladapter_unittest.cc	/^class SSLAdapterTestTLS_ECDSA : public SSLAdapterTestBase {$/;"	c	file:
SSLAdapterTestTLS_RSA	webrtc/base/ssladapter_unittest.cc	/^  SSLAdapterTestTLS_RSA()$/;"	f	class:SSLAdapterTestTLS_RSA
SSLAdapterTestTLS_RSA	webrtc/base/ssladapter_unittest.cc	/^class SSLAdapterTestTLS_RSA : public SSLAdapterTestBase {$/;"	c	file:
SSLCertChain	webrtc/base/sslidentity.cc	/^SSLCertChain::SSLCertChain(const SSLCertificate* cert) {$/;"	f	class:rtc::SSLCertChain
SSLCertChain	webrtc/base/sslidentity.cc	/^SSLCertChain::SSLCertChain(const std::vector<SSLCertificate*>& certs) {$/;"	f	class:rtc::SSLCertChain
SSLCertChain	webrtc/base/sslidentity.h	/^class SSLCertChain {$/;"	c	namespace:rtc
SSLCertificate	webrtc/base/sslidentity.h	/^class SSLCertificate {$/;"	c	namespace:rtc
SSLCertificateStats	webrtc/base/sslidentity.cc	/^SSLCertificateStats::SSLCertificateStats($/;"	f	class:rtc::SSLCertificateStats
SSLCertificateStats	webrtc/base/sslidentity.h	/^struct SSLCertificateStats {$/;"	s	namespace:rtc
SSLDummyStreamBase	webrtc/base/sslstreamadapter_unittest.cc	/^  SSLDummyStreamBase(SSLStreamAdapterTestBase* test,$/;"	f	class:SSLDummyStreamBase
SSLDummyStreamBase	webrtc/base/sslstreamadapter_unittest.cc	/^class SSLDummyStreamBase : public rtc::StreamInterface,$/;"	c	file:
SSLDummyStreamDTLS	webrtc/base/sslstreamadapter_unittest.cc	/^  SSLDummyStreamDTLS(SSLStreamAdapterTestBase* test,$/;"	f	class:SSLDummyStreamDTLS
SSLDummyStreamDTLS	webrtc/base/sslstreamadapter_unittest.cc	/^class SSLDummyStreamDTLS : public SSLDummyStreamBase {$/;"	c	file:
SSLDummyStreamTLS	webrtc/base/sslstreamadapter_unittest.cc	/^  SSLDummyStreamTLS(SSLStreamAdapterTestBase* test,$/;"	f	class:SSLDummyStreamTLS
SSLDummyStreamTLS	webrtc/base/sslstreamadapter_unittest.cc	/^class SSLDummyStreamTLS : public SSLDummyStreamBase {$/;"	c	file:
SSLFingerprint	webrtc/base/sslfingerprint.cc	/^SSLFingerprint::SSLFingerprint(const SSLFingerprint& from)$/;"	f	class:rtc::SSLFingerprint
SSLFingerprint	webrtc/base/sslfingerprint.cc	/^SSLFingerprint::SSLFingerprint(const std::string& algorithm,$/;"	f	class:rtc::SSLFingerprint
SSLFingerprint	webrtc/base/sslfingerprint.h	/^struct SSLFingerprint {$/;"	s	namespace:rtc
SSLHandshakeError	webrtc/base/sslstreamadapter.h	/^enum class SSLHandshakeError { UNKNOWN, INCOMPATIBLE_CIPHERSUITE, MAX_VALUE };$/;"	c	namespace:rtc
SSLIdentity	webrtc/base/sslidentity.h	/^class SSLIdentity {$/;"	c	namespace:rtc
SSLIdentityExpirationTest	webrtc/base/sslidentity_unittest.cc	/^  SSLIdentityExpirationTest() {$/;"	f	class:SSLIdentityExpirationTest
SSLIdentityExpirationTest	webrtc/base/sslidentity_unittest.cc	/^class SSLIdentityExpirationTest : public testing::Test {$/;"	c	file:
SSLIdentityParams	webrtc/base/sslidentity.h	/^struct SSLIdentityParams {$/;"	s	namespace:rtc
SSLIdentityTest	webrtc/base/sslidentity_unittest.cc	/^  SSLIdentityTest() {}$/;"	f	class:SSLIdentityTest
SSLIdentityTest	webrtc/base/sslidentity_unittest.cc	/^class SSLIdentityTest : public testing::Test {$/;"	c	file:
SSLInfoCallback	webrtc/base/openssladapter.cc	/^OpenSSLAdapter::SSLInfoCallback(const SSL* s, int where, int ret) {$/;"	f	class:rtc::OpenSSLAdapter
SSLMode	webrtc/base/sslstreamadapter.h	/^enum SSLMode { SSL_MODE_TLS, SSL_MODE_DTLS };$/;"	g	namespace:rtc
SSLPeerCertificateDigestError	webrtc/base/sslstreamadapter.h	/^enum class SSLPeerCertificateDigestError {$/;"	c	namespace:rtc
SSLPostConnectionCheck	webrtc/base/openssladapter.cc	/^bool OpenSSLAdapter::SSLPostConnectionCheck(SSL* ssl, const char* host) {$/;"	f	class:rtc::OpenSSLAdapter
SSLProtocolVersion	webrtc/base/sslstreamadapter.h	/^enum SSLProtocolVersion {$/;"	g	namespace:rtc
SSLRole	webrtc/base/sslstreamadapter.h	/^enum SSLRole { SSL_CLIENT, SSL_SERVER };$/;"	g	namespace:rtc
SSLState	webrtc/base/openssladapter.h	/^  enum SSLState {$/;"	g	class:rtc::OpenSSLAdapter
SSLState	webrtc/base/opensslstreamadapter.h	/^  enum SSLState {$/;"	g	class:rtc::OpenSSLStreamAdapter
SSLStreamAdapter	webrtc/base/sslstreamadapter.cc	/^SSLStreamAdapter::SSLStreamAdapter(StreamInterface* stream)$/;"	f	class:rtc::SSLStreamAdapter
SSLStreamAdapter	webrtc/base/sslstreamadapter.h	/^class SSLStreamAdapter : public StreamAdapterInterface {$/;"	c	namespace:rtc
SSLStreamAdapterTestBase	webrtc/base/sslstreamadapter_unittest.cc	/^  SSLStreamAdapterTestBase($/;"	f	class:SSLStreamAdapterTestBase
SSLStreamAdapterTestBase	webrtc/base/sslstreamadapter_unittest.cc	/^class SSLStreamAdapterTestBase : public testing::Test,$/;"	c	file:
SSLStreamAdapterTestDTLS	webrtc/base/sslstreamadapter_unittest.cc	/^  SSLStreamAdapterTestDTLS()$/;"	f	class:SSLStreamAdapterTestDTLS
SSLStreamAdapterTestDTLS	webrtc/base/sslstreamadapter_unittest.cc	/^  SSLStreamAdapterTestDTLS(const std::string& cert_pem,$/;"	f	class:SSLStreamAdapterTestDTLS
SSLStreamAdapterTestDTLS	webrtc/base/sslstreamadapter_unittest.cc	/^class SSLStreamAdapterTestDTLS$/;"	c	file:
SSLStreamAdapterTestDTLSFromPEMStrings	webrtc/base/sslstreamadapter_unittest.cc	/^  SSLStreamAdapterTestDTLSFromPEMStrings() :$/;"	f	class:SSLStreamAdapterTestDTLSFromPEMStrings
SSLStreamAdapterTestDTLSFromPEMStrings	webrtc/base/sslstreamadapter_unittest.cc	/^class SSLStreamAdapterTestDTLSFromPEMStrings : public SSLStreamAdapterTestDTLS {$/;"	c	file:
SSLStreamAdapterTestTLS	webrtc/base/sslstreamadapter_unittest.cc	/^  SSLStreamAdapterTestTLS()$/;"	f	class:SSLStreamAdapterTestTLS
SSLStreamAdapterTestTLS	webrtc/base/sslstreamadapter_unittest.cc	/^class SSLStreamAdapterTestTLS$/;"	c	file:
SSLVerifyCallback	webrtc/base/openssladapter.cc	/^OpenSSLAdapter::SSLVerifyCallback(int ok, X509_STORE_CTX* store) {$/;"	f	class:rtc::OpenSSLAdapter
SSLVerifyCallback	webrtc/base/opensslstreamadapter.cc	/^int OpenSSLStreamAdapter::SSLVerifyCallback(int ok, X509_STORE_CTX* store) {$/;"	f	class:rtc::OpenSSLStreamAdapter
SSL_CIPHER	webrtc/base/opensslstreamadapter.h	/^typedef struct ssl_cipher_st SSL_CIPHER;$/;"	t	typeref:struct:ssl_cipher_st
SSL_CLIENT	webrtc/base/sslstreamadapter.h	/^enum SSLRole { SSL_CLIENT, SSL_SERVER };$/;"	e	enum:rtc::SSLRole
SSL_CLOSED	webrtc/base/opensslstreamadapter.h	/^    SSL_CLOSED  \/\/ Clean close$/;"	e	enum:rtc::OpenSSLStreamAdapter::SSLState
SSL_CONNECTED	webrtc/base/openssladapter.h	/^    SSL_NONE, SSL_WAIT, SSL_CONNECTING, SSL_CONNECTED, SSL_ERROR$/;"	e	enum:rtc::OpenSSLAdapter::SSLState
SSL_CONNECTED	webrtc/base/opensslstreamadapter.h	/^    SSL_CONNECTED,  \/\/ SSL stream successfully established$/;"	e	enum:rtc::OpenSSLStreamAdapter::SSLState
SSL_CONNECTING	webrtc/base/openssladapter.h	/^    SSL_NONE, SSL_WAIT, SSL_CONNECTING, SSL_CONNECTED, SSL_ERROR$/;"	e	enum:rtc::OpenSSLAdapter::SSLState
SSL_CONNECTING	webrtc/base/opensslstreamadapter.h	/^    SSL_CONNECTING,  \/\/ SSL negotiation in progress$/;"	e	enum:rtc::OpenSSLStreamAdapter::SSLState
SSL_CTX	webrtc/base/openssladapter.h	/^typedef struct ssl_ctx_st SSL_CTX;$/;"	t	typeref:struct:ssl_ctx_st
SSL_CTX	webrtc/base/opensslidentity.h	/^typedef struct ssl_ctx_st SSL_CTX;$/;"	t	typeref:struct:ssl_ctx_st
SSL_CTX	webrtc/base/opensslstreamadapter.h	/^typedef struct ssl_ctx_st SSL_CTX;$/;"	t	typeref:struct:ssl_ctx_st
SSL_ERROR	webrtc/base/openssladapter.h	/^    SSL_NONE, SSL_WAIT, SSL_CONNECTING, SSL_CONNECTED, SSL_ERROR$/;"	e	enum:rtc::OpenSSLAdapter::SSLState
SSL_ERROR	webrtc/base/opensslstreamadapter.h	/^    SSL_ERROR,  \/\/ some SSL error occurred, stream is closed$/;"	e	enum:rtc::OpenSSLStreamAdapter::SSLState
SSL_MODE_DTLS	webrtc/base/sslstreamadapter.h	/^enum SSLMode { SSL_MODE_TLS, SSL_MODE_DTLS };$/;"	e	enum:rtc::SSLMode
SSL_MODE_TLS	webrtc/base/sslstreamadapter.h	/^enum SSLMode { SSL_MODE_TLS, SSL_MODE_DTLS };$/;"	e	enum:rtc::SSLMode
SSL_NONE	webrtc/base/openssladapter.h	/^    SSL_NONE, SSL_WAIT, SSL_CONNECTING, SSL_CONNECTED, SSL_ERROR$/;"	e	enum:rtc::OpenSSLAdapter::SSLState
SSL_NONE	webrtc/base/opensslstreamadapter.h	/^    SSL_NONE,$/;"	e	enum:rtc::OpenSSLStreamAdapter::SSLState
SSL_PROTOCOL_DTLS_10	webrtc/base/sslstreamadapter.h	/^  SSL_PROTOCOL_DTLS_10 = SSL_PROTOCOL_TLS_11,$/;"	e	enum:rtc::SSLProtocolVersion
SSL_PROTOCOL_DTLS_12	webrtc/base/sslstreamadapter.h	/^  SSL_PROTOCOL_DTLS_12 = SSL_PROTOCOL_TLS_12,$/;"	e	enum:rtc::SSLProtocolVersion
SSL_PROTOCOL_TLS_10	webrtc/base/sslstreamadapter.h	/^  SSL_PROTOCOL_TLS_10,$/;"	e	enum:rtc::SSLProtocolVersion
SSL_PROTOCOL_TLS_11	webrtc/base/sslstreamadapter.h	/^  SSL_PROTOCOL_TLS_11,$/;"	e	enum:rtc::SSLProtocolVersion
SSL_PROTOCOL_TLS_12	webrtc/base/sslstreamadapter.h	/^  SSL_PROTOCOL_TLS_12,$/;"	e	enum:rtc::SSLProtocolVersion
SSL_SERVER	webrtc/base/sslstreamadapter.h	/^enum SSLRole { SSL_CLIENT, SSL_SERVER };$/;"	e	enum:rtc::SSLRole
SSL_USE_OPENSSL	webrtc/base/sslconfig.h	/^#define SSL_USE_OPENSSL /;"	d
SSL_USE_SCHANNEL	webrtc/base/sslconfig.h	/^#define SSL_USE_SCHANNEL /;"	d
SSL_WAIT	webrtc/base/openssladapter.h	/^    SSL_NONE, SSL_WAIT, SSL_CONNECTING, SSL_CONNECTED, SSL_ERROR$/;"	e	enum:rtc::OpenSSLAdapter::SSLState
SSL_WAIT	webrtc/base/opensslstreamadapter.h	/^    SSL_WAIT,  \/\/ waiting for the stream to open to start SSL negotiation$/;"	e	enum:rtc::OpenSSLStreamAdapter::SSLState
SS_AUTH	webrtc/base/socketadapters.h	/^    SS_HELLO, SS_AUTH, SS_CONNECT, SS_CONNECT_PENDING, SS_TUNNEL, SS_ERROR$/;"	e	enum:rtc::AsyncSocksProxyServerSocket::State
SS_AUTH	webrtc/base/socketadapters.h	/^    SS_INIT, SS_HELLO, SS_AUTH, SS_CONNECT, SS_TUNNEL, SS_ERROR$/;"	e	enum:rtc::AsyncSocksProxySocket::State
SS_CLOSED	webrtc/base/stream.h	/^enum StreamState { SS_CLOSED, SS_OPENING, SS_OPEN };$/;"	e	enum:rtc::StreamState
SS_CONNECT	webrtc/base/socketadapters.h	/^    SS_HELLO, SS_AUTH, SS_CONNECT, SS_CONNECT_PENDING, SS_TUNNEL, SS_ERROR$/;"	e	enum:rtc::AsyncSocksProxyServerSocket::State
SS_CONNECT	webrtc/base/socketadapters.h	/^    SS_INIT, SS_HELLO, SS_AUTH, SS_CONNECT, SS_TUNNEL, SS_ERROR$/;"	e	enum:rtc::AsyncSocksProxySocket::State
SS_CONNECT_PENDING	webrtc/base/socketadapters.h	/^    SS_HELLO, SS_AUTH, SS_CONNECT, SS_CONNECT_PENDING, SS_TUNNEL, SS_ERROR$/;"	e	enum:rtc::AsyncSocksProxyServerSocket::State
SS_ERROR	webrtc/base/socketadapters.h	/^    SS_HELLO, SS_AUTH, SS_CONNECT, SS_CONNECT_PENDING, SS_TUNNEL, SS_ERROR$/;"	e	enum:rtc::AsyncSocksProxyServerSocket::State
SS_ERROR	webrtc/base/socketadapters.h	/^    SS_INIT, SS_HELLO, SS_AUTH, SS_CONNECT, SS_TUNNEL, SS_ERROR$/;"	e	enum:rtc::AsyncSocksProxySocket::State
SS_HELLO	webrtc/base/socketadapters.h	/^    SS_HELLO, SS_AUTH, SS_CONNECT, SS_CONNECT_PENDING, SS_TUNNEL, SS_ERROR$/;"	e	enum:rtc::AsyncSocksProxyServerSocket::State
SS_HELLO	webrtc/base/socketadapters.h	/^    SS_INIT, SS_HELLO, SS_AUTH, SS_CONNECT, SS_TUNNEL, SS_ERROR$/;"	e	enum:rtc::AsyncSocksProxySocket::State
SS_INIT	webrtc/base/socketadapters.h	/^    SS_INIT, SS_HELLO, SS_AUTH, SS_CONNECT, SS_TUNNEL, SS_ERROR$/;"	e	enum:rtc::AsyncSocksProxySocket::State
SS_OPEN	webrtc/base/stream.h	/^enum StreamState { SS_CLOSED, SS_OPENING, SS_OPEN };$/;"	e	enum:rtc::StreamState
SS_OPENING	webrtc/base/stream.h	/^enum StreamState { SS_CLOSED, SS_OPENING, SS_OPEN };$/;"	e	enum:rtc::StreamState
SS_TUNNEL	webrtc/base/socketadapters.h	/^    SS_HELLO, SS_AUTH, SS_CONNECT, SS_CONNECT_PENDING, SS_TUNNEL, SS_ERROR$/;"	e	enum:rtc::AsyncSocksProxyServerSocket::State
SS_TUNNEL	webrtc/base/socketadapters.h	/^    SS_INIT, SS_HELLO, SS_AUTH, SS_CONNECT, SS_TUNNEL, SS_ERROR$/;"	e	enum:rtc::AsyncSocksProxySocket::State
STACK_ARRAY	webrtc/base/stringutils.h	/^#define STACK_ARRAY(/;"	d
STATE_0_LOWER	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  double    STATE_0_LOWER[2*POSTQORDER];$/;"	m	struct:__anon127
STATE_0_LOWER_float	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  float    STATE_0_LOWER_float[2*POSTQORDER];$/;"	m	struct:__anon127
STATE_0_UPPER	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  double    STATE_0_UPPER[2*POSTQORDER];$/;"	m	struct:__anon127
STATE_0_UPPER_float	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  float    STATE_0_UPPER_float[2*POSTQORDER];$/;"	m	struct:__anon127
STATE_BINDING	webrtc/base/asyncpacketsocket.h	/^    STATE_BINDING,$/;"	e	enum:rtc::AsyncPacketSocket::State
STATE_BLOCKED	webrtc/base/task.h	/^    STATE_BLOCKED = -1,$/;"	e	enum:rtc::Task::__anon64
STATE_BOUND	webrtc/base/asyncpacketsocket.h	/^    STATE_BOUND,$/;"	e	enum:rtc::AsyncPacketSocket::State
STATE_CLOSED	webrtc/base/asyncpacketsocket.h	/^    STATE_CLOSED,$/;"	e	enum:rtc::AsyncPacketSocket::State
STATE_CONNECTED	webrtc/base/asyncpacketsocket.h	/^    STATE_CONNECTED$/;"	e	enum:rtc::AsyncPacketSocket::State
STATE_CONNECTING	webrtc/base/asyncpacketsocket.h	/^    STATE_CONNECTING,$/;"	e	enum:rtc::AsyncPacketSocket::State
STATE_DONE	webrtc/base/task.h	/^    STATE_DONE = 2,$/;"	e	enum:rtc::Task::__anon64
STATE_ERROR	webrtc/base/task.h	/^    STATE_ERROR = 3,$/;"	e	enum:rtc::Task::__anon64
STATE_INIT	webrtc/base/task.h	/^    STATE_INIT = 0,$/;"	e	enum:rtc::Task::__anon64
STATE_NEXT	webrtc/base/task.h	/^    STATE_NEXT = 5,  \/\/ Subclasses which need more states start here and higher$/;"	e	enum:rtc::Task::__anon64
STATE_RESPONSE	webrtc/base/task.h	/^    STATE_RESPONSE = 4,$/;"	e	enum:rtc::Task::__anon64
STATE_START	webrtc/base/task.h	/^    STATE_START = 1,$/;"	e	enum:rtc::Task::__anon64
STAT_UPDATES	webrtc/modules/audio_processing/ns/nsx_defines.h	/^#define STAT_UPDATES /;"	d
STLClearObject	webrtc/system_wrappers/include/stl_util.h	/^void STLClearObject(T* obj) {$/;"	f	namespace:webrtc
STLDeleteContainerPairFirstPointers	webrtc/system_wrappers/include/stl_util.h	/^void STLDeleteContainerPairFirstPointers(ForwardIterator begin,$/;"	f	namespace:webrtc
STLDeleteContainerPairPointers	webrtc/system_wrappers/include/stl_util.h	/^void STLDeleteContainerPairPointers(ForwardIterator begin,$/;"	f	namespace:webrtc
STLDeleteContainerPairSecondPointers	webrtc/system_wrappers/include/stl_util.h	/^void STLDeleteContainerPairSecondPointers(ForwardIterator begin,$/;"	f	namespace:webrtc
STLDeleteContainerPointers	webrtc/system_wrappers/include/stl_util.h	/^void STLDeleteContainerPointers(ForwardIterator begin, ForwardIterator end) {$/;"	f	namespace:webrtc
STLDeleteElements	webrtc/system_wrappers/include/stl_util.h	/^void STLDeleteElements(T* container) {$/;"	f	namespace:webrtc
STLDeleteValues	webrtc/system_wrappers/include/stl_util.h	/^void STLDeleteValues(T* container) {$/;"	f	namespace:webrtc
STLElementDeleter	webrtc/system_wrappers/include/stl_util.h	/^  STLElementDeleter<T>(T* container) : container_(container) {}$/;"	f	class:webrtc::STLElementDeleter
STLElementDeleter	webrtc/system_wrappers/include/stl_util.h	/^class STLElementDeleter {$/;"	c	namespace:webrtc
STLIncludes	webrtc/system_wrappers/include/stl_util.h	/^bool STLIncludes(const Arg1& a1, const Arg2& a2) {$/;"	f	namespace:webrtc
STLIsSorted	webrtc/system_wrappers/include/stl_util.h	/^bool STLIsSorted(const Container& cont) {$/;"	f	namespace:webrtc
STLSetDifference	webrtc/system_wrappers/include/stl_util.h	/^ResultType STLSetDifference(const Arg1& a1, const Arg2& a2) {$/;"	f	namespace:webrtc
STLSetIntersection	webrtc/system_wrappers/include/stl_util.h	/^ResultType STLSetIntersection(const Arg1& a1, const Arg2& a2) {$/;"	f	namespace:webrtc
STLSetUnion	webrtc/system_wrappers/include/stl_util.h	/^ResultType STLSetUnion(const Arg1& a1, const Arg2& a2) {$/;"	f	namespace:webrtc
STLValueDeleter	webrtc/system_wrappers/include/stl_util.h	/^  STLValueDeleter<T>(T* container) : container_(container) {}$/;"	f	class:webrtc::STLValueDeleter
STLValueDeleter	webrtc/system_wrappers/include/stl_util.h	/^class STLValueDeleter {$/;"	c	namespace:webrtc
STREAM_SIZE_MAX	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define STREAM_SIZE_MAX /;"	d
STREAM_SIZE_MAX_30	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define STREAM_SIZE_MAX_30 /;"	d
STREAM_SIZE_MAX_60	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define STREAM_SIZE_MAX_60 /;"	d
STRING	webrtc/base/flags.h	/^  enum Type { BOOL, INT, FLOAT, STRING };$/;"	e	enum:rtc::Flag::Type
STRINGIZE	webrtc/system_wrappers/include/stringize_macros.h	/^#define STRINGIZE(/;"	d
STRINGIZE_NO_EXPANSION	webrtc/system_wrappers/include/stringize_macros.h	/^#define STRINGIZE_NO_EXPANSION(/;"	d
STR_CASE_CMP	webrtc/common_types.h	/^#define STR_CASE_CMP(/;"	d
STR_NCASE_CMP	webrtc/common_types.h	/^#define STR_NCASE_CMP(/;"	d
STUCK_TASK_COUNT	webrtc/base/task_unittest.cc	/^#define STUCK_TASK_COUNT /;"	d	file:
ST_CHUNKSIZE	webrtc/base/httpbase.h	/^    ST_CHUNKSIZE, ST_CHUNKTERM, ST_TRAILERS,$/;"	e	enum:rtc::HttpParser::State
ST_CHUNKTERM	webrtc/base/httpbase.h	/^    ST_CHUNKSIZE, ST_CHUNKTERM, ST_TRAILERS,$/;"	e	enum:rtc::HttpParser::State
ST_COMPLETE	webrtc/base/httpbase.h	/^    ST_DATA, ST_COMPLETE$/;"	e	enum:rtc::HttpParser::State
ST_COMPLETE	webrtc/base/transformadapter.h	/^  enum State { ST_PROCESSING, ST_FLUSHING, ST_COMPLETE, ST_ERROR };$/;"	e	enum:rtc::TransformAdapter::State
ST_DATA	webrtc/base/httpbase.h	/^    ST_DATA, ST_COMPLETE$/;"	e	enum:rtc::HttpParser::State
ST_ERROR	webrtc/base/transformadapter.h	/^  enum State { ST_PROCESSING, ST_FLUSHING, ST_COMPLETE, ST_ERROR };$/;"	e	enum:rtc::TransformAdapter::State
ST_FLUSHING	webrtc/base/transformadapter.h	/^  enum State { ST_PROCESSING, ST_FLUSHING, ST_COMPLETE, ST_ERROR };$/;"	e	enum:rtc::TransformAdapter::State
ST_HEADERS	webrtc/base/httpbase.h	/^    ST_LEADER, ST_HEADERS,$/;"	e	enum:rtc::HttpParser::State
ST_LEADER	webrtc/base/httpbase.h	/^    ST_LEADER, ST_HEADERS,$/;"	e	enum:rtc::HttpParser::State
ST_MSG_FIRST_AVAILABLE	webrtc/base/signalthread.h	/^  enum { ST_MSG_WORKER_DONE, ST_MSG_FIRST_AVAILABLE };$/;"	e	enum:rtc::SignalThread::__anon59
ST_MSG_WORKER_DONE	webrtc/base/signalthread.h	/^  enum { ST_MSG_WORKER_DONE, ST_MSG_FIRST_AVAILABLE };$/;"	e	enum:rtc::SignalThread::__anon59
ST_PROCESSING	webrtc/base/transformadapter.h	/^  enum State { ST_PROCESSING, ST_FLUSHING, ST_COMPLETE, ST_ERROR };$/;"	e	enum:rtc::TransformAdapter::State
ST_TRAILERS	webrtc/base/httpbase.h	/^    ST_CHUNKSIZE, ST_CHUNKTERM, ST_TRAILERS,$/;"	e	enum:rtc::HttpParser::State
SUBFRAMES	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define SUBFRAMES /;"	d
SUB_BLOCKS_16_22	webrtc/common_audio/signal_processing/resample.c	/^#define SUB_BLOCKS_16_22 /;"	d	file:
SUB_BLOCKS_22_16	webrtc/common_audio/signal_processing/resample.c	/^#define SUB_BLOCKS_22_16 /;"	d	file:
SUB_BLOCKS_22_8	webrtc/common_audio/signal_processing/resample.c	/^#define SUB_BLOCKS_22_8 /;"	d	file:
SUB_BLOCKS_8_22	webrtc/common_audio/signal_processing/resample.c	/^#define SUB_BLOCKS_8_22 /;"	d	file:
SUPGAIN_DEFAULT	webrtc/modules/audio_processing/aecm/aecm_defines.h	/^#define SUPGAIN_DEFAULT /;"	d
SUPGAIN_EPC_DT	webrtc/modules/audio_processing/aecm/aecm_defines.h	/^#define SUPGAIN_EPC_DT /;"	d
SUPGAIN_ERROR_PARAM_A	webrtc/modules/audio_processing/aecm/aecm_defines.h	/^#define SUPGAIN_ERROR_PARAM_A /;"	d
SUPGAIN_ERROR_PARAM_B	webrtc/modules/audio_processing/aecm/aecm_defines.h	/^#define SUPGAIN_ERROR_PARAM_B /;"	d
SUPGAIN_ERROR_PARAM_D	webrtc/modules/audio_processing/aecm/aecm_defines.h	/^#define SUPGAIN_ERROR_PARAM_D /;"	d
SWBFRAMESAMPLES_10ms	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define SWBFRAMESAMPLES_10ms /;"	d
SYSTEM_WRAPPERS_INCLUDE_RTP_TO_NTP_H_	webrtc/system_wrappers/include/rtp_to_ntp.h	/^#define SYSTEM_WRAPPERS_INCLUDE_RTP_TO_NTP_H_$/;"	d
SYSTEM_WRAPPERS_INCLUDE_TIMESTAMP_EXTRAPOLATOR_H_	webrtc/system_wrappers/include/timestamp_extrapolator.h	/^#define SYSTEM_WRAPPERS_INCLUDE_TIMESTAMP_EXTRAPOLATOR_H_$/;"	d
S_11_22	webrtc/common_audio/signal_processing/include/signal_processing_library.h	/^  int32_t S_11_22[8];$/;"	m	struct:__anon93
S_12_24	webrtc/common_audio/signal_processing/include/signal_processing_library.h	/^  int32_t S_12_24[8];$/;"	m	struct:__anon97
S_16_11	webrtc/common_audio/signal_processing/include/signal_processing_library.h	/^  int32_t S_16_11[8];$/;"	m	struct:__anon93
S_16_12	webrtc/common_audio/signal_processing/include/signal_processing_library.h	/^  int32_t S_16_12[8];$/;"	m	struct:__anon97
S_16_32	webrtc/common_audio/signal_processing/include/signal_processing_library.h	/^  int32_t S_16_32[8];$/;"	m	struct:__anon91
S_16_32	webrtc/common_audio/signal_processing/include/signal_processing_library.h	/^  int32_t S_16_32[8];$/;"	m	struct:__anon95
S_16_8	webrtc/common_audio/signal_processing/include/signal_processing_library.h	/^  int32_t S_16_8[8];$/;"	m	struct:__anon92
S_16_8	webrtc/common_audio/signal_processing/include/signal_processing_library.h	/^  int32_t S_16_8[8];$/;"	m	struct:__anon96
S_22_16	webrtc/common_audio/signal_processing/include/signal_processing_library.h	/^  int32_t S_22_16[8];$/;"	m	struct:__anon92
S_22_22	webrtc/common_audio/signal_processing/include/signal_processing_library.h	/^  int32_t S_22_22[16];$/;"	m	struct:__anon92
S_22_44	webrtc/common_audio/signal_processing/include/signal_processing_library.h	/^  int32_t S_22_44[8];$/;"	m	struct:__anon90
S_24_16	webrtc/common_audio/signal_processing/include/signal_processing_library.h	/^  int32_t S_24_16[8];$/;"	m	struct:__anon96
S_24_24	webrtc/common_audio/signal_processing/include/signal_processing_library.h	/^  int32_t S_24_24[16];$/;"	m	struct:__anon96
S_24_48	webrtc/common_audio/signal_processing/include/signal_processing_library.h	/^  int32_t S_24_48[8];$/;"	m	struct:__anon95
S_24_48	webrtc/common_audio/signal_processing/include/signal_processing_library.h	/^  int32_t S_24_48[8];$/;"	m	struct:__anon97
S_32_16	webrtc/common_audio/signal_processing/include/signal_processing_library.h	/^  int32_t S_32_16[8];$/;"	m	struct:__anon90
S_32_16	webrtc/common_audio/signal_processing/include/signal_processing_library.h	/^  int32_t S_32_16[8];$/;"	m	struct:__anon94
S_32_22	webrtc/common_audio/signal_processing/include/signal_processing_library.h	/^  int32_t S_32_22[8];$/;"	m	struct:__anon91
S_32_24	webrtc/common_audio/signal_processing/include/signal_processing_library.h	/^  int32_t S_32_24[8];$/;"	m	struct:__anon95
S_44_32	webrtc/common_audio/signal_processing/include/signal_processing_library.h	/^  int32_t S_44_32[8];$/;"	m	struct:__anon90
S_48_24	webrtc/common_audio/signal_processing/include/signal_processing_library.h	/^  int32_t S_48_24[8];$/;"	m	struct:__anon96
S_48_32	webrtc/common_audio/signal_processing/include/signal_processing_library.h	/^  int32_t S_48_32[8];$/;"	m	struct:__anon94
S_48_48	webrtc/common_audio/signal_processing/include/signal_processing_library.h	/^  int32_t S_48_48[16];$/;"	m	struct:__anon94
S_8_16	webrtc/common_audio/signal_processing/include/signal_processing_library.h	/^  int32_t S_8_16[8];$/;"	m	struct:__anon93
S_8_16	webrtc/common_audio/signal_processing/include/signal_processing_library.h	/^  int32_t S_8_16[8];$/;"	m	struct:__anon97
SafeKeyNameForDeletion	webrtc/base/win32regkey.cc	/^bool RegKey::SafeKeyNameForDeletion(const wchar_t* key_name) {$/;"	f	class:rtc::RegKey
SafeWrapCurrent	webrtc/base/thread.cc	/^void Thread::SafeWrapCurrent() {$/;"	f	class:rtc::Thread
SampleInfo	webrtc/system_wrappers/include/metrics_default.h	/^struct SampleInfo {$/;"	s	namespace:webrtc::metrics
SampleInfo	webrtc/system_wrappers/source/metrics_default.cc	/^SampleInfo::SampleInfo(const std::string& name,$/;"	f	class:webrtc::metrics::SampleInfo
SampleRate	webrtc/common_audio/wav_header.cc	/^  uint32_t SampleRate;$/;"	m	struct:webrtc::__anon112::FmtSubchunk	file:
SampleRateSupportsMultiBand	webrtc/modules/audio_processing/audio_processing_impl.cc	/^bool SampleRateSupportsMultiBand(int sample_rate_hz) {$/;"	f	namespace:webrtc::__anon180
SamplesFromRate	webrtc/modules/audio_processing/test/test_utils.cc	/^size_t SamplesFromRate(int rate) {$/;"	f	namespace:webrtc
SaturatingGainEstimator	webrtc/modules/audio_processing/level_controller/saturating_gain_estimator.cc	/^SaturatingGainEstimator::SaturatingGainEstimator() {$/;"	f	class:webrtc::SaturatingGainEstimator
SaturatingGainEstimator	webrtc/modules/audio_processing/level_controller/saturating_gain_estimator.h	/^class SaturatingGainEstimator {$/;"	c	namespace:webrtc
Save	webrtc/base/optionsfile.cc	/^bool OptionsFile::Save() {$/;"	f	class:rtc::OptionsFile
Save	webrtc/base/win32regkey.cc	/^HRESULT RegKey::Save(const wchar_t* full_key_name, const wchar_t* file_name) {$/;"	f	class:rtc::RegKey
SaveEnc_obj	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  ISACUBSaveEncDataStruct SaveEnc_obj;$/;"	m	struct:__anon137
SaveEnc_obj	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  IsacSaveEncoderData SaveEnc_obj;$/;"	m	struct:__anon136
SaveStringToStack	webrtc/base/autodetectproxy.cc	/^static void SaveStringToStack(char *dst,$/;"	f	namespace:rtc
Scale	webrtc/modules/audio_processing/beamformer/matrix.h	/^  Matrix& Scale(const Matrix& operand, const S& scalar) {$/;"	f	class:webrtc::Matrix
Scale	webrtc/modules/audio_processing/beamformer/matrix.h	/^  Matrix& Scale(const S& scalar) {$/;"	f	class:webrtc::Matrix
ScaleAndAddVectorsWithRound	webrtc/common_audio/signal_processing/include/signal_processing_library.h	/^typedef int (*ScaleAndAddVectorsWithRound)(const int16_t* in_vector1,$/;"	t
ScaleErrorSignal	webrtc/modules/audio_processing/aec/aec_core.cc	/^static void ScaleErrorSignal(float mu,$/;"	f	namespace:webrtc
ScaleErrorSignalNEON	webrtc/modules/audio_processing/aec/aec_core_neon.cc	/^static void ScaleErrorSignalNEON(float mu,$/;"	f	namespace:webrtc
ScaleErrorSignalSSE2	webrtc/modules/audio_processing/aec/aec_core_sse2.cc	/^static void ScaleErrorSignalSSE2(float mu,$/;"	f	namespace:webrtc
ScaleFrame	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^void ScaleFrame(AudioFrame* frame, float scale) {$/;"	f	namespace:webrtc::__anon183
ScaledInverseFft	webrtc/modules/audio_processing/aec/aec_core.cc	/^static void ScaledInverseFft(const OouraFft& ooura_fft,$/;"	f	namespace:webrtc
ScopeLock	webrtc/base/thread_annotations_unittest.cc	/^class SCOPED_LOCKABLE ScopeLock {$/;"	c	namespace:__anon68	file:
ScopedAutoreleasePool	webrtc/base/scoped_autorelease_pool.h	/^class ScopedAutoreleasePool {$/;"	c	namespace:rtc
ScopedBuffer	webrtc/common_audio/audio_converter_unittest.cc	/^typedef std::unique_ptr<ChannelBuffer<float>> ScopedBuffer;$/;"	t	namespace:webrtc	file:
ScopedDisallowBlockingCalls	webrtc/base/thread.cc	/^Thread::ScopedDisallowBlockingCalls::ScopedDisallowBlockingCalls()$/;"	f	class:rtc::Thread::ScopedDisallowBlockingCalls
ScopedDisallowBlockingCalls	webrtc/base/thread.h	/^  class ScopedDisallowBlockingCalls {$/;"	c	class:rtc::Thread
ScopedFakeClock	webrtc/base/fakeclock.cc	/^ScopedFakeClock::ScopedFakeClock() {$/;"	f	class:rtc::ScopedFakeClock
ScopedFakeClock	webrtc/base/fakeclock.h	/^class ScopedFakeClock : public FakeClock {$/;"	c	namespace:rtc
ScopedMessageData	webrtc/base/messagequeue.h	/^  explicit ScopedMessageData(T* data) : data_(data) { }$/;"	f	class:rtc::ScopedMessageData
ScopedMessageData	webrtc/base/messagequeue.h	/^class ScopedMessageData : public MessageData {$/;"	c	namespace:rtc
ScopedPtrCollection	webrtc/base/scopedptrcollection.h	/^  ScopedPtrCollection() { }$/;"	f	class:rtc::ScopedPtrCollection
ScopedPtrCollection	webrtc/base/scopedptrcollection.h	/^class ScopedPtrCollection {$/;"	c	namespace:rtc
ScopedPtrCollectionTest	webrtc/base/scopedptrcollection_unittest.cc	/^  ScopedPtrCollectionTest()$/;"	f	class:rtc::ScopedPtrCollectionTest
ScopedPtrCollectionTest	webrtc/base/scopedptrcollection_unittest.cc	/^class ScopedPtrCollectionTest : public testing::Test {$/;"	c	namespace:rtc	file:
ScopedRefMessageData	webrtc/base/messagequeue.h	/^  explicit ScopedRefMessageData(T* data) : data_(data) { }$/;"	f	class:rtc::ScopedRefMessageData
ScopedRefMessageData	webrtc/base/messagequeue.h	/^class ScopedRefMessageData : public MessageData {$/;"	c	namespace:rtc
ScopedTimer	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^    explicit ScopedTimer(TickIntervalStats* proc_time)$/;"	f	class:webrtc::test::AudioProcessingSimulator::ScopedTimer
ScopedTimer	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^  class ScopedTimer {$/;"	c	class:webrtc::test::AudioProcessingSimulator
Search	webrtc/base/fileutils_mock.h	/^    bool Search(const std::string& current_name) {$/;"	f	class:rtc::FakeDirectoryIterator
SecureRandomGenerator	webrtc/base/helpers.cc	/^  SecureRandomGenerator() : advapi32_(NULL), rtl_gen_random_(NULL) {}$/;"	f	class:rtc::SecureRandomGenerator
SecureRandomGenerator	webrtc/base/helpers.cc	/^  SecureRandomGenerator() {}$/;"	f	class:rtc::SecureRandomGenerator
SecureRandomGenerator	webrtc/base/helpers.cc	/^class SecureRandomGenerator : public RandomGenerator {$/;"	c	namespace:rtc	file:
Seek	webrtc/base/bitbuffer.cc	/^bool BitBuffer::Seek(size_t byte_offset, size_t bit_offset) {$/;"	f	class:rtc::BitBuffer
Seek	webrtc/base/file_posix.cc	/^bool File::Seek(size_t offset) {$/;"	f	class:rtc::File
Seek	webrtc/base/file_win.cc	/^bool File::Seek(size_t offset) {$/;"	f	class:rtc::File
SeekTest	webrtc/base/stream_unittest.cc	/^void SeekTest(StreamInterface* stream, const unsigned char value) {$/;"	f	namespace:rtc
Send	webrtc/base/asyncsocket.cc	/^int AsyncSocketAdapter::Send(const void* pv, size_t cb) {$/;"	f	class:rtc::AsyncSocketAdapter
Send	webrtc/base/asynctcpsocket.cc	/^int AsyncTCPSocket::Send(const void *pv, size_t cb,$/;"	f	class:rtc::AsyncTCPSocket
Send	webrtc/base/asyncudpsocket.cc	/^int AsyncUDPSocket::Send(const void *pv, size_t cb,$/;"	f	class:rtc::AsyncUDPSocket
Send	webrtc/base/httprequest.cc	/^void HttpRequest::Send() {$/;"	f	class:HttpRequest
Send	webrtc/base/openssladapter.cc	/^OpenSSLAdapter::Send(const void* pv, size_t cb) {$/;"	f	class:rtc::OpenSSLAdapter
Send	webrtc/base/physicalsocketserver.cc	/^int PhysicalSocket::Send(const void* pv, size_t cb) {$/;"	f	class:rtc::PhysicalSocket
Send	webrtc/base/socketadapters.cc	/^int BufferedReadAdapter::Send(const void *pv, size_t cb) {$/;"	f	class:rtc::BufferedReadAdapter
Send	webrtc/base/socketadapters.cc	/^int LoggingSocketAdapter::Send(const void *pv, size_t cb) {$/;"	f	class:rtc::LoggingSocketAdapter
Send	webrtc/base/ssladapter_unittest.cc	/^  int Send(const std::string& message) {$/;"	f	class:SSLAdapterTestDummyClient
Send	webrtc/base/ssladapter_unittest.cc	/^  int Send(const std::string& message) {$/;"	f	class:SSLAdapterTestDummyServer
Send	webrtc/base/testclient.cc	/^int TestClient::Send(const char* buf, size_t size) {$/;"	f	class:rtc::TestClient
Send	webrtc/base/thread.cc	/^void Thread::Send(const Location& posted_from,$/;"	f	class:rtc::Thread
Send	webrtc/base/virtualsocketserver.cc	/^int VirtualSocket::Send(const void* pv, size_t cb) {$/;"	f	class:rtc::VirtualSocket
Send	webrtc/base/win32socketserver.cc	/^int Win32Socket::Send(const void* buffer, size_t length) {$/;"	f	class:rtc::Win32Socket
SendAuth	webrtc/base/socketadapters.cc	/^void AsyncSocksProxySocket::SendAuth() {$/;"	f	class:rtc::AsyncSocksProxySocket
SendAuthReply	webrtc/base/socketadapters.cc	/^void AsyncSocksProxyServerSocket::SendAuthReply(uint8_t result) {$/;"	f	class:rtc::AsyncSocksProxyServerSocket
SendBuffer	webrtc/base/virtualsocketserver.h	/^  typedef std::vector<char> SendBuffer;$/;"	t	class:rtc::VirtualSocket
SendConnect	webrtc/base/socketadapters.cc	/^void AsyncSocksProxySocket::SendConnect() {$/;"	f	class:rtc::AsyncSocksProxySocket
SendConnectRequest	webrtc/base/natsocketfactory.cc	/^  void SendConnectRequest() {$/;"	f	class:rtc::NATSocket	file:
SendConnectResult	webrtc/base/socketadapters.cc	/^void AsyncSocksProxyServerSocket::SendConnectResult(int result,$/;"	f	class:rtc::AsyncSocksProxyServerSocket
SendDelay	webrtc/base/virtualsocketserver.cc	/^uint32_t VirtualSocketServer::SendDelay(uint32_t size) {$/;"	f	class:rtc::VirtualSocketServer
SendHello	webrtc/base/socketadapters.cc	/^void AsyncSocksProxySocket::SendHello() {$/;"	f	class:rtc::AsyncSocksProxySocket
SendHelloReply	webrtc/base/socketadapters.cc	/^void AsyncSocksProxyServerSocket::SendHelloReply(uint8_t method) {$/;"	f	class:rtc::AsyncSocksProxyServerSocket
SendPacketObserver	webrtc/common_types.h	/^class SendPacketObserver {$/;"	c	namespace:webrtc
SendRaw	webrtc/base/asynctcpsocket.cc	/^int AsyncTCPSocketBase::SendRaw(const void * pv, size_t cb) {$/;"	f	class:rtc::AsyncTCPSocketBase
SendRequest	webrtc/base/socketadapters.cc	/^void AsyncHttpsProxySocket::SendRequest() {$/;"	f	class:rtc::AsyncHttpsProxySocket
SendSideDelayObserver	webrtc/common_types.h	/^class SendSideDelayObserver {$/;"	c	namespace:webrtc
SendTcp	webrtc/base/virtualsocketserver.cc	/^int VirtualSocket::SendTcp(const void* pv, size_t cb) {$/;"	f	class:rtc::VirtualSocket
SendTcp	webrtc/base/virtualsocketserver.cc	/^void VirtualSocketServer::SendTcp(VirtualSocket* socket) {$/;"	f	class:rtc::VirtualSocketServer
SendTo	webrtc/base/asyncsocket.cc	/^int AsyncSocketAdapter::SendTo(const void* pv,$/;"	f	class:rtc::AsyncSocketAdapter
SendTo	webrtc/base/asynctcpsocket.cc	/^int AsyncTCPSocketBase::SendTo(const void *pv, size_t cb,$/;"	f	class:rtc::AsyncTCPSocketBase
SendTo	webrtc/base/asyncudpsocket.cc	/^int AsyncUDPSocket::SendTo(const void *pv, size_t cb,$/;"	f	class:rtc::AsyncUDPSocket
SendTo	webrtc/base/openssladapter.cc	/^OpenSSLAdapter::SendTo(const void* pv, size_t cb, const SocketAddress& addr) {$/;"	f	class:rtc::OpenSSLAdapter
SendTo	webrtc/base/physicalsocketserver.cc	/^int PhysicalSocket::SendTo(const void* buffer,$/;"	f	class:rtc::PhysicalSocket
SendTo	webrtc/base/socketadapters.cc	/^int LoggingSocketAdapter::SendTo(const void *pv, size_t cb,$/;"	f	class:rtc::LoggingSocketAdapter
SendTo	webrtc/base/testclient.cc	/^int TestClient::SendTo(const char* buf, size_t size,$/;"	f	class:rtc::TestClient
SendTo	webrtc/base/virtualsocketserver.cc	/^int VirtualSocket::SendTo(const void* pv,$/;"	f	class:rtc::VirtualSocket
SendTo	webrtc/base/win32socketserver.cc	/^int Win32Socket::SendTo(const void* buffer, size_t length,$/;"	f	class:rtc::Win32Socket
SendUdp	webrtc/base/virtualsocketserver.cc	/^int VirtualSocket::SendUdp(const void* pv,$/;"	f	class:rtc::VirtualSocket
SendUdp	webrtc/base/virtualsocketserver.cc	/^int VirtualSocketServer::SendUdp(VirtualSocket* socket,$/;"	f	class:rtc::VirtualSocketServer
Sender	webrtc/base/virtualsocket_unittest.cc	/^  Sender(Thread* th, AsyncSocket* s, uint32_t rt)$/;"	f	struct:Sender
Sender	webrtc/base/virtualsocket_unittest.cc	/^struct Sender : public MessageHandler {$/;"	s	file:
SentPacket	webrtc/base/socket.h	/^  SentPacket() : packet_id(-1), send_time_ms(-1) {}$/;"	f	struct:rtc::SentPacket
SentPacket	webrtc/base/socket.h	/^  SentPacket(int packet_id, int64_t send_time_ms)$/;"	f	struct:rtc::SentPacket
SentPacket	webrtc/base/socket.h	/^struct SentPacket {$/;"	s	namespace:rtc
SequenceNumberUnwrapper	webrtc/modules/include/module_common_types.h	/^  SequenceNumberUnwrapper() : last_seq_(-1) {}$/;"	f	class:webrtc::SequenceNumberUnwrapper
SequenceNumberUnwrapper	webrtc/modules/include/module_common_types.h	/^class SequenceNumberUnwrapper {$/;"	c	namespace:webrtc
SequencedTaskChecker	webrtc/base/sequenced_task_checker.h	/^class LOCKABLE SequencedTaskChecker : public SequencedTaskCheckerDoNothing {};$/;"	c	namespace:rtc
SequencedTaskChecker	webrtc/base/sequenced_task_checker.h	/^class LOCKABLE SequencedTaskChecker : public SequencedTaskCheckerImpl {};$/;"	c	namespace:rtc
SequencedTaskCheckerDoNothing	webrtc/base/sequenced_task_checker.h	/^class SequencedTaskCheckerDoNothing {$/;"	c	namespace:rtc
SequencedTaskCheckerImpl	webrtc/base/sequenced_task_checker_impl.cc	/^SequencedTaskCheckerImpl::SequencedTaskCheckerImpl()$/;"	f	class:rtc::SequencedTaskCheckerImpl
SequencedTaskCheckerImpl	webrtc/base/sequenced_task_checker_impl.h	/^class SequencedTaskCheckerImpl {$/;"	c	namespace:rtc
SequencedTaskCheckerScope	webrtc/base/sequenced_task_checker.h	/^class SCOPED_LOCKABLE SequencedTaskCheckerScope {$/;"	c	namespace:rtc::internal
SequencedTaskCheckerScope	webrtc/base/sequenced_task_checker_impl.cc	/^SequencedTaskCheckerScope::SequencedTaskCheckerScope($/;"	f	class:rtc::internal::SequencedTaskCheckerScope
ServerCloseDuringConnectInternal	webrtc/base/socket_unittest.cc	/^void SocketTest::ServerCloseDuringConnectInternal(const IPAddress& loopback) {$/;"	f	class:rtc::SocketTest
ServerCloseInternal	webrtc/base/socket_unittest.cc	/^void SocketTest::ServerCloseInternal(const IPAddress& loopback) {$/;"	f	class:rtc::SocketTest
Set	webrtc/base/event.cc	/^void Event::Set() {$/;"	f	class:rtc::Event
Set	webrtc/modules/audio_processing/include/audio_processing.h	/^    void Set(const Statistic& other) {$/;"	f	struct:webrtc::AudioProcessing::Stat
Set	webrtc/modules/audio_processing/include/audio_processing.h	/^    void Set(float instant, float average, float maximum, float minimum) {$/;"	f	struct:webrtc::AudioProcessing::Stat
Set	webrtc/modules/audio_processing/include/config.h	/^void Config::Set(T* value) {$/;"	f	class:webrtc::Config
Set	webrtc/modules/audio_processing/vad/vad_circular_buffer.cc	/^int VadCircularBuffer::Set(int index, double value) {$/;"	f	class:webrtc::VadCircularBuffer
Set	webrtc/system_wrappers/include/ntp_time.h	/^  void Set(uint32_t seconds, uint32_t fractions) {$/;"	f	class:webrtc::NtpTime
Set8	webrtc/base/byteorder.h	/^inline void Set8(void* memory, size_t offset, uint8_t v) {$/;"	f	namespace:rtc
SetAdaptiveFilterStepSize	webrtc/modules/audio_processing/aec/aec_core.cc	/^static void SetAdaptiveFilterStepSize(AecCore* aec) {$/;"	f	namespace:webrtc
SetAllowBlockingCalls	webrtc/base/thread.cc	/^bool Thread::SetAllowBlockingCalls(bool allow) {$/;"	f	class:rtc::Thread
SetAlternativeLocalAddress	webrtc/base/virtualsocketserver.cc	/^void VirtualSocket::SetAlternativeLocalAddress(const SocketAddress& addr) {$/;"	f	class:rtc::VirtualSocket
SetApplicationName	webrtc/base/fileutils.h	/^  static void SetApplicationName(const std::string& application) {$/;"	f	class:rtc::Filesystem
SetApplicationName	webrtc/base/fileutils.h	/^  void SetApplicationName(const std::string& application) {$/;"	f	class:rtc::FilesystemInterface
SetApplicationName	webrtc/base/pathutils.h	/^inline void SetApplicationName(const std::string& application) {$/;"	f	namespace:rtc
SetAsync	webrtc/base/win32socketserver.cc	/^bool Win32Socket::SetAsync(int events) {$/;"	f	class:rtc::Win32Socket
SetAutoDetectProxy	webrtc/base/sslsocketfactory.h	/^  void SetAutoDetectProxy() {$/;"	f	class:rtc::SslSocketFactory
SetBE16	webrtc/base/byteorder.h	/^inline void SetBE16(void* memory, uint16_t v) {$/;"	f	namespace:rtc
SetBE32	webrtc/base/byteorder.h	/^inline void SetBE32(void* memory, uint32_t v) {$/;"	f	namespace:rtc
SetBE64	webrtc/base/byteorder.h	/^inline void SetBE64(void* memory, uint64_t v) {$/;"	f	namespace:rtc
SetBasename	webrtc/base/pathutils.cc	/^bool Pathname::SetBasename(const std::string& basename) {$/;"	f	class:rtc::Pathname
SetBit	webrtc/modules/audio_processing/utility/delay_estimator_wrapper.cc	/^static __inline uint32_t SetBit(uint32_t in, int pos) {$/;"	f	file:
SetBoolOnDeleteTask	webrtc/base/task_unittest.cc	/^  SetBoolOnDeleteTask(TaskParent *parent, bool *set_when_deleted)$/;"	f	class:rtc::SetBoolOnDeleteTask
SetBoolOnDeleteTask	webrtc/base/task_unittest.cc	/^class SetBoolOnDeleteTask : public Task {$/;"	c	namespace:rtc	file:
SetCallback	webrtc/base/asyncinvoker-inl.h	/^  void SetCallback(const Callback0<void>& callback) {$/;"	f	class:rtc::NotifyingAsyncClosureBase
SetCapacity	webrtc/base/stream.cc	/^bool FifoBuffer::SetCapacity(size_t size) {$/;"	f	class:rtc::FifoBuffer
SetCaptureMuted	webrtc/modules/audio_processing/agc/agc_manager_direct.cc	/^void AgcManagerDirect::SetCaptureMuted(bool muted) {$/;"	f	class:webrtc::AgcManagerDirect
SetCaptureNoiseEstimate	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer.cc	/^void IntelligibilityEnhancer::SetCaptureNoiseEstimate($/;"	f	class:webrtc::IntelligibilityEnhancer
SetCertificateExpirationTime	webrtc/base/fakesslidentity.h	/^  void SetCertificateExpirationTime(int64_t expiration_time) {$/;"	f	class:rtc::FakeSSLCertificate
SetClockForTesting	webrtc/base/timeutils.cc	/^ClockInterface* SetClockForTesting(ClockInterface* clock) {$/;"	f	namespace:rtc
SetContainerFormat	webrtc/modules/audio_processing/test/test_utils.h	/^void SetContainerFormat(int sample_rate_hz,$/;"	f	namespace:webrtc
SetCurrent	webrtc/system_wrappers/include/ntp_time.h	/^  void SetCurrent(const Clock& clock) {$/;"	f	class:webrtc::NtpTime
SetCurrentThread	webrtc/base/thread.cc	/^void ThreadManager::SetCurrentThread(Thread *thread) {$/;"	f	class:rtc::ThreadManager
SetCurrentThreadName	webrtc/base/platform_thread.cc	/^void SetCurrentThreadName(const char* name) {$/;"	f	namespace:rtc
SetCustomAssertLogger	webrtc/base/common.cc	/^void SetCustomAssertLogger(AssertLogger logger) {$/;"	f	namespace:rtc
SetDamage	webrtc/base/sslstreamadapter_unittest.cc	/^  void SetDamage() {$/;"	f	class:SSLStreamAdapterTestBase
SetData	webrtc/base/buffer.h	/^  size_t SetData(size_t max_elements, F&& setter) {$/;"	f	class:rtc::BufferT
SetData	webrtc/base/buffer.h	/^  void SetData(const U* data, size_t size) {$/;"	f	class:rtc::BufferT
SetData	webrtc/base/buffer.h	/^  void SetData(const W& w) {$/;"	f	class:rtc::BufferT
SetData	webrtc/base/copyonwritebuffer.h	/^  void SetData(const CopyOnWriteBuffer& buf) {$/;"	f	class:rtc::CopyOnWriteBuffer
SetData	webrtc/base/copyonwritebuffer.h	/^  void SetData(const T* data, size_t size) {$/;"	f	class:rtc::CopyOnWriteBuffer
SetData	webrtc/base/stream.cc	/^void ExternalMemoryStream::SetData(void* data, size_t length) {$/;"	f	class:rtc::ExternalMemoryStream
SetData	webrtc/base/stream.cc	/^void MemoryStream::SetData(const void* data, size_t length) {$/;"	f	class:rtc::MemoryStream
SetDataForTesting	webrtc/common_audio/channel_buffer.h	/^  void SetDataForTesting(const T* data, size_t size) {$/;"	f	class:webrtc::ChannelBuffer
SetDefaultRoute	webrtc/base/virtualsocketserver.cc	/^void VirtualSocketServer::SetDefaultRoute(const IPAddress& from_addr) {$/;"	f	class:rtc::VirtualSocketServer
SetDelay	webrtc/base/sslstreamadapter_unittest.cc	/^  void SetDelay(int delay) {$/;"	f	class:SSLStreamAdapterTestBase
SetDelayOnAddress	webrtc/base/virtualsocketserver.h	/^  void SetDelayOnAddress(const rtc::SocketAddress& address, int delay_ms) {$/;"	f	class:rtc::VirtualSocketServer
SetDtlsSrtpCryptoSuites	webrtc/base/opensslstreamadapter.cc	/^bool OpenSSLStreamAdapter::SetDtlsSrtpCryptoSuites($/;"	f	class:rtc::OpenSSLStreamAdapter
SetDtlsSrtpCryptoSuites	webrtc/base/sslstreamadapter.cc	/^bool SSLStreamAdapter::SetDtlsSrtpCryptoSuites($/;"	f	class:rtc::SSLStreamAdapter
SetDtlsSrtpCryptoSuites	webrtc/base/sslstreamadapter_unittest.cc	/^  void SetDtlsSrtpCryptoSuites(const std::vector<int>& ciphers, bool client) {$/;"	f	class:SSLStreamAdapterTestBase
SetDumpFile	webrtc/modules/audio_processing/test/debug_dump_replayer.cc	/^bool DebugDumpReplayer::SetDumpFile(const std::string& filename) {$/;"	f	class:webrtc::test::DebugDumpReplayer
SetEchoPath	webrtc/modules/audio_processing/echo_control_mobile_impl.cc	/^int EchoControlMobileImpl::SetEchoPath(const void* echo_path,$/;"	f	class:webrtc::EchoControlMobileImpl
SetError	webrtc/base/asyncsocket.cc	/^void AsyncSocketAdapter::SetError(int error) {$/;"	f	class:rtc::AsyncSocketAdapter
SetError	webrtc/base/asynctcpsocket.cc	/^void AsyncTCPSocketBase::SetError(int error) {$/;"	f	class:rtc::AsyncTCPSocketBase
SetError	webrtc/base/asyncudpsocket.cc	/^void AsyncUDPSocket::SetError(int error) {$/;"	f	class:rtc::AsyncUDPSocket
SetError	webrtc/base/physicalsocketserver.cc	/^void PhysicalSocket::SetError(int error) {$/;"	f	class:rtc::PhysicalSocket
SetError	webrtc/base/virtualsocketserver.cc	/^void VirtualSocket::SetError(int error) {$/;"	f	class:rtc::VirtualSocket
SetError	webrtc/base/win32socketserver.cc	/^void Win32Socket::SetError(int error) {$/;"	f	class:rtc::Win32Socket
SetErrorThreshold	webrtc/modules/audio_processing/aec/aec_core.cc	/^static void SetErrorThreshold(AecCore* aec) {$/;"	f	namespace:webrtc
SetExpectedThreadCount	webrtc/base/criticalsection_unittest.cc	/^  void SetExpectedThreadCount(int count) {$/;"	f	class:rtc::__anon10::RunnerBase
SetExpectedThreadForIntCallback	webrtc/base/thread_unittest.cc	/^  void SetExpectedThreadForIntCallback(Thread* thread) {$/;"	f	class:AsyncInvokeTest
SetExpectedThreadForIntCallback	webrtc/base/thread_unittest.cc	/^  void SetExpectedThreadForIntCallback(Thread* thread) {$/;"	f	class:GuardedAsyncInvokeTest
SetExtension	webrtc/base/pathutils.cc	/^bool Pathname::SetExtension(const std::string& extension) {$/;"	f	class:rtc::Pathname
SetExtraOptions	webrtc/modules/audio_processing/audio_processing_impl.cc	/^void AudioProcessingImpl::SetExtraOptions(const webrtc::Config& config) {$/;"	f	class:webrtc::AudioProcessingImpl
SetExtraOptions	webrtc/modules/audio_processing/echo_cancellation_impl.cc	/^void EchoCancellationImpl::SetExtraOptions(const webrtc::Config& config) {$/;"	f	class:webrtc::EchoCancellationImpl
SetFactory	webrtc/base/networkmonitor.cc	/^void NetworkMonitorFactory::SetFactory(NetworkMonitorFactory* factory) {$/;"	f	class:rtc::NetworkMonitorFactory
SetFailAccept	webrtc/base/physicalsocketserver_unittest.cc	/^  void SetFailAccept(bool fail) { fail_accept_ = fail; }$/;"	f	class:rtc::PhysicalSocketTest
SetFilename	webrtc/base/pathutils.cc	/^bool Pathname::SetFilename(const std::string& filename) {$/;"	f	class:rtc::Pathname
SetFlagRunFunction	webrtc/base/platform_thread_unittest.cc	/^bool SetFlagRunFunction(void* obj) {$/;"	f	namespace:rtc::__anon43
SetFlagsFromCommandLine	webrtc/base/flags.cc	/^int FlagList::SetFlagsFromCommandLine(int* argc, const char** argv,$/;"	f	class:rtc::FlagList
SetFlagsFromCommandLine	webrtc/base/flags.h	/^  static inline int SetFlagsFromCommandLine(int* argc,$/;"	f	class:rtc::FlagList
SetFloatArray	webrtc/common_audio/lapped_transform_unittest.cc	/^void SetFloatArray(float value, int rows, int cols, float* const* array) {$/;"	f	namespace:__anon81
SetFolder	webrtc/base/pathutils.cc	/^void Pathname::SetFolder(const std::string& folder) {$/;"	f	class:rtc::Pathname
SetFolderDelimiter	webrtc/base/pathutils.cc	/^void Pathname::SetFolderDelimiter(char delimiter) {$/;"	f	class:rtc::Pathname
SetForceConnect	webrtc/base/socketadapters.h	/^  void SetForceConnect(bool force) { force_connect_ = force; }$/;"	f	class:rtc::AsyncHttpsProxySocket
SetForceConnect	webrtc/base/sslsocketfactory.h	/^  void SetForceConnect(bool force) {$/;"	f	class:rtc::SslSocketFactory
SetFrameSampleRate	webrtc/modules/audio_processing/test/test_utils.cc	/^void SetFrameSampleRate(AudioFrame* frame,$/;"	f	namespace:webrtc
SetFrameTo	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^void SetFrameTo(AudioFrame* frame, int16_t left, int16_t right) {$/;"	f	namespace:webrtc::__anon183
SetFrameTo	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^void SetFrameTo(AudioFrame* frame, int16_t value) {$/;"	f	namespace:webrtc::__anon183
SetGofInfoVP9	webrtc/modules/include/module_common_types.h	/^  void SetGofInfoVP9(TemporalStructureMode tm) {$/;"	f	struct:webrtc::GofInfoVP9
SetHandler	webrtc/base/physicalsocketserver.cc	/^  void SetHandler(int signum, void (*handler)(int)) {$/;"	f	class:rtc::PosixSignalDispatcher
SetHandshakeWait	webrtc/base/ssladapter_unittest.cc	/^  void SetHandshakeWait(int wait) {$/;"	f	class:SSLAdapterTestBase
SetHandshakeWait	webrtc/base/sslstreamadapter_unittest.cc	/^  void SetHandshakeWait(int wait) {$/;"	f	class:SSLStreamAdapterTestBase
SetIP	webrtc/base/socketaddress.cc	/^void SocketAddress::SetIP(const IPAddress& ip) {$/;"	f	class:rtc::SocketAddress
SetIP	webrtc/base/socketaddress.cc	/^void SocketAddress::SetIP(const std::string& hostname) {$/;"	f	class:rtc::SocketAddress
SetIP	webrtc/base/socketaddress.cc	/^void SocketAddress::SetIP(uint32_t ip_as_host_order_integer) {$/;"	f	class:rtc::SocketAddress
SetIPs	webrtc/base/network.cc	/^bool Network::SetIPs(const std::vector<InterfaceAddress>& ips, bool changed) {$/;"	f	class:rtc::Network
SetIdentity	webrtc/base/opensslstreamadapter.cc	/^void OpenSSLStreamAdapter::SetIdentity(SSLIdentity* identity) {$/;"	f	class:rtc::OpenSSLStreamAdapter
SetIgnoreBadCert	webrtc/base/sslsocketfactory.h	/^  void SetIgnoreBadCert(bool ignore) { ignore_bad_cert_ = ignore; }$/;"	f	class:rtc::SslSocketFactory
SetIncrementingData	webrtc/common_audio/ring_buffer_unittest.cc	/^static int SetIncrementingData(int* data, int num_elements,$/;"	f	namespace:webrtc
SetInputRate	webrtc/modules/audio_processing/test/debug_dump_test.cc	/^void DebugDumpGenerator::SetInputRate(int rate_hz) {$/;"	f	class:webrtc::test::__anon223::DebugDumpGenerator
SetIntValue	webrtc/base/optionsfile.cc	/^bool OptionsFile::SetIntValue(const std::string& option,$/;"	f	class:rtc::OptionsFile
SetLE16	webrtc/base/byteorder.h	/^inline void SetLE16(void* memory, uint16_t v) {$/;"	f	namespace:rtc
SetLE32	webrtc/base/byteorder.h	/^inline void SetLE32(void* memory, uint32_t v) {$/;"	f	namespace:rtc
SetLE64	webrtc/base/byteorder.h	/^inline void SetLE64(void* memory, uint64_t v) {$/;"	f	namespace:rtc
SetLevel	webrtc/modules/audio_processing/agc/agc_manager_direct.cc	/^void AgcManagerDirect::SetLevel(int new_level) {$/;"	f	class:webrtc::AgcManagerDirect
SetLocalAddress	webrtc/base/virtualsocketserver.cc	/^void VirtualSocket::SetLocalAddress(const SocketAddress& addr) {$/;"	f	class:rtc::VirtualSocket
SetLogToStderr	webrtc/base/logging.cc	/^void LogMessage::SetLogToStderr(bool log_to_stderr) {$/;"	f	class:rtc::LogMessage
SetLogging	webrtc/base/sslsocketfactory.h	/^  void SetLogging(LoggingSeverity level, const std::string& label, $/;"	f	class:rtc::SslSocketFactory
SetLoseFirstPacket	webrtc/base/sslstreamadapter_unittest.cc	/^  void SetLoseFirstPacket(bool lose) {$/;"	f	class:SSLStreamAdapterTestBase
SetLoss	webrtc/base/sslstreamadapter_unittest.cc	/^  void SetLoss(int percent) {$/;"	f	class:SSLStreamAdapterTestBase
SetMaxFileSize	webrtc/base/filerotatingstream.h	/^  void SetMaxFileSize(size_t size) { max_file_size_ = size; }$/;"	f	class:rtc::FileRotatingStream
SetMaxFileSize	webrtc/system_wrappers/source/file_impl.cc	/^void FileWrapper::SetMaxFileSize(size_t bytes) {$/;"	f	class:webrtc::FileWrapper
SetMaxLevel	webrtc/modules/audio_processing/agc/agc_manager_direct.cc	/^void AgcManagerDirect::SetMaxLevel(int level) {$/;"	f	class:webrtc::AgcManagerDirect
SetMaxProtocolVersion	webrtc/base/opensslstreamadapter.cc	/^void OpenSSLStreamAdapter::SetMaxProtocolVersion(SSLProtocolVersion version) {$/;"	f	class:rtc::OpenSSLStreamAdapter
SetMaxRate	webrtc/base/rate_limiter.cc	/^void RateLimiter::SetMaxRate(uint32_t max_rate_bps) {$/;"	f	class:webrtc::RateLimiter
SetMaxSendSize	webrtc/base/physicalsocketserver_unittest.cc	/^  void SetMaxSendSize(int max_size) { max_send_size_ = max_size; }$/;"	f	class:rtc::PhysicalSocketTest
SetMessageQueue	webrtc/base/firewallsocketserver.cc	/^void FirewallSocketServer::SetMessageQueue(MessageQueue* queue) {$/;"	f	class:rtc::FirewallSocketServer
SetMessageQueue	webrtc/base/natsocketfactory.cc	/^void NATSocketServer::SetMessageQueue(MessageQueue* queue) {$/;"	f	class:rtc::NATSocketServer
SetMessageQueue	webrtc/base/socketserver.h	/^  virtual void SetMessageQueue(MessageQueue* queue) {}$/;"	f	class:rtc::SocketServer
SetMessageQueue	webrtc/base/virtualsocketserver.cc	/^void VirtualSocketServer::SetMessageQueue(MessageQueue* msg_queue) {$/;"	f	class:rtc::VirtualSocketServer
SetMessageQueue	webrtc/base/win32socketserver.cc	/^void Win32SocketServer::SetMessageQueue(MessageQueue* queue) {$/;"	f	class:rtc::Win32SocketServer
SetMicVolume	webrtc/modules/audio_processing/gain_control_for_experimental_agc.cc	/^void GainControlForExperimentalAgc::SetMicVolume(int volume) {$/;"	f	class:webrtc::GainControlForExperimentalAgc
SetMode	webrtc/base/openssladapter.cc	/^OpenSSLAdapter::SetMode(SSLMode mode) {$/;"	f	class:rtc::OpenSSLAdapter
SetMode	webrtc/base/opensslstreamadapter.cc	/^void OpenSSLStreamAdapter::SetMode(SSLMode mode) {$/;"	f	class:rtc::OpenSSLStreamAdapter
SetMtu	webrtc/base/sslstreamadapter_unittest.cc	/^  void SetMtu(size_t mtu) {$/;"	f	class:SSLStreamAdapterTestBase
SetName	webrtc/base/signalthread.cc	/^bool SignalThread::SetName(const std::string& name, const void* obj) {$/;"	f	class:rtc::SignalThread
SetName	webrtc/base/thread.cc	/^bool Thread::SetName(const std::string& name, const void* obj) {$/;"	f	class:rtc::Thread
SetNameOnSignalQueueDestroyedTester	webrtc/base/thread_unittest.cc	/^  SetNameOnSignalQueueDestroyedTester(Thread* thread) : thread_(thread) {$/;"	f	class:SetNameOnSignalQueueDestroyedTester
SetNameOnSignalQueueDestroyedTester	webrtc/base/thread_unittest.cc	/^class SetNameOnSignalQueueDestroyedTester : public sigslot::has_slots<> {$/;"	c	file:
SetNextPortForTesting	webrtc/base/virtualsocketserver.cc	/^void VirtualSocketServer::SetNextPortForTesting(uint16_t port) {$/;"	f	class:rtc::VirtualSocketServer
SetNonBlocking	webrtc/base/task_queue_libevent.cc	/^bool SetNonBlocking(int fd) {$/;"	f	namespace:rtc::__anon65
SetNotActive	webrtc/base/task_queue_gcd.cc	/^  static void SetNotActive(void* context) {$/;"	f	struct:rtc::TaskQueue::QueueContext
SetNumColumns	webrtc/modules/audio_processing/beamformer/matrix.h	/^  void SetNumColumns(const size_t num_columns) { num_columns_ = num_columns; }$/;"	f	class:webrtc::Matrix
SetNumRows	webrtc/modules/audio_processing/beamformer/matrix.h	/^  void SetNumRows(const size_t num_rows) { num_rows_ = num_rows; }$/;"	f	class:webrtc::Matrix
SetOption	webrtc/base/asyncsocket.cc	/^int AsyncSocketAdapter::SetOption(Option opt, int value) {$/;"	f	class:rtc::AsyncSocketAdapter
SetOption	webrtc/base/asynctcpsocket.cc	/^int AsyncTCPSocketBase::SetOption(Socket::Option opt, int value) {$/;"	f	class:rtc::AsyncTCPSocketBase
SetOption	webrtc/base/asyncudpsocket.cc	/^int AsyncUDPSocket::SetOption(Socket::Option opt, int value) {$/;"	f	class:rtc::AsyncUDPSocket
SetOption	webrtc/base/physicalsocketserver.cc	/^int PhysicalSocket::SetOption(Option opt, int value) {$/;"	f	class:rtc::PhysicalSocket
SetOption	webrtc/base/testclient.cc	/^int TestClient::SetOption(Socket::Option opt, int value) {$/;"	f	class:rtc::TestClient
SetOption	webrtc/base/virtualsocketserver.cc	/^int VirtualSocket::SetOption(Option opt, int value) {$/;"	f	class:rtc::VirtualSocket
SetOption	webrtc/base/win32socketserver.cc	/^int Win32Socket::SetOption(Option opt, int value) {$/;"	f	class:rtc::Win32Socket
SetOrganizationName	webrtc/base/fileutils.h	/^  static void SetOrganizationName(const std::string& organization) {$/;"	f	class:rtc::Filesystem
SetOrganizationName	webrtc/base/fileutils.h	/^  void SetOrganizationName(const std::string& organization) {$/;"	f	class:rtc::FilesystemInterface
SetOrganizationName	webrtc/base/pathutils.h	/^inline void SetOrganizationName(const std::string& organization) {$/;"	f	namespace:rtc
SetOutputChannels	webrtc/modules/audio_processing/test/debug_dump_test.cc	/^void DebugDumpGenerator::SetOutputChannels(int channels) {$/;"	f	class:webrtc::test::__anon223::DebugDumpGenerator
SetOutputRate	webrtc/modules/audio_processing/test/debug_dump_test.cc	/^void DebugDumpGenerator::SetOutputRate(int rate_hz) {$/;"	f	class:webrtc::test::__anon223::DebugDumpGenerator
SetParameters	webrtc/modules/audio_processing/typing_detection.cc	/^void TypingDetection::SetParameters(int time_window,$/;"	f	class:webrtc::TypingDetection
SetPathname	webrtc/base/pathutils.cc	/^void Pathname::SetPathname(const std::string& folder,$/;"	f	class:rtc::Pathname
SetPathname	webrtc/base/pathutils.cc	/^void Pathname::SetPathname(const std::string& pathname) {$/;"	f	class:rtc::Pathname
SetPeerCertificateDigest	webrtc/base/opensslstreamadapter.cc	/^bool OpenSSLStreamAdapter::SetPeerCertificateDigest($/;"	f	class:rtc::OpenSSLStreamAdapter
SetPeerIdentitiesByDigest	webrtc/base/sslstreamadapter_unittest.cc	/^  void SetPeerIdentitiesByDigest(bool correct, bool expect_success) {$/;"	f	class:SSLStreamAdapterTestBase
SetPort	webrtc/base/physicalsocketserver.cc	/^#undef SetPort$/;"	d	file:
SetPort	webrtc/base/socketaddress.cc	/^void SocketAddress::SetPort(int port) {$/;"	f	class:rtc::SocketAddress
SetPort	webrtc/base/socketaddress.h	/^#undef SetPort$/;"	d
SetPort	webrtc/base/win32.h	/^#undef SetPort$/;"	d
SetPosition	webrtc/base/stream.cc	/^bool FileStream::SetPosition(size_t position) {$/;"	f	class:rtc::FileStream
SetPosition	webrtc/base/stream.cc	/^bool MemoryStreamBase::SetPosition(size_t position) {$/;"	f	class:rtc::MemoryStreamBase
SetPosition	webrtc/base/stream.cc	/^bool StreamAdapterInterface::SetPosition(size_t position) {$/;"	f	class:rtc::StreamAdapterInterface
SetPosition	webrtc/base/stream.cc	/^bool StreamInterface::SetPosition(size_t position) {$/;"	f	class:rtc::StreamInterface
SetPosition	webrtc/base/stream.cc	/^bool StringStream::SetPosition(size_t position) {$/;"	f	class:rtc::StringStream
SetPosition	webrtc/base/stream_unittest.cc	/^  virtual bool SetPosition(size_t position) {$/;"	f	class:rtc::TestStream
SetPosixSignalHandler	webrtc/base/physicalsocketserver.cc	/^bool PhysicalSocketServer::SetPosixSignalHandler(int signum,$/;"	f	class:rtc::PhysicalSocketServer
SetPriority	webrtc/base/platform_thread.cc	/^bool PlatformThread::SetPriority(ThreadPriority priority) {$/;"	f	class:rtc::PlatformThread
SetProxy	webrtc/base/autodetectproxy_unittest.cc	/^  void SetProxy(const SocketAddress& proxy) {$/;"	f	class:rtc::AutoDetectProxyTest
SetProxy	webrtc/base/sslsocketfactory.h	/^  void SetProxy(const ProxyInfo& proxy) {$/;"	f	class:rtc::SslSocketFactory
SetRandomTestMode	webrtc/base/helpers.cc	/^void SetRandomTestMode(bool test) {$/;"	f	namespace:rtc
SetRatio	webrtc/common_audio/resampler/sinc_resampler.cc	/^void SincResampler::SetRatio(double io_sample_rate_ratio) {$/;"	f	class:webrtc::SincResampler
SetReadBlock	webrtc/base/testutils.h	/^  void SetReadBlock(size_t pos) { read_block_ = pos; }$/;"	f	class:testing::StreamSource
SetResolvedIP	webrtc/base/socketaddress.cc	/^void SocketAddress::SetResolvedIP(const IPAddress& ip) {$/;"	f	class:rtc::SocketAddress
SetResolvedIP	webrtc/base/socketaddress.cc	/^void SocketAddress::SetResolvedIP(uint32_t ip_as_host_order_integer) {$/;"	f	class:rtc::SocketAddress
SetReverseRate	webrtc/modules/audio_processing/test/debug_dump_test.cc	/^void DebugDumpGenerator::SetReverseRate(int rate_hz) {$/;"	f	class:webrtc::test::__anon223::DebugDumpGenerator
SetRotationIndex	webrtc/base/filerotatingstream.h	/^  void SetRotationIndex(size_t index) { rotation_index_ = index; }$/;"	f	class:rtc::FileRotatingStream
SetScopeID	webrtc/base/socketaddress.h	/^  void SetScopeID(int id) { scope_id_ = id; }$/;"	f	class:rtc::SocketAddress
SetSendingBlocked	webrtc/base/virtualsocketserver.cc	/^void VirtualSocketServer::SetSendingBlocked(bool blocked) {$/;"	f	class:rtc::VirtualSocketServer
SetServerRole	webrtc/base/opensslstreamadapter.cc	/^void OpenSSLStreamAdapter::SetServerRole(SSLRole role) {$/;"	f	class:rtc::OpenSSLStreamAdapter
SetSettingIfFlagSet	webrtc/modules/audio_processing/test/audioproc_float.cc	/^void SetSettingIfFlagSet(int32_t flag, rtc::Optional<bool>* parameter) {$/;"	f	namespace:webrtc::test::__anon221
SetSettingIfSpecified	webrtc/modules/audio_processing/test/audioproc_float.cc	/^void SetSettingIfSpecified(const std::string value,$/;"	f	namespace:webrtc::test::__anon221
SetSettingIfSpecified	webrtc/modules/audio_processing/test/audioproc_float.cc	/^void SetSettingIfSpecified(int value, rtc::Optional<int>* parameter) {$/;"	f	namespace:webrtc::test::__anon221
SetSize	webrtc/base/buffer.h	/^  void SetSize(size_t size) {$/;"	f	class:rtc::BufferT
SetSize	webrtc/base/copyonwritebuffer.cc	/^void CopyOnWriteBuffer::SetSize(size_t size) {$/;"	f	class:rtc::CopyOnWriteBuffer
SetState	webrtc/base/testutils.h	/^  void SetState(StreamState state) {$/;"	f	class:testing::StreamSource
SetStringValue	webrtc/base/optionsfile.cc	/^bool OptionsFile::SetStringValue(const std::string& option,$/;"	f	class:rtc::OptionsFile
SetTimeNanos	webrtc/base/fakeclock.cc	/^void FakeClock::SetTimeNanos(uint64_t nanos) {$/;"	f	class:rtc::FakeClock
SetTimeout	webrtc/base/win32socketserver.cc	/^void Win32Socket::SetTimeout(int ms) {$/;"	f	class:rtc::Win32Socket
SetTimerTask	webrtc/base/task_queue_libevent.cc	/^  SetTimerTask(std::unique_ptr<QueuedTask> task, uint32_t milliseconds)$/;"	f	class:rtc::TaskQueue::SetTimerTask
SetTimerTask	webrtc/base/task_queue_libevent.cc	/^class TaskQueue::SetTimerTask : public QueuedTask {$/;"	c	class:rtc::TaskQueue	file:
SetToDefault	webrtc/base/flags.cc	/^void Flag::SetToDefault() {$/;"	f	class:rtc::Flag
SetTraceCallback	webrtc/system_wrappers/source/trace_impl.cc	/^int32_t Trace::SetTraceCallback(TraceCallback* callback) {$/;"	f	class:webrtc::Trace
SetTraceCallbackImpl	webrtc/system_wrappers/source/trace_impl.cc	/^int32_t TraceImpl::SetTraceCallbackImpl(TraceCallback* callback) {$/;"	f	class:webrtc::TraceImpl
SetTraceFile	webrtc/system_wrappers/source/trace_impl.cc	/^int32_t Trace::SetTraceFile(const char* file_name,$/;"	f	class:webrtc::Trace
SetTraceFileImpl	webrtc/system_wrappers/source/trace_impl.cc	/^int32_t TraceImpl::SetTraceFileImpl(const char* file_name_utf8,$/;"	f	class:webrtc::TraceImpl
SetTraceValue	webrtc/base/trace_event.h	/^static inline void SetTraceValue(const std::string& arg,$/;"	f	namespace:webrtc::trace_event_internal
SetUp	webrtc/base/file_unittest.cc	/^  void SetUp() {$/;"	f	class:rtc::FileTest
SetUp	webrtc/base/httpbase_unittest.cc	/^  virtual void SetUp() { }$/;"	f	class:rtc::HttpBaseTest
SetUp	webrtc/base/physicalsocketserver_unittest.cc	/^  void SetUp() {$/;"	f	class:rtc::PosixSignalDeliveryTest
SetUp	webrtc/base/sharedexclusivelock_unittest.cc	/^  virtual void SetUp() {$/;"	f	class:rtc::SharedExclusiveLockTest
SetUp	webrtc/base/signalthread_unittest.cc	/^  virtual void SetUp() {$/;"	f	class:SignalThreadTest
SetUp	webrtc/base/sigslot_unittest.cc	/^  virtual void SetUp() {$/;"	f	class:SigslotMTLockTest
SetUp	webrtc/base/sigslot_unittest.cc	/^  virtual void SetUp() {$/;"	f	class:SigslotSlotTest
SetUp	webrtc/base/socket_unittest.h	/^  virtual void SetUp() { ss_ = Thread::Current()->socketserver(); }$/;"	f	class:rtc::SocketTest
SetUp	webrtc/base/sslidentity_unittest.cc	/^  virtual void SetUp() {$/;"	f	class:SSLIdentityTest
SetUp	webrtc/base/virtualsocket_unittest.cc	/^  virtual void SetUp() {$/;"	f	class:VirtualSocketServerTest
SetUp	webrtc/common_audio/resampler/resampler_unittest.cc	/^void ResamplerTest::SetUp() {$/;"	f	class:webrtc::__anon86::ResamplerTest
SetUp	webrtc/common_audio/vad/vad_unittest.cc	/^void VadTest::SetUp() {}$/;"	f	class:VadTest
SetUp	webrtc/modules/audio_processing/aec/system_delay_unittest.cc	/^void SystemDelayTest::SetUp() {$/;"	f	class:webrtc::__anon162::SystemDelayTest
SetUp	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^void AudioProcessingImplLockTest::SetUp() {$/;"	f	class:webrtc::__anon181::AudioProcessingImplLockTest
SetUp	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^void ApmTest::SetUp() {$/;"	f	class:webrtc::__anon183::ApmTest
SetUp	webrtc/modules/audio_processing/transient/moving_moments_unittest.cc	/^void MovingMomentsTest::SetUp() {$/;"	f	class:webrtc::MovingMomentsTest
SetUp	webrtc/modules/audio_processing/utility/delay_estimator_unittest.cc	/^void DelayEstimatorTest::SetUp() {$/;"	f	class:__anon232::DelayEstimatorTest
SetUpTestCase	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^  static void SetUpTestCase() {$/;"	f	class:webrtc::__anon183::ApmTest
SetUpTestCase	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^  static void SetUpTestCase() {$/;"	f	class:webrtc::__anon183::AudioProcessingTest
SetValue	webrtc/base/win32regkey.cc	/^HRESULT RegKey::SetValue(const wchar_t* full_key_name,$/;"	f	class:rtc::RegKey
SetValue	webrtc/base/win32regkey.cc	/^HRESULT RegKey::SetValue(const wchar_t* value_name, DWORD value) const {$/;"	f	class:rtc::RegKey
SetValue	webrtc/base/win32regkey.cc	/^HRESULT RegKey::SetValue(const wchar_t* value_name, DWORD64 value) const {$/;"	f	class:rtc::RegKey
SetValue	webrtc/base/win32regkey.cc	/^HRESULT RegKey::SetValue(const wchar_t* value_name,$/;"	f	class:rtc::RegKey
SetValueMultiSZ	webrtc/base/win32regkey.cc	/^HRESULT RegKey::SetValueMultiSZ(const wchar_t* full_key_name,$/;"	f	class:rtc::RegKey
SetValueStaticHelper	webrtc/base/win32regkey.cc	/^HRESULT RegKey::SetValueStaticHelper(const wchar_t* full_key_name,$/;"	f	class:rtc::RegKey
SetVolumeAndProcess	webrtc/modules/audio_processing/agc/agc_manager_direct_unittest.cc	/^  void SetVolumeAndProcess(int volume) {$/;"	f	class:webrtc::AgcManagerDirectTest
SetWindowSize	webrtc/base/rate_limiter.cc	/^bool RateLimiter::SetWindowSize(int64_t window_size_ms) {$/;"	f	class:webrtc::RateLimiter
SetWindowSize	webrtc/base/rate_statistics.cc	/^bool RateStatistics::SetWindowSize(int64_t window_size_ms, int64_t now_ms) {$/;"	f	class:webrtc::RateStatistics
SetWriteBlock	webrtc/base/testutils.h	/^  void SetWriteBlock(size_t pos) { write_block_ = pos; }$/;"	f	class:testing::StreamSource
SettingsDescription	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^  std::string SettingsDescription() const {$/;"	f	struct:webrtc::__anon182::SimulationConfig
SettingsType	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^enum class SettingsType {$/;"	c	namespace:webrtc::__anon182	file:
Setup	webrtc/base/dbus.cc	/^  bool Setup() {$/;"	f	class:rtc::DBusMonitor::DBusMonitoringThread	file:
Setup	webrtc/base/optional_unittest.cc	/^  static std::unique_ptr<std::vector<std::string>> Setup() {$/;"	f	class:rtc::__anon41::Logger
SetupBuffersConfigsOutputs	webrtc/modules/audio_processing/test/audio_processing_simulator.cc	/^void AudioProcessingSimulator::SetupBuffersConfigsOutputs($/;"	f	class:webrtc::test::AudioProcessingSimulator
SetupComponent	webrtc/modules/audio_processing/echo_cancellation_bit_exact_unittest.cc	/^void SetupComponent(int sample_rate_hz,$/;"	f	namespace:webrtc::__anon192
SetupComponent	webrtc/modules/audio_processing/echo_control_mobile_unittest.cc	/^void SetupComponent(int sample_rate_hz,$/;"	f	namespace:webrtc::__anon195
SetupComponent	webrtc/modules/audio_processing/gain_control_unittest.cc	/^void SetupComponent(int sample_rate_hz,$/;"	f	namespace:webrtc::__anon199
SetupDocument	webrtc/base/httpbase_unittest.cc	/^void HttpBaseTest::SetupDocument(const char* document_data) {$/;"	f	class:rtc::HttpBaseTest
SetupEventTracer	webrtc/base/event_tracer.cc	/^void SetupEventTracer(GetCategoryEnabledPtr get_category_enabled_ptr,$/;"	f	namespace:webrtc
SetupFrame	webrtc/modules/audio_processing/test/audio_buffer_tools.cc	/^void SetupFrame(const StreamConfig& stream_config,$/;"	f	namespace:webrtc::test
SetupInternalTracer	webrtc/base/event_tracer.cc	/^void SetupInternalTracer() {$/;"	f	namespace:rtc::tracing
SetupNetworks	webrtc/base/network_unittest.cc	/^void SetupNetworks(NetworkManager::NetworkList* list) {$/;"	f	namespace:rtc
SetupOutput	webrtc/modules/audio_processing/test/audio_processing_simulator.cc	/^void AudioProcessingSimulator::SetupOutput() {$/;"	f	class:webrtc::test::AudioProcessingSimulator
SetupProtocolVersions	webrtc/base/sslstreamadapter_unittest.cc	/^  void SetupProtocolVersions(rtc::SSLProtocolVersion server_version,$/;"	f	class:SSLStreamAdapterTestBase
SetupSSLContext	webrtc/base/openssladapter.cc	/^OpenSSLAdapter::SetupSSLContext() {$/;"	f	class:rtc::OpenSSLAdapter
SetupSSLContext	webrtc/base/opensslstreamadapter.cc	/^SSL_CTX* OpenSSLStreamAdapter::SetupSSLContext() {$/;"	f	class:rtc::OpenSSLStreamAdapter
SetupSource	webrtc/base/httpbase_unittest.cc	/^void HttpBaseTest::SetupSource(const char* http_data) {$/;"	f	class:rtc::HttpBaseTest
Severity	webrtc/base/java/src/org/webrtc/Logging.java	/^  public enum Severity { LS_SENSITIVE, LS_VERBOSE, LS_INFO, LS_WARNING, LS_ERROR, LS_NONE }$/;"	g	class:Logging
Sha1	webrtc/base/sha1digest_unittest.cc	/^std::string Sha1(const std::string& input) {$/;"	f	namespace:rtc
Sha1Digest	webrtc/base/sha1digest.h	/^  Sha1Digest() {$/;"	f	class:rtc::Sha1Digest
Sha1Digest	webrtc/base/sha1digest.h	/^class Sha1Digest : public MessageDigest {$/;"	c	namespace:rtc
SharedExclusiveLock	webrtc/base/sharedexclusivelock.cc	/^SharedExclusiveLock::SharedExclusiveLock()$/;"	f	class:rtc::SharedExclusiveLock
SharedExclusiveLock	webrtc/base/sharedexclusivelock.h	/^class LOCKABLE SharedExclusiveLock {$/;"	c	namespace:rtc
SharedExclusiveLockTest	webrtc/base/sharedexclusivelock_unittest.cc	/^  SharedExclusiveLockTest() : value_(0) {$/;"	f	class:rtc::SharedExclusiveLockTest
SharedExclusiveLockTest	webrtc/base/sharedexclusivelock_unittest.cc	/^class SharedExclusiveLockTest$/;"	c	namespace:rtc	file:
SharedExclusiveTask	webrtc/base/sharedexclusivelock_unittest.cc	/^  SharedExclusiveTask(SharedExclusiveLock* shared_exclusive_lock,$/;"	f	class:rtc::SharedExclusiveTask
SharedExclusiveTask	webrtc/base/sharedexclusivelock_unittest.cc	/^class SharedExclusiveTask : public MessageHandler {$/;"	c	namespace:rtc	file:
SharedScope	webrtc/base/sharedexclusivelock.h	/^class SCOPED_LOCKABLE SharedScope {$/;"	c	namespace:rtc
ShouldFilterOut	webrtc/base/natserver.cc	/^bool NATServer::ShouldFilterOut(TransEntry* entry,$/;"	f	class:rtc::NATServer
ShouldIssueConnect	webrtc/base/socketadapters.cc	/^bool AsyncHttpsProxySocket::ShouldIssueConnect() const {$/;"	f	class:rtc::AsyncHttpsProxySocket
ShouldRedirect	webrtc/base/httpclient.cc	/^bool HttpClient::ShouldRedirect(std::string* location) const {$/;"	f	class:rtc::HttpClient
Shutdown	webrtc/base/win32window.cc	/^void Win32Window::Shutdown() {$/;"	f	class:rtc::Win32Window
ShutdownInternalTracer	webrtc/base/event_tracer.cc	/^void ShutdownInternalTracer() {$/;"	f	namespace:rtc::tracing
Signal	webrtc/base/physicalsocketserver.cc	/^  virtual void Signal() {$/;"	f	class:rtc::EventDispatcher
Signal	webrtc/base/sigslot_unittest.cc	/^  void Signal() { SignalMTLoopback(); }$/;"	f	class:SigslotMTLockTest
SignalAddressReady	webrtc/base/asyncpacketsocket.h	/^  sigslot::signal2<AsyncPacketSocket*, const SocketAddress&> SignalAddressReady;$/;"	m	class:rtc::AsyncPacketSocket
SignalAddressReady	webrtc/base/virtualsocketserver.h	/^  sigslot::signal2<VirtualSocket*, const SocketAddress&> SignalAddressReady;$/;"	m	class:rtc::VirtualSocket
SignalBasedDelayCorrection	webrtc/modules/audio_processing/aec/aec_core.cc	/^static int SignalBasedDelayCorrection(AecCore* self) {$/;"	f	namespace:webrtc
SignalClassifier	webrtc/modules/audio_processing/level_controller/signal_classifier.cc	/^SignalClassifier::SignalClassifier(ApmDataDumper* data_dumper)$/;"	f	class:webrtc::SignalClassifier
SignalClassifier	webrtc/modules/audio_processing/level_controller/signal_classifier.h	/^class SignalClassifier {$/;"	c	namespace:webrtc
SignalClose	webrtc/base/asyncpacketsocket.h	/^  sigslot::signal2<AsyncPacketSocket*, int> SignalClose;$/;"	m	class:rtc::AsyncPacketSocket
SignalCloseAllComplete	webrtc/base/httpserver.h	/^  sigslot::signal1<HttpServer*> SignalCloseAllComplete;$/;"	m	class:rtc::HttpServer
SignalCloseEvent	webrtc/base/asyncfile.h	/^  sigslot::signal2<AsyncFile*, int> SignalCloseEvent;$/;"	m	class:rtc::AsyncFile
SignalCloseEvent	webrtc/base/asyncsocket.h	/^  sigslot::signal2<AsyncSocket*, int> SignalCloseEvent;  \/\/ closed$/;"	m	class:rtc::AsyncSocket
SignalConnect	webrtc/base/asyncpacketsocket.h	/^  sigslot::signal1<AsyncPacketSocket*> SignalConnect;$/;"	m	class:rtc::AsyncPacketSocket
SignalConnectEvent	webrtc/base/asyncsocket.h	/^  sigslot::signal1<AsyncSocket*> SignalConnectEvent;     \/\/ connected$/;"	m	class:rtc::AsyncSocket
SignalConnectRequest	webrtc/base/socketadapters.h	/^                   const SocketAddress&>  SignalConnectRequest;$/;"	m	class:rtc::AsyncProxyServerSocket
SignalConnectionClosed	webrtc/base/httpserver.h	/^  sigslot::signal3<HttpServer*, int, StreamInterface*> SignalConnectionClosed;$/;"	m	class:rtc::HttpServer
SignalDestroyed	webrtc/base/proxyserver.h	/^  sigslot::signal1<ProxyBinding*> SignalDestroyed;$/;"	m	class:rtc::ProxyBinding
SignalDone	webrtc/base/asyncresolverinterface.h	/^  sigslot::signal1<AsyncResolverInterface*> SignalDone;$/;"	m	class:rtc::AsyncResolverInterface
SignalDoneId	webrtc/base/task_unittest.cc	/^  sigslot::signal1<const int> SignalDoneId;$/;"	m	class:rtc::IdTimeoutTask	file:
SignalError	webrtc/base/network.h	/^  sigslot::signal0<> SignalError;$/;"	m	class:rtc::NetworkManager
SignalEvent	webrtc/base/stream.h	/^  sigslot::signal3<StreamInterface*, int, int> SignalEvent;$/;"	m	class:rtc::StreamInterface
SignalHeaderAvailable	webrtc/base/httpclient.h	/^  sigslot::signal3<HttpClient*,bool,size_t> SignalHeaderAvailable;$/;"	m	class:rtc::HttpClient
SignalHttpClientComplete	webrtc/base/httpclient.h	/^  sigslot::signal2<HttpClient*,HttpErrorType> SignalHttpClientComplete;$/;"	m	class:rtc::HttpClient
SignalHttpRequest	webrtc/base/httpserver.h	/^  sigslot::signal2<HttpServer*, HttpServerTransaction*> SignalHttpRequest;$/;"	m	class:rtc::HttpServer
SignalHttpRequestComplete	webrtc/base/httpserver.h	/^    SignalHttpRequestComplete;$/;"	m	class:rtc::HttpServer
SignalHttpRequestHeader	webrtc/base/httpserver.h	/^    SignalHttpRequestHeader;$/;"	m	class:rtc::HttpServer
SignalInvokerDestroyed	webrtc/base/asyncinvoker.h	/^  sigslot::signal0<> SignalInvokerDestroyed;$/;"	m	class:rtc::AsyncInvoker
SignalLockCount	webrtc/base/sigslot_unittest.cc	/^  int SignalLockCount() { return SignalMTLoopback.lock_count(); }$/;"	f	class:SigslotMTLockTest
SignalMTLoopback	webrtc/base/sigslot_unittest.cc	/^  sigslot::signal0<mt_signal_policy> SignalMTLoopback;$/;"	m	class:SigslotSlotTest	file:
SignalNetworksChanged	webrtc/base/network.h	/^  sigslot::signal0<> SignalNetworksChanged;$/;"	m	class:rtc::NetworkManager
SignalNetworksChanged	webrtc/base/networkmonitor.h	/^  sigslot::signal0<> SignalNetworksChanged;$/;"	m	class:rtc::NetworkMonitorInterface
SignalNewConnection	webrtc/base/asyncpacketsocket.h	/^  sigslot::signal2<AsyncPacketSocket*, AsyncPacketSocket*> SignalNewConnection;$/;"	m	class:rtc::AsyncPacketSocket
SignalQueueDestroyed	webrtc/base/messagequeue.h	/^  sigslot::signal0<> SignalQueueDestroyed;$/;"	m	class:rtc::MessageQueue
SignalReadEvent	webrtc/base/asyncfile.h	/^  sigslot::signal1<AsyncFile*> SignalReadEvent;$/;"	m	class:rtc::AsyncFile
SignalReadEvent	webrtc/base/asyncsocket.h	/^                   sigslot::multi_threaded_local> SignalReadEvent;$/;"	m	class:rtc::AsyncSocket
SignalReadPacket	webrtc/base/asyncpacketsocket.h	/^                   const PacketTime&> SignalReadPacket;$/;"	m	class:rtc::AsyncPacketSocket
SignalReadyToSend	webrtc/base/asyncpacketsocket.h	/^  sigslot::signal1<AsyncPacketSocket*> SignalReadyToSend;$/;"	m	class:rtc::AsyncPacketSocket
SignalReadyToSend	webrtc/base/virtualsocketserver.h	/^  sigslot::signal0<> SignalReadyToSend;$/;"	m	class:rtc::VirtualSocketServer
SignalSSLHandshakeError	webrtc/base/sslstreamadapter.h	/^  sigslot::signal1<SSLHandshakeError> SignalSSLHandshakeError;$/;"	m	class:rtc::SSLStreamAdapter
SignalSTLoopback	webrtc/base/sigslot_unittest.cc	/^  sigslot::signal0<> SignalSTLoopback;$/;"	m	class:SigslotSlotTest	file:
SignalSentPacket	webrtc/base/asyncpacketsocket.h	/^  sigslot::signal2<AsyncPacketSocket*, const SentPacket&> SignalSentPacket;$/;"	m	class:rtc::AsyncPacketSocket
SignalSocketCreated	webrtc/base/virtualsocketserver.h	/^  sigslot::signal1<VirtualSocket*> SignalSocketCreated;$/;"	m	class:rtc::VirtualSocketServer
SignalThread	webrtc/base/signalthread.cc	/^SignalThread::SignalThread(bool use_socket_server)$/;"	f	class:rtc::SignalThread
SignalThread	webrtc/base/signalthread.h	/^class SignalThread$/;"	c	namespace:rtc
SignalThreadTest	webrtc/base/signalthread_unittest.cc	/^class SignalThreadTest : public testing::Test, public sigslot::has_slots<> {$/;"	c	file:
SignalTimeout	webrtc/base/task.h	/^  sigslot::signal0<> SignalTimeout;$/;"	m	class:rtc::Task
SignalTimeoutId	webrtc/base/task_unittest.cc	/^  sigslot::signal1<const int> SignalTimeoutId;$/;"	m	class:rtc::IdTimeoutTask	file:
SignalType	webrtc/modules/audio_processing/level_controller/signal_classifier.h	/^  enum class SignalType { kHighlyNonStationary, kNonStationary, kStationary };$/;"	c	class:webrtc::SignalClassifier
SignalTypeChanged	webrtc/base/network.h	/^  sigslot::signal1<const Network*> SignalTypeChanged;$/;"	m	class:rtc::Network
SignalWhenDestroyedThread	webrtc/base/thread_unittest.cc	/^  SignalWhenDestroyedThread(Event* event)$/;"	f	class:SignalWhenDestroyedThread
SignalWhenDestroyedThread	webrtc/base/thread_unittest.cc	/^class SignalWhenDestroyedThread : public Thread {$/;"	c	file:
SignalWorkDone	webrtc/base/signalthread.h	/^  sigslot::signal1<SignalThread *> SignalWorkDone;$/;"	m	class:rtc::SignalThread
SignalWriteEvent	webrtc/base/asyncfile.h	/^  sigslot::signal1<AsyncFile*> SignalWriteEvent;$/;"	m	class:rtc::AsyncFile
SignalWriteEvent	webrtc/base/asyncsocket.h	/^                   sigslot::multi_threaded_local> SignalWriteEvent;$/;"	m	class:rtc::AsyncSocket
Signaler	webrtc/base/physicalsocketserver.cc	/^  Signaler(PhysicalSocketServer* ss, bool* pf)$/;"	f	class:rtc::Signaler
Signaler	webrtc/base/physicalsocketserver.cc	/^class Signaler : public EventDispatcher {$/;"	c	namespace:rtc	file:
SigslotDefault	webrtc/base/sigslot_unittest.cc	/^class SigslotDefault : public testing::Test, public sigslot::has_slots<> {$/;"	c	file:
SigslotMTLockBase	webrtc/base/sigslot_unittest.cc	/^                        multi_threaded_local_fake> SigslotMTLockBase;$/;"	t	file:
SigslotMTLockTest	webrtc/base/sigslot_unittest.cc	/^  SigslotMTLockTest() {}$/;"	f	class:SigslotMTLockTest
SigslotMTLockTest	webrtc/base/sigslot_unittest.cc	/^class SigslotMTLockTest : public SigslotMTLockBase {$/;"	c	file:
SigslotMTSlotTest	webrtc/base/sigslot_unittest.cc	/^                        sigslot::multi_threaded_local> SigslotMTSlotTest;$/;"	t	file:
SigslotReceiver	webrtc/base/sigslot_unittest.cc	/^  SigslotReceiver() : signal_(NULL), signal_count_(0) {$/;"	f	class:SigslotReceiver
SigslotReceiver	webrtc/base/sigslot_unittest.cc	/^class SigslotReceiver : public sigslot::has_slots<slot_policy> {$/;"	c	file:
SigslotSTSlotTest	webrtc/base/sigslot_unittest.cc	/^typedef SigslotSlotTest<> SigslotSTSlotTest;$/;"	t	file:
SigslotSlotTest	webrtc/base/sigslot_unittest.cc	/^  SigslotSlotTest() {$/;"	f	class:SigslotSlotTest
SigslotSlotTest	webrtc/base/sigslot_unittest.cc	/^class SigslotSlotTest : public testing::Test {$/;"	c	file:
SigslotTester0	webrtc/base/sigslottester.h	/^  explicit SigslotTester0(sigslot::signal0<>* signal) : callback_count_(0) {$/;"	f	class:rtc::SigslotTester0
SigslotTester0	webrtc/base/sigslottester.h	/^class SigslotTester0 : public sigslot::has_slots<> {$/;"	c	namespace:rtc
SigslotTester1	webrtc/base/sigslottester.h	/^  SigslotTester1(sigslot::signal1<A1>* signal,$/;"	f	class:rtc::SigslotTester1
SigslotTester1	webrtc/base/sigslottester.h	/^class SigslotTester1 : public sigslot::has_slots<> {$/;"	c	namespace:rtc
SigslotTester2	webrtc/base/sigslottester.h	/^  SigslotTester2(sigslot::signal2<A1, A2>* signal,$/;"	f	class:rtc::SigslotTester2
SigslotTester2	webrtc/base/sigslottester.h	/^class SigslotTester2 : public sigslot::has_slots<> {$/;"	c	namespace:rtc
SigslotTester3	webrtc/base/sigslottester.h	/^  SigslotTester3(sigslot::signal3<A1, A2, A3>* signal,$/;"	f	class:rtc::SigslotTester3
SigslotTester3	webrtc/base/sigslottester.h	/^class SigslotTester3 : public sigslot::has_slots<> {$/;"	c	namespace:rtc
SigslotTester4	webrtc/base/sigslottester.h	/^  SigslotTester4(sigslot::signal4<A1, A2, A3, A4>* signal,$/;"	f	class:rtc::SigslotTester4
SigslotTester4	webrtc/base/sigslottester.h	/^class SigslotTester4 : public sigslot::has_slots<> {$/;"	c	namespace:rtc
SigslotTester5	webrtc/base/sigslottester.h	/^  SigslotTester5(sigslot::signal5<A1, A2, A3, A4, A5>* signal,$/;"	f	class:rtc::SigslotTester5
SigslotTester5	webrtc/base/sigslottester.h	/^class SigslotTester5 : public sigslot::has_slots<> {$/;"	c	namespace:rtc
SimpleMap	webrtc/base/linux.h	/^  typedef std::map<std::string, std::string> SimpleMap;$/;"	t	class:rtc::ConfigParser
SimulatedClock	webrtc/system_wrappers/include/clock.h	/^class SimulatedClock : public Clock {$/;"	c	namespace:webrtc
SimulationConfig	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^  SimulationConfig(int sample_rate_hz, SettingsType simulation_settings)$/;"	f	struct:webrtc::__anon182::SimulationConfig
SimulationConfig	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^struct SimulationConfig {$/;"	s	namespace:webrtc::__anon182	file:
SimulationEventType	webrtc/modules/audio_processing/test/wav_based_simulator.h	/^  enum SimulationEventType {$/;"	g	class:webrtc::test::final
SimulationSettings	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^struct SimulationSettings {$/;"	s	namespace:webrtc::test
SimulatorBuffers	webrtc/modules/audio_processing/level_controller/level_controller_complexity_unittest.cc	/^  SimulatorBuffers(int render_input_sample_rate_hz,$/;"	f	struct:webrtc::__anon209::SimulatorBuffers
SimulatorBuffers	webrtc/modules/audio_processing/level_controller/level_controller_complexity_unittest.cc	/^struct SimulatorBuffers {$/;"	s	namespace:webrtc::__anon209	file:
SimulcastStream	webrtc/common_types.h	/^struct SimulcastStream {$/;"	s	namespace:webrtc
SincResampler	webrtc/common_audio/resampler/sinc_resampler.cc	/^SincResampler::SincResampler(double io_sample_rate_ratio,$/;"	f	class:webrtc::SincResampler
SincResampler	webrtc/common_audio/resampler/sinc_resampler.h	/^class SincResampler {$/;"	c	namespace:webrtc
SincResamplerCallback	webrtc/common_audio/resampler/sinc_resampler.h	/^class SincResamplerCallback {$/;"	c	namespace:webrtc
SincResamplerTest	webrtc/common_audio/resampler/sinc_resampler_unittest.cc	/^  SincResamplerTest()$/;"	f	class:webrtc::SincResamplerTest
SincResamplerTest	webrtc/common_audio/resampler/sinc_resampler_unittest.cc	/^class SincResamplerTest$/;"	c	namespace:webrtc	file:
SincResamplerTestData	webrtc/common_audio/resampler/sinc_resampler_unittest.cc	/^typedef std::tr1::tuple<int, int, double, double> SincResamplerTestData;$/;"	t	namespace:webrtc	file:
SincScaleFactor	webrtc/common_audio/resampler/sinc_resampler.cc	/^double SincScaleFactor(double io_ratio) {$/;"	f	namespace:webrtc::__anon87
SingleFlowControlCallbackInternal	webrtc/base/socket_unittest.cc	/^void SocketTest::SingleFlowControlCallbackInternal(const IPAddress& loopback) {$/;"	f	class:rtc::SocketTest
SinusoidalLinearChirpSource	webrtc/common_audio/resampler/sinusoidal_linear_chirp_source.cc	/^SinusoidalLinearChirpSource::SinusoidalLinearChirpSource(int sample_rate,$/;"	f	class:webrtc::SinusoidalLinearChirpSource
SinusoidalLinearChirpSource	webrtc/common_audio/resampler/sinusoidal_linear_chirp_source.h	/^class SinusoidalLinearChirpSource : public SincResamplerCallback {$/;"	c	namespace:webrtc
Size	webrtc/base/httpcommon.cc	/^  static size_t Size;$/;"	m	struct:rtc::Enum	file:
Size	webrtc/base/ipaddress.cc	/^size_t IPAddress::Size() const {$/;"	f	class:rtc::IPAddress
Size	webrtc/base/java/src/org/webrtc/Size.java	/^  public Size(int width, int height) {$/;"	m	class:Size
Size	webrtc/base/java/src/org/webrtc/Size.java	/^public class Size {$/;"	c
Size	webrtc/base/md5digest.cc	/^size_t Md5Digest::Size() const {$/;"	f	class:rtc::Md5Digest
Size	webrtc/base/openssldigest.cc	/^size_t OpenSSLDigest::Size() const {$/;"	f	class:rtc::OpenSSLDigest
Size	webrtc/base/sha1digest.cc	/^size_t Sha1Digest::Size() const {$/;"	f	class:rtc::Sha1Digest
Size	webrtc/common_audio/wav_header.cc	/^  uint32_t Size;$/;"	m	struct:webrtc::__anon112::ChunkHeader	file:
Size	webrtc/modules/audio_processing/aec/aec_core.cc	/^size_t BlockBuffer::Size() {$/;"	f	class:webrtc::BlockBuffer
Size	webrtc/modules/audio_processing/echo_detector/circular_buffer.h	/^  size_t Size() const { return nr_elements_in_buffer_; }$/;"	f	struct:webrtc::CircularBuffer
SleepMs	webrtc/base/thread.cc	/^bool Thread::SleepMs(int milliseconds) {$/;"	f	class:rtc::Thread
SleepRandomMs	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^void SleepRandomMs(int max_sleep, RandomGenerator* rand_gen) {$/;"	f	namespace:webrtc::__anon181
Sleeper	webrtc/base/socket_unittest.cc	/^  Sleeper() {}$/;"	f	class:rtc::Sleeper
Sleeper	webrtc/base/socket_unittest.cc	/^class Sleeper : public MessageHandler {$/;"	c	namespace:rtc	file:
Slice	webrtc/common_audio/channel_buffer.h	/^  T** Slice(T** slice, size_t start_frame) {$/;"	f	class:webrtc::ChannelBuffer
Slice	webrtc/common_audio/channel_buffer.h	/^  const T* const* Slice(T** slice, size_t start_frame) const {$/;"	f	class:webrtc::ChannelBuffer
SlotLockCount	webrtc/base/sigslot_unittest.cc	/^  int SlotLockCount() { return mt_receiver_.lock_count(); }$/;"	f	class:SigslotMTLockTest
SlowSignalThread	webrtc/base/signalthread_unittest.cc	/^    SlowSignalThread(SignalThreadTest* harness) : harness_(harness) {$/;"	f	class:SignalThreadTest::SlowSignalThread
SlowSignalThread	webrtc/base/signalthread_unittest.cc	/^  class SlowSignalThread : public SignalThread {$/;"	c	class:SignalThreadTest	file:
SnrBasedEffectActivation	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer.cc	/^void IntelligibilityEnhancer::SnrBasedEffectActivation() {$/;"	f	class:webrtc::IntelligibilityEnhancer
SockOptArg	webrtc/base/physicalsocketserver.cc	/^typedef char* SockOptArg;$/;"	t	file:
SockOptArg	webrtc/base/physicalsocketserver.cc	/^typedef void* SockOptArg;$/;"	t	file:
Socket	webrtc/base/socket.h	/^  Socket() {}$/;"	f	class:rtc::Socket
Socket	webrtc/base/socket.h	/^class Socket {$/;"	c	namespace:rtc
SocketAddress	webrtc/base/socketaddress.cc	/^SocketAddress::SocketAddress() {$/;"	f	class:rtc::SocketAddress
SocketAddress	webrtc/base/socketaddress.cc	/^SocketAddress::SocketAddress(const IPAddress& ip, int port) {$/;"	f	class:rtc::SocketAddress
SocketAddress	webrtc/base/socketaddress.cc	/^SocketAddress::SocketAddress(const SocketAddress& addr) {$/;"	f	class:rtc::SocketAddress
SocketAddress	webrtc/base/socketaddress.cc	/^SocketAddress::SocketAddress(const std::string& hostname, int port) {$/;"	f	class:rtc::SocketAddress
SocketAddress	webrtc/base/socketaddress.cc	/^SocketAddress::SocketAddress(uint32_t ip_as_host_order_integer, int port) {$/;"	f	class:rtc::SocketAddress
SocketAddress	webrtc/base/socketaddress.h	/^class SocketAddress {$/;"	c	namespace:rtc
SocketAddressFromSockAddrStorage	webrtc/base/socketaddress.cc	/^bool SocketAddressFromSockAddrStorage(const sockaddr_storage& addr,$/;"	f	namespace:rtc
SocketAddressPair	webrtc/base/socketaddresspair.cc	/^SocketAddressPair::SocketAddressPair($/;"	f	class:rtc::SocketAddressPair
SocketAddressPair	webrtc/base/socketaddresspair.h	/^  SocketAddressPair() {}$/;"	f	class:rtc::SocketAddressPair
SocketAddressPair	webrtc/base/socketaddresspair.h	/^class SocketAddressPair {$/;"	c	namespace:rtc
SocketClient	webrtc/base/thread_unittest.cc	/^  SocketClient(AsyncSocket* socket, const SocketAddress& addr,$/;"	f	class:SocketClient
SocketClient	webrtc/base/thread_unittest.cc	/^class SocketClient : public TestGenerator, public sigslot::has_slots<> {$/;"	c	file:
SocketCloser	webrtc/base/socket_unittest.cc	/^class SocketCloser : public sigslot::has_slots<> {$/;"	c	namespace:rtc	file:
SocketDispatcher	webrtc/base/physicalsocketserver.cc	/^SocketDispatcher::SocketDispatcher(PhysicalSocketServer *ss)$/;"	f	class:rtc::SocketDispatcher
SocketDispatcher	webrtc/base/physicalsocketserver.cc	/^SocketDispatcher::SocketDispatcher(SOCKET s, PhysicalSocketServer *ss)$/;"	f	class:rtc::SocketDispatcher
SocketDispatcher	webrtc/base/physicalsocketserver.h	/^class SocketDispatcher : public Dispatcher, public PhysicalSocket {$/;"	c	namespace:rtc
SocketFactory	webrtc/base/socketfactory.h	/^class SocketFactory {$/;"	c	namespace:rtc
SocketRecvTimestamp	webrtc/base/socket_unittest.cc	/^void SocketTest::SocketRecvTimestamp(const IPAddress& loopback) {$/;"	f	class:rtc::SocketTest
SocketServer	webrtc/base/socketserver.h	/^class SocketServer : public SocketFactory {$/;"	c	namespace:rtc
SocketServerScope	webrtc/base/thread.h	/^  explicit SocketServerScope(SocketServer* ss) {$/;"	f	class:rtc::SocketServerScope
SocketServerScope	webrtc/base/thread.h	/^class SocketServerScope {$/;"	c	namespace:rtc
SocketServerWaitInternal	webrtc/base/socket_unittest.cc	/^void SocketTest::SocketServerWaitInternal(const IPAddress& loopback) {$/;"	f	class:rtc::SocketTest
SocketStream	webrtc/base/socketstream.cc	/^SocketStream::SocketStream(AsyncSocket* socket) : socket_(NULL) {$/;"	f	class:rtc::SocketStream
SocketStream	webrtc/base/socketstream.h	/^class SocketStream : public StreamInterface, public sigslot::has_slots<> {$/;"	c	namespace:rtc
SocketTest	webrtc/base/socket_unittest.h	/^  SocketTest() : kIPv4Loopback(INADDR_LOOPBACK),$/;"	f	class:rtc::SocketTest
SocketTest	webrtc/base/socket_unittest.h	/^class SocketTest : public testing::Test {$/;"	c	namespace:rtc
SocketTestClient	webrtc/base/testutils.h	/^  SocketTestClient() {$/;"	f	class:testing::SocketTestClient
SocketTestClient	webrtc/base/testutils.h	/^  SocketTestClient(AsyncSocket* socket) {$/;"	f	class:testing::SocketTestClient
SocketTestClient	webrtc/base/testutils.h	/^  SocketTestClient(const SocketAddress& address) {$/;"	f	class:testing::SocketTestClient
SocketTestClient	webrtc/base/testutils.h	/^class SocketTestClient : public sigslot::has_slots<> {$/;"	c	namespace:testing
SocketTestServer	webrtc/base/testutils.h	/^  SocketTestServer(const SocketAddress& address)$/;"	f	class:testing::SocketTestServer
SocketTestServer	webrtc/base/testutils.h	/^class SocketTestServer : public sigslot::has_slots<> {$/;"	c	namespace:testing
SocksProxyServer	webrtc/base/proxyserver.h	/^  SocksProxyServer(SocketFactory* int_factory, const SocketAddress& int_addr,$/;"	f	class:rtc::SocksProxyServer
SocksProxyServer	webrtc/base/proxyserver.h	/^class SocksProxyServer : public ProxyServer {$/;"	c	namespace:rtc
SoftRestoration	webrtc/modules/audio_processing/transient/transient_suppressor.cc	/^void TransientSuppressor::SoftRestoration(float* spectral_mean) {$/;"	f	class:webrtc::TransientSuppressor
SolveForGainsGivenLambda	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer.cc	/^void IntelligibilityEnhancer::SolveForGainsGivenLambda(float lambda,$/;"	f	class:webrtc::IntelligibilityEnhancer
SolveForLambda	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer.cc	/^void IntelligibilityEnhancer::SolveForLambda(float power_target) {$/;"	f	class:webrtc::IntelligibilityEnhancer
SortNetworks	webrtc/base/network.cc	/^bool SortNetworks(const Network* a, const Network* b) {$/;"	f	namespace:rtc::__anon34
SpaceAlloced	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  unsigned int SpaceAlloced;$/;"	m	struct:__anon133
SparseFIRFilter	webrtc/common_audio/sparse_fir_filter.cc	/^SparseFIRFilter::SparseFIRFilter(const float* nonzero_coeffs,$/;"	f	class:webrtc::SparseFIRFilter
SparseStreamMetadataChangeScheme	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  SparseStreamMetadataChangeScheme,$/;"	m	class:webrtc::__anon181::RuntimeParameterSettingScheme	file:
SpatialLayer	webrtc/common_types.h	/^struct SpatialLayer {$/;"	s	namespace:webrtc
SpecificTest	webrtc/base/base64_unittest.cc	/^const char SpecificTest[] =$/;"	v
SpectrumType	webrtc/modules/audio_processing/utility/delay_estimator_internal.h	/^} SpectrumType;$/;"	t	typeref:union:__anon229
SpeechNoiseProb	webrtc/modules/audio_processing/ns/ns_core.c	/^static void SpeechNoiseProb(NoiseSuppressionC* self,$/;"	f	file:
SpeechType	webrtc/modules/include/module_common_types.h	/^  enum SpeechType {$/;"	g	class:webrtc::AudioFrame
SphericalPoint	webrtc/modules/audio_processing/beamformer/array_util.h	/^  SphericalPoint(T azimuth, T elevation, T radius) {$/;"	f	struct:webrtc::SphericalPoint
SphericalPoint	webrtc/modules/audio_processing/beamformer/array_util.h	/^struct SphericalPoint {$/;"	s	namespace:webrtc
SplTest	webrtc/common_audio/signal_processing/signal_processing_unittest.cc	/^   SplTest() {$/;"	f	class:SplTest
SplTest	webrtc/common_audio/signal_processing/signal_processing_unittest.cc	/^class SplTest : public testing::Test {$/;"	c	file:
SplitArgument	webrtc/base/flags.cc	/^void FlagList::SplitArgument(const char* arg,$/;"	f	class:rtc::FlagList
SplitFilter	webrtc/common_audio/vad/vad_filterbank.c	/^static void SplitFilter(const int16_t* data_in, size_t data_length,$/;"	f	file:
SplitIntoFrequencyBands	webrtc/modules/audio_processing/audio_buffer.cc	/^void AudioBuffer::SplitIntoFrequencyBands() {$/;"	f	class:webrtc::AudioBuffer
SplittingFilter	webrtc/modules/audio_processing/splitting_filter.cc	/^SplittingFilter::SplittingFilter(size_t num_channels,$/;"	f	class:webrtc::SplittingFilter
SplittingFilter	webrtc/modules/audio_processing/splitting_filter.h	/^class SplittingFilter {$/;"	c	namespace:webrtc
SqrCost	webrtc/modules/audio_processing/config_unittest.cc	/^struct SqrCost : Algo1_CostFunction {$/;"	s	namespace:webrtc::__anon191	file:
SrcLimits	webrtc/base/safe_conversions_impl.h	/^  typedef std::numeric_limits<Src> SrcLimits;$/;"	t	struct:rtc::internal::StaticRangeCheck
SrcSign	webrtc/base/safe_conversions_impl.h	/^enum SrcSign {$/;"	g	namespace:rtc::internal
SrtpCipherMap	webrtc/base/opensslstreamadapter.cc	/^static SrtpCipherMapEntry SrtpCipherMap[] = {$/;"	m	namespace:rtc	file:
SrtpCipherMapEntry	webrtc/base/opensslstreamadapter.cc	/^struct SrtpCipherMapEntry {$/;"	s	namespace:rtc	file:
SrtpCryptoSuiteFromName	webrtc/base/sslstreamadapter.cc	/^int SrtpCryptoSuiteFromName(const std::string& crypto_suite) {$/;"	f	namespace:rtc
SrtpCryptoSuiteToName	webrtc/base/sslstreamadapter.cc	/^std::string SrtpCryptoSuiteToName(int crypto_suite) {$/;"	f	namespace:rtc
SslCipherMapEntry	webrtc/base/opensslstreamadapter.cc	/^struct SslCipherMapEntry {$/;"	s	namespace:rtc	file:
SslCipherSuiteToName	webrtc/base/opensslstreamadapter.cc	/^std::string OpenSSLStreamAdapter::SslCipherSuiteToName(int cipher_suite) {$/;"	f	class:rtc::OpenSSLStreamAdapter
SslCipherSuiteToName	webrtc/base/sslstreamadapter.cc	/^std::string SSLStreamAdapter::SslCipherSuiteToName(int cipher_suite) {$/;"	f	class:rtc::SSLStreamAdapter
SslSocketFactory	webrtc/base/sslsocketfactory.cc	/^SslSocketFactory::SslSocketFactory(SocketFactory* factory,$/;"	f	class:rtc::SslSocketFactory
SslSocketFactory	webrtc/base/sslsocketfactory.h	/^class SslSocketFactory : public SocketFactory {$/;"	c	namespace:rtc
StandaloneVad	webrtc/modules/audio_processing/vad/standalone_vad.cc	/^StandaloneVad::StandaloneVad(VadInst* vad)$/;"	f	class:webrtc::StandaloneVad
StandaloneVad	webrtc/modules/audio_processing/vad/standalone_vad.h	/^class StandaloneVad {$/;"	c	namespace:webrtc
Starfield_Class_2_CA_certificate	webrtc/base/sslroots.h	/^const unsigned char Starfield_Class_2_CA_certificate[1043]={$/;"	v
Starfield_Root_Certificate_Authority___G2_certificate	webrtc/base/sslroots.h	/^const unsigned char Starfield_Root_Certificate_Authority___G2_certificate[993]={$/;"	v
Start	webrtc/base/autodetectproxy_unittest.cc	/^  void Start() {$/;"	f	class:rtc::AutoDetectProxyTest
Start	webrtc/base/criticalsection_unittest.cc	/^  void Start(PerfTestData* data, int repeats, int id) {$/;"	f	class:rtc::PerfTestThread
Start	webrtc/base/event_tracer.cc	/^  void Start(FILE* file, bool owned) {$/;"	f	class:rtc::tracing::__anon12::final
Start	webrtc/base/nethelpers.cc	/^void AsyncResolver::Start(const SocketAddress& addr) {$/;"	f	class:rtc::AsyncResolver
Start	webrtc/base/platform_thread.cc	/^void PlatformThread::Start() {$/;"	f	class:rtc::PlatformThread
Start	webrtc/base/signalthread.cc	/^void SignalThread::Start() {$/;"	f	class:rtc::SignalThread
Start	webrtc/base/task.cc	/^void Task::Start() {$/;"	f	class:rtc::Task
Start	webrtc/base/task_unittest.cc	/^  void Start() {$/;"	f	class:rtc::AbortShouldWakeTest
Start	webrtc/base/task_unittest.cc	/^  void Start() {$/;"	f	class:rtc::TaskAbortTest
Start	webrtc/base/task_unittest.cc	/^  void Start() {$/;"	f	class:rtc::TaskTest
Start	webrtc/base/task_unittest.cc	/^  void Start() {$/;"	f	class:rtc::TimeoutChangeTest
Start	webrtc/base/thread.cc	/^bool Thread::Start(Runnable* runnable) {$/;"	f	class:rtc::Thread
Start	webrtc/base/thread_unittest.cc	/^  bool Start() { return false; }$/;"	f	class:CustomThread
StartDNSLookup	webrtc/base/httpclient.cc	/^void HttpClient::StartDNSLookup() {$/;"	f	class:rtc::HttpClient
StartDebugRecording	webrtc/modules/audio_processing/audio_processing_impl.cc	/^int AudioProcessingImpl::StartDebugRecording($/;"	f	class:webrtc::AudioProcessingImpl
StartDebugRecording	webrtc/modules/audio_processing/audio_processing_impl.cc	/^int AudioProcessingImpl::StartDebugRecording(FILE* handle) {$/;"	f	class:webrtc::AudioProcessingImpl
StartDebugRecording	webrtc/modules/audio_processing/audio_processing_impl.cc	/^int AudioProcessingImpl::StartDebugRecording(FILE* handle,$/;"	f	class:webrtc::AudioProcessingImpl
StartDebugRecordingForPlatformFile	webrtc/modules/audio_processing/audio_processing_impl.cc	/^int AudioProcessingImpl::StartDebugRecordingForPlatformFile($/;"	f	class:webrtc::AudioProcessingImpl
StartInternalCapture	webrtc/base/event_tracer.cc	/^bool StartInternalCapture(const char* filename) {$/;"	f	namespace:rtc::tracing
StartInternalCaptureToFile	webrtc/base/event_tracer.cc	/^void StartInternalCaptureToFile(FILE* file) {$/;"	f	namespace:rtc::tracing
StartMonitoring	webrtc/base/dbus.cc	/^bool DBusMonitor::StartMonitoring() {$/;"	f	class:rtc::DBusMonitor
StartNetworkMonitor	webrtc/base/network.cc	/^void BasicNetworkManager::StartNetworkMonitor() {$/;"	f	class:rtc::BasicNetworkManager
StartRecording	webrtc/modules/audio_processing/test/debug_dump_test.cc	/^void DebugDumpGenerator::StartRecording() {$/;"	f	class:webrtc::test::__anon223::DebugDumpGenerator
StartSSL	webrtc/base/openssladapter.cc	/^OpenSSLAdapter::StartSSL(const char* hostname, bool restartable) {$/;"	f	class:rtc::OpenSSLAdapter
StartSSL	webrtc/base/opensslstreamadapter.cc	/^int OpenSSLStreamAdapter::StartSSL() {$/;"	f	class:rtc::OpenSSLStreamAdapter
StartTask	webrtc/base/taskrunner.cc	/^void TaskRunner::StartTask(Task * task) {$/;"	f	class:rtc::TaskRunner
StartThread	webrtc/base/platform_thread.cc	/^DWORD WINAPI PlatformThread::StartThread(void* param) {$/;"	f	class:rtc::PlatformThread
StartThread	webrtc/base/platform_thread.cc	/^void* PlatformThread::StartThread(void* param) {$/;"	f	class:rtc::PlatformThread
StartThreads	webrtc/base/criticalsection_unittest.cc	/^void StartThreads(ScopedPtrCollection<Thread>* threads,$/;"	f	namespace:rtc::__anon10
StartThreads	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  void StartThreads() {$/;"	f	class:webrtc::__anon181::AudioProcessingImplLockTest	file:
StartThreads	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^  void StartThreads() {$/;"	f	class:webrtc::__anon182::CallSimulator	file:
StartTimer	webrtc/modules/audio_processing/level_controller/level_controller_complexity_unittest.cc	/^  void StartTimer() {$/;"	f	class:webrtc::__anon209::SubmodulePerformanceTimer
StartUpdating	webrtc/base/fakenetwork.h	/^  virtual void StartUpdating() {$/;"	f	class:rtc::FakeNetworkManager
StartUpdating	webrtc/base/network.cc	/^void BasicNetworkManager::StartUpdating() {$/;"	f	class:rtc::BasicNetworkManager
Stat	webrtc/modules/audio_processing/include/audio_processing.h	/^  struct Stat {$/;"	s	class:webrtc::AudioProcessing
State	webrtc/base/asyncpacketsocket.h	/^  enum State {$/;"	g	class:rtc::AsyncPacketSocket
State	webrtc/base/httpbase.h	/^  enum State {$/;"	g	class:rtc::HttpParser
State	webrtc/base/signalthread.h	/^  enum State {$/;"	g	class:rtc::SignalThread
State	webrtc/base/socketadapters.h	/^  enum State {$/;"	g	class:rtc::AsyncSocksProxyServerSocket
State	webrtc/base/socketadapters.h	/^  enum State {$/;"	g	class:rtc::AsyncSocksProxySocket
State	webrtc/base/transformadapter.h	/^  enum State { ST_PROCESSING, ST_FLUSHING, ST_COMPLETE, ST_ERROR };$/;"	g	class:rtc::TransformAdapter
StaticInstance	webrtc/system_wrappers/source/trace_impl.cc	/^TraceImpl* TraceImpl::StaticInstance(CountOperation count_operation,$/;"	f	class:webrtc::TraceImpl
StaticRangeCheck	webrtc/base/safe_conversions_impl.h	/^struct StaticRangeCheck {};$/;"	s	namespace:rtc::internal
StaticRangeCheck	webrtc/base/safe_conversions_impl.h	/^struct StaticRangeCheck<Dst, Src, DST_SIGNED, SRC_SIGNED> {$/;"	s	namespace:rtc::internal
StaticRangeCheck	webrtc/base/safe_conversions_impl.h	/^struct StaticRangeCheck<Dst, Src, DST_SIGNED, SRC_UNSIGNED> {$/;"	s	namespace:rtc::internal
StaticRangeCheck	webrtc/base/safe_conversions_impl.h	/^struct StaticRangeCheck<Dst, Src, DST_UNSIGNED, SRC_SIGNED> {$/;"	s	namespace:rtc::internal
StaticRangeCheck	webrtc/base/safe_conversions_impl.h	/^struct StaticRangeCheck<Dst, Src, DST_UNSIGNED, SRC_UNSIGNED> {$/;"	s	namespace:rtc::internal
Statistic	webrtc/modules/audio_processing/include/audio_processing.h	/^  struct Statistic {$/;"	s	class:webrtc::AudioProcessing
Stats	webrtc/base/network.h	/^    Stats() {$/;"	f	struct:rtc::NetworkManager::Stats
Stats	webrtc/base/network.h	/^  struct Stats {$/;"	s	class:rtc::NetworkManager
Stats	webrtc/modules/audio_processing/aec/aec_core.h	/^typedef struct Stats {$/;"	s	namespace:webrtc
Stats	webrtc/modules/audio_processing/aec/aec_core.h	/^} Stats;$/;"	t	namespace:webrtc	typeref:struct:webrtc::Stats
StatsProcessor	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^StatsProcessor::StatsProcessor(RandomGenerator* rand_gen,$/;"	f	class:webrtc::__anon181::StatsProcessor
StatsProcessor	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^class StatsProcessor {$/;"	c	namespace:webrtc::__anon181	file:
StatsProcessorThreadFunc	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  static bool StatsProcessorThreadFunc(void* context) {$/;"	f	class:webrtc::__anon181::AudioProcessingImplLockTest	file:
Status	webrtc/base/winping.cc	/^    ULONG   Status;             \/\/ Reply IP_STATUS$/;"	m	struct:rtc::icmp_echo_reply	file:
Status	webrtc/base/winping.cc	/^  ULONG           Status;$/;"	m	struct:rtc::icmpv6_echo_reply_lh	file:
Step	webrtc/base/task.cc	/^void Task::Step() {$/;"	f	class:rtc::Task
Step	webrtc/modules/audio_processing/intelligibility/intelligibility_utils.cc	/^void PowerEstimator<T>::Step(const T* data) {$/;"	f	class:webrtc::intelligibility::PowerEstimator
StereoChannel	webrtc/common_types.h	/^enum StereoChannel { kStereoLeft = 0, kStereoRight, kStereoBoth };$/;"	g	namespace:webrtc
StillBuffered	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  double StillBuffered;$/;"	m	struct:__anon132
Stop	webrtc/base/criticalsection_unittest.cc	/^  void Stop() {$/;"	f	class:rtc::PerfTestThread
Stop	webrtc/base/dbus.cc	/^  virtual void Stop() {$/;"	f	class:rtc::DBusMonitor::DBusMonitoringThread
Stop	webrtc/base/event_tracer.cc	/^  void Stop() {$/;"	f	class:rtc::tracing::__anon12::final
Stop	webrtc/base/platform_thread.cc	/^void PlatformThread::Stop() {$/;"	f	class:rtc::PlatformThread
Stop	webrtc/base/task.cc	/^void Task::Stop() {$/;"	f	class:rtc::Task
Stop	webrtc/base/task_unittest.cc	/^  virtual void Stop() {$/;"	f	class:rtc::IdTimeoutTask
Stop	webrtc/base/thread.cc	/^void Thread::Stop() {$/;"	f	class:rtc::Thread
StopDebugRecording	webrtc/modules/audio_processing/audio_processing_impl.cc	/^int AudioProcessingImpl::StopDebugRecording() {$/;"	f	class:webrtc::AudioProcessingImpl
StopInternalCapture	webrtc/base/event_tracer.cc	/^void StopInternalCapture() {$/;"	f	namespace:rtc::tracing
StopListening	webrtc/base/httpserver.cc	/^void HttpListenServer::StopListening() {$/;"	f	class:rtc::HttpListenServer
StopMonitoring	webrtc/base/dbus.cc	/^bool DBusMonitor::StopMonitoring() {$/;"	f	class:rtc::DBusMonitor
StopNetworkMonitor	webrtc/base/network.cc	/^void BasicNetworkManager::StopNetworkMonitor() {$/;"	f	class:rtc::BasicNetworkManager
StopRecording	webrtc/modules/audio_processing/test/debug_dump_test.cc	/^void DebugDumpGenerator::StopRecording() {$/;"	f	class:webrtc::test::__anon223::DebugDumpGenerator
StopThreads	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^  void StopThreads() {$/;"	f	class:webrtc::__anon182::CallSimulator	file:
StopTimer	webrtc/modules/audio_processing/level_controller/level_controller_complexity_unittest.cc	/^  void StopTimer() {$/;"	f	class:webrtc::__anon209::SubmodulePerformanceTimer
StopUpdating	webrtc/base/fakenetwork.h	/^  virtual void StopUpdating() { --start_count_; }$/;"	f	class:rtc::FakeNetworkManager
StopUpdating	webrtc/base/network.cc	/^void BasicNetworkManager::StopUpdating() {$/;"	f	class:rtc::BasicNetworkManager
StoreAdaptiveChannel	webrtc/modules/audio_processing/aecm/aecm_core.h	/^typedef void (*StoreAdaptiveChannel)(AecmCore* aecm,$/;"	t
StoreAdaptiveChannelC	webrtc/modules/audio_processing/aecm/aecm_core.cc	/^static void StoreAdaptiveChannelC(AecmCore* aecm,$/;"	f	file:
StoreAsComplex	webrtc/modules/audio_processing/aec/aec_core.cc	/^__inline static void StoreAsComplex(const float* data,$/;"	f	namespace:webrtc
StoreAsComplexNEON	webrtc/modules/audio_processing/aec/aec_core_neon.cc	/^static void StoreAsComplexNEON(const float* data,$/;"	f	namespace:webrtc
StoreAsComplexSSE2	webrtc/modules/audio_processing/aec/aec_core_sse2.cc	/^static void StoreAsComplexSSE2(const float* data,$/;"	f	namespace:webrtc
StreamAdapterInterface	webrtc/base/stream.cc	/^StreamAdapterInterface::StreamAdapterInterface(StreamInterface* stream,$/;"	f	class:rtc::StreamAdapterInterface
StreamAdapterInterface	webrtc/base/stream.h	/^class StreamAdapterInterface : public StreamInterface,$/;"	c	namespace:rtc
StreamAndSeverity	webrtc/base/logging.h	/^  typedef std::pair<LogSink*, LoggingSeverity> StreamAndSeverity;$/;"	t	class:rtc::LogMessage
StreamCache	webrtc/base/socketpool.cc	/^StreamCache::StreamCache(StreamPool* pool) : pool_(pool) {$/;"	f	class:rtc::StreamCache
StreamCache	webrtc/base/socketpool.h	/^class StreamCache : public StreamPool, public sigslot::has_slots<> {$/;"	c	namespace:rtc
StreamConfig	webrtc/modules/audio_processing/include/audio_processing.h	/^  StreamConfig(int sample_rate_hz = 0,$/;"	f	class:webrtc::StreamConfig
StreamConfig	webrtc/modules/audio_processing/include/audio_processing.h	/^class StreamConfig {$/;"	c	namespace:webrtc
StreamDataCounters	webrtc/common_types.cc	/^StreamDataCounters::StreamDataCounters() : first_packet_time_ms(-1) {}$/;"	f	class:webrtc::StreamDataCounters
StreamDataCounters	webrtc/common_types.h	/^struct StreamDataCounters {$/;"	s	namespace:webrtc
StreamDataCountersCallback	webrtc/common_types.h	/^class StreamDataCountersCallback {$/;"	c	namespace:webrtc
StreamDirection	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^enum StreamDirection { kForward = 0, kReverse };$/;"	g	namespace:webrtc::__anon183	file:
StreamEvent	webrtc/base/stream.h	/^enum StreamEvent { SE_OPEN = 1, SE_READ = 2, SE_WRITE = 4, SE_CLOSE = 8 };$/;"	g	namespace:rtc
StreamEventData	webrtc/base/stream.h	/^  StreamEventData(int ev, int er) : events(ev), error(er) { }$/;"	f	struct:rtc::StreamEventData
StreamEventData	webrtc/base/stream.h	/^struct StreamEventData : public MessageData {$/;"	s	namespace:rtc
StreamInterface	webrtc/base/stream.cc	/^StreamInterface::StreamInterface() {$/;"	f	class:rtc::StreamInterface
StreamInterface	webrtc/base/stream.h	/^class StreamInterface : public MessageHandler {$/;"	c	namespace:rtc
StreamList	webrtc/base/logging.h	/^  typedef std::list<StreamAndSeverity> StreamList;$/;"	t	class:rtc::LogMessage
StreamList	webrtc/base/socketpool.h	/^  typedef std::deque<LoggingAdapter*> StreamList;$/;"	t	class:rtc::LoggingPoolAdapter
StreamName	webrtc/modules/audio_processing/include/audio_processing.h	/^  enum StreamName {$/;"	g	class:webrtc::ProcessingConfig
StreamParametersTest	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^void ApmTest::StreamParametersTest(Format format) {$/;"	f	class:webrtc::__anon183::ApmTest
StreamPool	webrtc/base/socketpool.h	/^class StreamPool {$/;"	c	namespace:rtc
StreamProperties	webrtc/modules/audio_processing/echo_cancellation_impl.cc	/^  StreamProperties(int sample_rate_hz,$/;"	f	struct:webrtc::EchoCancellationImpl::StreamProperties
StreamProperties	webrtc/modules/audio_processing/echo_cancellation_impl.cc	/^struct EchoCancellationImpl::StreamProperties {$/;"	s	class:webrtc::EchoCancellationImpl	file:
StreamProperties	webrtc/modules/audio_processing/echo_control_mobile_impl.cc	/^  StreamProperties(int sample_rate_hz,$/;"	f	struct:webrtc::EchoControlMobileImpl::StreamProperties
StreamProperties	webrtc/modules/audio_processing/echo_control_mobile_impl.cc	/^struct EchoControlMobileImpl::StreamProperties {$/;"	s	class:webrtc::EchoControlMobileImpl	file:
StreamRefCount	webrtc/base/stream.h	/^    explicit StreamRefCount(StreamInterface* stream)$/;"	f	class:rtc::StreamReference::StreamRefCount
StreamRefCount	webrtc/base/stream.h	/^  class StreamRefCount {$/;"	c	class:rtc::StreamReference
StreamReference	webrtc/base/stream.cc	/^StreamReference::StreamReference(StreamInterface* stream)$/;"	f	class:rtc::StreamReference
StreamReference	webrtc/base/stream.cc	/^StreamReference::StreamReference(StreamRefCount* stream_ref_count,$/;"	f	class:rtc::StreamReference
StreamReference	webrtc/base/stream.h	/^class StreamReference : public StreamAdapterInterface {$/;"	c	namespace:rtc
StreamResult	webrtc/base/stream.h	/^enum StreamResult { SR_ERROR, SR_SUCCESS, SR_BLOCK, SR_EOS };$/;"	g	namespace:rtc
StreamSink	webrtc/base/testutils.h	/^class StreamSink : public sigslot::has_slots<> {$/;"	c	namespace:testing
StreamSinkEvent	webrtc/base/testutils.h	/^enum StreamSinkEvent {$/;"	g	namespace:testing
StreamSource	webrtc/base/testutils.h	/^  StreamSource() {$/;"	f	class:testing::StreamSource
StreamSource	webrtc/base/testutils.h	/^class StreamSource : public StreamInterface {$/;"	c	namespace:testing
StreamState	webrtc/base/stream.h	/^enum StreamState { SS_CLOSED, SS_OPENING, SS_OPEN };$/;"	g	namespace:rtc
StreamTap	webrtc/base/stream.cc	/^StreamTap::StreamTap(StreamInterface* stream, StreamInterface* tap)$/;"	f	class:rtc::StreamTap
StreamTap	webrtc/base/stream.h	/^class StreamTap : public StreamAdapterInterface {$/;"	c	namespace:rtc
StringMap	webrtc/base/proxydetect.cc	/^struct StringMap {$/;"	s	file:
StringStream	webrtc/base/stream.cc	/^StringStream::StringStream(const std::string& str)$/;"	f	class:rtc::StringStream
StringStream	webrtc/base/stream.cc	/^StringStream::StringStream(std::string* str)$/;"	f	class:rtc::StringStream
StringStream	webrtc/base/stream.h	/^class StringStream : public StreamInterface {$/;"	c	namespace:rtc
StringVectorToJsonArray	webrtc/base/json.cc	/^Json::Value StringVectorToJsonArray(const std::vector<std::string>& in) {$/;"	f	namespace:rtc
StuckTask	webrtc/base/task_unittest.cc	/^  explicit StuckTask(TaskParent *parent) : IdTimeoutTask(parent) {}$/;"	f	class:rtc::StuckTask
StuckTask	webrtc/base/task_unittest.cc	/^class StuckTask : public IdTimeoutTask {$/;"	c	namespace:rtc	file:
SubframeCorrelation	webrtc/modules/audio_processing/vad/vad_audio_proc.cc	/^void VadAudioProc::SubframeCorrelation(double* corr,$/;"	f	class:webrtc::VadAudioProc
SubmodulePerformanceTimer	webrtc/modules/audio_processing/level_controller/level_controller_complexity_unittest.cc	/^  SubmodulePerformanceTimer() : clock_(webrtc::Clock::GetRealTimeClock()) {$/;"	f	class:webrtc::__anon209::SubmodulePerformanceTimer
SubmodulePerformanceTimer	webrtc/modules/audio_processing/level_controller/level_controller_complexity_unittest.cc	/^class SubmodulePerformanceTimer {$/;"	c	namespace:webrtc::__anon209	file:
Subtract	webrtc/base/mod_ops.h	/^inline unsigned long Subtract(unsigned long a, unsigned long b) {  \/\/ NOLINT$/;"	f	namespace:webrtc
Subtract	webrtc/common_types.h	/^  void Subtract(const RtcpPacketTypeCounter& other) {$/;"	f	struct:webrtc::RtcpPacketTypeCounter
Subtract	webrtc/common_types.h	/^  void Subtract(const RtpPacketCounter& other) {$/;"	f	struct:webrtc::RtpPacketCounter
Subtract	webrtc/common_types.h	/^  void Subtract(const StreamDataCounters& other) {$/;"	f	struct:webrtc::StreamDataCounters
Subtract	webrtc/modules/audio_processing/beamformer/matrix.h	/^  Matrix& Subtract(const Matrix& lhs, const Matrix& rhs) {$/;"	f	class:webrtc::Matrix
Subtract	webrtc/modules/audio_processing/beamformer/matrix.h	/^  Matrix& Subtract(const Matrix& operand) {$/;"	f	class:webrtc::Matrix
SumSquares	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.cc	/^float SumSquares(const ComplexMatrix<float>& mat) {$/;"	f	namespace:webrtc::__anon188
Suppress	webrtc/modules/audio_processing/aec/aec_core.cc	/^static void Suppress(const float hNl[PART_LEN1], float efw[2][PART_LEN1]) {$/;"	f	namespace:webrtc
Suppress	webrtc/modules/audio_processing/transient/transient_suppressor.cc	/^int TransientSuppressor::Suppress(float* data,$/;"	f	class:webrtc::TransientSuppressor
Suppress	webrtc/modules/audio_processing/transient/transient_suppressor.cc	/^void TransientSuppressor::Suppress(float* in_ptr,$/;"	f	class:webrtc::TransientSuppressor
SuppressNEON	webrtc/modules/audio_processing/aec/aec_core_neon.cc	/^static void SuppressNEON(const float hNl[PART_LEN1], float efw[2][PART_LEN1]) {$/;"	f	namespace:webrtc
SuppressSSE2	webrtc/modules/audio_processing/aec/aec_core_sse2.cc	/^static void SuppressSSE2(const float hNl[PART_LEN1], float efw[2][PART_LEN1]) {$/;"	f	namespace:webrtc
SuppressX11Errors	webrtc/base/x11windowpicker.cc	/^  void SuppressX11Errors() {$/;"	f	class:rtc::XErrorSuppressor	file:
SuppressionLevel	webrtc/modules/audio_processing/include/audio_processing.h	/^  enum SuppressionLevel {$/;"	g	class:webrtc::EchoCancellation
Suppressor	webrtc/modules/audio_processing/noise_suppression_impl.cc	/^  explicit Suppressor(int sample_rate_hz) {$/;"	f	class:webrtc::NoiseSuppressionImpl::Suppressor
Suppressor	webrtc/modules/audio_processing/noise_suppression_impl.cc	/^class NoiseSuppressionImpl::Suppressor {$/;"	c	class:webrtc::NoiseSuppressionImpl	file:
SuspendTimeout	webrtc/base/task.cc	/^void Task::SuspendTimeout() {$/;"	f	class:rtc::Task
SwapQueue	webrtc/base/swap_queue.h	/^  SwapQueue(size_t size, const QueueItemVerifier& queue_item_verifier)$/;"	f	class:webrtc::SwapQueue
SwapQueue	webrtc/base/swap_queue.h	/^  SwapQueue(size_t size, const T& prototype) : queue_(size, prototype) {$/;"	f	class:webrtc::SwapQueue
SwapQueue	webrtc/base/swap_queue.h	/^  SwapQueue(size_t size,$/;"	f	class:webrtc::SwapQueue
SwapQueue	webrtc/base/swap_queue.h	/^  explicit SwapQueue(size_t size) : queue_(size) {$/;"	f	class:webrtc::SwapQueue
SwapQueue	webrtc/base/swap_queue.h	/^class SwapQueue {$/;"	c	namespace:webrtc
SwapQueueItemVerifier	webrtc/base/swap_queue.h	/^class SwapQueueItemVerifier {$/;"	c	namespace:webrtc
SymmetricNAT	webrtc/base/nattypes.cc	/^class SymmetricNAT : public NAT {$/;"	c	namespace:rtc	file:
Synthesis	webrtc/modules/audio_processing/splitting_filter.cc	/^void SplittingFilter::Synthesis(const IFChannelBuffer* bands,$/;"	f	class:webrtc::SplittingFilter
Synthesis	webrtc/modules/audio_processing/three_band_filter_bank.cc	/^void ThreeBandFilterBank::Synthesis(const float* const* in,$/;"	f	class:webrtc::ThreeBandFilterBank
SynthesisUpdate	webrtc/modules/audio_processing/ns/nsx_core.h	/^typedef void (*SynthesisUpdate)(NoiseSuppressionFixedC* inst,$/;"	t
SynthesisUpdateC	webrtc/modules/audio_processing/ns/nsx_core.c	/^static void SynthesisUpdateC(NoiseSuppressionFixedC* inst,$/;"	f	file:
SystemDelayTest	webrtc/modules/audio_processing/aec/system_delay_unittest.cc	/^SystemDelayTest::SystemDelayTest()$/;"	f	class:webrtc::__anon162::SystemDelayTest
SystemDelayTest	webrtc/modules/audio_processing/aec/system_delay_unittest.cc	/^class SystemDelayTest : public ::testing::Test {$/;"	c	namespace:webrtc::__anon162	file:
SystemInfo	webrtc/base/systeminfo.cc	/^SystemInfo::SystemInfo() {$/;"	f	class:rtc::SystemInfo
SystemInfo	webrtc/base/systeminfo.h	/^class SystemInfo {$/;"	c	namespace:rtc
SystemTimeMillis	webrtc/base/timeutils.cc	/^int64_t SystemTimeMillis() {$/;"	f	namespace:rtc
SystemTimeNanos	webrtc/base/timeutils.cc	/^uint64_t SystemTimeNanos() {$/;"	f	namespace:rtc
TCP_HEADER_SIZE	webrtc/base/virtualsocketserver.cc	/^const uint32_t TCP_HEADER_SIZE = 40;  \/\/ IP + TCP headers$/;"	m	namespace:rtc	file:
TCP_MSS	webrtc/base/virtualsocketserver.cc	/^const uint32_t TCP_MSS = 1400;        \/\/ Maximum segment size$/;"	m	namespace:rtc	file:
TC_TrustCenter_Class_2_CA_II_certificate	webrtc/base/sslroots.h	/^const unsigned char TC_TrustCenter_Class_2_CA_II_certificate[1198]={$/;"	v
TC_TrustCenter_Universal_CA_I_certificate	webrtc/base/sslroots.h	/^const unsigned char TC_TrustCenter_Universal_CA_I_certificate[993]={$/;"	v
TE16	webrtc/base/testutils.h	/^#define TE16 /;"	d
TE32	webrtc/base/testutils.h	/^#define TE32 /;"	d
TE64	webrtc/base/testutils.h	/^#define TE64 /;"	d
TEMPLATE_FUNCTION	webrtc/base/linked_ptr.h	/^#   define TEMPLATE_FUNCTION /;"	d
TEST	webrtc/base/array_view_unittest.cc	/^TEST(ArrayViewTest, TestCompare) {$/;"	f	namespace:rtc
TEST	webrtc/base/array_view_unittest.cc	/^TEST(ArrayViewTest, TestConstructFromPtrAndArray) {$/;"	f	namespace:rtc
TEST	webrtc/base/array_view_unittest.cc	/^TEST(ArrayViewTest, TestCopyAssignment) {$/;"	f	namespace:rtc
TEST	webrtc/base/array_view_unittest.cc	/^TEST(ArrayViewTest, TestCopyConstructor) {$/;"	f	namespace:rtc
TEST	webrtc/base/array_view_unittest.cc	/^TEST(ArrayViewTest, TestEmpty) {$/;"	f	namespace:rtc
TEST	webrtc/base/array_view_unittest.cc	/^TEST(ArrayViewTest, TestIndexing) {$/;"	f	namespace:rtc
TEST	webrtc/base/array_view_unittest.cc	/^TEST(ArrayViewTest, TestIteration) {$/;"	f	namespace:rtc
TEST	webrtc/base/array_view_unittest.cc	/^TEST(ArrayViewTest, TestIterationEmpty) {$/;"	f	namespace:rtc
TEST	webrtc/base/array_view_unittest.cc	/^TEST(ArrayViewTest, TestRtcBuffer) {$/;"	f	namespace:rtc
TEST	webrtc/base/array_view_unittest.cc	/^TEST(ArrayViewTest, TestStdVector) {$/;"	f	namespace:rtc
TEST	webrtc/base/array_view_unittest.cc	/^TEST(ArrayViewTest, TestSwap) {$/;"	f	namespace:rtc
TEST	webrtc/base/base64_unittest.cc	/^TEST(Base64, DecodePadOptions) {$/;"	f
TEST	webrtc/base/base64_unittest.cc	/^TEST(Base64, DecodeParseOptions) {$/;"	f
TEST	webrtc/base/base64_unittest.cc	/^TEST(Base64, DecodeTerminateOptions) {$/;"	f
TEST	webrtc/base/base64_unittest.cc	/^TEST(Base64, EncodeDecodeBattery) {$/;"	f
TEST	webrtc/base/base64_unittest.cc	/^TEST(Base64, GetNextBase64Char) {$/;"	f
TEST	webrtc/base/base64_unittest.cc	/^TEST(Base64, LargeSample) {$/;"	f
TEST	webrtc/base/basictypes_unittest.cc	/^TEST(BasicTypesTest, Endian) {$/;"	f	namespace:rtc
TEST	webrtc/base/basictypes_unittest.cc	/^TEST(BasicTypesTest, SizeOfConstants) {$/;"	f	namespace:rtc
TEST	webrtc/base/bind_unittest.cc	/^TEST(BindTest, BindToFunction) {$/;"	f	namespace:rtc
TEST	webrtc/base/bind_unittest.cc	/^TEST(BindTest, BindToMethod) {$/;"	f	namespace:rtc
TEST	webrtc/base/bind_unittest.cc	/^TEST(BindTest, CapturePointerAsScopedRefPtr) {$/;"	f	namespace:rtc
TEST	webrtc/base/bind_unittest.cc	/^TEST(BindTest, CaptureScopedRefPtrAsScopedRefPtr) {$/;"	f	namespace:rtc
TEST	webrtc/base/bind_unittest.cc	/^TEST(BindTest, FunctorReleasesObjectOnDestruction) {$/;"	f	namespace:rtc
TEST	webrtc/base/bind_unittest.cc	/^TEST(BindTest, RefArgument) {$/;"	f	namespace:rtc
TEST	webrtc/base/bind_unittest.cc	/^TEST(BindTest, ScopedRefPointerArgument) {$/;"	f	namespace:rtc
TEST	webrtc/base/bitbuffer_unittest.cc	/^TEST(BitBufferTest, ConsumeBits) {$/;"	f	namespace:rtc
TEST	webrtc/base/bitbuffer_unittest.cc	/^TEST(BitBufferTest, GolombUint32Values) {$/;"	f	namespace:rtc
TEST	webrtc/base/bitbuffer_unittest.cc	/^TEST(BitBufferTest, NoGolombOverread) {$/;"	f	namespace:rtc
TEST	webrtc/base/bitbuffer_unittest.cc	/^TEST(BitBufferTest, ReadBits) {$/;"	f	namespace:rtc
TEST	webrtc/base/bitbuffer_unittest.cc	/^TEST(BitBufferTest, ReadBytesAligned) {$/;"	f	namespace:rtc
TEST	webrtc/base/bitbuffer_unittest.cc	/^TEST(BitBufferTest, ReadBytesOffset3) {$/;"	f	namespace:rtc
TEST	webrtc/base/bitbuffer_unittest.cc	/^TEST(BitBufferTest, ReadBytesOffset4) {$/;"	f	namespace:rtc
TEST	webrtc/base/bitbuffer_unittest.cc	/^TEST(BitBufferTest, SetOffsetValues) {$/;"	f	namespace:rtc
TEST	webrtc/base/bitbuffer_unittest.cc	/^TEST(BitBufferTest, SignedGolombValues) {$/;"	f	namespace:rtc
TEST	webrtc/base/bitbuffer_unittest.cc	/^TEST(BitBufferWriterTest, SymmetricBytesMisaligned) {$/;"	f	namespace:rtc
TEST	webrtc/base/bitbuffer_unittest.cc	/^TEST(BitBufferWriterTest, SymmetricGolomb) {$/;"	f	namespace:rtc
TEST	webrtc/base/bitbuffer_unittest.cc	/^TEST(BitBufferWriterTest, SymmetricReadWrite) {$/;"	f	namespace:rtc
TEST	webrtc/base/bitbuffer_unittest.cc	/^TEST(BitBufferWriterTest, WriteClearsBits) {$/;"	f	namespace:rtc
TEST	webrtc/base/buffer_unittest.cc	/^TEST(BufferTest, TestAppendData) {$/;"	f	namespace:rtc
TEST	webrtc/base/buffer_unittest.cc	/^TEST(BufferTest, TestBracketRead) {$/;"	f	namespace:rtc
TEST	webrtc/base/buffer_unittest.cc	/^TEST(BufferTest, TestBracketReadConst) {$/;"	f	namespace:rtc
TEST	webrtc/base/buffer_unittest.cc	/^TEST(BufferTest, TestBracketWrite) {$/;"	f	namespace:rtc
TEST	webrtc/base/buffer_unittest.cc	/^TEST(BufferTest, TestClear) {$/;"	f	namespace:rtc
TEST	webrtc/base/buffer_unittest.cc	/^TEST(BufferTest, TestConstructArray) {$/;"	f	namespace:rtc
TEST	webrtc/base/buffer_unittest.cc	/^TEST(BufferTest, TestConstructData) {$/;"	f	namespace:rtc
TEST	webrtc/base/buffer_unittest.cc	/^TEST(BufferTest, TestConstructDataWithCapacity) {$/;"	f	namespace:rtc
TEST	webrtc/base/buffer_unittest.cc	/^TEST(BufferTest, TestConstructEmpty) {$/;"	f	namespace:rtc
TEST	webrtc/base/buffer_unittest.cc	/^TEST(BufferTest, TestEnsureCapacityLarger) {$/;"	f	namespace:rtc
TEST	webrtc/base/buffer_unittest.cc	/^TEST(BufferTest, TestEnsureCapacitySmaller) {$/;"	f	namespace:rtc
TEST	webrtc/base/buffer_unittest.cc	/^TEST(BufferTest, TestFloat) {$/;"	f	namespace:rtc
TEST	webrtc/base/buffer_unittest.cc	/^TEST(BufferTest, TestInt16) {$/;"	f	namespace:rtc
TEST	webrtc/base/buffer_unittest.cc	/^TEST(BufferTest, TestLambdaAppendEmpty) {$/;"	f	namespace:rtc
TEST	webrtc/base/buffer_unittest.cc	/^TEST(BufferTest, TestLambdaAppendPartial) {$/;"	f	namespace:rtc
TEST	webrtc/base/buffer_unittest.cc	/^TEST(BufferTest, TestLambdaSetAppend) {$/;"	f	namespace:rtc
TEST	webrtc/base/buffer_unittest.cc	/^TEST(BufferTest, TestLambdaSetAppendSigned) {$/;"	f	namespace:rtc
TEST	webrtc/base/buffer_unittest.cc	/^TEST(BufferTest, TestMoveAssign) {$/;"	f	namespace:rtc
TEST	webrtc/base/buffer_unittest.cc	/^TEST(BufferTest, TestMoveConstruct) {$/;"	f	namespace:rtc
TEST	webrtc/base/buffer_unittest.cc	/^TEST(BufferTest, TestMutableLambdaSetAppend) {$/;"	f	namespace:rtc
TEST	webrtc/base/buffer_unittest.cc	/^TEST(BufferTest, TestSetAndAppendWithUnknownArg) {$/;"	f	namespace:rtc
TEST	webrtc/base/buffer_unittest.cc	/^TEST(BufferTest, TestSetData) {$/;"	f	namespace:rtc
TEST	webrtc/base/buffer_unittest.cc	/^TEST(BufferTest, TestSetSizeLarger) {$/;"	f	namespace:rtc
TEST	webrtc/base/buffer_unittest.cc	/^TEST(BufferTest, TestSetSizeSmaller) {$/;"	f	namespace:rtc
TEST	webrtc/base/buffer_unittest.cc	/^TEST(BufferTest, TestStruct) {$/;"	f	namespace:rtc
TEST	webrtc/base/buffer_unittest.cc	/^TEST(BufferTest, TestSwap) {$/;"	f	namespace:rtc
TEST	webrtc/base/bufferqueue_unittest.cc	/^TEST(BufferQueueTest, TestAll) {$/;"	f	namespace:rtc
TEST	webrtc/base/bytebuffer_unittest.cc	/^TEST(ByteBufferTest, TestBufferLength) {$/;"	f	namespace:rtc
TEST	webrtc/base/bytebuffer_unittest.cc	/^TEST(ByteBufferTest, TestByteOrder) {$/;"	f	namespace:rtc
TEST	webrtc/base/bytebuffer_unittest.cc	/^TEST(ByteBufferTest, TestReadWriteBuffer) {$/;"	f	namespace:rtc
TEST	webrtc/base/bytebuffer_unittest.cc	/^TEST(ByteBufferTest, TestReadWriteUVarint) {$/;"	f	namespace:rtc
TEST	webrtc/base/byteorder_unittest.cc	/^TEST(ByteOrderTest, TestGet) {$/;"	f	namespace:rtc
TEST	webrtc/base/byteorder_unittest.cc	/^TEST(ByteOrderTest, TestSet) {$/;"	f	namespace:rtc
TEST	webrtc/base/callback_unittest.cc	/^TEST(CallbackTest, IntReturn) {$/;"	f	namespace:rtc
TEST	webrtc/base/callback_unittest.cc	/^TEST(CallbackTest, OneParam) {$/;"	f	namespace:rtc
TEST	webrtc/base/callback_unittest.cc	/^TEST(CallbackTest, VoidReturn) {$/;"	f	namespace:rtc
TEST	webrtc/base/callback_unittest.cc	/^TEST(CallbackTest, WithBind) {$/;"	f	namespace:rtc
TEST	webrtc/base/callback_unittest.cc	/^TEST(KeepRefUntilDoneTest, copy) {$/;"	f	namespace:rtc
TEST	webrtc/base/callback_unittest.cc	/^TEST(KeepRefUntilDoneTest, scopedref) {$/;"	f	namespace:rtc
TEST	webrtc/base/callback_unittest.cc	/^TEST(KeepRefUntilDoneTest, simple) {$/;"	f	namespace:rtc
TEST	webrtc/base/copyonwritebuffer_unittest.cc	/^TEST(CopyOnWriteBufferTest, ClearDoesntChangeCapacity) {$/;"	f	namespace:rtc
TEST	webrtc/base/copyonwritebuffer_unittest.cc	/^TEST(CopyOnWriteBufferTest, ClearDoesntChangeOriginal) {$/;"	f	namespace:rtc
TEST	webrtc/base/copyonwritebuffer_unittest.cc	/^TEST(CopyOnWriteBufferTest, SetDataMakeReferenceCopy) {$/;"	f	namespace:rtc
TEST	webrtc/base/copyonwritebuffer_unittest.cc	/^TEST(CopyOnWriteBufferTest, SetDataNoMoreThanCapacityDoesntCauseReallocation) {$/;"	f	namespace:rtc
TEST	webrtc/base/copyonwritebuffer_unittest.cc	/^TEST(CopyOnWriteBufferTest, SetDataOnSharedKeepsCapacity) {$/;"	f	namespace:rtc
TEST	webrtc/base/copyonwritebuffer_unittest.cc	/^TEST(CopyOnWriteBufferTest, SetDataOnSharedKeepsOriginal) {$/;"	f	namespace:rtc
TEST	webrtc/base/copyonwritebuffer_unittest.cc	/^TEST(CopyOnWriteBufferTest, SetEmptyData) {$/;"	f	namespace:rtc
TEST	webrtc/base/copyonwritebuffer_unittest.cc	/^TEST(CopyOnWriteBufferTest, SetSizeCloneContent) {$/;"	f	namespace:rtc
TEST	webrtc/base/copyonwritebuffer_unittest.cc	/^TEST(CopyOnWriteBufferTest, SetSizeDoesntChangeOriginal) {$/;"	f	namespace:rtc
TEST	webrtc/base/copyonwritebuffer_unittest.cc	/^TEST(CopyOnWriteBufferTest, SetSizeDoesntDecreaseCapacity) {$/;"	f	namespace:rtc
TEST	webrtc/base/copyonwritebuffer_unittest.cc	/^TEST(CopyOnWriteBufferTest, SetSizeMayIncreaseCapacity) {$/;"	f	namespace:rtc
TEST	webrtc/base/copyonwritebuffer_unittest.cc	/^TEST(CopyOnWriteBufferTest, TestAppendData) {$/;"	f	namespace:rtc
TEST	webrtc/base/copyonwritebuffer_unittest.cc	/^TEST(CopyOnWriteBufferTest, TestBacketRead) {$/;"	f	namespace:rtc
TEST	webrtc/base/copyonwritebuffer_unittest.cc	/^TEST(CopyOnWriteBufferTest, TestBacketReadConst) {$/;"	f	namespace:rtc
TEST	webrtc/base/copyonwritebuffer_unittest.cc	/^TEST(CopyOnWriteBufferTest, TestBacketWrite) {$/;"	f	namespace:rtc
TEST	webrtc/base/copyonwritebuffer_unittest.cc	/^TEST(CopyOnWriteBufferTest, TestConstDataAccessor) {$/;"	f	namespace:rtc
TEST	webrtc/base/copyonwritebuffer_unittest.cc	/^TEST(CopyOnWriteBufferTest, TestCreateEmptyData) {$/;"	f	namespace:rtc
TEST	webrtc/base/copyonwritebuffer_unittest.cc	/^TEST(CopyOnWriteBufferTest, TestEnsureCapacity) {$/;"	f	namespace:rtc
TEST	webrtc/base/copyonwritebuffer_unittest.cc	/^TEST(CopyOnWriteBufferTest, TestMoveAssign) {$/;"	f	namespace:rtc
TEST	webrtc/base/copyonwritebuffer_unittest.cc	/^TEST(CopyOnWriteBufferTest, TestMoveConstruct) {$/;"	f	namespace:rtc
TEST	webrtc/base/copyonwritebuffer_unittest.cc	/^TEST(CopyOnWriteBufferTest, TestSwap) {$/;"	f	namespace:rtc
TEST	webrtc/base/crc32_unittest.cc	/^TEST(Crc32Test, TestBasic) {$/;"	f	namespace:rtc
TEST	webrtc/base/crc32_unittest.cc	/^TEST(Crc32Test, TestMultipleUpdates) {$/;"	f	namespace:rtc
TEST	webrtc/base/criticalsection_unittest.cc	/^TEST(AtomicOpsTest, CompareAndSwap) {$/;"	f	namespace:rtc
TEST	webrtc/base/criticalsection_unittest.cc	/^TEST(AtomicOpsTest, Decrement) {$/;"	f	namespace:rtc
TEST	webrtc/base/criticalsection_unittest.cc	/^TEST(AtomicOpsTest, Increment) {$/;"	f	namespace:rtc
TEST	webrtc/base/criticalsection_unittest.cc	/^TEST(AtomicOpsTest, Simple) {$/;"	f	namespace:rtc
TEST	webrtc/base/criticalsection_unittest.cc	/^TEST(AtomicOpsTest, SimplePtr) {$/;"	f	namespace:rtc
TEST	webrtc/base/criticalsection_unittest.cc	/^TEST(CriticalSectionTest, Basic) {$/;"	f	namespace:rtc
TEST	webrtc/base/criticalsection_unittest.cc	/^TEST(CriticalSectionTest, DISABLED_Performance) {$/;"	f	namespace:rtc
TEST	webrtc/base/criticalsection_unittest.cc	/^TEST(GlobalLockTest, Basic) {$/;"	f	namespace:rtc
TEST	webrtc/base/dbus_unittest.cc	/^TEST(DBusMonitorTest, AddFilterAfterStop) {$/;"	f	namespace:rtc
TEST	webrtc/base/dbus_unittest.cc	/^TEST(DBusMonitorTest, ConcurrentFilters) {$/;"	f	namespace:rtc
TEST	webrtc/base/dbus_unittest.cc	/^TEST(DBusMonitorTest, ConcurrentMonitors) {$/;"	f	namespace:rtc
TEST	webrtc/base/dbus_unittest.cc	/^TEST(DBusMonitorTest, NoAddFilterIfRunning) {$/;"	f	namespace:rtc
TEST	webrtc/base/dbus_unittest.cc	/^TEST(DBusMonitorTest, ReceivedNameAcquiredSignal) {$/;"	f	namespace:rtc
TEST	webrtc/base/dbus_unittest.cc	/^TEST(DBusMonitorTest, StartStopStartStop) {$/;"	f	namespace:rtc
TEST	webrtc/base/dbus_unittest.cc	/^TEST(DBusMonitorTest, StopRightAfterStart) {$/;"	f	namespace:rtc
TEST	webrtc/base/dbus_unittest.cc	/^TEST(DBusSigFilter, BuildFilterString) {$/;"	f	namespace:rtc
TEST	webrtc/base/event_tracer_unittest.cc	/^TEST(EventTracerTest, EventTracerDisabled) {$/;"	f	namespace:webrtc
TEST	webrtc/base/event_tracer_unittest.cc	/^TEST(EventTracerTest, ScopedTraceEvent) {$/;"	f	namespace:webrtc
TEST	webrtc/base/event_unittest.cc	/^TEST(EventTest, AutoReset) {$/;"	f	namespace:rtc
TEST	webrtc/base/event_unittest.cc	/^TEST(EventTest, InitiallySignaled) {$/;"	f	namespace:rtc
TEST	webrtc/base/event_unittest.cc	/^TEST(EventTest, ManualReset) {$/;"	f	namespace:rtc
TEST	webrtc/base/exp_filter_unittest.cc	/^TEST(ExpFilterTest, FirstTimeOutputEqualInput) {$/;"	f	namespace:rtc
TEST	webrtc/base/exp_filter_unittest.cc	/^TEST(ExpFilterTest, Reset) {$/;"	f	namespace:rtc
TEST	webrtc/base/exp_filter_unittest.cc	/^TEST(ExpFilterTest, SecondTime) {$/;"	f	namespace:rtc
TEST	webrtc/base/exp_filter_unittest.cc	/^TEST(ExpfilterTest, OutputLimitedByMax) {$/;"	f	namespace:rtc
TEST	webrtc/base/fileutils_unittest.cc	/^TEST(MAYBE_FilesystemTest, GetTemporaryFolder) {$/;"	f	namespace:rtc
TEST	webrtc/base/fileutils_unittest.cc	/^TEST(MAYBE_FilesystemTest, TestGetDiskFreeSpace) {$/;"	f	namespace:rtc
TEST	webrtc/base/fileutils_unittest.cc	/^TEST(MAYBE_FilesystemTest, TestOpenBadFile) {$/;"	f	namespace:rtc
TEST	webrtc/base/fileutils_unittest.cc	/^TEST(MAYBE_FilesystemTest, TestOpenFile) {$/;"	f	namespace:rtc
TEST	webrtc/base/function_view_unittest.cc	/^TEST(FunctionViewTest, CopyAssignment) {$/;"	f	namespace:rtc
TEST	webrtc/base/function_view_unittest.cc	/^TEST(FunctionViewTest, CopyAssignmentChaining) {$/;"	f	namespace:rtc
TEST	webrtc/base/function_view_unittest.cc	/^TEST(FunctionViewTest, CopyConstructor) {$/;"	f	namespace:rtc
TEST	webrtc/base/function_view_unittest.cc	/^TEST(FunctionViewTest, CopyConstructorChaining) {$/;"	f	namespace:rtc
TEST	webrtc/base/function_view_unittest.cc	/^TEST(FunctionViewTest, ImplicitConversion) {$/;"	f	namespace:rtc
TEST	webrtc/base/function_view_unittest.cc	/^TEST(FunctionViewTest, IntIntFunction) {$/;"	f	namespace:rtc
TEST	webrtc/base/function_view_unittest.cc	/^TEST(FunctionViewTest, IntIntFunctionPointer) {$/;"	f	namespace:rtc
TEST	webrtc/base/function_view_unittest.cc	/^TEST(FunctionViewTest, IntIntLambdaWithoutState) {$/;"	f	namespace:rtc
TEST	webrtc/base/function_view_unittest.cc	/^TEST(FunctionViewTest, IntVoidLambdaWithState) {$/;"	f	namespace:rtc
TEST	webrtc/base/function_view_unittest.cc	/^TEST(FunctionViewTest, MoveAssignmentIsCopy) {$/;"	f	namespace:rtc
TEST	webrtc/base/function_view_unittest.cc	/^TEST(FunctionViewTest, MoveConstructorIsCopy) {$/;"	f	namespace:rtc
TEST	webrtc/base/function_view_unittest.cc	/^TEST(FunctionViewTest, Null) {$/;"	f	namespace:rtc
TEST	webrtc/base/function_view_unittest.cc	/^TEST(FunctionViewTest, Swap) {$/;"	f	namespace:rtc
TEST	webrtc/base/function_view_unittest.cc	/^TEST(FunctionViewTest, UniquePtrPassthrough) {$/;"	f	namespace:rtc
TEST	webrtc/base/httpcommon_unittest.cc	/^TEST(HttpResponseData, parseLeaderHttp1_0) {$/;"	f	namespace:rtc
TEST	webrtc/base/httpcommon_unittest.cc	/^TEST(HttpResponseData, parseLeaderHttp1_1) {$/;"	f	namespace:rtc
TEST	webrtc/base/httpcommon_unittest.cc	/^TEST(HttpResponseData, parseLeaderHttpFailure) {$/;"	f	namespace:rtc
TEST	webrtc/base/httpcommon_unittest.cc	/^TEST(HttpResponseData, parseLeaderHttpInvalid) {$/;"	f	namespace:rtc
TEST	webrtc/base/httpcommon_unittest.cc	/^TEST(HttpResponseData, parseLeaderHttpUnknown) {$/;"	f	namespace:rtc
TEST	webrtc/base/httpcommon_unittest.cc	/^TEST(Url, ComposesUrls) {$/;"	f	namespace:rtc
TEST	webrtc/base/httpcommon_unittest.cc	/^TEST(Url, DecomposesUrls) {$/;"	f	namespace:rtc
TEST	webrtc/base/httpcommon_unittest.cc	/^TEST(Url, EnsuresNonEmptyPath) {$/;"	f	namespace:rtc
TEST	webrtc/base/httpcommon_unittest.cc	/^TEST(Url, GetQueryAttributes) {$/;"	f	namespace:rtc
TEST	webrtc/base/httpcommon_unittest.cc	/^TEST(Url, SkipsUser) {$/;"	f	namespace:rtc
TEST	webrtc/base/httpcommon_unittest.cc	/^TEST(Url, SkipsUserAndPassword) {$/;"	f	namespace:rtc
TEST	webrtc/base/httpserver_unittest.cc	/^TEST(HttpServer, DoesNotSignalCloseUnlessCloseAllIsCalled) {$/;"	f	namespace:rtc
TEST	webrtc/base/httpserver_unittest.cc	/^TEST(HttpServer, SignalsCloseAfterForcedCloseAll) {$/;"	f	namespace:rtc
TEST	webrtc/base/httpserver_unittest.cc	/^TEST(HttpServer, SignalsCloseAfterGracefulCloseAll) {$/;"	f	namespace:rtc
TEST	webrtc/base/httpserver_unittest.cc	/^TEST(HttpServer, SignalsCloseWhenNoConnectionsAreActive) {$/;"	f	namespace:rtc
TEST	webrtc/base/ipaddress_unittest.cc	/^TEST(IPAddressTest, MAYBE_TestCountIPMaskBits) {$/;"	f	namespace:rtc
TEST	webrtc/base/ipaddress_unittest.cc	/^TEST(IPAddressTest, TestAsIPv6Address) {$/;"	f	namespace:rtc
TEST	webrtc/base/ipaddress_unittest.cc	/^TEST(IPAddressTest, TestCategorizeIPv6) {$/;"	f	namespace:rtc
TEST	webrtc/base/ipaddress_unittest.cc	/^TEST(IPAddressTest, TestComparison) {$/;"	f	namespace:rtc
TEST	webrtc/base/ipaddress_unittest.cc	/^TEST(IPAddressTest, TestCopyCtor) {$/;"	f	namespace:rtc
TEST	webrtc/base/ipaddress_unittest.cc	/^TEST(IPAddressTest, TestDefaultCtor) {$/;"	f	namespace:rtc
TEST	webrtc/base/ipaddress_unittest.cc	/^TEST(IPAddressTest, TestEquality) {$/;"	f	namespace:rtc
TEST	webrtc/base/ipaddress_unittest.cc	/^TEST(IPAddressTest, TestFromString) {$/;"	f	namespace:rtc
TEST	webrtc/base/ipaddress_unittest.cc	/^TEST(IPAddressTest, TestIPFromAddrInfo) {$/;"	f	namespace:rtc
TEST	webrtc/base/ipaddress_unittest.cc	/^TEST(IPAddressTest, TestInAddr6Ctor) {$/;"	f	namespace:rtc
TEST	webrtc/base/ipaddress_unittest.cc	/^TEST(IPAddressTest, TestInAddrCtor) {$/;"	f	namespace:rtc
TEST	webrtc/base/ipaddress_unittest.cc	/^TEST(IPAddressTest, TestInterfaceAddress) {$/;"	f	namespace:rtc
TEST	webrtc/base/ipaddress_unittest.cc	/^TEST(IPAddressTest, TestIsAny) {$/;"	f	namespace:rtc
TEST	webrtc/base/ipaddress_unittest.cc	/^TEST(IPAddressTest, TestIsEui64) {$/;"	f	namespace:rtc
TEST	webrtc/base/ipaddress_unittest.cc	/^TEST(IPAddressTest, TestIsLoopback) {$/;"	f	namespace:rtc
TEST	webrtc/base/ipaddress_unittest.cc	/^TEST(IPAddressTest, TestIsNil) {$/;"	f	namespace:rtc
TEST	webrtc/base/ipaddress_unittest.cc	/^TEST(IPAddressTest, TestIsPrivate) {$/;"	f	namespace:rtc
TEST	webrtc/base/ipaddress_unittest.cc	/^TEST(IPAddressTest, TestNormalized) {$/;"	f	namespace:rtc
TEST	webrtc/base/ipaddress_unittest.cc	/^TEST(IPAddressTest, TestToSensitiveString) {$/;"	f	namespace:rtc
TEST	webrtc/base/ipaddress_unittest.cc	/^TEST(IPAddressTest, TestTruncateIP) {$/;"	f	namespace:rtc
TEST	webrtc/base/ipaddress_unittest.cc	/^TEST(IPAddressTest, TestUint32Ctor) {$/;"	f	namespace:rtc
TEST	webrtc/base/json_unittest.cc	/^TEST(JsonTest, BoolVectorToFromArray) {$/;"	f	namespace:rtc
TEST	webrtc/base/json_unittest.cc	/^TEST(JsonTest, DoubleVectorToFromArray) {$/;"	f	namespace:rtc
TEST	webrtc/base/json_unittest.cc	/^TEST(JsonTest, GetBool) {$/;"	f	namespace:rtc
TEST	webrtc/base/json_unittest.cc	/^TEST(JsonTest, GetDouble) {$/;"	f	namespace:rtc
TEST	webrtc/base/json_unittest.cc	/^TEST(JsonTest, GetFromArray) {$/;"	f	namespace:rtc
TEST	webrtc/base/json_unittest.cc	/^TEST(JsonTest, GetFromObject) {$/;"	f	namespace:rtc
TEST	webrtc/base/json_unittest.cc	/^TEST(JsonTest, GetInt) {$/;"	f	namespace:rtc
TEST	webrtc/base/json_unittest.cc	/^TEST(JsonTest, GetString) {$/;"	f	namespace:rtc
TEST	webrtc/base/json_unittest.cc	/^TEST(JsonTest, GetUInt) {$/;"	f	namespace:rtc
TEST	webrtc/base/json_unittest.cc	/^TEST(JsonTest, IntVectorToFromArray) {$/;"	f	namespace:rtc
TEST	webrtc/base/json_unittest.cc	/^TEST(JsonTest, StringVectorToFromArray) {$/;"	f	namespace:rtc
TEST	webrtc/base/json_unittest.cc	/^TEST(JsonTest, UIntVectorToFromArray) {$/;"	f	namespace:rtc
TEST	webrtc/base/json_unittest.cc	/^TEST(JsonTest, ValueVectorToFromArray) {$/;"	f	namespace:rtc
TEST	webrtc/base/latebindingsymboltable_unittest.cc	/^TEST(LateBindingSymbolTable, libm) {$/;"	f	namespace:rtc
TEST	webrtc/base/linux_unittest.cc	/^TEST(ConfigParser, ParseConfig) {$/;"	f	namespace:rtc
TEST	webrtc/base/linux_unittest.cc	/^TEST(ProcCpuInfo, GetProcInfo) {$/;"	f	namespace:rtc
TEST	webrtc/base/linux_unittest.cc	/^TEST(ReadLinuxUname, ReturnsSomething) {$/;"	f	namespace:rtc
TEST	webrtc/base/linuxfdwalk_unittest.cc	/^TEST(LinuxFdWalk, TestFdWalk) {$/;"	f
TEST	webrtc/base/logging_unittest.cc	/^TEST(LogTest, MAYBE_Perf) {$/;"	f	namespace:rtc
TEST	webrtc/base/logging_unittest.cc	/^TEST(LogTest, MultipleStreams) {$/;"	f	namespace:rtc
TEST	webrtc/base/logging_unittest.cc	/^TEST(LogTest, MultipleThreads) {$/;"	f	namespace:rtc
TEST	webrtc/base/logging_unittest.cc	/^TEST(LogTest, SingleStream) {$/;"	f	namespace:rtc
TEST	webrtc/base/logging_unittest.cc	/^TEST(LogTest, WallClockStartTime) {$/;"	f	namespace:rtc
TEST	webrtc/base/macutils_unittest.cc	/^TEST(MacUtilsTest, GetOsVersionName) {$/;"	f
TEST	webrtc/base/macwindowpicker_unittest.cc	/^TEST(MacWindowPickerTest, TestGetWindowList) {$/;"	f	namespace:rtc
TEST	webrtc/base/md5digest_unittest.cc	/^TEST(Md5DigestTest, TestBasic) {$/;"	f	namespace:rtc
TEST	webrtc/base/md5digest_unittest.cc	/^TEST(Md5DigestTest, TestBufferConst) {$/;"	f	namespace:rtc
TEST	webrtc/base/md5digest_unittest.cc	/^TEST(Md5DigestTest, TestBufferTooSmall) {$/;"	f	namespace:rtc
TEST	webrtc/base/md5digest_unittest.cc	/^TEST(Md5DigestTest, TestMultipleUpdates) {$/;"	f	namespace:rtc
TEST	webrtc/base/md5digest_unittest.cc	/^TEST(Md5DigestTest, TestReuse) {$/;"	f	namespace:rtc
TEST	webrtc/base/md5digest_unittest.cc	/^TEST(Md5DigestTest, TestSize) {$/;"	f	namespace:rtc
TEST	webrtc/base/messagedigest_unittest.cc	/^TEST(MessageDigestTest, TestBadDigest) {$/;"	f	namespace:rtc
TEST	webrtc/base/messagedigest_unittest.cc	/^TEST(MessageDigestTest, TestBadHmac) {$/;"	f	namespace:rtc
TEST	webrtc/base/messagedigest_unittest.cc	/^TEST(MessageDigestTest, TestMd5Digest) {$/;"	f	namespace:rtc
TEST	webrtc/base/messagedigest_unittest.cc	/^TEST(MessageDigestTest, TestMd5Hmac) {$/;"	f	namespace:rtc
TEST	webrtc/base/messagedigest_unittest.cc	/^TEST(MessageDigestTest, TestSha1Digest) {$/;"	f	namespace:rtc
TEST	webrtc/base/messagedigest_unittest.cc	/^TEST(MessageDigestTest, TestSha1Hmac) {$/;"	f	namespace:rtc
TEST	webrtc/base/messagequeue_unittest.cc	/^TEST(MessageQueueManager, Clear) {$/;"	f
TEST	webrtc/base/messagequeue_unittest.cc	/^TEST(MessageQueueManager, ProcessAllMessageQueues) {$/;"	f
TEST	webrtc/base/messagequeue_unittest.cc	/^TEST(MessageQueueManager, ProcessAllMessageQueuesWithClearedQueue) {$/;"	f
TEST	webrtc/base/messagequeue_unittest.cc	/^TEST(MessageQueueManager, ProcessAllMessageQueuesWithQuittingThread) {$/;"	f
TEST	webrtc/base/nat_unittest.cc	/^TEST(NatTest, TestPhysicalIPv4) {$/;"	f
TEST	webrtc/base/nat_unittest.cc	/^TEST(NatTest, TestPhysicalIPv6) {$/;"	f
TEST	webrtc/base/nat_unittest.cc	/^TEST(NatTest, TestVirtualIPv4) {$/;"	f
TEST	webrtc/base/nat_unittest.cc	/^TEST(NatTest, TestVirtualIPv6) {$/;"	f
TEST	webrtc/base/onetimeevent_unittest.cc	/^TEST(OneTimeEventTest, ThreadSafe) {$/;"	f	namespace:webrtc
TEST	webrtc/base/onetimeevent_unittest.cc	/^TEST(OneTimeEventTest, ThreadUnsafe) {$/;"	f	namespace:webrtc
TEST	webrtc/base/optional_unittest.cc	/^TEST(OptionalTest, TestConstructCopyEmpty) {$/;"	f	namespace:rtc
TEST	webrtc/base/optional_unittest.cc	/^TEST(OptionalTest, TestConstructCopyFull) {$/;"	f	namespace:rtc
TEST	webrtc/base/optional_unittest.cc	/^TEST(OptionalTest, TestConstructDefault) {$/;"	f	namespace:rtc
TEST	webrtc/base/optional_unittest.cc	/^TEST(OptionalTest, TestConstructMoveEmpty) {$/;"	f	namespace:rtc
TEST	webrtc/base/optional_unittest.cc	/^TEST(OptionalTest, TestConstructMoveFull) {$/;"	f	namespace:rtc
TEST	webrtc/base/optional_unittest.cc	/^TEST(OptionalTest, TestCopyAssignToEmptyFromEmpty) {$/;"	f	namespace:rtc
TEST	webrtc/base/optional_unittest.cc	/^TEST(OptionalTest, TestCopyAssignToEmptyFromFull) {$/;"	f	namespace:rtc
TEST	webrtc/base/optional_unittest.cc	/^TEST(OptionalTest, TestCopyAssignToEmptyFromT) {$/;"	f	namespace:rtc
TEST	webrtc/base/optional_unittest.cc	/^TEST(OptionalTest, TestCopyAssignToFullFromEmpty) {$/;"	f	namespace:rtc
TEST	webrtc/base/optional_unittest.cc	/^TEST(OptionalTest, TestCopyAssignToFullFromFull) {$/;"	f	namespace:rtc
TEST	webrtc/base/optional_unittest.cc	/^TEST(OptionalTest, TestCopyAssignToFullFromT) {$/;"	f	namespace:rtc
TEST	webrtc/base/optional_unittest.cc	/^TEST(OptionalTest, TestDereference) {$/;"	f	namespace:rtc
TEST	webrtc/base/optional_unittest.cc	/^TEST(OptionalTest, TestDereferenceWithDefault) {$/;"	f	namespace:rtc
TEST	webrtc/base/optional_unittest.cc	/^TEST(OptionalTest, TestEmplaceEmptyWithCopy) {$/;"	f	namespace:rtc
TEST	webrtc/base/optional_unittest.cc	/^TEST(OptionalTest, TestEmplaceEmptyWithExplicit) {$/;"	f	namespace:rtc
TEST	webrtc/base/optional_unittest.cc	/^TEST(OptionalTest, TestEmplaceEmptyWithMove) {$/;"	f	namespace:rtc
TEST	webrtc/base/optional_unittest.cc	/^TEST(OptionalTest, TestEmplaceEmptyWithMultipleParameters) {$/;"	f	namespace:rtc
TEST	webrtc/base/optional_unittest.cc	/^TEST(OptionalTest, TestEmplaceFullWithCopy) {$/;"	f	namespace:rtc
TEST	webrtc/base/optional_unittest.cc	/^TEST(OptionalTest, TestEmplaceFullWithExplicit) {$/;"	f	namespace:rtc
TEST	webrtc/base/optional_unittest.cc	/^TEST(OptionalTest, TestEmplaceFullWithMove) {$/;"	f	namespace:rtc
TEST	webrtc/base/optional_unittest.cc	/^TEST(OptionalTest, TestEmplaceFullWithMultipleParameters) {$/;"	f	namespace:rtc
TEST	webrtc/base/optional_unittest.cc	/^TEST(OptionalTest, TestEquality) {$/;"	f	namespace:rtc
TEST	webrtc/base/optional_unittest.cc	/^TEST(OptionalTest, TestEqualityWithObject) {$/;"	f	namespace:rtc
TEST	webrtc/base/optional_unittest.cc	/^TEST(OptionalTest, TestMoveAssignToEmptyFromEmpty) {$/;"	f	namespace:rtc
TEST	webrtc/base/optional_unittest.cc	/^TEST(OptionalTest, TestMoveAssignToEmptyFromFull) {$/;"	f	namespace:rtc
TEST	webrtc/base/optional_unittest.cc	/^TEST(OptionalTest, TestMoveAssignToEmptyFromT) {$/;"	f	namespace:rtc
TEST	webrtc/base/optional_unittest.cc	/^TEST(OptionalTest, TestMoveAssignToFullFromEmpty) {$/;"	f	namespace:rtc
TEST	webrtc/base/optional_unittest.cc	/^TEST(OptionalTest, TestMoveAssignToFullFromFull) {$/;"	f	namespace:rtc
TEST	webrtc/base/optional_unittest.cc	/^TEST(OptionalTest, TestMoveAssignToFullFromT) {$/;"	f	namespace:rtc
TEST	webrtc/base/optional_unittest.cc	/^TEST(OptionalTest, TestResetEmpty) {$/;"	f	namespace:rtc
TEST	webrtc/base/optional_unittest.cc	/^TEST(OptionalTest, TestResetFull) {$/;"	f	namespace:rtc
TEST	webrtc/base/optional_unittest.cc	/^TEST(OptionalTest, TestSwap) {$/;"	f	namespace:rtc
TEST	webrtc/base/pathutils_unittest.cc	/^TEST(Pathname, ReturnsDotForEmptyPathname) {$/;"	f
TEST	webrtc/base/platform_thread_unittest.cc	/^TEST(PlatformThreadTest, RunFunctionIsCalled) {$/;"	f	namespace:rtc
TEST	webrtc/base/platform_thread_unittest.cc	/^TEST(PlatformThreadTest, StartStop) {$/;"	f	namespace:rtc
TEST	webrtc/base/platform_thread_unittest.cc	/^TEST(PlatformThreadTest, StartStop2) {$/;"	f	namespace:rtc
TEST	webrtc/base/random_unittest.cc	/^TEST(RandomNumberGeneratorTest, BucketTestSignedChar) {$/;"	f	namespace:webrtc
TEST	webrtc/base/random_unittest.cc	/^TEST(RandomNumberGeneratorTest, BucketTestSignedInt) {$/;"	f	namespace:webrtc
TEST	webrtc/base/random_unittest.cc	/^TEST(RandomNumberGeneratorTest, BucketTestSignedShort) {$/;"	f	namespace:webrtc
TEST	webrtc/base/random_unittest.cc	/^TEST(RandomNumberGeneratorTest, BucketTestUnsignedChar) {$/;"	f	namespace:webrtc
TEST	webrtc/base/random_unittest.cc	/^TEST(RandomNumberGeneratorTest, BucketTestUnsignedInt) {$/;"	f	namespace:webrtc
TEST	webrtc/base/random_unittest.cc	/^TEST(RandomNumberGeneratorTest, BucketTestUnsignedShort) {$/;"	f	namespace:webrtc
TEST	webrtc/base/random_unittest.cc	/^TEST(RandomNumberGeneratorTest, Gaussian) {$/;"	f	namespace:webrtc
TEST	webrtc/base/random_unittest.cc	/^TEST(RandomNumberGeneratorTest, MAYBE_UniformSignedInterval) {$/;"	f	namespace:webrtc
TEST	webrtc/base/random_unittest.cc	/^TEST(RandomNumberGeneratorTest, SignedHasSameBitPattern) {$/;"	f	namespace:webrtc
TEST	webrtc/base/random_unittest.cc	/^TEST(RandomNumberGeneratorTest, UniformFloatInterval) {$/;"	f	namespace:webrtc
TEST	webrtc/base/random_unittest.cc	/^TEST(RandomNumberGeneratorTest, UniformUnsignedInterval) {$/;"	f	namespace:webrtc
TEST	webrtc/base/ratelimiter_unittest.cc	/^TEST(RateLimiterTest, TestCanUse) {$/;"	f	namespace:rtc
TEST	webrtc/base/ratetracker_unittest.cc	/^TEST(RateTrackerTest, Test30FPS) {$/;"	f	namespace:rtc
TEST	webrtc/base/ratetracker_unittest.cc	/^TEST(RateTrackerTest, Test60FPS) {$/;"	f	namespace:rtc
TEST	webrtc/base/ratetracker_unittest.cc	/^TEST(RateTrackerTest, TestGetUnitSecondsAfterInitialValue) {$/;"	f	namespace:rtc
TEST	webrtc/base/ratetracker_unittest.cc	/^TEST(RateTrackerTest, TestLongPeriodBetweenSamples) {$/;"	f	namespace:rtc
TEST	webrtc/base/ratetracker_unittest.cc	/^TEST(RateTrackerTest, TestRateTrackerBasics) {$/;"	f	namespace:rtc
TEST	webrtc/base/ratetracker_unittest.cc	/^TEST(RateTrackerTest, TestRolloff) {$/;"	f	namespace:rtc
TEST	webrtc/base/refcountedobject_unittest.cc	/^TEST(RefCountedObject, Basic) {$/;"	f	namespace:rtc
TEST	webrtc/base/refcountedobject_unittest.cc	/^TEST(RefCountedObject, SupportMixedTypesInCtor) {$/;"	f	namespace:rtc
TEST	webrtc/base/refcountedobject_unittest.cc	/^TEST(RefCountedObject, SupportRValuesInCtor) {$/;"	f	namespace:rtc
TEST	webrtc/base/rollingaccumulator_unittest.cc	/^TEST(RollingAccumulatorTest, ComputeWeightedMeanCornerCases) {$/;"	f	namespace:rtc
TEST	webrtc/base/rollingaccumulator_unittest.cc	/^TEST(RollingAccumulatorTest, ResetSamples) {$/;"	f	namespace:rtc
TEST	webrtc/base/rollingaccumulator_unittest.cc	/^TEST(RollingAccumulatorTest, RollingSamples) {$/;"	f	namespace:rtc
TEST	webrtc/base/rollingaccumulator_unittest.cc	/^TEST(RollingAccumulatorTest, RollingSamplesDouble) {$/;"	f	namespace:rtc
TEST	webrtc/base/rollingaccumulator_unittest.cc	/^TEST(RollingAccumulatorTest, SomeSamples) {$/;"	f	namespace:rtc
TEST	webrtc/base/rollingaccumulator_unittest.cc	/^TEST(RollingAccumulatorTest, ZeroSamples) {$/;"	f	namespace:rtc
TEST	webrtc/base/sequenced_task_checker_unittest.cc	/^TEST(SequencedTaskCheckerTest, CallsAllowedOnSameThread) {$/;"	f	namespace:rtc
TEST	webrtc/base/sequenced_task_checker_unittest.cc	/^TEST(SequencedTaskCheckerTest, DestructorAllowedOnDifferentThread) {$/;"	f	namespace:rtc
TEST	webrtc/base/sequenced_task_checker_unittest.cc	/^TEST(SequencedTaskCheckerTest, DetachFromTaskQueueAndUseOnThread) {$/;"	f	namespace:rtc
TEST	webrtc/base/sequenced_task_checker_unittest.cc	/^TEST(SequencedTaskCheckerTest, DetachFromTaskQueueInDebug) {$/;"	f	namespace:rtc
TEST	webrtc/base/sequenced_task_checker_unittest.cc	/^TEST(SequencedTaskCheckerTest, DetachFromTaskQueueInRelease) {$/;"	f	namespace:rtc
TEST	webrtc/base/sequenced_task_checker_unittest.cc	/^TEST(SequencedTaskCheckerTest, DetachFromThread) {$/;"	f	namespace:rtc
TEST	webrtc/base/sequenced_task_checker_unittest.cc	/^TEST(SequencedTaskCheckerTest, DetachFromThreadAndUseOnTaskQueue) {$/;"	f	namespace:rtc
TEST	webrtc/base/sequenced_task_checker_unittest.cc	/^TEST(SequencedTaskCheckerTest, MethodAllowedOnDifferentTaskQueueInRelease) {$/;"	f	namespace:rtc
TEST	webrtc/base/sequenced_task_checker_unittest.cc	/^TEST(SequencedTaskCheckerTest, MethodAllowedOnDifferentThreadInRelease) {$/;"	f	namespace:rtc
TEST	webrtc/base/sequenced_task_checker_unittest.cc	/^TEST(SequencedTaskCheckerTest, MethodNotAllowedOnDifferentTaskQueueInDebug) {$/;"	f	namespace:rtc
TEST	webrtc/base/sequenced_task_checker_unittest.cc	/^TEST(SequencedTaskCheckerTest, MethodNotAllowedOnDifferentThreadInDebug) {$/;"	f	namespace:rtc
TEST	webrtc/base/sequenced_task_checker_unittest.cc	/^TEST(SequencedTaskCheckerTest, TestAnnotations) {$/;"	f	namespace:rtc
TEST	webrtc/base/sequenced_task_checker_unittest.cc	/^TEST(SequencedTaskCheckerTest, TestAnnotationsOnWrongQueueDebug) {$/;"	f	namespace:rtc
TEST	webrtc/base/sequenced_task_checker_unittest.cc	/^TEST(SequencedTaskCheckerTest, TestAnnotationsOnWrongQueueRelease) {$/;"	f	namespace:rtc
TEST	webrtc/base/sha1digest_unittest.cc	/^TEST(Sha1DigestTest, TestBasic) {$/;"	f	namespace:rtc
TEST	webrtc/base/sha1digest_unittest.cc	/^TEST(Sha1DigestTest, TestBufferConst) {$/;"	f	namespace:rtc
TEST	webrtc/base/sha1digest_unittest.cc	/^TEST(Sha1DigestTest, TestBufferTooSmall) {$/;"	f	namespace:rtc
TEST	webrtc/base/sha1digest_unittest.cc	/^TEST(Sha1DigestTest, TestMultipleUpdates) {$/;"	f	namespace:rtc
TEST	webrtc/base/sha1digest_unittest.cc	/^TEST(Sha1DigestTest, TestReuse) {$/;"	f	namespace:rtc
TEST	webrtc/base/sha1digest_unittest.cc	/^TEST(Sha1DigestTest, TestSize) {$/;"	f	namespace:rtc
TEST	webrtc/base/sigslot_unittest.cc	/^TEST(DestructionOrder, SignalFirst) {$/;"	f
TEST	webrtc/base/sigslot_unittest.cc	/^TEST(DestructionOrder, SlotFirst) {$/;"	f
TEST	webrtc/base/sigslottester_unittest.cc	/^TEST(SigslotTester, TestSignal1Arg) {$/;"	f	namespace:rtc
TEST	webrtc/base/sigslottester_unittest.cc	/^TEST(SigslotTester, TestSignal2Args) {$/;"	f	namespace:rtc
TEST	webrtc/base/sigslottester_unittest.cc	/^TEST(SigslotTester, TestSignalWithConstPointerArgs) {$/;"	f	namespace:rtc
TEST	webrtc/base/sigslottester_unittest.cc	/^TEST(SigslotTester, TestSignalWithConstReferenceArgs) {$/;"	f	namespace:rtc
TEST	webrtc/base/sigslottester_unittest.cc	/^TEST(SigslotTester, TestSignalWithPointerToConstArgs) {$/;"	f	namespace:rtc
TEST	webrtc/base/socketaddress_unittest.cc	/^TEST(SocketAddressTest, TestAssign) {$/;"	f	namespace:rtc
TEST	webrtc/base/socketaddress_unittest.cc	/^TEST(SocketAddressTest, TestComparisonOperator) {$/;"	f	namespace:rtc
TEST	webrtc/base/socketaddress_unittest.cc	/^TEST(SocketAddressTest, TestCopyCtor) {$/;"	f	namespace:rtc
TEST	webrtc/base/socketaddress_unittest.cc	/^TEST(SocketAddressTest, TestDefaultCtor) {$/;"	f	namespace:rtc
TEST	webrtc/base/socketaddress_unittest.cc	/^TEST(SocketAddressTest, TestEqualityOperators) {$/;"	f	namespace:rtc
TEST	webrtc/base/socketaddress_unittest.cc	/^TEST(SocketAddressTest, TestFromHostname) {$/;"	f	namespace:rtc
TEST	webrtc/base/socketaddress_unittest.cc	/^TEST(SocketAddressTest, TestFromIPv4String) {$/;"	f	namespace:rtc
TEST	webrtc/base/socketaddress_unittest.cc	/^TEST(SocketAddressTest, TestFromIPv6String) {$/;"	f	namespace:rtc
TEST	webrtc/base/socketaddress_unittest.cc	/^TEST(SocketAddressTest, TestHostnamePortCtor) {$/;"	f	namespace:rtc
TEST	webrtc/base/socketaddress_unittest.cc	/^TEST(SocketAddressTest, TestIPPortCtor) {$/;"	f	namespace:rtc
TEST	webrtc/base/socketaddress_unittest.cc	/^TEST(SocketAddressTest, TestIPv4StringPortCtor) {$/;"	f	namespace:rtc
TEST	webrtc/base/socketaddress_unittest.cc	/^TEST(SocketAddressTest, TestIPv6StringPortCtor) {$/;"	f	namespace:rtc
TEST	webrtc/base/socketaddress_unittest.cc	/^TEST(SocketAddressTest, TestSetIPFromHostname) {$/;"	f	namespace:rtc
TEST	webrtc/base/socketaddress_unittest.cc	/^TEST(SocketAddressTest, TestSetIPFromString) {$/;"	f	namespace:rtc
TEST	webrtc/base/socketaddress_unittest.cc	/^TEST(SocketAddressTest, TestSetIPPort) {$/;"	f	namespace:rtc
TEST	webrtc/base/socketaddress_unittest.cc	/^TEST(SocketAddressTest, TestSpecialStringPortCtor) {$/;"	f	namespace:rtc
TEST	webrtc/base/socketaddress_unittest.cc	/^TEST(SocketAddressTest, TestToFromSockAddr) {$/;"	f	namespace:rtc
TEST	webrtc/base/socketaddress_unittest.cc	/^TEST(SocketAddressTest, TestToFromSockAddrStorage) {$/;"	f	namespace:rtc
TEST	webrtc/base/socketaddress_unittest.cc	/^TEST(SocketAddressTest, TestToSensitiveString) {$/;"	f	namespace:rtc
TEST	webrtc/base/stream_unittest.cc	/^TEST(FifoBufferTest, FullBufferCheck) {$/;"	f	namespace:rtc
TEST	webrtc/base/stream_unittest.cc	/^TEST(FifoBufferTest, TestAll) {$/;"	f	namespace:rtc
TEST	webrtc/base/stream_unittest.cc	/^TEST(FifoBufferTest, WriteOffsetAndReadOffset) {$/;"	f	namespace:rtc
TEST	webrtc/base/stringencode_unittest.cc	/^TEST(BoolTest, DecodeInvalid) {$/;"	f	namespace:rtc
TEST	webrtc/base/stringencode_unittest.cc	/^TEST(BoolTest, DecodeValid) {$/;"	f	namespace:rtc
TEST	webrtc/base/stringencode_unittest.cc	/^TEST(BoolTest, RoundTrip) {$/;"	f	namespace:rtc
TEST	webrtc/base/stringencode_unittest.cc	/^TEST(SplitTest, CompareSubstrings) {$/;"	f	namespace:rtc
TEST	webrtc/base/stringencode_unittest.cc	/^TEST(SplitTest, CountSubstrings) {$/;"	f	namespace:rtc
TEST	webrtc/base/stringencode_unittest.cc	/^TEST(TokenizeFirstTest, LeadingSpaces) {$/;"	f	namespace:rtc
TEST	webrtc/base/stringencode_unittest.cc	/^TEST(TokenizeFirstTest, NoLeadingSpaces) {$/;"	f	namespace:rtc
TEST	webrtc/base/stringencode_unittest.cc	/^TEST(TokenizeFirstTest, SingleToken) {$/;"	f	namespace:rtc
TEST	webrtc/base/stringencode_unittest.cc	/^TEST(TokenizeTest, CompareSubstrings) {$/;"	f	namespace:rtc
TEST	webrtc/base/stringencode_unittest.cc	/^TEST(TokenizeTest, CountSubstrings) {$/;"	f	namespace:rtc
TEST	webrtc/base/stringencode_unittest.cc	/^TEST(TokenizeTest, TokenizeAppend) {$/;"	f	namespace:rtc
TEST	webrtc/base/stringencode_unittest.cc	/^TEST(TokenizeTest, TokenizeWithEmptyTokens) {$/;"	f	namespace:rtc
TEST	webrtc/base/stringencode_unittest.cc	/^TEST(TokenizeTest, TokenizeWithMarks) {$/;"	f	namespace:rtc
TEST	webrtc/base/stringencode_unittest.cc	/^TEST(Utf8EncodeTest, EncodeDecode) {$/;"	f	namespace:rtc
TEST	webrtc/base/stringutils_unittest.cc	/^TEST(ascii_string_compareTest, DifferentLengths) {$/;"	f	namespace:rtc
TEST	webrtc/base/stringutils_unittest.cc	/^TEST(ascii_string_compareTest, Equal) {$/;"	f	namespace:rtc
TEST	webrtc/base/stringutils_unittest.cc	/^TEST(ascii_string_compareTest, GreaterThan) {$/;"	f	namespace:rtc
TEST	webrtc/base/stringutils_unittest.cc	/^TEST(ascii_string_compareTest, LargeBuffer) {$/;"	f	namespace:rtc
TEST	webrtc/base/stringutils_unittest.cc	/^TEST(ascii_string_compareTest, LessThan) {$/;"	f	namespace:rtc
TEST	webrtc/base/stringutils_unittest.cc	/^TEST(ascii_string_compareTest, NullInput) {$/;"	f	namespace:rtc
TEST	webrtc/base/stringutils_unittest.cc	/^TEST(ascii_string_compareTest, SmallBuffer) {$/;"	f	namespace:rtc
TEST	webrtc/base/stringutils_unittest.cc	/^TEST(string_endsTest, EndsWith) {$/;"	f	namespace:rtc
TEST	webrtc/base/stringutils_unittest.cc	/^TEST(string_matchTest, Matches) {$/;"	f	namespace:rtc
TEST	webrtc/base/stringutils_unittest.cc	/^TEST(string_startsTest, StartsWith) {$/;"	f	namespace:rtc
TEST	webrtc/base/stringutils_unittest.cc	/^TEST(string_trim_Test, Trimming) {$/;"	f	namespace:rtc
TEST	webrtc/base/swap_queue_unittest.cc	/^TEST(SwapQueueTest, BasicOperation) {$/;"	f	namespace:webrtc
TEST	webrtc/base/swap_queue_unittest.cc	/^TEST(SwapQueueTest, Clear) {$/;"	f	namespace:webrtc
TEST	webrtc/base/swap_queue_unittest.cc	/^TEST(SwapQueueTest, EmptyQueue) {$/;"	f	namespace:webrtc
TEST	webrtc/base/swap_queue_unittest.cc	/^TEST(SwapQueueTest, FullQueue) {$/;"	f	namespace:webrtc
TEST	webrtc/base/swap_queue_unittest.cc	/^TEST(SwapQueueTest, OneSlotQueue) {$/;"	f	namespace:webrtc
TEST	webrtc/base/swap_queue_unittest.cc	/^TEST(SwapQueueTest, SuccessfulItemVerifyFunction) {$/;"	f	namespace:webrtc
TEST	webrtc/base/swap_queue_unittest.cc	/^TEST(SwapQueueTest, SuccessfulItemVerifyFunctor) {$/;"	f	namespace:webrtc
TEST	webrtc/base/swap_queue_unittest.cc	/^TEST(SwapQueueTest, UnSuccessfulItemVerifyInsert) {$/;"	f	namespace:webrtc
TEST	webrtc/base/swap_queue_unittest.cc	/^TEST(SwapQueueTest, UnSuccessfulItemVerifyRemove) {$/;"	f	namespace:webrtc
TEST	webrtc/base/swap_queue_unittest.cc	/^TEST(SwapQueueTest, UnsuccessfulItemVerifyFunctor) {$/;"	f	namespace:webrtc
TEST	webrtc/base/swap_queue_unittest.cc	/^TEST(SwapQueueTest, VectorContentTest) {$/;"	f	namespace:webrtc
TEST	webrtc/base/swap_queue_unittest.cc	/^TEST(SwapQueueTest, ZeroSlotQueue) {$/;"	f	namespace:webrtc
TEST	webrtc/base/systeminfo_unittest.cc	/^TEST(SystemInfoTest, CpuFamily) {$/;"	f
TEST	webrtc/base/systeminfo_unittest.cc	/^TEST(SystemInfoTest, CpuModel) {$/;"	f
TEST	webrtc/base/systeminfo_unittest.cc	/^TEST(SystemInfoTest, CpuStepping) {$/;"	f
TEST	webrtc/base/systeminfo_unittest.cc	/^TEST(SystemInfoTest, CpuVendorIntelAMDARM) {$/;"	f
TEST	webrtc/base/systeminfo_unittest.cc	/^TEST(SystemInfoTest, CpuVendorNonEmpty) {$/;"	f
TEST	webrtc/base/systeminfo_unittest.cc	/^TEST(SystemInfoTest, CurCpus) {$/;"	f
TEST	webrtc/base/systeminfo_unittest.cc	/^TEST(SystemInfoTest, GetCpuArchitecture) {$/;"	f
TEST	webrtc/base/systeminfo_unittest.cc	/^TEST(SystemInfoTest, MachineModelKnown) {$/;"	f
TEST	webrtc/base/systeminfo_unittest.cc	/^TEST(SystemInfoTest, MaxCpus) {$/;"	f
TEST	webrtc/base/systeminfo_unittest.cc	/^TEST(SystemInfoTest, MemorySize) {$/;"	f
TEST	webrtc/base/task_queue_unittest.cc	/^TEST(TaskQueueTest, Construct) {$/;"	f	namespace:rtc
TEST	webrtc/base/task_queue_unittest.cc	/^TEST(TaskQueueTest, PostALot) {$/;"	f	namespace:rtc
TEST	webrtc/base/task_queue_unittest.cc	/^TEST(TaskQueueTest, PostAndCheckCurrent) {$/;"	f	namespace:rtc
TEST	webrtc/base/task_queue_unittest.cc	/^TEST(TaskQueueTest, PostAndReply) {$/;"	f	namespace:rtc
TEST	webrtc/base/task_queue_unittest.cc	/^TEST(TaskQueueTest, PostAndReply2) {$/;"	f	namespace:rtc
TEST	webrtc/base/task_queue_unittest.cc	/^TEST(TaskQueueTest, PostAndReplyLambda) {$/;"	f	namespace:rtc
TEST	webrtc/base/task_queue_unittest.cc	/^TEST(TaskQueueTest, PostAndReuse) {$/;"	f	namespace:rtc
TEST	webrtc/base/task_queue_unittest.cc	/^TEST(TaskQueueTest, PostCustomTask) {$/;"	f	namespace:rtc
TEST	webrtc/base/task_queue_unittest.cc	/^TEST(TaskQueueTest, PostDelayed) {$/;"	f	namespace:rtc
TEST	webrtc/base/task_queue_unittest.cc	/^TEST(TaskQueueTest, PostDelayedAfterDestruct) {$/;"	f	namespace:rtc
TEST	webrtc/base/task_queue_unittest.cc	/^TEST(TaskQueueTest, PostFromQueue) {$/;"	f	namespace:rtc
TEST	webrtc/base/task_queue_unittest.cc	/^TEST(TaskQueueTest, PostLambda) {$/;"	f	namespace:rtc
TEST	webrtc/base/task_queue_unittest.cc	/^TEST(TaskQueueTest, PostMultipleDelayed) {$/;"	f	namespace:rtc
TEST	webrtc/base/task_unittest.cc	/^TEST(start_task_test, Abort) {$/;"	f	namespace:rtc
TEST	webrtc/base/task_unittest.cc	/^TEST(start_task_test, AbortShouldWake) {$/;"	f	namespace:rtc
TEST	webrtc/base/task_unittest.cc	/^TEST(start_task_test, Timeout) {$/;"	f	namespace:rtc
TEST	webrtc/base/task_unittest.cc	/^TEST(start_task_test, TimeoutChange) {$/;"	f	namespace:rtc
TEST	webrtc/base/task_unittest.cc	/^TEST(unstarted_task_test, DeleteTask) {$/;"	f	namespace:rtc
TEST	webrtc/base/task_unittest.cc	/^TEST(unstarted_task_test, DoNotDeleteTask1) {$/;"	f	namespace:rtc
TEST	webrtc/base/task_unittest.cc	/^TEST(unstarted_task_test, DoNotDeleteTask2) {$/;"	f	namespace:rtc
TEST	webrtc/base/testclient_unittest.cc	/^TEST(TestClientTest, MAYBE_TestTcpIPv6) {$/;"	f
TEST	webrtc/base/testclient_unittest.cc	/^TEST(TestClientTest, MAYBE_TestUdpIPv6) {$/;"	f
TEST	webrtc/base/testclient_unittest.cc	/^TEST(TestClientTest, TestTcpIPv4) {$/;"	f
TEST	webrtc/base/testclient_unittest.cc	/^TEST(TestClientTest, TestUdpIPv4) {$/;"	f
TEST	webrtc/base/thread_annotations_unittest.cc	/^TEST(ThreadAnnotationsTest, Test) {$/;"	f
TEST	webrtc/base/thread_checker_unittest.cc	/^TEST(ThreadCheckerDeathTest, DetachFromThreadInDebug) {$/;"	f	namespace:rtc
TEST	webrtc/base/thread_checker_unittest.cc	/^TEST(ThreadCheckerDeathTest, MethodNotAllowedOnDifferentThreadInDebug) {$/;"	f	namespace:rtc
TEST	webrtc/base/thread_checker_unittest.cc	/^TEST(ThreadCheckerTest, CallsAllowedOnSameThread) {$/;"	f	namespace:rtc
TEST	webrtc/base/thread_checker_unittest.cc	/^TEST(ThreadCheckerTest, DestructorAllowedOnDifferentThread) {$/;"	f	namespace:rtc
TEST	webrtc/base/thread_checker_unittest.cc	/^TEST(ThreadCheckerTest, DetachFromThread) {$/;"	f	namespace:rtc
TEST	webrtc/base/thread_checker_unittest.cc	/^TEST(ThreadCheckerTest, DetachFromThreadInRelease) {$/;"	f	namespace:rtc
TEST	webrtc/base/thread_checker_unittest.cc	/^TEST(ThreadCheckerTest, MethodAllowedOnDifferentThreadInRelease) {$/;"	f	namespace:rtc
TEST	webrtc/base/thread_unittest.cc	/^TEST(ThreadTest, DISABLED_Main) {$/;"	f
TEST	webrtc/base/thread_unittest.cc	/^TEST(ThreadTest, Invoke) {$/;"	f
TEST	webrtc/base/thread_unittest.cc	/^TEST(ThreadTest, Names) {$/;"	f
TEST	webrtc/base/thread_unittest.cc	/^TEST(ThreadTest, SetNameOnSignalQueueDestroyed) {$/;"	f
TEST	webrtc/base/thread_unittest.cc	/^TEST(ThreadTest, ThreeThreadsInvoke) {$/;"	f
TEST	webrtc/base/thread_unittest.cc	/^TEST(ThreadTest, TwoThreadsInvokeNoDeadlock) {$/;"	f
TEST	webrtc/base/thread_unittest.cc	/^TEST(ThreadTest, Wrap) {$/;"	f
TEST	webrtc/base/timestampaligner_unittest.cc	/^TEST(TimestampAlignerTest, AttenuateTimestampJitterLargeNegDrift) {$/;"	f	namespace:rtc
TEST	webrtc/base/timestampaligner_unittest.cc	/^TEST(TimestampAlignerTest, AttenuateTimestampJitterLargePosDrift) {$/;"	f	namespace:rtc
TEST	webrtc/base/timestampaligner_unittest.cc	/^TEST(TimestampAlignerTest, AttenuateTimestampJitterNoDrift) {$/;"	f	namespace:rtc
TEST	webrtc/base/timestampaligner_unittest.cc	/^TEST(TimestampAlignerTest, AttenuateTimestampJitterSmallNegDrift) {$/;"	f	namespace:rtc
TEST	webrtc/base/timestampaligner_unittest.cc	/^TEST(TimestampAlignerTest, AttenuateTimestampJitterSmallPosDrift) {$/;"	f	namespace:rtc
TEST	webrtc/base/timestampaligner_unittest.cc	/^TEST(TimestampAlignerTest, ClipToMonotonous) {$/;"	f	namespace:rtc
TEST	webrtc/base/timeutils_unittest.cc	/^TEST(FakeClock, AdvanceTime) {$/;"	f	namespace:rtc
TEST	webrtc/base/timeutils_unittest.cc	/^TEST(FakeClock, InitialTime) {$/;"	f	namespace:rtc
TEST	webrtc/base/timeutils_unittest.cc	/^TEST(FakeClock, SetTimeNanos) {$/;"	f	namespace:rtc
TEST	webrtc/base/timeutils_unittest.cc	/^TEST(FakeClock, SettingTimeWakesThreads) {$/;"	f	namespace:rtc
TEST	webrtc/base/timeutils_unittest.cc	/^TEST(FakeClock, TimeFunctionsUseFakeClock) {$/;"	f	namespace:rtc
TEST	webrtc/base/timeutils_unittest.cc	/^TEST(TimeDelta, ComparisonOperators) {$/;"	f	namespace:rtc
TEST	webrtc/base/timeutils_unittest.cc	/^TEST(TimeDelta, FromAndTo) {$/;"	f	namespace:rtc
TEST	webrtc/base/timeutils_unittest.cc	/^TEST(TimeDelta, NumericOperators) {$/;"	f	namespace:rtc
TEST	webrtc/base/timeutils_unittest.cc	/^TEST(TimeTest, Intervals) {$/;"	f	namespace:rtc
TEST	webrtc/base/timeutils_unittest.cc	/^TEST(TimeTest, TestTimeDiff64) {$/;"	f	namespace:rtc
TEST	webrtc/base/timeutils_unittest.cc	/^TEST(TimeTest, TimeInMs) {$/;"	f	namespace:rtc
TEST	webrtc/base/urlencode_unittest.cc	/^TEST(Urldecode, Decoding1) {$/;"	f
TEST	webrtc/base/urlencode_unittest.cc	/^TEST(Urldecode, Decoding2) {$/;"	f
TEST	webrtc/base/urlencode_unittest.cc	/^TEST(Urlencode, Encoding1) {$/;"	f
TEST	webrtc/base/urlencode_unittest.cc	/^TEST(Urlencode, Encoding2) {$/;"	f
TEST	webrtc/base/urlencode_unittest.cc	/^TEST(Urlencode, OneCharacterConversion) {$/;"	f
TEST	webrtc/base/urlencode_unittest.cc	/^TEST(Urlencode, ShortDestinationEncoding) {$/;"	f
TEST	webrtc/base/urlencode_unittest.cc	/^TEST(Urlencode, ShortDestinationNoEncoding) {$/;"	f
TEST	webrtc/base/urlencode_unittest.cc	/^TEST(Urlencode, SourceTooLong) {$/;"	f
TEST	webrtc/base/weak_ptr_unittest.cc	/^TEST(WeakPtrFactoryTest, Basic) {$/;"	f	namespace:rtc
TEST	webrtc/base/weak_ptr_unittest.cc	/^TEST(WeakPtrFactoryTest, BooleanTesting) {$/;"	f	namespace:rtc
TEST	webrtc/base/weak_ptr_unittest.cc	/^TEST(WeakPtrFactoryTest, Comparison) {$/;"	f	namespace:rtc
TEST	webrtc/base/weak_ptr_unittest.cc	/^TEST(WeakPtrFactoryTest, ComparisonToNull) {$/;"	f	namespace:rtc
TEST	webrtc/base/weak_ptr_unittest.cc	/^TEST(WeakPtrFactoryTest, Dereference) {$/;"	f	namespace:rtc
TEST	webrtc/base/weak_ptr_unittest.cc	/^TEST(WeakPtrFactoryTest, Move) {$/;"	f	namespace:rtc
TEST	webrtc/base/weak_ptr_unittest.cc	/^TEST(WeakPtrFactoryTest, Multiple) {$/;"	f	namespace:rtc
TEST	webrtc/base/weak_ptr_unittest.cc	/^TEST(WeakPtrFactoryTest, MultipleStaged) {$/;"	f	namespace:rtc
TEST	webrtc/base/weak_ptr_unittest.cc	/^TEST(WeakPtrFactoryTest, OutOfScope) {$/;"	f	namespace:rtc
TEST	webrtc/base/weak_ptr_unittest.cc	/^TEST(WeakPtrFactoryTest, UpCast) {$/;"	f	namespace:rtc
TEST	webrtc/base/weak_ptr_unittest.cc	/^TEST(WeakPtrTest, DefaultConstructor) {$/;"	f	namespace:rtc
TEST	webrtc/base/weak_ptr_unittest.cc	/^TEST(WeakPtrTest, HasWeakPtrs) {$/;"	f	namespace:rtc
TEST	webrtc/base/weak_ptr_unittest.cc	/^TEST(WeakPtrTest, InvalidateWeakPtrs) {$/;"	f	namespace:rtc
TEST	webrtc/base/weak_ptr_unittest.cc	/^TEST(WeakPtrTest, ObjectAndWeakPtrOnDifferentThreads) {$/;"	f	namespace:rtc
TEST	webrtc/base/weak_ptr_unittest.cc	/^TEST(WeakPtrTest, WeakPtrInitiateAndUseOnDifferentThreads) {$/;"	f	namespace:rtc
TEST	webrtc/base/win32regkey_unittest.cc	/^TEST(RegKeyTest, RegKeyFunctionsTest) {$/;"	f	namespace:rtc
TEST	webrtc/base/win32regkey_unittest.cc	/^TEST(RegKeyTest, RegKeyHelperFunctionsTest) {$/;"	f	namespace:rtc
TEST	webrtc/base/win32socketserver_unittest.cc	/^TEST(Win32SocketServerTest, TestPump) {$/;"	f	namespace:rtc
TEST	webrtc/base/win32socketserver_unittest.cc	/^TEST(Win32SocketServerTest, TestWait) {$/;"	f	namespace:rtc
TEST	webrtc/base/win32window_unittest.cc	/^TEST(Win32WindowTest, Basics) {$/;"	f
TEST	webrtc/base/win32window_unittest.cc	/^TEST(Win32WindowTest, MultipleWindows) {$/;"	f
TEST	webrtc/base/win32windowpicker_unittest.cc	/^TEST(Win32WindowPickerTest, TestGetWindowList) {$/;"	f	namespace:rtc
TEST	webrtc/base/win32windowpicker_unittest.cc	/^TEST(Win32WindowPickerTest, TestIsVisible) {$/;"	f	namespace:rtc
TEST	webrtc/base/win32windowpicker_unittest.cc	/^TEST(Win32WindowPickerTest, TestMoveToFront) {$/;"	f	namespace:rtc
TEST	webrtc/base/windowpicker_unittest.cc	/^TEST(WindowPickerTest, DISABLE_ON_MAC(GetDesktopList)) {$/;"	f
TEST	webrtc/base/windowpicker_unittest.cc	/^TEST(WindowPickerTest, GetWindowList) {$/;"	f
TEST	webrtc/base/x11windowpicker_unittest.cc	/^TEST(X11WindowPickerTest, TestGetDesktopList) {$/;"	f	namespace:rtc
TEST	webrtc/base/x11windowpicker_unittest.cc	/^TEST(X11WindowPickerTest, TestGetWindowList) {$/;"	f	namespace:rtc
TEST	webrtc/common_audio/audio_converter_unittest.cc	/^TEST(AudioConverterTest, ConversionsPassSNRThreshold) {$/;"	f	namespace:webrtc
TEST	webrtc/common_audio/audio_util_unittest.cc	/^TEST(AudioUtilTest, DownmixInterleavedToMono) {$/;"	f	namespace:webrtc::__anon76
TEST	webrtc/common_audio/audio_util_unittest.cc	/^TEST(AudioUtilTest, DownmixToMonoTest) {$/;"	f	namespace:webrtc::__anon76
TEST	webrtc/common_audio/audio_util_unittest.cc	/^TEST(AudioUtilTest, FloatS16ToFloat) {$/;"	f	namespace:webrtc::__anon76
TEST	webrtc/common_audio/audio_util_unittest.cc	/^TEST(AudioUtilTest, FloatS16ToS16) {$/;"	f	namespace:webrtc::__anon76
TEST	webrtc/common_audio/audio_util_unittest.cc	/^TEST(AudioUtilTest, FloatToFloatS16) {$/;"	f	namespace:webrtc::__anon76
TEST	webrtc/common_audio/audio_util_unittest.cc	/^TEST(AudioUtilTest, FloatToS16) {$/;"	f	namespace:webrtc::__anon76
TEST	webrtc/common_audio/audio_util_unittest.cc	/^TEST(AudioUtilTest, InterleavingMonoIsIdentical) {$/;"	f	namespace:webrtc::__anon76
TEST	webrtc/common_audio/audio_util_unittest.cc	/^TEST(AudioUtilTest, InterleavingStereo) {$/;"	f	namespace:webrtc::__anon76
TEST	webrtc/common_audio/audio_util_unittest.cc	/^TEST(AudioUtilTest, S16ToFloat) {$/;"	f	namespace:webrtc::__anon76
TEST	webrtc/common_audio/channel_buffer_unittest.cc	/^TEST(ChannelBufferTest, SetNumChannelsDeathTest) {$/;"	f	namespace:webrtc
TEST	webrtc/common_audio/channel_buffer_unittest.cc	/^TEST(ChannelBufferTest, SetNumChannelsSetsNumChannels) {$/;"	f	namespace:webrtc
TEST	webrtc/common_audio/channel_buffer_unittest.cc	/^TEST(IFChannelBufferTest, SetNumChannelsDeathTest) {$/;"	f	namespace:webrtc
TEST	webrtc/common_audio/channel_buffer_unittest.cc	/^TEST(IFChannelBufferTest, SetNumChannelsSetsChannelBuffersNumChannels) {$/;"	f	namespace:webrtc
TEST	webrtc/common_audio/channel_buffer_unittest.cc	/^TEST(IFChannelBufferTest, SettingNumChannelsOfOneChannelBufferSetsTheOther) {$/;"	f	namespace:webrtc
TEST	webrtc/common_audio/fir_filter_unittest.cc	/^TEST(FIRFilterTest, FilterAsIdentity) {$/;"	f	namespace:webrtc
TEST	webrtc/common_audio/fir_filter_unittest.cc	/^TEST(FIRFilterTest, FilterInLengthLesserOrEqualToCoefficientsLength) {$/;"	f	namespace:webrtc
TEST	webrtc/common_audio/fir_filter_unittest.cc	/^TEST(FIRFilterTest, FilterUsedAsArbitraryWeighting) {$/;"	f	namespace:webrtc
TEST	webrtc/common_audio/fir_filter_unittest.cc	/^TEST(FIRFilterTest, FilterUsedAsInputShifting) {$/;"	f	namespace:webrtc
TEST	webrtc/common_audio/fir_filter_unittest.cc	/^TEST(FIRFilterTest, FilterUsedAsScalarMultiplication) {$/;"	f	namespace:webrtc
TEST	webrtc/common_audio/fir_filter_unittest.cc	/^TEST(FIRFilterTest, MultipleFilterCalls) {$/;"	f	namespace:webrtc
TEST	webrtc/common_audio/fir_filter_unittest.cc	/^TEST(FIRFilterTest, SameOutputWhenSwapedCoefficientsAndInput) {$/;"	f	namespace:webrtc
TEST	webrtc/common_audio/fir_filter_unittest.cc	/^TEST(FIRFilterTest, SimplestHighPassFilter) {$/;"	f	namespace:webrtc
TEST	webrtc/common_audio/fir_filter_unittest.cc	/^TEST(FIRFilterTest, SimplestLowPassFilter) {$/;"	f	namespace:webrtc
TEST	webrtc/common_audio/fir_filter_unittest.cc	/^TEST(FIRFilterTest, VerifySampleBasedVsBlockBasedFiltering) {$/;"	f	namespace:webrtc
TEST	webrtc/common_audio/lapped_transform_unittest.cc	/^TEST(LappedTransformTest, Callbacks) {$/;"	f	namespace:webrtc
TEST	webrtc/common_audio/lapped_transform_unittest.cc	/^TEST(LappedTransformTest, IdentityProcessor) {$/;"	f	namespace:webrtc
TEST	webrtc/common_audio/lapped_transform_unittest.cc	/^TEST(LappedTransformTest, Windowless) {$/;"	f	namespace:webrtc
TEST	webrtc/common_audio/lapped_transform_unittest.cc	/^TEST(LappedTransformTest, chunk_length) {$/;"	f	namespace:webrtc
TEST	webrtc/common_audio/real_fourier_unittest.cc	/^TEST(RealFourierStaticsTest, AllocatorAlignment) {$/;"	f	namespace:webrtc
TEST	webrtc/common_audio/real_fourier_unittest.cc	/^TEST(RealFourierStaticsTest, ComplexLengthComputation) {$/;"	f	namespace:webrtc
TEST	webrtc/common_audio/real_fourier_unittest.cc	/^TEST(RealFourierStaticsTest, OrderComputation) {$/;"	f	namespace:webrtc
TEST	webrtc/common_audio/resampler/push_resampler_unittest.cc	/^TEST(PushResamplerTest, VerifiesBadInputParameters1) {$/;"	f	namespace:webrtc
TEST	webrtc/common_audio/resampler/push_resampler_unittest.cc	/^TEST(PushResamplerTest, VerifiesBadInputParameters2) {$/;"	f	namespace:webrtc
TEST	webrtc/common_audio/resampler/push_resampler_unittest.cc	/^TEST(PushResamplerTest, VerifiesBadInputParameters3) {$/;"	f	namespace:webrtc
TEST	webrtc/common_audio/resampler/push_resampler_unittest.cc	/^TEST(PushResamplerTest, VerifiesBadInputParameters4) {$/;"	f	namespace:webrtc
TEST	webrtc/common_audio/resampler/push_resampler_unittest.cc	/^TEST(PushResamplerTest, VerifiesInputParameters) {$/;"	f	namespace:webrtc
TEST	webrtc/common_audio/resampler/sinc_resampler_unittest.cc	/^TEST(SincResamplerTest, ChunkedResample) {$/;"	f	namespace:webrtc
TEST	webrtc/common_audio/resampler/sinc_resampler_unittest.cc	/^TEST(SincResamplerTest, Convolve) {$/;"	f	namespace:webrtc
TEST	webrtc/common_audio/resampler/sinc_resampler_unittest.cc	/^TEST(SincResamplerTest, ConvolveBenchmark) {$/;"	f	namespace:webrtc
TEST	webrtc/common_audio/resampler/sinc_resampler_unittest.cc	/^TEST(SincResamplerTest, DISABLED_SetRatioBench) {$/;"	f	namespace:webrtc
TEST	webrtc/common_audio/resampler/sinc_resampler_unittest.cc	/^TEST(SincResamplerTest, Flush) {$/;"	f	namespace:webrtc
TEST	webrtc/common_audio/ring_buffer_unittest.cc	/^TEST(RingBufferTest, CreateHandlesErrors) {$/;"	f	namespace:webrtc
TEST	webrtc/common_audio/ring_buffer_unittest.cc	/^TEST(RingBufferTest, PassingNulltoReadBufferForcesMemcpy) {$/;"	f	namespace:webrtc
TEST	webrtc/common_audio/ring_buffer_unittest.cc	/^TEST(RingBufferTest, RandomStressTest) {$/;"	f	namespace:webrtc
TEST	webrtc/common_audio/ring_buffer_unittest.cc	/^TEST(RingBufferTest, RandomStressTestWithNullPtr) {$/;"	f	namespace:webrtc
TEST	webrtc/common_audio/sparse_fir_filter_unittest.cc	/^TEST(SparseFIRFilterTest, FilterAsIdentity) {$/;"	f	namespace:webrtc
TEST	webrtc/common_audio/sparse_fir_filter_unittest.cc	/^TEST(SparseFIRFilterTest, FilterInLengthLesserOrEqualToCoefficientsLength) {$/;"	f	namespace:webrtc
TEST	webrtc/common_audio/sparse_fir_filter_unittest.cc	/^TEST(SparseFIRFilterTest, FilterUsedAsArbitraryWeighting) {$/;"	f	namespace:webrtc
TEST	webrtc/common_audio/sparse_fir_filter_unittest.cc	/^TEST(SparseFIRFilterTest, FilterUsedAsInputShifting) {$/;"	f	namespace:webrtc
TEST	webrtc/common_audio/sparse_fir_filter_unittest.cc	/^TEST(SparseFIRFilterTest, FilterUsedAsScalarMultiplication) {$/;"	f	namespace:webrtc
TEST	webrtc/common_audio/sparse_fir_filter_unittest.cc	/^TEST(SparseFIRFilterTest, MultipleFilterCalls) {$/;"	f	namespace:webrtc
TEST	webrtc/common_audio/sparse_fir_filter_unittest.cc	/^TEST(SparseFIRFilterTest, SameOutputAsFIRFilterWhenSparsityOneAndOffsetZero) {$/;"	f	namespace:webrtc
TEST	webrtc/common_audio/sparse_fir_filter_unittest.cc	/^TEST(SparseFIRFilterTest, SameOutputForScalarCoefficientAndDifferentSparsity) {$/;"	f	namespace:webrtc
TEST	webrtc/common_audio/sparse_fir_filter_unittest.cc	/^TEST(SparseFIRFilterTest, SameOutputWhenSwappedCoefficientsAndInput) {$/;"	f	namespace:webrtc
TEST	webrtc/common_audio/sparse_fir_filter_unittest.cc	/^TEST(SparseFIRFilterTest, SimpleHighPassFilter) {$/;"	f	namespace:webrtc
TEST	webrtc/common_audio/sparse_fir_filter_unittest.cc	/^TEST(SparseFIRFilterTest, SimpleLowPassFilter) {$/;"	f	namespace:webrtc
TEST	webrtc/common_audio/sparse_fir_filter_unittest.cc	/^TEST(SparseFIRFilterTest, VerifySampleBasedVsBlockBasedFiltering) {$/;"	f	namespace:webrtc
TEST	webrtc/common_audio/wav_file_unittest.cc	/^TEST(WavWriterTest, C) {$/;"	f	namespace:webrtc
TEST	webrtc/common_audio/wav_file_unittest.cc	/^TEST(WavWriterTest, CPP) {$/;"	f	namespace:webrtc
TEST	webrtc/common_audio/wav_file_unittest.cc	/^TEST(WavWriterTest, LargeFile) {$/;"	f	namespace:webrtc
TEST	webrtc/common_audio/wav_header_unittest.cc	/^TEST(WavHeaderTest, CheckWavParameters) {$/;"	f	namespace:webrtc
TEST	webrtc/common_audio/wav_header_unittest.cc	/^TEST(WavHeaderTest, ReadAtypicalWavHeader) {$/;"	f	namespace:webrtc
TEST	webrtc/common_audio/wav_header_unittest.cc	/^TEST(WavHeaderTest, ReadWavHeaderWithErrors) {$/;"	f	namespace:webrtc
TEST	webrtc/common_audio/wav_header_unittest.cc	/^TEST(WavHeaderTest, WriteAndReadWavHeader) {$/;"	f	namespace:webrtc
TEST	webrtc/common_audio/window_generator_unittest.cc	/^TEST(WindowGeneratorTest, Hanning) {$/;"	f	namespace:webrtc
TEST	webrtc/common_audio/window_generator_unittest.cc	/^TEST(WindowGeneratorTest, KaiserBesselDerived) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/aec/echo_cancellation_unittest.cc	/^TEST(EchoCancellationTest, ApplyAecCoreHandle) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/aec/echo_cancellation_unittest.cc	/^TEST(EchoCancellationTest, CreateAndFreeHasExpectedBehavior) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/audio_buffer_unittest.cc	/^TEST(AudioBufferTest, SetNumChannelsDeathTest) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/audio_buffer_unittest.cc	/^TEST(AudioBufferTest, SetNumChannelsSetsChannelBuffersNumChannels) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/audio_processing_impl_unittest.cc	/^TEST(AudioProcessingImplTest, AudioParameterChangeTriggersInit) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^TEST(ApmConfiguration, DefaultBehavior) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^TEST(ApmConfiguration, InValidConfigBehavior) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^TEST(ApmConfiguration, ValidConfigBehavior) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/beamformer/array_util_unittest.cc	/^TEST(ArrayUtilTest, AreParallel) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/beamformer/array_util_unittest.cc	/^TEST(ArrayUtilTest, ArePerpendicular) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/beamformer/array_util_unittest.cc	/^TEST(ArrayUtilTest, CrossProduct) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/beamformer/array_util_unittest.cc	/^TEST(ArrayUtilTest, DegreesToRadians) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/beamformer/array_util_unittest.cc	/^TEST(ArrayUtilTest, DotProduct) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/beamformer/array_util_unittest.cc	/^TEST(ArrayUtilTest, GetArrayNormalIfExists) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/beamformer/array_util_unittest.cc	/^TEST(ArrayUtilTest, GetDirectionIfLinear) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/beamformer/array_util_unittest.cc	/^TEST(ArrayUtilTest, GetMinimumSpacing) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/beamformer/array_util_unittest.cc	/^TEST(ArrayUtilTest, GetNormalIfPlanar) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/beamformer/array_util_unittest.cc	/^TEST(ArrayUtilTest, PairDirection) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/beamformer/array_util_unittest.cc	/^TEST(ArrayUtilTest, RadiansToDegrees) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/beamformer/complex_matrix_unittest.cc	/^TEST(ComplexMatrixTest, TestConjugateTranspose) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/beamformer/complex_matrix_unittest.cc	/^TEST(ComplexMatrixTest, TestPointwiseConjugate) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/beamformer/complex_matrix_unittest.cc	/^TEST(ComplexMatrixTest, TestZeroImag) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/beamformer/covariance_matrix_generator_unittest.cc	/^TEST(CovarianceMatrixGeneratorTest, TestAngledCovarianceMatrix2Mics) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/beamformer/covariance_matrix_generator_unittest.cc	/^TEST(CovarianceMatrixGeneratorTest, TestAngledCovarianceMatrix3Mics) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/beamformer/covariance_matrix_generator_unittest.cc	/^TEST(CovarianceMatrixGeneratorTest, TestUniformCovarianceMatrix2Mics) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/beamformer/covariance_matrix_generator_unittest.cc	/^TEST(CovarianceMatrixGeneratorTest, TestUniformCovarianceMatrix3DArray) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/beamformer/covariance_matrix_generator_unittest.cc	/^TEST(CovarianceMatrixGeneratorTest, TestUniformCovarianceMatrix3Mics) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/beamformer/matrix_unittest.cc	/^TEST(MatrixTest, TestComplexOperations) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/beamformer/matrix_unittest.cc	/^TEST(MatrixTest, TestMultiplyDifferentSize) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/beamformer/matrix_unittest.cc	/^TEST(MatrixTest, TestMultiplySameSize) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/beamformer/matrix_unittest.cc	/^TEST(MatrixTest, TestPointwiseAbsoluteValue) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/beamformer/matrix_unittest.cc	/^TEST(MatrixTest, TestPointwiseAdd) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/beamformer/matrix_unittest.cc	/^TEST(MatrixTest, TestPointwiseDivide) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/beamformer/matrix_unittest.cc	/^TEST(MatrixTest, TestPointwiseMultiply) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/beamformer/matrix_unittest.cc	/^TEST(MatrixTest, TestPointwiseSquare) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/beamformer/matrix_unittest.cc	/^TEST(MatrixTest, TestPointwiseSquareRoot) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/beamformer/matrix_unittest.cc	/^TEST(MatrixTest, TestPointwiseSquareRootComplex) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/beamformer/matrix_unittest.cc	/^TEST(MatrixTest, TestPointwiseSubtract) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/beamformer/matrix_unittest.cc	/^TEST(MatrixTest, TestScale) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/beamformer/matrix_unittest.cc	/^TEST(MatrixTest, TestTranspose) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer_unittest.cc	/^TEST(BeamformerBitExactnessTest,$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer_unittest.cc	/^TEST(NonlinearBeamformerTest, AimingModifiesBeam) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer_unittest.cc	/^TEST(NonlinearBeamformerTest, InterfAnglesTakeAmbiguityIntoAccount) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/config_unittest.cc	/^TEST(Config, ReturnOptionWhenSet) {$/;"	f	namespace:webrtc::__anon191
TEST	webrtc/modules/audio_processing/config_unittest.cc	/^TEST(Config, ReturnsDefaultInstanceIfNotConfigured) {$/;"	f	namespace:webrtc::__anon191
TEST	webrtc/modules/audio_processing/config_unittest.cc	/^TEST(Config, SetNullSetsTheOptionBackToDefault) {$/;"	f	namespace:webrtc::__anon191
TEST	webrtc/modules/audio_processing/config_unittest.cc	/^TEST(Config, SupportsPolymorphism) {$/;"	f	namespace:webrtc::__anon191
TEST	webrtc/modules/audio_processing/echo_cancellation_bit_exact_unittest.cc	/^TEST(EchoCancellationBitExactnessTest,$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/echo_cancellation_impl_unittest.cc	/^TEST(EchoCancellationInternalTest, DelayAgnostic) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/echo_cancellation_impl_unittest.cc	/^TEST(EchoCancellationInternalTest, ExtendedFilter) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/echo_control_mobile_unittest.cc	/^TEST(EchoControlMobileBitExactnessTest,$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/echo_detector/circular_buffer_unittest.cc	/^TEST(CircularBufferTests, FillTest) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/echo_detector/circular_buffer_unittest.cc	/^TEST(CircularBufferTests, LessThanMaxTest) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/echo_detector/circular_buffer_unittest.cc	/^TEST(CircularBufferTests, OverflowTest) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/echo_detector/circular_buffer_unittest.cc	/^TEST(CircularBufferTests, ReadFromEmpty) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/echo_detector/mean_variance_estimator_unittest.cc	/^TEST(MeanVarianceEstimatorTests, AlternatingValueTest) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/echo_detector/mean_variance_estimator_unittest.cc	/^TEST(MeanVarianceEstimatorTests, ConstantValueTest) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/echo_detector/mean_variance_estimator_unittest.cc	/^TEST(MeanVarianceEstimatorTests, InsertTwoValues) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/echo_detector/mean_variance_estimator_unittest.cc	/^TEST(MeanVarianceEstimatorTests, InsertZeroes) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/echo_detector/normalized_covariance_estimator_unittest.cc	/^TEST(NormalizedCovarianceEstimatorTests, IdenticalSignalTest) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/echo_detector/normalized_covariance_estimator_unittest.cc	/^TEST(NormalizedCovarianceEstimatorTests, OppositeSignalTest) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/gain_control_unittest.cc	/^TEST(GainControlBitExactnessTest,$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/high_pass_filter_unittest.cc	/^TEST(HighPassFilterBitExactnessTest, Mono16kHzConverged) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/high_pass_filter_unittest.cc	/^TEST(HighPassFilterBitExactnessTest, Mono16kHzInitial) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/high_pass_filter_unittest.cc	/^TEST(HighPassFilterBitExactnessTest, Mono8kHzConverged) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/high_pass_filter_unittest.cc	/^TEST(HighPassFilterBitExactnessTest, Mono8kHzInitial) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/high_pass_filter_unittest.cc	/^TEST(HighPassFilterBitExactnessTest, Stereo16kHzConverged) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/high_pass_filter_unittest.cc	/^TEST(HighPassFilterBitExactnessTest, Stereo16kHzInitial) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/high_pass_filter_unittest.cc	/^TEST(HighPassFilterBitExactnessTest, Stereo8kHzConverged) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/high_pass_filter_unittest.cc	/^TEST(HighPassFilterBitExactnessTest, Stereo8kHzInitial) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer_unittest.cc	/^TEST(IntelligibilityEnhancerBitExactnessTest, DISABLED_Mono16kHz) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer_unittest.cc	/^TEST(IntelligibilityEnhancerBitExactnessTest, DISABLED_Mono32kHz) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer_unittest.cc	/^TEST(IntelligibilityEnhancerBitExactnessTest, DISABLED_Mono48kHz) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer_unittest.cc	/^TEST(IntelligibilityEnhancerBitExactnessTest, DISABLED_Mono8kHz) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer_unittest.cc	/^TEST(IntelligibilityEnhancerBitExactnessTest, DISABLED_Stereo16kHz) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer_unittest.cc	/^TEST(IntelligibilityEnhancerBitExactnessTest, DISABLED_Stereo32kHz) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer_unittest.cc	/^TEST(IntelligibilityEnhancerBitExactnessTest, DISABLED_Stereo48kHz) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer_unittest.cc	/^TEST(IntelligibilityEnhancerBitExactnessTest, DISABLED_Stereo8kHz) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/intelligibility/intelligibility_utils_unittest.cc	/^TEST(IntelligibilityUtilsTest, TestGainApplier) {$/;"	f	namespace:webrtc::intelligibility
TEST	webrtc/modules/audio_processing/intelligibility/intelligibility_utils_unittest.cc	/^TEST(IntelligibilityUtilsTest, TestPowerEstimator) {$/;"	f	namespace:webrtc::intelligibility
TEST	webrtc/modules/audio_processing/level_controller/level_controller_complexity_unittest.cc	/^TEST(LevelControllerPerformanceTest, InteractionWithDefaultApm) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/level_controller/level_controller_complexity_unittest.cc	/^TEST(LevelControllerPerformanceTest, ProcessingViaApm) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/level_controller/level_controller_complexity_unittest.cc	/^TEST(LevelControllerPerformanceTest, StandaloneProcessing) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/level_controller/level_controller_unittest.cc	/^TEST(LevelControlBitExactnessTest, DISABLED_Mono16kHz) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/level_controller/level_controller_unittest.cc	/^TEST(LevelControlBitExactnessTest, DISABLED_Mono32kHz) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/level_controller/level_controller_unittest.cc	/^TEST(LevelControlBitExactnessTest, DISABLED_Mono48kHz) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/level_controller/level_controller_unittest.cc	/^TEST(LevelControlBitExactnessTest, DISABLED_Mono8kHz) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/level_controller/level_controller_unittest.cc	/^TEST(LevelControlBitExactnessTest, DISABLED_MonoInitial48kHz) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/level_controller/level_controller_unittest.cc	/^TEST(LevelControlBitExactnessTest, DISABLED_Stereo16kHz) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/level_controller/level_controller_unittest.cc	/^TEST(LevelControlBitExactnessTest, DISABLED_Stereo32kHz) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/level_controller/level_controller_unittest.cc	/^TEST(LevelControlBitExactnessTest, DISABLED_Stereo48kHz) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/level_controller/level_controller_unittest.cc	/^TEST(LevelControlBitExactnessTest, DISABLED_Stereo8kHz) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/level_controller/level_controller_unittest.cc	/^TEST(LevelControllerConfig, ToString) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/level_estimator_unittest.cc	/^TEST(LevelEstimatorBitExactnessTest, Mono16kHz) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/level_estimator_unittest.cc	/^TEST(LevelEstimatorBitExactnessTest, Mono32kHz) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/level_estimator_unittest.cc	/^TEST(LevelEstimatorBitExactnessTest, Mono48kHz) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/level_estimator_unittest.cc	/^TEST(LevelEstimatorBitExactnessTest, Mono8kHz) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/level_estimator_unittest.cc	/^TEST(LevelEstimatorBitExactnessTest, Stereo16kHz) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/noise_suppression_unittest.cc	/^TEST(NoiseSuppresionBitExactnessTest, Mono16kHzHigh) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/noise_suppression_unittest.cc	/^TEST(NoiseSuppresionBitExactnessTest, Mono16kHzLow) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/noise_suppression_unittest.cc	/^TEST(NoiseSuppresionBitExactnessTest, Mono16kHzModerate) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/noise_suppression_unittest.cc	/^TEST(NoiseSuppresionBitExactnessTest, Mono16kHzVeryHigh) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/noise_suppression_unittest.cc	/^TEST(NoiseSuppresionBitExactnessTest, Mono32kHzLow) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/noise_suppression_unittest.cc	/^TEST(NoiseSuppresionBitExactnessTest, Mono48kHzLow) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/noise_suppression_unittest.cc	/^TEST(NoiseSuppresionBitExactnessTest, Mono8kHzLow) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/noise_suppression_unittest.cc	/^TEST(NoiseSuppresionBitExactnessTest, Stereo16kHzLow) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/residual_echo_detector_unittest.cc	/^TEST(ResidualEchoDetectorTests, Echo) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/residual_echo_detector_unittest.cc	/^TEST(ResidualEchoDetectorTests, EchoWithCaptureClockDrift) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/residual_echo_detector_unittest.cc	/^TEST(ResidualEchoDetectorTests, EchoWithRenderClockDrift) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/residual_echo_detector_unittest.cc	/^TEST(ResidualEchoDetectorTests, NoEcho) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/splitting_filter_unittest.cc	/^TEST(SplittingFilterTest, SplitsIntoThreeBandsAndReconstructs) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/transient/dyadic_decimator_unittest.cc	/^TEST(DyadicDecimatorTest, DyadicDecimateErrorValues) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/transient/dyadic_decimator_unittest.cc	/^TEST(DyadicDecimatorTest, DyadicDecimateEvenLengthEvenSequence) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/transient/dyadic_decimator_unittest.cc	/^TEST(DyadicDecimatorTest, DyadicDecimateEvenLengthOddSequence) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/transient/dyadic_decimator_unittest.cc	/^TEST(DyadicDecimatorTest, DyadicDecimateOddLengthEvenSequence) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/transient/dyadic_decimator_unittest.cc	/^TEST(DyadicDecimatorTest, DyadicDecimateOddLengthOddSequence) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/transient/dyadic_decimator_unittest.cc	/^TEST(DyadicDecimatorTest, GetOutLengthToDyadicDecimate) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/transient/transient_detector_unittest.cc	/^TEST(TransientDetectorTest, DISABLED_CorrectnessBasedOnFiles) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/transient/transient_suppressor_unittest.cc	/^TEST(TransientSuppressorTest, TypingDetectionLogicWorksAsExpectedForMono) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/transient/wpd_node_unittest.cc	/^TEST(WPDNodeTest, Accessors) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/transient/wpd_node_unittest.cc	/^TEST(WPDNodeTest, ExpectedErrorReturnValue) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/transient/wpd_node_unittest.cc	/^TEST(WPDNodeTest, UpdateThatOnlyDecimates) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/transient/wpd_node_unittest.cc	/^TEST(WPDNodeTest, UpdateWithArbitraryDataAndArbitraryFilter) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/transient/wpd_tree_unittest.cc	/^TEST(WPDTreeTest, Construction) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/transient/wpd_tree_unittest.cc	/^TEST(WPDTreeTest, DISABLED_CorrectnessBasedOnMatlabFiles) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/utility/block_mean_calculator_unittest.cc	/^TEST(MeanCalculatorTest, Correctness) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/utility/block_mean_calculator_unittest.cc	/^TEST(MeanCalculatorTest, Reset) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/vad/gmm_unittest.cc	/^TEST(GmmTest, EvaluateGmm) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/vad/pitch_based_vad_unittest.cc	/^TEST(PitchBasedVadTest, VoicingProbabilityTest) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/vad/pitch_internal_unittest.cc	/^TEST(PitchInternalTest, test) {$/;"	f
TEST	webrtc/modules/audio_processing/vad/standalone_vad_unittest.cc	/^TEST(StandaloneVadTest, Api) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/vad/standalone_vad_unittest.cc	/^TEST(StandaloneVadTest, DISABLED_ActivityDetection) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/vad/vad_audio_proc_unittest.cc	/^TEST(AudioProcessingTest, DISABLED_ComputingFirstSpectralPeak) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/vad/vad_circular_buffer_unittest.cc	/^TEST(VadCircularBufferTest, GeneralTest) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/vad/vad_circular_buffer_unittest.cc	/^TEST(VadCircularBufferTest, TransientDetection) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/vad/vad_circular_buffer_unittest.cc	/^TEST(VadCircularBufferTest, TransientsRemoval) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/vad/voice_activity_detector_unittest.cc	/^TEST(VoiceActivityDetectorTest, ConstructorSetsDefaultValues) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/vad/voice_activity_detector_unittest.cc	/^TEST(VoiceActivityDetectorTest, Noise16kHzHasLowVoiceProbabilities) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/vad/voice_activity_detector_unittest.cc	/^TEST(VoiceActivityDetectorTest, Noise32kHzHasLowVoiceProbabilities) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/vad/voice_activity_detector_unittest.cc	/^TEST(VoiceActivityDetectorTest, Speech16kHzHasHighVoiceProbabilities) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/vad/voice_activity_detector_unittest.cc	/^TEST(VoiceActivityDetectorTest, Speech32kHzHasHighVoiceProbabilities) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/voice_detection_unittest.cc	/^TEST(VoiceDetectionBitExactnessTest, Mono16kHz) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/voice_detection_unittest.cc	/^TEST(VoiceDetectionBitExactnessTest, Mono32kHz) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/voice_detection_unittest.cc	/^TEST(VoiceDetectionBitExactnessTest, Mono48kHz) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/voice_detection_unittest.cc	/^TEST(VoiceDetectionBitExactnessTest, Mono8kHz) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/voice_detection_unittest.cc	/^TEST(VoiceDetectionBitExactnessTest, Stereo16kHz) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/voice_detection_unittest.cc	/^TEST(VoiceDetectionBitExactnessTest, Stereo32kHz) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/voice_detection_unittest.cc	/^TEST(VoiceDetectionBitExactnessTest, Stereo48kHz) {$/;"	f	namespace:webrtc
TEST	webrtc/modules/audio_processing/voice_detection_unittest.cc	/^TEST(VoiceDetectionBitExactnessTest, Stereo8kHz) {$/;"	f	namespace:webrtc
TEST_DIGEST	webrtc/base/httpcommon.cc	/^#define TEST_DIGEST /;"	d	file:
TEST_F	webrtc/base/asynctcpsocket_unittest.cc	/^TEST_F(AsyncTCPSocketTest, OnWriteEvent) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/asyncudpsocket_unittest.cc	/^TEST_F(AsyncUdpSocketTest, OnWriteEvent) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/autodetectproxy_unittest.cc	/^TEST_F(AutoDetectProxyTest, TestDetectIPv4Proxy) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/autodetectproxy_unittest.cc	/^TEST_F(AutoDetectProxyTest, TestDetectIPv6Proxy) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/autodetectproxy_unittest.cc	/^TEST_F(AutoDetectProxyTest, TestDetectUnresolvableProxy) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/autodetectproxy_unittest.cc	/^TEST_F(AutoDetectProxyTest, TestDetectUnresolvedProxy) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/autodetectproxy_unittest.cc	/^TEST_F(AutoDetectProxyTest, TestProxyDetection) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/file_unittest.cc	/^TEST_F(FileTest, DefaultConstructor) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/file_unittest.cc	/^TEST_F(FileTest, DoubleClose) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/file_unittest.cc	/^TEST_F(FileTest, RandomAccessRead) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/file_unittest.cc	/^TEST_F(FileTest, RandomAccessReadWrite) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/file_unittest.cc	/^TEST_F(FileTest, ReadWriteClose) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/file_unittest.cc	/^TEST_F(FileTest, SimpleReadWrite) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/filerotatingstream_unittest.cc	/^TEST_F(MAYBE_CallSessionFileRotatingStreamTest, WriteAndReadFirstHalf) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/filerotatingstream_unittest.cc	/^TEST_F(MAYBE_CallSessionFileRotatingStreamTest, WriteAndReadLarge) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/filerotatingstream_unittest.cc	/^TEST_F(MAYBE_CallSessionFileRotatingStreamTest, WriteAndReadSmall) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/filerotatingstream_unittest.cc	/^TEST_F(MAYBE_CallSessionFileRotatingStreamTest, WriteAndReadSmallest) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/filerotatingstream_unittest.cc	/^TEST_F(MAYBE_FileRotatingStreamTest, EmptyWrite) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/filerotatingstream_unittest.cc	/^TEST_F(MAYBE_FileRotatingStreamTest, GetFilePath) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/filerotatingstream_unittest.cc	/^TEST_F(MAYBE_FileRotatingStreamTest, State) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/filerotatingstream_unittest.cc	/^TEST_F(MAYBE_FileRotatingStreamTest, WriteAndRead) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/filerotatingstream_unittest.cc	/^TEST_F(MAYBE_FileRotatingStreamTest, WriteOverflowAndRead) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/helpers_unittest.cc	/^TEST_F(RandomTest, TestCreateNonZeroRandomId) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/helpers_unittest.cc	/^TEST_F(RandomTest, TestCreateRandomData) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/helpers_unittest.cc	/^TEST_F(RandomTest, TestCreateRandomDouble) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/helpers_unittest.cc	/^TEST_F(RandomTest, TestCreateRandomForTest) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/helpers_unittest.cc	/^TEST_F(RandomTest, TestCreateRandomId) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/helpers_unittest.cc	/^TEST_F(RandomTest, TestCreateRandomString) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/helpers_unittest.cc	/^TEST_F(RandomTest, TestCreateRandomStringEvenlyDivideTable) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/helpers_unittest.cc	/^TEST_F(RandomTest, TestCreateRandomUuid) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/httpbase_unittest.cc	/^TEST_F(HttpBaseTest, AllowsGetDocumentStreamInResponseToHttpHeader) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/httpbase_unittest.cc	/^TEST_F(HttpBaseTest, AllowsGetDocumentStreamWithEmptyDocumentBody) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/httpbase_unittest.cc	/^TEST_F(HttpBaseTest, DISABLED_AllowsCloseStreamBeforeDocumentIsComplete) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/httpbase_unittest.cc	/^TEST_F(HttpBaseTest, SignalsCompleteOnInterruptedSend) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/httpbase_unittest.cc	/^TEST_F(HttpBaseTest, SignalsDocumentStreamCloseOnUnexpectedClose) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/httpbase_unittest.cc	/^TEST_F(HttpBaseTest, SupportsReceiveViaDocumentPush) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/httpbase_unittest.cc	/^TEST_F(HttpBaseTest, SupportsReceiveViaStreamPull) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/httpbase_unittest.cc	/^TEST_F(HttpBaseTest, SupportsSend) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/httpbase_unittest.cc	/^TEST_F(HttpBaseTest, SupportsSendNoDocument) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/messagequeue_unittest.cc	/^TEST_F(MessageQueueTest, DiposeHandlerWithPostedMessagePending) {$/;"	f
TEST_F	webrtc/base/messagequeue_unittest.cc	/^TEST_F(MessageQueueTest, DisposeNotLocked) {$/;"	f
TEST_F	webrtc/base/messagequeue_unittest.cc	/^TEST_F(MessageQueueTest,$/;"	f
TEST_F	webrtc/base/mod_ops_unittest.cc	/^TEST_F(TestModOps, Add) {$/;"	f	namespace:webrtc
TEST_F	webrtc/base/mod_ops_unittest.cc	/^TEST_F(TestModOps, AddLarge) {$/;"	f	namespace:webrtc
TEST_F	webrtc/base/mod_ops_unittest.cc	/^TEST_F(TestModOps, ForwardDiff) {$/;"	f	namespace:webrtc
TEST_F	webrtc/base/mod_ops_unittest.cc	/^TEST_F(TestModOps, MinDiff) {$/;"	f	namespace:webrtc
TEST_F	webrtc/base/mod_ops_unittest.cc	/^TEST_F(TestModOps, MinDiffWitDivisor) {$/;"	f	namespace:webrtc
TEST_F	webrtc/base/mod_ops_unittest.cc	/^TEST_F(TestModOps, ReverseDiff) {$/;"	f	namespace:webrtc
TEST_F	webrtc/base/mod_ops_unittest.cc	/^TEST_F(TestModOps, Subtract) {$/;"	f	namespace:webrtc
TEST_F	webrtc/base/mod_ops_unittest.cc	/^TEST_F(TestModOps, SubtractLarge) {$/;"	f	namespace:webrtc
TEST_F	webrtc/base/nat_unittest.cc	/^TEST_F(NatTcpTest, DISABLED_TestConnectOut) {$/;"	f
TEST_F	webrtc/base/network_unittest.cc	/^TEST_F(NetworkTest, DISABLED_TestCreateNetworks) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/network_unittest.cc	/^TEST_F(NetworkTest, MAYBE_DefaultLocalAddress) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/network_unittest.cc	/^TEST_F(NetworkTest, MAYBE_TestIPv6Toggle) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/network_unittest.cc	/^TEST_F(NetworkTest, MergeWithChangedIP) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/network_unittest.cc	/^TEST_F(NetworkTest, TestBasicMergeNetworkList) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/network_unittest.cc	/^TEST_F(NetworkTest, TestConvertIfAddrsMultiAddressesOnOneInterface) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/network_unittest.cc	/^TEST_F(NetworkTest, TestConvertIfAddrsNoAddress) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/network_unittest.cc	/^TEST_F(NetworkTest, TestConvertIfAddrsNotRunning) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/network_unittest.cc	/^TEST_F(NetworkTest, TestCreateAndDumpNetworks) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/network_unittest.cc	/^TEST_F(NetworkTest, TestGetAdapterTypeFromNameMatching) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/network_unittest.cc	/^TEST_F(NetworkTest, TestGetAdapterTypeFromNetworkMonitor) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/network_unittest.cc	/^TEST_F(NetworkTest, TestIPv6MergeNetworkList) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/network_unittest.cc	/^TEST_F(NetworkTest, TestIPv6MergeNetworkListTrimExcessive) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/network_unittest.cc	/^TEST_F(NetworkTest, TestIPv6Selection) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/network_unittest.cc	/^TEST_F(NetworkTest, TestIgnoreList) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/network_unittest.cc	/^TEST_F(NetworkTest, TestIgnoreNonDefaultRoutes) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/network_unittest.cc	/^TEST_F(NetworkTest, TestIsIgnoredNetworkIgnoresIPsStartingWith0) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/network_unittest.cc	/^TEST_F(NetworkTest, TestMergeNetworkList) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/network_unittest.cc	/^TEST_F(NetworkTest, TestMergeNetworkListWithInactiveNetworks) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/network_unittest.cc	/^TEST_F(NetworkTest, TestMultipleIPMergeNetworkList) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/network_unittest.cc	/^TEST_F(NetworkTest, TestMultiplePublicNetworksOnOneInterfaceMerge) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/network_unittest.cc	/^TEST_F(NetworkTest, TestNetworkAdapterTypes) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/network_unittest.cc	/^TEST_F(NetworkTest, TestNetworkConstruct) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/network_unittest.cc	/^TEST_F(NetworkTest, TestNetworkListSorting) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/network_unittest.cc	/^TEST_F(NetworkTest, TestNetworkMonitoring) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/network_unittest.cc	/^TEST_F(NetworkTest, TestNoChangeMerge) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/network_unittest.cc	/^TEST_F(NetworkTest, TestUpdateNetworks) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/nullsocketserver_unittest.cc	/^TEST_F(NullSocketServerTest, TestWait) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/nullsocketserver_unittest.cc	/^TEST_F(NullSocketServerTest, WaitAndSet) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/optionsfile_unittest.cc	/^TEST_F(MAYBE_OptionsFileTest, GetSetInt) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/optionsfile_unittest.cc	/^TEST_F(MAYBE_OptionsFileTest, GetSetString) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/optionsfile_unittest.cc	/^TEST_F(MAYBE_OptionsFileTest, Persist) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/optionsfile_unittest.cc	/^TEST_F(MAYBE_OptionsFileTest, SpecialCharacters) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/physicalsocketserver_unittest.cc	/^TEST_F(PhysicalSocketTest, MAYBE_TestUdpReadyToSendIPv4) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/physicalsocketserver_unittest.cc	/^TEST_F(PhysicalSocketTest, MAYBE_TestUdpReadyToSendIPv6) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/physicalsocketserver_unittest.cc	/^TEST_F(PhysicalSocketTest, MAYBE_TestWritableAfterPartialWriteIPv4) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/physicalsocketserver_unittest.cc	/^TEST_F(PhysicalSocketTest, MAYBE_TestWritableAfterPartialWriteIPv6) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/physicalsocketserver_unittest.cc	/^TEST_F(PhysicalSocketTest, TestClientCloseDuringConnectIPv4) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/physicalsocketserver_unittest.cc	/^TEST_F(PhysicalSocketTest, TestClientCloseDuringConnectIPv6) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/physicalsocketserver_unittest.cc	/^TEST_F(PhysicalSocketTest, TestCloseInClosedCallbackIPv4) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/physicalsocketserver_unittest.cc	/^TEST_F(PhysicalSocketTest, TestCloseInClosedCallbackIPv6) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/physicalsocketserver_unittest.cc	/^TEST_F(PhysicalSocketTest, TestConnectAcceptErrorIPv4) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/physicalsocketserver_unittest.cc	/^TEST_F(PhysicalSocketTest, TestConnectAcceptErrorIPv6) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/physicalsocketserver_unittest.cc	/^TEST_F(PhysicalSocketTest, TestConnectFailIPv4) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/physicalsocketserver_unittest.cc	/^TEST_F(PhysicalSocketTest, TestConnectFailIPv6) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/physicalsocketserver_unittest.cc	/^TEST_F(PhysicalSocketTest, TestConnectIPv4) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/physicalsocketserver_unittest.cc	/^TEST_F(PhysicalSocketTest, TestConnectIPv6) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/physicalsocketserver_unittest.cc	/^TEST_F(PhysicalSocketTest, TestConnectWhileNotClosedIPv4) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/physicalsocketserver_unittest.cc	/^TEST_F(PhysicalSocketTest, TestConnectWhileNotClosedIPv6) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/physicalsocketserver_unittest.cc	/^TEST_F(PhysicalSocketTest, TestConnectWithClosedSocketIPv4) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/physicalsocketserver_unittest.cc	/^TEST_F(PhysicalSocketTest, TestConnectWithClosedSocketIPv6) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/physicalsocketserver_unittest.cc	/^TEST_F(PhysicalSocketTest, TestConnectWithDnsLookupFailIPv4) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/physicalsocketserver_unittest.cc	/^TEST_F(PhysicalSocketTest, TestConnectWithDnsLookupFailIPv6) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/physicalsocketserver_unittest.cc	/^TEST_F(PhysicalSocketTest, TestConnectWithDnsLookupIPv4) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/physicalsocketserver_unittest.cc	/^TEST_F(PhysicalSocketTest, TestConnectWithDnsLookupIPv6) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/physicalsocketserver_unittest.cc	/^TEST_F(PhysicalSocketTest, TestGetSetOptionsIPv4) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/physicalsocketserver_unittest.cc	/^TEST_F(PhysicalSocketTest, TestGetSetOptionsIPv6) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/physicalsocketserver_unittest.cc	/^TEST_F(PhysicalSocketTest, TestServerCloseDuringConnectIPv4) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/physicalsocketserver_unittest.cc	/^TEST_F(PhysicalSocketTest, TestServerCloseDuringConnectIPv6) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/physicalsocketserver_unittest.cc	/^TEST_F(PhysicalSocketTest, TestServerCloseIPv4) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/physicalsocketserver_unittest.cc	/^TEST_F(PhysicalSocketTest, TestServerCloseIPv6) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/physicalsocketserver_unittest.cc	/^TEST_F(PhysicalSocketTest, TestSocketRecvTimestampIPv4) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/physicalsocketserver_unittest.cc	/^TEST_F(PhysicalSocketTest, TestSocketRecvTimestampIPv6) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/physicalsocketserver_unittest.cc	/^TEST_F(PhysicalSocketTest, TestSocketServerWaitIPv4) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/physicalsocketserver_unittest.cc	/^TEST_F(PhysicalSocketTest, TestSocketServerWaitIPv6) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/physicalsocketserver_unittest.cc	/^TEST_F(PhysicalSocketTest, TestTcpIPv4) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/physicalsocketserver_unittest.cc	/^TEST_F(PhysicalSocketTest, TestTcpIPv6) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/physicalsocketserver_unittest.cc	/^TEST_F(PhysicalSocketTest, TestUdpIPv4) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/physicalsocketserver_unittest.cc	/^TEST_F(PhysicalSocketTest, TestUdpIPv6) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/physicalsocketserver_unittest.cc	/^TEST_F(PosixSignalDeliveryTest, InsanelyManySignals) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/physicalsocketserver_unittest.cc	/^TEST_F(PosixSignalDeliveryTest, RaiseThenWait) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/physicalsocketserver_unittest.cc	/^TEST_F(PosixSignalDeliveryTest, SignalDuringWait) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/physicalsocketserver_unittest.cc	/^TEST_F(PosixSignalDeliveryTest, SignalOnDifferentThread) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/proxy_unittest.cc	/^TEST_F(ProxyTest, TestAutoDetectBogus) {$/;"	f
TEST_F	webrtc/base/proxy_unittest.cc	/^TEST_F(ProxyTest, TestAutoDetectSocks5) {$/;"	f
TEST_F	webrtc/base/proxy_unittest.cc	/^TEST_F(ProxyTest, TestSocks5Connect) {$/;"	f
TEST_F	webrtc/base/proxydetect_unittest.cc	/^TEST_F(ProxyDetectTest, DISABLED_TestFirefoxCorruptedPrefs) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/proxydetect_unittest.cc	/^TEST_F(ProxyDetectTest, DISABLED_TestFirefoxEmptyPrefs) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/proxydetect_unittest.cc	/^TEST_F(ProxyDetectTest, DISABLED_TestFirefoxProxyAuto) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/proxydetect_unittest.cc	/^TEST_F(ProxyDetectTest, DISABLED_TestFirefoxProxyAutoUrl) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/proxydetect_unittest.cc	/^TEST_F(ProxyDetectTest, DISABLED_TestFirefoxProxyHttp) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/proxydetect_unittest.cc	/^TEST_F(ProxyDetectTest, DISABLED_TestFirefoxProxySocks) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/proxydetect_unittest.cc	/^TEST_F(ProxyDetectTest, DISABLED_TestFirefoxProxySsl) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/rate_limiter_unittest.cc	/^TEST_F(RateLimitTest, ChangingWindowSize) {$/;"	f	namespace:webrtc
TEST_F	webrtc/base/rate_limiter_unittest.cc	/^TEST_F(RateLimitTest, DecreasingMaxRate) {$/;"	f	namespace:webrtc
TEST_F	webrtc/base/rate_limiter_unittest.cc	/^TEST_F(RateLimitTest, IncreasingMaxRate) {$/;"	f	namespace:webrtc
TEST_F	webrtc/base/rate_limiter_unittest.cc	/^TEST_F(RateLimitTest, MultiThreadedUsage) {$/;"	f	namespace:webrtc
TEST_F	webrtc/base/rate_limiter_unittest.cc	/^TEST_F(RateLimitTest, SingleUsageAlwaysOk) {$/;"	f	namespace:webrtc
TEST_F	webrtc/base/rate_limiter_unittest.cc	/^TEST_F(RateLimitTest, WindowSizeLimits) {$/;"	f	namespace:webrtc
TEST_F	webrtc/base/rate_statistics_unittest.cc	/^TEST_F(RateStatisticsTest, HandlesChangingWindowSize) {$/;"	f	namespace:__anon48
TEST_F	webrtc/base/rate_statistics_unittest.cc	/^TEST_F(RateStatisticsTest, HandlesQuietPeriods) {$/;"	f	namespace:__anon48
TEST_F	webrtc/base/rate_statistics_unittest.cc	/^TEST_F(RateStatisticsTest, HandlesZeroCounts) {$/;"	f	namespace:__anon48
TEST_F	webrtc/base/rate_statistics_unittest.cc	/^TEST_F(RateStatisticsTest, IncreasingThenDecreasingBitrate) {$/;"	f	namespace:__anon48
TEST_F	webrtc/base/rate_statistics_unittest.cc	/^TEST_F(RateStatisticsTest, ResetAfterSilence) {$/;"	f	namespace:__anon48
TEST_F	webrtc/base/rate_statistics_unittest.cc	/^TEST_F(RateStatisticsTest, RespectsWindowSizeEdges) {$/;"	f	namespace:__anon48
TEST_F	webrtc/base/rate_statistics_unittest.cc	/^TEST_F(RateStatisticsTest, TestStrictMode) {$/;"	f	namespace:__anon48
TEST_F	webrtc/base/rtccertificate_unittest.cc	/^TEST_F(RTCCertificateTest, CloneWithPEMSerialization) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/rtccertificate_unittest.cc	/^TEST_F(RTCCertificateTest, DifferentCertificatesNotEqual) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/rtccertificate_unittest.cc	/^TEST_F(RTCCertificateTest, ExpiresInOneSecond) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/rtccertificate_unittest.cc	/^TEST_F(RTCCertificateTest, FromPEMWithInvalidPEM) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/rtccertificate_unittest.cc	/^TEST_F(RTCCertificateTest, NewCertificateNotExpired) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/rtccertificate_unittest.cc	/^TEST_F(RTCCertificateTest, UsesExpiresAskedFor) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/rtccertificategenerator_unittest.cc	/^TEST_F(RTCCertificateGeneratorTest, GenerateAsyncECDSA) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/rtccertificategenerator_unittest.cc	/^TEST_F(RTCCertificateGeneratorTest, GenerateECDSA) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/rtccertificategenerator_unittest.cc	/^TEST_F(RTCCertificateGeneratorTest, GenerateRSA) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/rtccertificategenerator_unittest.cc	/^TEST_F(RTCCertificateGeneratorTest, GenerateWithExpires) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/rtccertificategenerator_unittest.cc	/^TEST_F(RTCCertificateGeneratorTest, GenerateWithInvalidParamsShouldFail) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/scopedptrcollection_unittest.cc	/^TEST_F(ScopedPtrCollectionTest, PushBack) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/scopedptrcollection_unittest.cc	/^TEST_F(ScopedPtrCollectionTest, Remove) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/sharedexclusivelock_unittest.cc	/^TEST_F(SharedExclusiveLockTest, TestExclusiveExclusive) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/sharedexclusivelock_unittest.cc	/^TEST_F(SharedExclusiveLockTest, TestExclusiveShared) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/sharedexclusivelock_unittest.cc	/^TEST_F(SharedExclusiveLockTest, TestSharedExclusive) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/sharedexclusivelock_unittest.cc	/^TEST_F(SharedExclusiveLockTest, TestSharedShared) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/signalthread_unittest.cc	/^TEST_F(SignalThreadTest, DeferredDestroyedThreadCleansUp) {$/;"	f
TEST_F	webrtc/base/signalthread_unittest.cc	/^TEST_F(SignalThreadTest, DestroyedThreadCleansUp) {$/;"	f
TEST_F	webrtc/base/signalthread_unittest.cc	/^TEST_F(SignalThreadTest, OwnerThreadGoesAway) {$/;"	f
TEST_F	webrtc/base/signalthread_unittest.cc	/^TEST_F(SignalThreadTest, ReleasedThreadFinishes) {$/;"	f
TEST_F	webrtc/base/signalthread_unittest.cc	/^TEST_F(SignalThreadTest, ThreadFinishes) {$/;"	f
TEST_F	webrtc/base/sigslot_unittest.cc	/^TEST_F(SigslotDefault, DefaultIsST) {$/;"	f
TEST_F	webrtc/base/sigslot_unittest.cc	/^TEST_F(SigslotMTLockTest, LockSanity) {$/;"	f
TEST_F	webrtc/base/sigslot_unittest.cc	/^TEST_F(SigslotMTSlotTest, AllLoopbackTest) {$/;"	f
TEST_F	webrtc/base/sigslot_unittest.cc	/^TEST_F(SigslotMTSlotTest, MTLoopbackTest) {$/;"	f
TEST_F	webrtc/base/sigslot_unittest.cc	/^TEST_F(SigslotMTSlotTest, STLoopbackTest) {$/;"	f
TEST_F	webrtc/base/sigslot_unittest.cc	/^TEST_F(SigslotSTSlotTest, AllLoopbackTest) {$/;"	f
TEST_F	webrtc/base/sigslot_unittest.cc	/^TEST_F(SigslotSTSlotTest, MTLoopbackTest) {$/;"	f
TEST_F	webrtc/base/sigslot_unittest.cc	/^TEST_F(SigslotSTSlotTest, Reconnect) {$/;"	f
TEST_F	webrtc/base/sigslot_unittest.cc	/^TEST_F(SigslotSTSlotTest, STLoopbackTest) {$/;"	f
TEST_F	webrtc/base/ssladapter_unittest.cc	/^TEST_F(SSLAdapterTestDTLS_ECDSA, TestDTLSConnect) {$/;"	f
TEST_F	webrtc/base/ssladapter_unittest.cc	/^TEST_F(SSLAdapterTestDTLS_ECDSA, TestDTLSTransfer) {$/;"	f
TEST_F	webrtc/base/ssladapter_unittest.cc	/^TEST_F(SSLAdapterTestDTLS_RSA, TestDTLSConnect) {$/;"	f
TEST_F	webrtc/base/ssladapter_unittest.cc	/^TEST_F(SSLAdapterTestDTLS_RSA, TestDTLSTransfer) {$/;"	f
TEST_F	webrtc/base/ssladapter_unittest.cc	/^TEST_F(SSLAdapterTestTLS_ECDSA, TestTLSConnect) {$/;"	f
TEST_F	webrtc/base/ssladapter_unittest.cc	/^TEST_F(SSLAdapterTestTLS_ECDSA, TestTLSTransfer) {$/;"	f
TEST_F	webrtc/base/ssladapter_unittest.cc	/^TEST_F(SSLAdapterTestTLS_RSA, TestTLSConnect) {$/;"	f
TEST_F	webrtc/base/ssladapter_unittest.cc	/^TEST_F(SSLAdapterTestTLS_RSA, TestTLSTransfer) {$/;"	f
TEST_F	webrtc/base/sslidentity_unittest.cc	/^TEST_F(SSLIdentityExpirationTest, TestASN1TimeToSec) {$/;"	f
TEST_F	webrtc/base/sslidentity_unittest.cc	/^TEST_F(SSLIdentityExpirationTest, TestExpireTime) {$/;"	f
TEST_F	webrtc/base/sslidentity_unittest.cc	/^TEST_F(SSLIdentityTest, CloneIdentityECDSA) {$/;"	f
TEST_F	webrtc/base/sslidentity_unittest.cc	/^TEST_F(SSLIdentityTest, CloneIdentityRSA) {$/;"	f
TEST_F	webrtc/base/sslidentity_unittest.cc	/^TEST_F(SSLIdentityTest, DigestSHA224) {$/;"	f
TEST_F	webrtc/base/sslidentity_unittest.cc	/^TEST_F(SSLIdentityTest, DigestSHA256) {$/;"	f
TEST_F	webrtc/base/sslidentity_unittest.cc	/^TEST_F(SSLIdentityTest, DigestSHA384) {$/;"	f
TEST_F	webrtc/base/sslidentity_unittest.cc	/^TEST_F(SSLIdentityTest, DigestSHA512) {$/;"	f
TEST_F	webrtc/base/sslidentity_unittest.cc	/^TEST_F(SSLIdentityTest, FixedDigestSHA1) {$/;"	f
TEST_F	webrtc/base/sslidentity_unittest.cc	/^TEST_F(SSLIdentityTest, FixedDigestSHA224) {$/;"	f
TEST_F	webrtc/base/sslidentity_unittest.cc	/^TEST_F(SSLIdentityTest, FixedDigestSHA256) {$/;"	f
TEST_F	webrtc/base/sslidentity_unittest.cc	/^TEST_F(SSLIdentityTest, FixedDigestSHA384) {$/;"	f
TEST_F	webrtc/base/sslidentity_unittest.cc	/^TEST_F(SSLIdentityTest, FixedDigestSHA512) {$/;"	f
TEST_F	webrtc/base/sslidentity_unittest.cc	/^TEST_F(SSLIdentityTest, FromPEMStringsEC) {$/;"	f
TEST_F	webrtc/base/sslidentity_unittest.cc	/^TEST_F(SSLIdentityTest, FromPEMStringsRSA) {$/;"	f
TEST_F	webrtc/base/sslidentity_unittest.cc	/^TEST_F(SSLIdentityTest, GetSignatureDigestAlgorithm) {$/;"	f
TEST_F	webrtc/base/sslidentity_unittest.cc	/^TEST_F(SSLIdentityTest, IdentityComparison) {$/;"	f
TEST_F	webrtc/base/sslidentity_unittest.cc	/^TEST_F(SSLIdentityTest, PemDerConversion) {$/;"	f
TEST_F	webrtc/base/sslidentity_unittest.cc	/^TEST_F(SSLIdentityTest, SSLCertificateGetStatsECDSA) {$/;"	f
TEST_F	webrtc/base/sslidentity_unittest.cc	/^TEST_F(SSLIdentityTest, SSLCertificateGetStatsRSA) {$/;"	f
TEST_F	webrtc/base/sslidentity_unittest.cc	/^TEST_F(SSLIdentityTest, SSLCertificateGetStatsWithChain) {$/;"	f
TEST_F	webrtc/base/sslstreamadapter_unittest.cc	/^TEST_F(SSLStreamAdapterTestDTLSFromPEMStrings, TestDTLSGetPeerCertificate) {$/;"	f
TEST_F	webrtc/base/sslstreamadapter_unittest.cc	/^TEST_F(SSLStreamAdapterTestDTLSFromPEMStrings, TestTransfer) {$/;"	f
TEST_F	webrtc/base/stringencode_unittest.cc	/^TEST_F(HexEncodeTest, TestDecodeBogusData) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/stringencode_unittest.cc	/^TEST_F(HexEncodeTest, TestDecodeOddHexDigits) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/stringencode_unittest.cc	/^TEST_F(HexEncodeTest, TestDecodeTooShort) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/stringencode_unittest.cc	/^TEST_F(HexEncodeTest, TestDecodeWithDelimiterLeadingDelimiter) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/stringencode_unittest.cc	/^TEST_F(HexEncodeTest, TestDecodeWithDelimiterTooManyDelimiters) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/stringencode_unittest.cc	/^TEST_F(HexEncodeTest, TestDecodeWithDelimiterTrailingDelimiter) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/stringencode_unittest.cc	/^TEST_F(HexEncodeTest, TestEncodeTooShort) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/stringencode_unittest.cc	/^TEST_F(HexEncodeTest, TestEncodeWithDelimiterTooShort) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/stringencode_unittest.cc	/^TEST_F(HexEncodeTest, TestExpectedDelimiter) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/stringencode_unittest.cc	/^TEST_F(HexEncodeTest, TestExpectedNoDelimiter) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/stringencode_unittest.cc	/^TEST_F(HexEncodeTest, TestHelpersNoDelimiter) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/stringencode_unittest.cc	/^TEST_F(HexEncodeTest, TestHelpersWithDelimiter) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/stringencode_unittest.cc	/^TEST_F(HexEncodeTest, TestWithDelimiter) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/stringencode_unittest.cc	/^TEST_F(HexEncodeTest, TestWithNoDelimiter) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/stringencode_unittest.cc	/^TEST_F(HexEncodeTest, TestWithWrongDelimiter) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/stringencode_unittest.cc	/^TEST_F(HexEncodeTest, TestZeroLengthNoDelimiter) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/stringencode_unittest.cc	/^TEST_F(HexEncodeTest, TestZeroLengthWithDelimiter) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/thread_unittest.cc	/^TEST_F(AsyncInvokeTest, CancelCallingThread) {$/;"	f
TEST_F	webrtc/base/thread_unittest.cc	/^TEST_F(AsyncInvokeTest, CancelInvoker) {$/;"	f
TEST_F	webrtc/base/thread_unittest.cc	/^TEST_F(AsyncInvokeTest, FireAndForget) {$/;"	f
TEST_F	webrtc/base/thread_unittest.cc	/^TEST_F(AsyncInvokeTest, Flush) {$/;"	f
TEST_F	webrtc/base/thread_unittest.cc	/^TEST_F(AsyncInvokeTest, FlushWithIds) {$/;"	f
TEST_F	webrtc/base/thread_unittest.cc	/^TEST_F(AsyncInvokeTest, KillInvokerBeforeExecute) {$/;"	f
TEST_F	webrtc/base/thread_unittest.cc	/^TEST_F(AsyncInvokeTest, WithCallback) {$/;"	f
TEST_F	webrtc/base/thread_unittest.cc	/^TEST_F(ComThreadTest, ComInited) {$/;"	f
TEST_F	webrtc/base/thread_unittest.cc	/^TEST_F(GuardedAsyncInvokeTest, CancelCallingThread) {$/;"	f
TEST_F	webrtc/base/thread_unittest.cc	/^TEST_F(GuardedAsyncInvokeTest, CancelInvoker) {$/;"	f
TEST_F	webrtc/base/thread_unittest.cc	/^TEST_F(GuardedAsyncInvokeTest, FireAndForget) {$/;"	f
TEST_F	webrtc/base/thread_unittest.cc	/^TEST_F(GuardedAsyncInvokeTest, Flush) {$/;"	f
TEST_F	webrtc/base/thread_unittest.cc	/^TEST_F(GuardedAsyncInvokeTest, FlushWithIds) {$/;"	f
TEST_F	webrtc/base/thread_unittest.cc	/^TEST_F(GuardedAsyncInvokeTest, KillInvokerBeforeExecute) {$/;"	f
TEST_F	webrtc/base/thread_unittest.cc	/^TEST_F(GuardedAsyncInvokeTest, KillThreadFireAndForget) {$/;"	f
TEST_F	webrtc/base/thread_unittest.cc	/^TEST_F(GuardedAsyncInvokeTest, KillThreadWithCallback) {$/;"	f
TEST_F	webrtc/base/thread_unittest.cc	/^TEST_F(GuardedAsyncInvokeTest, WithCallback) {$/;"	f
TEST_F	webrtc/base/timeutils_unittest.cc	/^TEST_F(TimestampWrapAroundHandlerTest, NoNegativeStart) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/timeutils_unittest.cc	/^TEST_F(TimestampWrapAroundHandlerTest, Unwrap) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/timeutils_unittest.cc	/^TEST_F(TmToSeconds, TestTmToSeconds) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/virtualsocket_unittest.cc	/^TEST_F(VirtualSocketServerTest, CanConnectFromIPv4ToIPv6Any) {$/;"	f
TEST_F	webrtc/base/virtualsocket_unittest.cc	/^TEST_F(VirtualSocketServerTest, CanConnectFromIPv4ToMappedIPv6) {$/;"	f
TEST_F	webrtc/base/virtualsocket_unittest.cc	/^TEST_F(VirtualSocketServerTest, CanConnectFromMappedIPv6ToIPv4Any) {$/;"	f
TEST_F	webrtc/base/virtualsocket_unittest.cc	/^TEST_F(VirtualSocketServerTest, CanConnectFromUnboundIPv4ToIPv6Any) {$/;"	f
TEST_F	webrtc/base/virtualsocket_unittest.cc	/^TEST_F(VirtualSocketServerTest, CanConnectFromUnboundIPv6ToIPv4Any) {$/;"	f
TEST_F	webrtc/base/virtualsocket_unittest.cc	/^TEST_F(VirtualSocketServerTest, CanSendDatagramFromIPv4ToIPv6Any) {$/;"	f
TEST_F	webrtc/base/virtualsocket_unittest.cc	/^TEST_F(VirtualSocketServerTest, CanSendDatagramFromIPv4ToMappedIPv6) {$/;"	f
TEST_F	webrtc/base/virtualsocket_unittest.cc	/^TEST_F(VirtualSocketServerTest, CanSendDatagramFromMappedIPv6ToIPv4Any) {$/;"	f
TEST_F	webrtc/base/virtualsocket_unittest.cc	/^TEST_F(VirtualSocketServerTest, CanSendDatagramFromUnboundIPv4ToIPv6Any) {$/;"	f
TEST_F	webrtc/base/virtualsocket_unittest.cc	/^TEST_F(VirtualSocketServerTest, CanSendDatagramFromUnboundIPv6ToIPv4Any) {$/;"	f
TEST_F	webrtc/base/virtualsocket_unittest.cc	/^TEST_F(VirtualSocketServerTest, CantConnectFromIPv4ToUnMappedIPv6) {$/;"	f
TEST_F	webrtc/base/virtualsocket_unittest.cc	/^TEST_F(VirtualSocketServerTest, CantConnectFromUnMappedIPv6ToIPv4Any) {$/;"	f
TEST_F	webrtc/base/virtualsocket_unittest.cc	/^TEST_F(VirtualSocketServerTest, CantConnectFromUnMappedIPv6ToMappedIPv6) {$/;"	f
TEST_F	webrtc/base/virtualsocket_unittest.cc	/^TEST_F(VirtualSocketServerTest, CantSendDatagramFromIPv4ToUnMappedIPv6) {$/;"	f
TEST_F	webrtc/base/virtualsocket_unittest.cc	/^TEST_F(VirtualSocketServerTest, CantSendDatagramFromUnMappedIPv6ToIPv4Any) {$/;"	f
TEST_F	webrtc/base/virtualsocket_unittest.cc	/^TEST_F(VirtualSocketServerTest, CantSendDatagramFromUnMappedIPv6ToMappedIPv6) {$/;"	f
TEST_F	webrtc/base/virtualsocket_unittest.cc	/^TEST_F(VirtualSocketServerTest, CreatesStandardDistribution) {$/;"	f
TEST_F	webrtc/base/virtualsocket_unittest.cc	/^TEST_F(VirtualSocketServerTest, DISABLED_delay_v6) {$/;"	f
TEST_F	webrtc/base/virtualsocket_unittest.cc	/^TEST_F(VirtualSocketServerTest, SetSendingBlockedWithTcpSocket) {$/;"	f
TEST_F	webrtc/base/virtualsocket_unittest.cc	/^TEST_F(VirtualSocketServerTest, SetSendingBlockedWithUdpSocket) {$/;"	f
TEST_F	webrtc/base/virtualsocket_unittest.cc	/^TEST_F(VirtualSocketServerTest, TcpSendsPacketsInOrder_v4) {$/;"	f
TEST_F	webrtc/base/virtualsocket_unittest.cc	/^TEST_F(VirtualSocketServerTest, TcpSendsPacketsInOrder_v6) {$/;"	f
TEST_F	webrtc/base/virtualsocket_unittest.cc	/^TEST_F(VirtualSocketServerTest, TestDefaultRoute_v4) {$/;"	f
TEST_F	webrtc/base/virtualsocket_unittest.cc	/^TEST_F(VirtualSocketServerTest, TestDefaultRoute_v6) {$/;"	f
TEST_F	webrtc/base/virtualsocket_unittest.cc	/^TEST_F(VirtualSocketServerTest, bandwidth_v4) {$/;"	f
TEST_F	webrtc/base/virtualsocket_unittest.cc	/^TEST_F(VirtualSocketServerTest, bandwidth_v6) {$/;"	f
TEST_F	webrtc/base/virtualsocket_unittest.cc	/^TEST_F(VirtualSocketServerTest, basic_v4) {$/;"	f
TEST_F	webrtc/base/virtualsocket_unittest.cc	/^TEST_F(VirtualSocketServerTest, basic_v6) {$/;"	f
TEST_F	webrtc/base/virtualsocket_unittest.cc	/^TEST_F(VirtualSocketServerTest, close_during_connect_v4) {$/;"	f
TEST_F	webrtc/base/virtualsocket_unittest.cc	/^TEST_F(VirtualSocketServerTest, close_during_connect_v6) {$/;"	f
TEST_F	webrtc/base/virtualsocket_unittest.cc	/^TEST_F(VirtualSocketServerTest, close_v4) {$/;"	f
TEST_F	webrtc/base/virtualsocket_unittest.cc	/^TEST_F(VirtualSocketServerTest, close_v6) {$/;"	f
TEST_F	webrtc/base/virtualsocket_unittest.cc	/^TEST_F(VirtualSocketServerTest, connect_to_non_listener_v4) {$/;"	f
TEST_F	webrtc/base/virtualsocket_unittest.cc	/^TEST_F(VirtualSocketServerTest, connect_to_non_listener_v6) {$/;"	f
TEST_F	webrtc/base/virtualsocket_unittest.cc	/^TEST_F(VirtualSocketServerTest, connect_v4) {$/;"	f
TEST_F	webrtc/base/virtualsocket_unittest.cc	/^TEST_F(VirtualSocketServerTest, connect_v6) {$/;"	f
TEST_F	webrtc/base/virtualsocket_unittest.cc	/^TEST_F(VirtualSocketServerTest, delay_v4) {$/;"	f
TEST_F	webrtc/base/virtualsocket_unittest.cc	/^TEST_F(VirtualSocketServerTest, tcp_send_v4) {$/;"	f
TEST_F	webrtc/base/virtualsocket_unittest.cc	/^TEST_F(VirtualSocketServerTest, tcp_send_v6) {$/;"	f
TEST_F	webrtc/base/win32_unittest.cc	/^TEST_F(Win32Test, FileTimeToUInt64Test) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/win32_unittest.cc	/^TEST_F(Win32Test, IPv6AddressCompression) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/win32_unittest.cc	/^TEST_F(Win32Test, WinPingTest) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/win32socketserver_unittest.cc	/^TEST_F(Win32SocketTest, DISABLED_TestGetSetOptionsIPv4) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/win32socketserver_unittest.cc	/^TEST_F(Win32SocketTest, DISABLED_TestGetSetOptionsIPv6) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/win32socketserver_unittest.cc	/^TEST_F(Win32SocketTest, TestClientCloseDuringConnectIPv4) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/win32socketserver_unittest.cc	/^TEST_F(Win32SocketTest, TestClientCloseDuringConnectIPv6) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/win32socketserver_unittest.cc	/^TEST_F(Win32SocketTest, TestCloseInClosedCallbackIPv4) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/win32socketserver_unittest.cc	/^TEST_F(Win32SocketTest, TestCloseInClosedCallbackIPv6) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/win32socketserver_unittest.cc	/^TEST_F(Win32SocketTest, TestConnectFailIPv4) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/win32socketserver_unittest.cc	/^TEST_F(Win32SocketTest, TestConnectFailIPv6) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/win32socketserver_unittest.cc	/^TEST_F(Win32SocketTest, TestConnectIPv4) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/win32socketserver_unittest.cc	/^TEST_F(Win32SocketTest, TestConnectIPv6) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/win32socketserver_unittest.cc	/^TEST_F(Win32SocketTest, TestConnectWhileNotClosedIPv4) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/win32socketserver_unittest.cc	/^TEST_F(Win32SocketTest, TestConnectWhileNotClosedIPv6) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/win32socketserver_unittest.cc	/^TEST_F(Win32SocketTest, TestConnectWithClosedSocketIPv4) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/win32socketserver_unittest.cc	/^TEST_F(Win32SocketTest, TestConnectWithClosedSocketIPv6) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/win32socketserver_unittest.cc	/^TEST_F(Win32SocketTest, TestConnectWithDnsLookupFailIPv4) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/win32socketserver_unittest.cc	/^TEST_F(Win32SocketTest, TestConnectWithDnsLookupFailIPv6) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/win32socketserver_unittest.cc	/^TEST_F(Win32SocketTest, TestConnectWithDnsLookupIPv4) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/win32socketserver_unittest.cc	/^TEST_F(Win32SocketTest, TestConnectWithDnsLookupIPv6) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/win32socketserver_unittest.cc	/^TEST_F(Win32SocketTest, TestServerCloseDuringConnectIPv4) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/win32socketserver_unittest.cc	/^TEST_F(Win32SocketTest, TestServerCloseDuringConnectIPv6) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/win32socketserver_unittest.cc	/^TEST_F(Win32SocketTest, TestServerCloseIPv4) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/win32socketserver_unittest.cc	/^TEST_F(Win32SocketTest, TestServerCloseIPv6) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/win32socketserver_unittest.cc	/^TEST_F(Win32SocketTest, TestSocketServerWaitIPv4) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/win32socketserver_unittest.cc	/^TEST_F(Win32SocketTest, TestSocketServerWaitIPv6) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/win32socketserver_unittest.cc	/^TEST_F(Win32SocketTest, TestTcpIPv4) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/win32socketserver_unittest.cc	/^TEST_F(Win32SocketTest, TestTcpIPv6) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/win32socketserver_unittest.cc	/^TEST_F(Win32SocketTest, TestUdpIPv4) {$/;"	f	namespace:rtc
TEST_F	webrtc/base/win32socketserver_unittest.cc	/^TEST_F(Win32SocketTest, TestUdpIPv6) {$/;"	f	namespace:rtc
TEST_F	webrtc/common_audio/audio_ring_buffer_unittest.cc	/^TEST_F(AudioRingBufferTest, MoveReadPosition) {$/;"	f	namespace:webrtc
TEST_F	webrtc/common_audio/blocker_unittest.cc	/^TEST_F(BlockerTest, InitialDelaysAreMinimum) {$/;"	f	namespace:webrtc
TEST_F	webrtc/common_audio/blocker_unittest.cc	/^TEST_F(BlockerTest, TestBlockerMutuallyPrimeChunkandBlockSize) {$/;"	f	namespace:webrtc
TEST_F	webrtc/common_audio/blocker_unittest.cc	/^TEST_F(BlockerTest, TestBlockerMutuallyPrimeShiftAndBlockSize) {$/;"	f	namespace:webrtc
TEST_F	webrtc/common_audio/blocker_unittest.cc	/^TEST_F(BlockerTest, TestBlockerNoOverlap) {$/;"	f	namespace:webrtc
TEST_F	webrtc/common_audio/resampler/resampler_unittest.cc	/^TEST_F(ResamplerTest, Mono) {$/;"	f	namespace:webrtc::__anon86
TEST_F	webrtc/common_audio/resampler/resampler_unittest.cc	/^TEST_F(ResamplerTest, Reset) {$/;"	f	namespace:webrtc::__anon86
TEST_F	webrtc/common_audio/resampler/resampler_unittest.cc	/^TEST_F(ResamplerTest, Stereo) {$/;"	f	namespace:webrtc::__anon86
TEST_F	webrtc/common_audio/signal_processing/real_fft_unittest.cc	/^TEST_F(RealFFTTest, CreateFailsOnBadInput) {$/;"	f	namespace:webrtc::__anon98
TEST_F	webrtc/common_audio/signal_processing/real_fft_unittest.cc	/^TEST_F(RealFFTTest, RealAndComplexMatch) {$/;"	f	namespace:webrtc::__anon98
TEST_F	webrtc/common_audio/signal_processing/signal_processing_unittest.cc	/^TEST_F(SplTest, AddSubSatW32) {$/;"	f
TEST_F	webrtc/common_audio/signal_processing/signal_processing_unittest.cc	/^TEST_F(SplTest, AutoCorrelationTest) {$/;"	f
TEST_F	webrtc/common_audio/signal_processing/signal_processing_unittest.cc	/^TEST_F(SplTest, BasicArrayOperationsTest) {$/;"	f
TEST_F	webrtc/common_audio/signal_processing/signal_processing_unittest.cc	/^TEST_F(SplTest, CountLeadingZeros32) {$/;"	f
TEST_F	webrtc/common_audio/signal_processing/signal_processing_unittest.cc	/^TEST_F(SplTest, CountLeadingZeros64) {$/;"	f
TEST_F	webrtc/common_audio/signal_processing/signal_processing_unittest.cc	/^TEST_F(SplTest, CrossCorrelationTest) {$/;"	f
TEST_F	webrtc/common_audio/signal_processing/signal_processing_unittest.cc	/^TEST_F(SplTest, DotProductWithScaleTest) {$/;"	f
TEST_F	webrtc/common_audio/signal_processing/signal_processing_unittest.cc	/^TEST_F(SplTest, EstimatorsTest) {$/;"	f
TEST_F	webrtc/common_audio/signal_processing/signal_processing_unittest.cc	/^TEST_F(SplTest, FFTTest) {$/;"	f
TEST_F	webrtc/common_audio/signal_processing/signal_processing_unittest.cc	/^TEST_F(SplTest, FilterTest) {$/;"	f
TEST_F	webrtc/common_audio/signal_processing/signal_processing_unittest.cc	/^TEST_F(SplTest, InlineTest) {$/;"	f
TEST_F	webrtc/common_audio/signal_processing/signal_processing_unittest.cc	/^TEST_F(SplTest, MacroTest) {$/;"	f
TEST_F	webrtc/common_audio/signal_processing/signal_processing_unittest.cc	/^TEST_F(SplTest, MathOperationsTest) {$/;"	f
TEST_F	webrtc/common_audio/signal_processing/signal_processing_unittest.cc	/^TEST_F(SplTest, MinMaxOperationsTest) {$/;"	f
TEST_F	webrtc/common_audio/signal_processing/signal_processing_unittest.cc	/^TEST_F(SplTest, RandTest) {$/;"	f
TEST_F	webrtc/common_audio/signal_processing/signal_processing_unittest.cc	/^TEST_F(SplTest, Resample48WithSaturationTest) {$/;"	f
TEST_F	webrtc/common_audio/signal_processing/signal_processing_unittest.cc	/^TEST_F(SplTest, SignalProcessingTest) {$/;"	f
TEST_F	webrtc/common_audio/signal_processing/signal_processing_unittest.cc	/^TEST_F(SplTest, VectorOperationsTest) {$/;"	f
TEST_F	webrtc/common_audio/vad/vad_core_unittest.cc	/^TEST_F(VadTest, CalcVad) {$/;"	f	namespace:__anon106
TEST_F	webrtc/common_audio/vad/vad_core_unittest.cc	/^TEST_F(VadTest, InitCore) {$/;"	f	namespace:__anon106
TEST_F	webrtc/common_audio/vad/vad_core_unittest.cc	/^TEST_F(VadTest, set_mode_core) {$/;"	f	namespace:__anon106
TEST_F	webrtc/common_audio/vad/vad_filterbank_unittest.cc	/^TEST_F(VadTest, vad_filterbank) {$/;"	f	namespace:__anon107
TEST_F	webrtc/common_audio/vad/vad_gmm_unittest.cc	/^TEST_F(VadTest, vad_gmm) {$/;"	f	namespace:__anon108
TEST_F	webrtc/common_audio/vad/vad_sp_unittest.cc	/^TEST_F(VadTest, vad_sp) {$/;"	f	namespace:__anon109
TEST_F	webrtc/common_audio/vad/vad_unittest.cc	/^TEST_F(VadTest, ApiTest) {$/;"	f	namespace:__anon110
TEST_F	webrtc/common_audio/vad/vad_unittest.cc	/^TEST_F(VadTest, ValidRatesFrameLengths) {$/;"	f	namespace:__anon110
TEST_F	webrtc/modules/audio_processing/aec/system_delay_unittest.cc	/^TEST_F(SystemDelayTest, CorrectDelayAfterStableBufferBuildUp) {$/;"	f	namespace:webrtc::__anon162
TEST_F	webrtc/modules/audio_processing/aec/system_delay_unittest.cc	/^TEST_F(SystemDelayTest, CorrectDelayAfterStableStartup) {$/;"	f	namespace:webrtc::__anon162
TEST_F	webrtc/modules/audio_processing/aec/system_delay_unittest.cc	/^TEST_F(SystemDelayTest, CorrectDelayAfterUnstableStartup) {$/;"	f	namespace:webrtc::__anon162
TEST_F	webrtc/modules/audio_processing/aec/system_delay_unittest.cc	/^TEST_F(SystemDelayTest, CorrectDelayDuringDrift) {$/;"	f	namespace:webrtc::__anon162
TEST_F	webrtc/modules/audio_processing/aec/system_delay_unittest.cc	/^TEST_F(SystemDelayTest, CorrectDelayWhenBufferUnderrun) {$/;"	f	namespace:webrtc::__anon162
TEST_F	webrtc/modules/audio_processing/aec/system_delay_unittest.cc	/^TEST_F(SystemDelayTest, CorrectImpactWhenTogglingDeviceBufferValues) {$/;"	f	namespace:webrtc::__anon162
TEST_F	webrtc/modules/audio_processing/aec/system_delay_unittest.cc	/^TEST_F(SystemDelayTest, CorrectIncreaseWhenBufferFarend) {$/;"	f	namespace:webrtc::__anon162
TEST_F	webrtc/modules/audio_processing/aec/system_delay_unittest.cc	/^TEST_F(SystemDelayTest, ShouldRecoverAfterGlitch) {$/;"	f	namespace:webrtc::__anon162
TEST_F	webrtc/modules/audio_processing/aec/system_delay_unittest.cc	/^TEST_F(SystemDelayTest, UnaffectedWhenSpuriousDeviceBufferValues) {$/;"	f	namespace:webrtc::__anon162
TEST_F	webrtc/modules/audio_processing/agc/agc_manager_direct_unittest.cc	/^TEST_F(AgcManagerDirectTest, ClippingDoesNotPullLowVolumeBackUp) {$/;"	f	namespace:webrtc
TEST_F	webrtc/modules/audio_processing/agc/agc_manager_direct_unittest.cc	/^TEST_F(AgcManagerDirectTest, ClippingLoweringIsLimited) {$/;"	f	namespace:webrtc
TEST_F	webrtc/modules/audio_processing/agc/agc_manager_direct_unittest.cc	/^TEST_F(AgcManagerDirectTest, ClippingLowersVolume) {$/;"	f	namespace:webrtc
TEST_F	webrtc/modules/audio_processing/agc/agc_manager_direct_unittest.cc	/^TEST_F(AgcManagerDirectTest, ClippingMaxIsRespectedWhenEqualToLevel) {$/;"	f	namespace:webrtc
TEST_F	webrtc/modules/audio_processing/agc/agc_manager_direct_unittest.cc	/^TEST_F(AgcManagerDirectTest, ClippingMaxIsRespectedWhenHigherThanLevel) {$/;"	f	namespace:webrtc
TEST_F	webrtc/modules/audio_processing/agc/agc_manager_direct_unittest.cc	/^TEST_F(AgcManagerDirectTest, ClippingUnderThresholdHasNoImpact) {$/;"	f	namespace:webrtc
TEST_F	webrtc/modules/audio_processing/agc/agc_manager_direct_unittest.cc	/^TEST_F(AgcManagerDirectTest, CompressorErrorIsDeemphasized) {$/;"	f	namespace:webrtc
TEST_F	webrtc/modules/audio_processing/agc/agc_manager_direct_unittest.cc	/^TEST_F(AgcManagerDirectTest, CompressorReachesMaximum) {$/;"	f	namespace:webrtc
TEST_F	webrtc/modules/audio_processing/agc/agc_manager_direct_unittest.cc	/^TEST_F(AgcManagerDirectTest, CompressorReachesMinimum) {$/;"	f	namespace:webrtc
TEST_F	webrtc/modules/audio_processing/agc/agc_manager_direct_unittest.cc	/^TEST_F(AgcManagerDirectTest, CompressorStepsTowardsTarget) {$/;"	f	namespace:webrtc
TEST_F	webrtc/modules/audio_processing/agc/agc_manager_direct_unittest.cc	/^TEST_F(AgcManagerDirectTest, ManualLevelChangeResultsInNoSetMicCall) {$/;"	f	namespace:webrtc
TEST_F	webrtc/modules/audio_processing/agc/agc_manager_direct_unittest.cc	/^TEST_F(AgcManagerDirectTest, MaxCompressionIsIncreasedAfterClipping) {$/;"	f	namespace:webrtc
TEST_F	webrtc/modules/audio_processing/agc/agc_manager_direct_unittest.cc	/^TEST_F(AgcManagerDirectTest, MicVolumeIsLimited) {$/;"	f	namespace:webrtc
TEST_F	webrtc/modules/audio_processing/agc/agc_manager_direct_unittest.cc	/^TEST_F(AgcManagerDirectTest, MicVolumeResponseToRmsError) {$/;"	f	namespace:webrtc
TEST_F	webrtc/modules/audio_processing/agc/agc_manager_direct_unittest.cc	/^TEST_F(AgcManagerDirectTest, NoActionWhileMuted) {$/;"	f	namespace:webrtc
TEST_F	webrtc/modules/audio_processing/agc/agc_manager_direct_unittest.cc	/^TEST_F(AgcManagerDirectTest, NoClippingHasNoImpact) {$/;"	f	namespace:webrtc
TEST_F	webrtc/modules/audio_processing/agc/agc_manager_direct_unittest.cc	/^TEST_F(AgcManagerDirectTest, RecoveryAfterManualLevelChangeBelowMin) {$/;"	f	namespace:webrtc
TEST_F	webrtc/modules/audio_processing/agc/agc_manager_direct_unittest.cc	/^TEST_F(AgcManagerDirectTest, RecoveryAfterManualLevelChangeFromMax) {$/;"	f	namespace:webrtc
TEST_F	webrtc/modules/audio_processing/agc/agc_manager_direct_unittest.cc	/^TEST_F(AgcManagerDirectTest, StartupMinVolumeConfigurationIsRespected) {$/;"	f	namespace:webrtc
TEST_F	webrtc/modules/audio_processing/agc/agc_manager_direct_unittest.cc	/^TEST_F(AgcManagerDirectTest, TakesNoActionOnZeroMicVolume) {$/;"	f	namespace:webrtc
TEST_F	webrtc/modules/audio_processing/agc/agc_manager_direct_unittest.cc	/^TEST_F(AgcManagerDirectTest, UnmutingChecksVolumeWithoutRaising) {$/;"	f	namespace:webrtc
TEST_F	webrtc/modules/audio_processing/agc/agc_manager_direct_unittest.cc	/^TEST_F(AgcManagerDirectTest, UnmutingRaisesTooLowVolume) {$/;"	f	namespace:webrtc
TEST_F	webrtc/modules/audio_processing/agc/agc_manager_direct_unittest.cc	/^TEST_F(AgcManagerDirectTest, UserCanRaiseVolumeAfterClipping) {$/;"	f	namespace:webrtc
TEST_F	webrtc/modules/audio_processing/agc/agc_manager_direct_unittest.cc	/^TEST_F(AgcManagerDirectTest, WaitingPeriodBetweenClippingChecks) {$/;"	f	namespace:webrtc
TEST_F	webrtc/modules/audio_processing/agc/loudness_histogram_unittest.cc	/^TEST_F(LoudnessHistogramTest, ActiveCircularBuffer) {$/;"	f	namespace:webrtc
TEST_F	webrtc/modules/audio_processing/agc/loudness_histogram_unittest.cc	/^TEST_F(LoudnessHistogramTest, InactiveCircularBuffer) {$/;"	f	namespace:webrtc
TEST_F	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^TEST_F(ApmTest, AgcOnlyAdaptsWhenTargetSignalIsPresent) {$/;"	f	namespace:webrtc::__anon183
TEST_F	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^TEST_F(ApmTest, AllProcessingDisabledByDefault) {$/;"	f	namespace:webrtc::__anon183
TEST_F	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^TEST_F(ApmTest, Channels) {$/;"	f	namespace:webrtc::__anon183
TEST_F	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^TEST_F(ApmTest, ChannelsInt16Interface) {$/;"	f	namespace:webrtc::__anon183
TEST_F	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^TEST_F(ApmTest, DISABLED_EchoCancellationReportsCorrectDelays) {$/;"	f	namespace:webrtc::__anon183
TEST_F	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^TEST_F(ApmTest, DebugDump) {$/;"	f	namespace:webrtc::__anon183
TEST_F	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^TEST_F(ApmTest, DebugDumpFromFileHandle) {$/;"	f	namespace:webrtc::__anon183
TEST_F	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^TEST_F(ApmTest, DefaultDelayOffsetIsZero) {$/;"	f	namespace:webrtc::__anon183
TEST_F	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^TEST_F(ApmTest, DelayOffsetWithLimitsIsSetProperly) {$/;"	f	namespace:webrtc::__anon183
TEST_F	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^TEST_F(ApmTest, EchoCancellation) {$/;"	f	namespace:webrtc::__anon183
TEST_F	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^TEST_F(ApmTest, EchoControlMobile) {$/;"	f	namespace:webrtc::__anon183
TEST_F	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^TEST_F(ApmTest, FloatAndIntInterfacesGiveSimilarResults) {$/;"	f	namespace:webrtc::__anon183
TEST_F	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^TEST_F(ApmTest, GainControl) {$/;"	f	namespace:webrtc::__anon183
TEST_F	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^TEST_F(ApmTest, HighPassFilter) {$/;"	f	namespace:webrtc::__anon183
TEST_F	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^TEST_F(ApmTest, IdenticalInputChannelsResultInIdenticalOutputChannels) {$/;"	f	namespace:webrtc::__anon183
TEST_F	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^TEST_F(ApmTest, LevelEstimator) {$/;"	f	namespace:webrtc::__anon183
TEST_F	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^TEST_F(ApmTest, ManualVolumeChangeIsPossible) {$/;"	f	namespace:webrtc::__anon183
TEST_F	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^TEST_F(ApmTest, NoErrorsWithKeyboardChannel) {$/;"	f	namespace:webrtc::__anon183
TEST_F	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^TEST_F(ApmTest, NoProcessingWhenAllComponentsDisabled) {$/;"	f	namespace:webrtc::__anon183
TEST_F	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^TEST_F(ApmTest, NoProcessingWhenAllComponentsDisabledFloat) {$/;"	f	namespace:webrtc::__anon183
TEST_F	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^TEST_F(ApmTest, NoiseSuppression) {$/;"	f	namespace:webrtc::__anon183
TEST_F	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^TEST_F(ApmTest, Process) {$/;"	f	namespace:webrtc::__anon183
TEST_F	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^TEST_F(ApmTest, QuantizedVolumeDoesNotGetStuck) {$/;"	f	namespace:webrtc::__anon183
TEST_F	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^TEST_F(ApmTest, SampleRatesInt) {$/;"	f	namespace:webrtc::__anon183
TEST_F	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^TEST_F(ApmTest, SplittingFilter) {$/;"	f	namespace:webrtc::__anon183
TEST_F	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^TEST_F(ApmTest, StreamParametersFloat) {$/;"	f	namespace:webrtc::__anon183
TEST_F	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^TEST_F(ApmTest, StreamParametersInt) {$/;"	f	namespace:webrtc::__anon183
TEST_F	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^TEST_F(ApmTest, VerifyDebugDumpFloat) {$/;"	f	namespace:webrtc::__anon183
TEST_F	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^TEST_F(ApmTest, VerifyDebugDumpInt) {$/;"	f	namespace:webrtc::__anon183
TEST_F	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^TEST_F(ApmTest, VoiceDetection) {$/;"	f	namespace:webrtc::__anon183
TEST_F	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer_unittest.cc	/^TEST_F(IntelligibilityEnhancerTest, TestAllBandsHaveSameDelay) {$/;"	f	namespace:webrtc
TEST_F	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer_unittest.cc	/^TEST_F(IntelligibilityEnhancerTest, TestErbCreation) {$/;"	f	namespace:webrtc
TEST_F	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer_unittest.cc	/^TEST_F(IntelligibilityEnhancerTest, TestNoiseGainHasExpectedResult) {$/;"	f	namespace:webrtc
TEST_F	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer_unittest.cc	/^TEST_F(IntelligibilityEnhancerTest, TestRenderUpdate) {$/;"	f	namespace:webrtc
TEST_F	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer_unittest.cc	/^TEST_F(IntelligibilityEnhancerTest, TestSolveForGains) {$/;"	f	namespace:webrtc
TEST_F	webrtc/modules/audio_processing/test/debug_dump_test.cc	/^TEST_F(DebugDumpTest, ChangeInputFormat) {$/;"	f	namespace:webrtc::test
TEST_F	webrtc/modules/audio_processing/test/debug_dump_test.cc	/^TEST_F(DebugDumpTest, ChangeOutputFormat) {$/;"	f	namespace:webrtc::test
TEST_F	webrtc/modules/audio_processing/test/debug_dump_test.cc	/^TEST_F(DebugDumpTest, ChangeReverseFormat) {$/;"	f	namespace:webrtc::test
TEST_F	webrtc/modules/audio_processing/test/debug_dump_test.cc	/^TEST_F(DebugDumpTest, MAYBE_ToggleAgc) {$/;"	f	namespace:webrtc::test
TEST_F	webrtc/modules/audio_processing/test/debug_dump_test.cc	/^TEST_F(DebugDumpTest, SimpleCase) {$/;"	f	namespace:webrtc::test
TEST_F	webrtc/modules/audio_processing/test/debug_dump_test.cc	/^TEST_F(DebugDumpTest, ToggleAec) {$/;"	f	namespace:webrtc::test
TEST_F	webrtc/modules/audio_processing/test/debug_dump_test.cc	/^TEST_F(DebugDumpTest, ToggleAecLevel) {$/;"	f	namespace:webrtc::test
TEST_F	webrtc/modules/audio_processing/test/debug_dump_test.cc	/^TEST_F(DebugDumpTest, ToggleDelayAgnosticAec) {$/;"	f	namespace:webrtc::test
TEST_F	webrtc/modules/audio_processing/test/debug_dump_test.cc	/^TEST_F(DebugDumpTest, ToggleNs) {$/;"	f	namespace:webrtc::test
TEST_F	webrtc/modules/audio_processing/test/debug_dump_test.cc	/^TEST_F(DebugDumpTest, TransientSuppressionOn) {$/;"	f	namespace:webrtc::test
TEST_F	webrtc/modules/audio_processing/test/debug_dump_test.cc	/^TEST_F(DebugDumpTest, VerifyAec3ExperimentalString) {$/;"	f	namespace:webrtc::test
TEST_F	webrtc/modules/audio_processing/test/debug_dump_test.cc	/^TEST_F(DebugDumpTest, VerifyCombinedExperimentalStringExclusive) {$/;"	f	namespace:webrtc::test
TEST_F	webrtc/modules/audio_processing/test/debug_dump_test.cc	/^TEST_F(DebugDumpTest, VerifyCombinedExperimentalStringInclusive) {$/;"	f	namespace:webrtc::test
TEST_F	webrtc/modules/audio_processing/test/debug_dump_test.cc	/^TEST_F(DebugDumpTest, VerifyEmptyExperimentalString) {$/;"	f	namespace:webrtc::test
TEST_F	webrtc/modules/audio_processing/test/debug_dump_test.cc	/^TEST_F(DebugDumpTest, VerifyLevelControllerExperimentalString) {$/;"	f	namespace:webrtc::test
TEST_F	webrtc/modules/audio_processing/test/debug_dump_test.cc	/^TEST_F(DebugDumpTest, VerifyRefinedAdaptiveFilterExperimentalString) {$/;"	f	namespace:webrtc::test
TEST_F	webrtc/modules/audio_processing/transient/file_utils_unittest.cc	/^TEST_F(TransientFileUtilsTest, MAYBE_ConvertByteArrayToDouble) {$/;"	f	namespace:webrtc
TEST_F	webrtc/modules/audio_processing/transient/file_utils_unittest.cc	/^TEST_F(TransientFileUtilsTest, MAYBE_ConvertByteArrayToFloat) {$/;"	f	namespace:webrtc
TEST_F	webrtc/modules/audio_processing/transient/file_utils_unittest.cc	/^TEST_F(TransientFileUtilsTest, MAYBE_ConvertDoubleToByteArray) {$/;"	f	namespace:webrtc
TEST_F	webrtc/modules/audio_processing/transient/file_utils_unittest.cc	/^TEST_F(TransientFileUtilsTest, MAYBE_ConvertFloatToByteArray) {$/;"	f	namespace:webrtc
TEST_F	webrtc/modules/audio_processing/transient/file_utils_unittest.cc	/^TEST_F(TransientFileUtilsTest, MAYBE_ExpectedErrorReturnValues) {$/;"	f	namespace:webrtc
TEST_F	webrtc/modules/audio_processing/transient/file_utils_unittest.cc	/^TEST_F(TransientFileUtilsTest, MAYBE_ReadDoubleBufferFromFile) {$/;"	f	namespace:webrtc
TEST_F	webrtc/modules/audio_processing/transient/file_utils_unittest.cc	/^TEST_F(TransientFileUtilsTest, MAYBE_ReadFloatBufferFromFile) {$/;"	f	namespace:webrtc
TEST_F	webrtc/modules/audio_processing/transient/file_utils_unittest.cc	/^TEST_F(TransientFileUtilsTest, MAYBE_ReadInt16BufferFromFile) {$/;"	f	namespace:webrtc
TEST_F	webrtc/modules/audio_processing/transient/file_utils_unittest.cc	/^TEST_F(TransientFileUtilsTest, MAYBE_ReadInt16FromFileToDoubleBuffer) {$/;"	f	namespace:webrtc
TEST_F	webrtc/modules/audio_processing/transient/file_utils_unittest.cc	/^TEST_F(TransientFileUtilsTest, MAYBE_ReadInt16FromFileToFloatBuffer) {$/;"	f	namespace:webrtc
TEST_F	webrtc/modules/audio_processing/transient/file_utils_unittest.cc	/^TEST_F(TransientFileUtilsTest, MAYBE_WriteDoubleBufferToFile) {$/;"	f	namespace:webrtc
TEST_F	webrtc/modules/audio_processing/transient/file_utils_unittest.cc	/^TEST_F(TransientFileUtilsTest, MAYBE_WriteFloatBufferToFile) {$/;"	f	namespace:webrtc
TEST_F	webrtc/modules/audio_processing/transient/file_utils_unittest.cc	/^TEST_F(TransientFileUtilsTest, MAYBE_WriteInt16BufferToFile) {$/;"	f	namespace:webrtc
TEST_F	webrtc/modules/audio_processing/transient/moving_moments_unittest.cc	/^TEST_F(MovingMomentsTest, CorrectMomentsOfAConstantBuffer) {$/;"	f	namespace:webrtc
TEST_F	webrtc/modules/audio_processing/transient/moving_moments_unittest.cc	/^TEST_F(MovingMomentsTest, CorrectMomentsOfADecreasingBuffer) {$/;"	f	namespace:webrtc
TEST_F	webrtc/modules/audio_processing/transient/moving_moments_unittest.cc	/^TEST_F(MovingMomentsTest, CorrectMomentsOfAZeroMeanSequence) {$/;"	f	namespace:webrtc
TEST_F	webrtc/modules/audio_processing/transient/moving_moments_unittest.cc	/^TEST_F(MovingMomentsTest, CorrectMomentsOfAnAllZerosBuffer) {$/;"	f	namespace:webrtc
TEST_F	webrtc/modules/audio_processing/transient/moving_moments_unittest.cc	/^TEST_F(MovingMomentsTest, CorrectMomentsOfAnArbitraryBuffer) {$/;"	f	namespace:webrtc
TEST_F	webrtc/modules/audio_processing/transient/moving_moments_unittest.cc	/^TEST_F(MovingMomentsTest, CorrectMomentsOfAnIncreasingBuffer) {$/;"	f	namespace:webrtc
TEST_F	webrtc/modules/audio_processing/transient/moving_moments_unittest.cc	/^TEST_F(MovingMomentsTest, MutipleCalculateMomentsCalls) {$/;"	f	namespace:webrtc
TEST_F	webrtc/modules/audio_processing/transient/moving_moments_unittest.cc	/^TEST_F(MovingMomentsTest,$/;"	f	namespace:webrtc
TEST_F	webrtc/modules/audio_processing/utility/delay_estimator_unittest.cc	/^TEST_F(DelayEstimatorTest, AllowedOffsetNoImpactWhenRobustValidationDisabled) {$/;"	f	namespace:__anon232
TEST_F	webrtc/modules/audio_processing/utility/delay_estimator_unittest.cc	/^TEST_F(DelayEstimatorTest, CorrectErrorReturnsOfBinaryEstimator) {$/;"	f	namespace:__anon232
TEST_F	webrtc/modules/audio_processing/utility/delay_estimator_unittest.cc	/^TEST_F(DelayEstimatorTest, CorrectErrorReturnsOfBinaryEstimatorFarend) {$/;"	f	namespace:__anon232
TEST_F	webrtc/modules/audio_processing/utility/delay_estimator_unittest.cc	/^TEST_F(DelayEstimatorTest, CorrectErrorReturnsOfWrapper) {$/;"	f	namespace:__anon232
TEST_F	webrtc/modules/audio_processing/utility/delay_estimator_unittest.cc	/^TEST_F(DelayEstimatorTest, CorrectLastDelay) {$/;"	f	namespace:__anon232
TEST_F	webrtc/modules/audio_processing/utility/delay_estimator_unittest.cc	/^TEST_F(DelayEstimatorTest, ExactDelayEstimateMultipleNearDifferentLookahead) {$/;"	f	namespace:__anon232
TEST_F	webrtc/modules/audio_processing/utility/delay_estimator_unittest.cc	/^TEST_F(DelayEstimatorTest, ExactDelayEstimateMultipleNearDifferentSpectrum) {$/;"	f	namespace:__anon232
TEST_F	webrtc/modules/audio_processing/utility/delay_estimator_unittest.cc	/^TEST_F(DelayEstimatorTest, ExactDelayEstimateMultipleNearSameSpectrum) {$/;"	f	namespace:__anon232
TEST_F	webrtc/modules/audio_processing/utility/delay_estimator_unittest.cc	/^TEST_F(DelayEstimatorTest, InitializedSpectrumAfterProcess) {$/;"	f	namespace:__anon232
TEST_F	webrtc/modules/audio_processing/utility/delay_estimator_unittest.cc	/^TEST_F(DelayEstimatorTest, MeanEstimatorFix) {$/;"	f	namespace:__anon232
TEST_F	webrtc/modules/audio_processing/utility/delay_estimator_unittest.cc	/^TEST_F(DelayEstimatorTest, VerifyAllowedOffset) {$/;"	f	namespace:__anon232
TEST_F	webrtc/modules/audio_processing/utility/delay_estimator_unittest.cc	/^TEST_F(DelayEstimatorTest, VerifyEnableRobustValidation) {$/;"	f	namespace:__anon232
TEST_F	webrtc/modules/audio_processing/utility/delay_estimator_unittest.cc	/^TEST_F(DelayEstimatorTest, VerifyHistorySizeAtCreate) {$/;"	f	namespace:__anon232
TEST_F	webrtc/modules/audio_processing/utility/delay_estimator_unittest.cc	/^TEST_F(DelayEstimatorTest, VerifyHistorySizeIsSetAndKeptAfterInit) {$/;"	f	namespace:__anon232
TEST_F	webrtc/modules/audio_processing/utility/delay_estimator_unittest.cc	/^TEST_F(DelayEstimatorTest, VerifyLookaheadAtCreate) {$/;"	f	namespace:__anon232
TEST_F	webrtc/modules/audio_processing/utility/delay_estimator_unittest.cc	/^TEST_F(DelayEstimatorTest, VerifyLookaheadIsSetAndKeptAfterInit) {$/;"	f	namespace:__anon232
TEST_F	webrtc/modules/audio_processing/vad/pole_zero_filter_unittest.cc	/^TEST_F(PoleZeroFilterTest, FiftySubframes) {$/;"	f	namespace:webrtc
TEST_F	webrtc/modules/audio_processing/vad/pole_zero_filter_unittest.cc	/^TEST_F(PoleZeroFilterTest, FiveSubframes) {$/;"	f	namespace:webrtc
TEST_F	webrtc/modules/audio_processing/vad/pole_zero_filter_unittest.cc	/^TEST_F(PoleZeroFilterTest, OneSubframe) {$/;"	f	namespace:webrtc
TEST_F	webrtc/modules/audio_processing/vad/pole_zero_filter_unittest.cc	/^TEST_F(PoleZeroFilterTest, TenSubframes) {$/;"	f	namespace:webrtc
TEST_F	webrtc/modules/audio_processing/vad/pole_zero_filter_unittest.cc	/^TEST_F(PoleZeroFilterTest, TwentyFiveSubframes) {$/;"	f	namespace:webrtc
TEST_F	webrtc/modules/audio_processing/vad/pole_zero_filter_unittest.cc	/^TEST_F(PoleZeroFilterTest, TwoSubframes) {$/;"	f	namespace:webrtc
TEST_FILES	jni/audio_processing.mk	/^TEST_FILES	:= \\$/;"	m
TEST_HOST	webrtc/base/httpcommon_unittest.cc	/^#define TEST_HOST /;"	d	file:
TEST_ORDER	webrtc/base/autodetectproxy.cc	/^static const ProxyType TEST_ORDER[] = {$/;"	m	namespace:rtc	file:
TEST_P	webrtc/base/sslstreamadapter_unittest.cc	/^TEST_P(SSLStreamAdapterTestDTLS, DISABLED_TestDTLSConnectWithSmallMtu) {$/;"	f
TEST_P	webrtc/base/sslstreamadapter_unittest.cc	/^TEST_P(SSLStreamAdapterTestDTLS, TestCertExpired) {$/;"	f
TEST_P	webrtc/base/sslstreamadapter_unittest.cc	/^TEST_P(SSLStreamAdapterTestDTLS, TestCertNotYetValid) {$/;"	f
TEST_P	webrtc/base/sslstreamadapter_unittest.cc	/^TEST_P(SSLStreamAdapterTestDTLS, TestDTLSConnect) {$/;"	f
TEST_P	webrtc/base/sslstreamadapter_unittest.cc	/^TEST_P(SSLStreamAdapterTestDTLS, TestDTLSConnectWithLostFirstPacket) {$/;"	f
TEST_P	webrtc/base/sslstreamadapter_unittest.cc	/^TEST_P(SSLStreamAdapterTestDTLS, TestDTLSConnectWithLostFirstPacketDelay2s) {$/;"	f
TEST_P	webrtc/base/sslstreamadapter_unittest.cc	/^TEST_P(SSLStreamAdapterTestDTLS, TestDTLSDelayedIdentity) {$/;"	f
TEST_P	webrtc/base/sslstreamadapter_unittest.cc	/^TEST_P(SSLStreamAdapterTestDTLS, TestDTLSDelayedIdentityWithBogusDigest) {$/;"	f
TEST_P	webrtc/base/sslstreamadapter_unittest.cc	/^TEST_P(SSLStreamAdapterTestDTLS, TestDTLSExporter) {$/;"	f
TEST_P	webrtc/base/sslstreamadapter_unittest.cc	/^TEST_P(SSLStreamAdapterTestDTLS, TestDTLSSrtpGCM128) {$/;"	f
TEST_P	webrtc/base/sslstreamadapter_unittest.cc	/^TEST_P(SSLStreamAdapterTestDTLS, TestDTLSSrtpGCM256) {$/;"	f
TEST_P	webrtc/base/sslstreamadapter_unittest.cc	/^TEST_P(SSLStreamAdapterTestDTLS, TestDTLSSrtpGCMMismatch) {$/;"	f
TEST_P	webrtc/base/sslstreamadapter_unittest.cc	/^TEST_P(SSLStreamAdapterTestDTLS, TestDTLSSrtpGCMMixed) {$/;"	f
TEST_P	webrtc/base/sslstreamadapter_unittest.cc	/^TEST_P(SSLStreamAdapterTestDTLS, TestDTLSSrtpHigh) {$/;"	f
TEST_P	webrtc/base/sslstreamadapter_unittest.cc	/^TEST_P(SSLStreamAdapterTestDTLS, TestDTLSSrtpHighLow) {$/;"	f
TEST_P	webrtc/base/sslstreamadapter_unittest.cc	/^TEST_P(SSLStreamAdapterTestDTLS, TestDTLSSrtpKeyAndSaltLengths) {$/;"	f
TEST_P	webrtc/base/sslstreamadapter_unittest.cc	/^TEST_P(SSLStreamAdapterTestDTLS, TestDTLSSrtpLow) {$/;"	f
TEST_P	webrtc/base/sslstreamadapter_unittest.cc	/^TEST_P(SSLStreamAdapterTestDTLS, TestDTLSSrtpMixed) {$/;"	f
TEST_P	webrtc/base/sslstreamadapter_unittest.cc	/^TEST_P(SSLStreamAdapterTestDTLS, TestDTLSTransfer) {$/;"	f
TEST_P	webrtc/base/sslstreamadapter_unittest.cc	/^TEST_P(SSLStreamAdapterTestDTLS, TestDTLSTransferWithDamage) {$/;"	f
TEST_P	webrtc/base/sslstreamadapter_unittest.cc	/^TEST_P(SSLStreamAdapterTestDTLS, TestDTLSTransferWithLoss) {$/;"	f
TEST_P	webrtc/base/sslstreamadapter_unittest.cc	/^TEST_P(SSLStreamAdapterTestDTLS, TestGetSslCipherSuite) {$/;"	f
TEST_P	webrtc/base/sslstreamadapter_unittest.cc	/^TEST_P(SSLStreamAdapterTestDTLS, TestGetSslCipherSuiteDtls12Both) {$/;"	f
TEST_P	webrtc/base/sslstreamadapter_unittest.cc	/^TEST_P(SSLStreamAdapterTestDTLS, TestGetSslCipherSuiteDtls12Client) {$/;"	f
TEST_P	webrtc/base/sslstreamadapter_unittest.cc	/^TEST_P(SSLStreamAdapterTestDTLS, TestGetSslCipherSuiteDtls12Server) {$/;"	f
TEST_P	webrtc/base/sslstreamadapter_unittest.cc	/^TEST_P(SSLStreamAdapterTestTLS, ReadWriteAfterClose) {$/;"	f
TEST_P	webrtc/base/sslstreamadapter_unittest.cc	/^TEST_P(SSLStreamAdapterTestTLS, TestSetPeerCertificateDigestWithInvalidLength) {$/;"	f
TEST_P	webrtc/base/sslstreamadapter_unittest.cc	/^TEST_P(SSLStreamAdapterTestTLS, TestTLSBogusDigest) {$/;"	f
TEST_P	webrtc/base/sslstreamadapter_unittest.cc	/^TEST_P(SSLStreamAdapterTestTLS, TestTLSClose) {$/;"	f
TEST_P	webrtc/base/sslstreamadapter_unittest.cc	/^TEST_P(SSLStreamAdapterTestTLS, TestTLSConnect) {$/;"	f
TEST_P	webrtc/base/sslstreamadapter_unittest.cc	/^TEST_P(SSLStreamAdapterTestTLS, TestTLSDelayedIdentity) {$/;"	f
TEST_P	webrtc/base/sslstreamadapter_unittest.cc	/^TEST_P(SSLStreamAdapterTestTLS, TestTLSDelayedIdentityWithBogusDigest) {$/;"	f
TEST_P	webrtc/base/sslstreamadapter_unittest.cc	/^TEST_P(SSLStreamAdapterTestTLS, TestTLSTransfer) {$/;"	f
TEST_P	webrtc/base/sslstreamadapter_unittest.cc	/^TEST_P(SSLStreamAdapterTestTLS,$/;"	f
TEST_P	webrtc/common_audio/audio_ring_buffer_unittest.cc	/^TEST_P(AudioRingBufferTest, ReadDataMatchesWrittenData) {$/;"	f	namespace:webrtc
TEST_P	webrtc/common_audio/resampler/push_sinc_resampler_unittest.cc	/^TEST_P(PushSincResamplerTest, DISABLED_BenchmarkFloat) {$/;"	f	namespace:webrtc
TEST_P	webrtc/common_audio/resampler/push_sinc_resampler_unittest.cc	/^TEST_P(PushSincResamplerTest, DISABLED_BenchmarkInt) {$/;"	f	namespace:webrtc
TEST_P	webrtc/common_audio/resampler/push_sinc_resampler_unittest.cc	/^TEST_P(PushSincResamplerTest, ResampleFloat) { ResampleTest(false); }$/;"	f	namespace:webrtc
TEST_P	webrtc/common_audio/resampler/push_sinc_resampler_unittest.cc	/^TEST_P(PushSincResamplerTest, ResampleInt) { ResampleTest(true); }$/;"	f	namespace:webrtc
TEST_P	webrtc/common_audio/resampler/sinc_resampler_unittest.cc	/^TEST_P(SincResamplerTest, Resample) {$/;"	f	namespace:webrtc
TEST_P	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^TEST_P(AudioProcessingImplLockTest, LockTest) {$/;"	f	namespace:webrtc
TEST_P	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^TEST_P(CallSimulator, ApiCallDurationTest) {$/;"	f	namespace:webrtc
TEST_P	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^TEST_P(AudioProcessingTest, Formats) {$/;"	f	namespace:webrtc::__anon183
TEST_PATH	webrtc/base/httpcommon_unittest.cc	/^#define TEST_PATH /;"	d	file:
TEST_PROTOCOL	webrtc/base/httpcommon_unittest.cc	/^#define TEST_PROTOCOL /;"	d	file:
TEST_QUERY	webrtc/base/httpcommon_unittest.cc	/^#define TEST_QUERY /;"	d	file:
TEST_URL	webrtc/base/httpcommon_unittest.cc	/^#define TEST_URL /;"	d	file:
THREAD_ANNOTATION_ATTRIBUTE__	webrtc/base/thread_annotations.h	/^#define THREAD_ANNOTATION_ATTRIBUTE__(/;"	d
THREAD_ID	webrtc/base/openssladapter.cc	/^  #define THREAD_ID /;"	d	file:
THRES_FLUCT_LRT	webrtc/modules/audio_processing/ns/nsx_defines.h	/^#define THRES_FLUCT_LRT /;"	d
THRES_PEAK_FLAT	webrtc/modules/audio_processing/ns/nsx_defines.h	/^#define THRES_PEAK_FLAT /;"	d
THRES_WEIGHT_FLAT_DIFF	webrtc/modules/audio_processing/ns/nsx_defines.h	/^#define THRES_WEIGHT_FLAT_DIFF /;"	d
TLABEL	webrtc/base/logging.h	/^#define TLABEL(/;"	d
TLS_NULL_WITH_NULL_NULL	webrtc/base/sslstreamadapter.h	/^const int TLS_NULL_WITH_NULL_NULL = 0;$/;"	m	namespace:rtc
TOKEN_MANDATORY_LABEL	webrtc/base/win32.h	/^} TOKEN_MANDATORY_LABEL, *PTOKEN_MANDATORY_LABEL;$/;"	t	typeref:struct:_TOKEN_MANDATORY_LABEL
TRACE_ALL	webrtc/base/java/src/org/webrtc/Logging.java	/^    TRACE_ALL(0xffff);$/;"	e	enum:Logging.TraceLevel	file:
TRACE_APICALL	webrtc/base/java/src/org/webrtc/Logging.java	/^    TRACE_APICALL(0x0010),$/;"	e	enum:Logging.TraceLevel	file:
TRACE_COPY_COUNTER1	webrtc/base/trace_event.h	/^#define TRACE_COPY_COUNTER1(/;"	d
TRACE_COPY_COUNTER2	webrtc/base/trace_event.h	/^#define TRACE_COPY_COUNTER2(/;"	d
TRACE_COPY_COUNTER_ID1	webrtc/base/trace_event.h	/^#define TRACE_COPY_COUNTER_ID1(/;"	d
TRACE_COPY_COUNTER_ID2	webrtc/base/trace_event.h	/^#define TRACE_COPY_COUNTER_ID2(/;"	d
TRACE_COUNTER1	webrtc/base/trace_event.h	/^#define TRACE_COUNTER1(/;"	d
TRACE_COUNTER2	webrtc/base/trace_event.h	/^#define TRACE_COUNTER2(/;"	d
TRACE_COUNTER_ID1	webrtc/base/trace_event.h	/^#define TRACE_COUNTER_ID1(/;"	d
TRACE_COUNTER_ID2	webrtc/base/trace_event.h	/^#define TRACE_COUNTER_ID2(/;"	d
TRACE_CRITICAL	webrtc/base/java/src/org/webrtc/Logging.java	/^    TRACE_CRITICAL(0x0008),$/;"	e	enum:Logging.TraceLevel	file:
TRACE_DEBUG	webrtc/base/java/src/org/webrtc/Logging.java	/^    TRACE_DEBUG(0x0800),$/;"	e	enum:Logging.TraceLevel	file:
TRACE_DEFAULT	webrtc/base/java/src/org/webrtc/Logging.java	/^    TRACE_DEFAULT(0x00ff),$/;"	e	enum:Logging.TraceLevel	file:
TRACE_DISABLED_BY_DEFAULT	webrtc/base/trace_event.h	/^#define TRACE_DISABLED_BY_DEFAULT(/;"	d
TRACE_ERROR	webrtc/base/java/src/org/webrtc/Logging.java	/^    TRACE_ERROR(0x0004),$/;"	e	enum:Logging.TraceLevel	file:
TRACE_EVENT0	webrtc/base/trace_event.h	/^#define TRACE_EVENT0(/;"	d
TRACE_EVENT1	webrtc/base/trace_event.h	/^#define TRACE_EVENT1(/;"	d
TRACE_EVENT2	webrtc/base/trace_event.h	/^#define TRACE_EVENT2(/;"	d
TRACE_EVENT_API_ADD_TRACE_EVENT	webrtc/base/trace_event.h	/^#define TRACE_EVENT_API_ADD_TRACE_EVENT /;"	d
TRACE_EVENT_API_GET_CATEGORY_ENABLED	webrtc/base/trace_event.h	/^#define TRACE_EVENT_API_GET_CATEGORY_ENABLED /;"	d
TRACE_EVENT_ASYNC_BEGIN0	webrtc/base/trace_event.h	/^#define TRACE_EVENT_ASYNC_BEGIN0(/;"	d
TRACE_EVENT_ASYNC_BEGIN1	webrtc/base/trace_event.h	/^#define TRACE_EVENT_ASYNC_BEGIN1(/;"	d
TRACE_EVENT_ASYNC_BEGIN2	webrtc/base/trace_event.h	/^#define TRACE_EVENT_ASYNC_BEGIN2(/;"	d
TRACE_EVENT_ASYNC_END0	webrtc/base/trace_event.h	/^#define TRACE_EVENT_ASYNC_END0(/;"	d
TRACE_EVENT_ASYNC_END1	webrtc/base/trace_event.h	/^#define TRACE_EVENT_ASYNC_END1(/;"	d
TRACE_EVENT_ASYNC_END2	webrtc/base/trace_event.h	/^#define TRACE_EVENT_ASYNC_END2(/;"	d
TRACE_EVENT_ASYNC_STEP0	webrtc/base/trace_event.h	/^#define TRACE_EVENT_ASYNC_STEP0(/;"	d
TRACE_EVENT_ASYNC_STEP1	webrtc/base/trace_event.h	/^#define TRACE_EVENT_ASYNC_STEP1(/;"	d
TRACE_EVENT_BEGIN0	webrtc/base/trace_event.h	/^#define TRACE_EVENT_BEGIN0(/;"	d
TRACE_EVENT_BEGIN1	webrtc/base/trace_event.h	/^#define TRACE_EVENT_BEGIN1(/;"	d
TRACE_EVENT_BEGIN2	webrtc/base/trace_event.h	/^#define TRACE_EVENT_BEGIN2(/;"	d
TRACE_EVENT_COPY_ASYNC_BEGIN0	webrtc/base/trace_event.h	/^#define TRACE_EVENT_COPY_ASYNC_BEGIN0(/;"	d
TRACE_EVENT_COPY_ASYNC_BEGIN1	webrtc/base/trace_event.h	/^#define TRACE_EVENT_COPY_ASYNC_BEGIN1(/;"	d
TRACE_EVENT_COPY_ASYNC_BEGIN2	webrtc/base/trace_event.h	/^#define TRACE_EVENT_COPY_ASYNC_BEGIN2(/;"	d
TRACE_EVENT_COPY_ASYNC_END0	webrtc/base/trace_event.h	/^#define TRACE_EVENT_COPY_ASYNC_END0(/;"	d
TRACE_EVENT_COPY_ASYNC_END1	webrtc/base/trace_event.h	/^#define TRACE_EVENT_COPY_ASYNC_END1(/;"	d
TRACE_EVENT_COPY_ASYNC_END2	webrtc/base/trace_event.h	/^#define TRACE_EVENT_COPY_ASYNC_END2(/;"	d
TRACE_EVENT_COPY_ASYNC_STEP0	webrtc/base/trace_event.h	/^#define TRACE_EVENT_COPY_ASYNC_STEP0(/;"	d
TRACE_EVENT_COPY_ASYNC_STEP1	webrtc/base/trace_event.h	/^#define TRACE_EVENT_COPY_ASYNC_STEP1(/;"	d
TRACE_EVENT_COPY_BEGIN0	webrtc/base/trace_event.h	/^#define TRACE_EVENT_COPY_BEGIN0(/;"	d
TRACE_EVENT_COPY_BEGIN1	webrtc/base/trace_event.h	/^#define TRACE_EVENT_COPY_BEGIN1(/;"	d
TRACE_EVENT_COPY_BEGIN2	webrtc/base/trace_event.h	/^#define TRACE_EVENT_COPY_BEGIN2(/;"	d
TRACE_EVENT_COPY_END0	webrtc/base/trace_event.h	/^#define TRACE_EVENT_COPY_END0(/;"	d
TRACE_EVENT_COPY_END1	webrtc/base/trace_event.h	/^#define TRACE_EVENT_COPY_END1(/;"	d
TRACE_EVENT_COPY_END2	webrtc/base/trace_event.h	/^#define TRACE_EVENT_COPY_END2(/;"	d
TRACE_EVENT_COPY_FLOW_BEGIN0	webrtc/base/trace_event.h	/^#define TRACE_EVENT_COPY_FLOW_BEGIN0(/;"	d
TRACE_EVENT_COPY_FLOW_BEGIN1	webrtc/base/trace_event.h	/^#define TRACE_EVENT_COPY_FLOW_BEGIN1(/;"	d
TRACE_EVENT_COPY_FLOW_BEGIN2	webrtc/base/trace_event.h	/^#define TRACE_EVENT_COPY_FLOW_BEGIN2(/;"	d
TRACE_EVENT_COPY_FLOW_END0	webrtc/base/trace_event.h	/^#define TRACE_EVENT_COPY_FLOW_END0(/;"	d
TRACE_EVENT_COPY_FLOW_END1	webrtc/base/trace_event.h	/^#define TRACE_EVENT_COPY_FLOW_END1(/;"	d
TRACE_EVENT_COPY_FLOW_END2	webrtc/base/trace_event.h	/^#define TRACE_EVENT_COPY_FLOW_END2(/;"	d
TRACE_EVENT_COPY_FLOW_STEP0	webrtc/base/trace_event.h	/^#define TRACE_EVENT_COPY_FLOW_STEP0(/;"	d
TRACE_EVENT_COPY_FLOW_STEP1	webrtc/base/trace_event.h	/^#define TRACE_EVENT_COPY_FLOW_STEP1(/;"	d
TRACE_EVENT_COPY_INSTANT0	webrtc/base/trace_event.h	/^#define TRACE_EVENT_COPY_INSTANT0(/;"	d
TRACE_EVENT_COPY_INSTANT1	webrtc/base/trace_event.h	/^#define TRACE_EVENT_COPY_INSTANT1(/;"	d
TRACE_EVENT_COPY_INSTANT2	webrtc/base/trace_event.h	/^#define TRACE_EVENT_COPY_INSTANT2(/;"	d
TRACE_EVENT_END0	webrtc/base/trace_event.h	/^#define TRACE_EVENT_END0(/;"	d
TRACE_EVENT_END1	webrtc/base/trace_event.h	/^#define TRACE_EVENT_END1(/;"	d
TRACE_EVENT_END2	webrtc/base/trace_event.h	/^#define TRACE_EVENT_END2(/;"	d
TRACE_EVENT_FLAG_COPY	webrtc/base/trace_event.h	/^#define TRACE_EVENT_FLAG_COPY /;"	d
TRACE_EVENT_FLAG_HAS_ID	webrtc/base/trace_event.h	/^#define TRACE_EVENT_FLAG_HAS_ID /;"	d
TRACE_EVENT_FLAG_MANGLE_ID	webrtc/base/trace_event.h	/^#define TRACE_EVENT_FLAG_MANGLE_ID /;"	d
TRACE_EVENT_FLAG_NONE	webrtc/base/trace_event.h	/^#define TRACE_EVENT_FLAG_NONE /;"	d
TRACE_EVENT_FLOW_BEGIN0	webrtc/base/trace_event.h	/^#define TRACE_EVENT_FLOW_BEGIN0(/;"	d
TRACE_EVENT_FLOW_BEGIN1	webrtc/base/trace_event.h	/^#define TRACE_EVENT_FLOW_BEGIN1(/;"	d
TRACE_EVENT_FLOW_BEGIN2	webrtc/base/trace_event.h	/^#define TRACE_EVENT_FLOW_BEGIN2(/;"	d
TRACE_EVENT_FLOW_END0	webrtc/base/trace_event.h	/^#define TRACE_EVENT_FLOW_END0(/;"	d
TRACE_EVENT_FLOW_END1	webrtc/base/trace_event.h	/^#define TRACE_EVENT_FLOW_END1(/;"	d
TRACE_EVENT_FLOW_END2	webrtc/base/trace_event.h	/^#define TRACE_EVENT_FLOW_END2(/;"	d
TRACE_EVENT_FLOW_STEP0	webrtc/base/trace_event.h	/^#define TRACE_EVENT_FLOW_STEP0(/;"	d
TRACE_EVENT_FLOW_STEP1	webrtc/base/trace_event.h	/^#define TRACE_EVENT_FLOW_STEP1(/;"	d
TRACE_EVENT_INSTANT0	webrtc/base/trace_event.h	/^#define TRACE_EVENT_INSTANT0(/;"	d
TRACE_EVENT_INSTANT1	webrtc/base/trace_event.h	/^#define TRACE_EVENT_INSTANT1(/;"	d
TRACE_EVENT_INSTANT2	webrtc/base/trace_event.h	/^#define TRACE_EVENT_INSTANT2(/;"	d
TRACE_EVENT_PHASE_ASYNC_BEGIN	webrtc/base/trace_event.h	/^#define TRACE_EVENT_PHASE_ASYNC_BEGIN /;"	d
TRACE_EVENT_PHASE_ASYNC_END	webrtc/base/trace_event.h	/^#define TRACE_EVENT_PHASE_ASYNC_END /;"	d
TRACE_EVENT_PHASE_ASYNC_STEP	webrtc/base/trace_event.h	/^#define TRACE_EVENT_PHASE_ASYNC_STEP /;"	d
TRACE_EVENT_PHASE_BEGIN	webrtc/base/trace_event.h	/^#define TRACE_EVENT_PHASE_BEGIN /;"	d
TRACE_EVENT_PHASE_COUNTER	webrtc/base/trace_event.h	/^#define TRACE_EVENT_PHASE_COUNTER /;"	d
TRACE_EVENT_PHASE_END	webrtc/base/trace_event.h	/^#define TRACE_EVENT_PHASE_END /;"	d
TRACE_EVENT_PHASE_FLOW_BEGIN	webrtc/base/trace_event.h	/^#define TRACE_EVENT_PHASE_FLOW_BEGIN /;"	d
TRACE_EVENT_PHASE_FLOW_END	webrtc/base/trace_event.h	/^#define TRACE_EVENT_PHASE_FLOW_END /;"	d
TRACE_EVENT_PHASE_FLOW_STEP	webrtc/base/trace_event.h	/^#define TRACE_EVENT_PHASE_FLOW_STEP /;"	d
TRACE_EVENT_PHASE_INSTANT	webrtc/base/trace_event.h	/^#define TRACE_EVENT_PHASE_INSTANT /;"	d
TRACE_EVENT_PHASE_METADATA	webrtc/base/trace_event.h	/^#define TRACE_EVENT_PHASE_METADATA /;"	d
TRACE_ID_MANGLE	webrtc/base/trace_event.h	/^#define TRACE_ID_MANGLE(/;"	d
TRACE_INFO	webrtc/base/java/src/org/webrtc/Logging.java	/^    TRACE_INFO(0x1000),$/;"	e	enum:Logging.TraceLevel	file:
TRACE_MEMORY	webrtc/base/java/src/org/webrtc/Logging.java	/^    TRACE_MEMORY(0x0100),$/;"	e	enum:Logging.TraceLevel	file:
TRACE_MODULECALL	webrtc/base/java/src/org/webrtc/Logging.java	/^    TRACE_MODULECALL(0x0020),$/;"	e	enum:Logging.TraceLevel	file:
TRACE_NONE	webrtc/base/java/src/org/webrtc/Logging.java	/^    TRACE_NONE(0x0000),$/;"	e	enum:Logging.TraceLevel	file:
TRACE_STATEINFO	webrtc/base/java/src/org/webrtc/Logging.java	/^    TRACE_STATEINFO(0x0001),$/;"	e	enum:Logging.TraceLevel	file:
TRACE_STREAM	webrtc/base/java/src/org/webrtc/Logging.java	/^    TRACE_STREAM(0x0400),$/;"	e	enum:Logging.TraceLevel	file:
TRACE_STR_COPY	webrtc/base/trace_event.h	/^#define TRACE_STR_COPY(/;"	d
TRACE_TERSEINFO	webrtc/base/java/src/org/webrtc/Logging.java	/^    TRACE_TERSEINFO(0x2000),$/;"	e	enum:Logging.TraceLevel	file:
TRACE_TIMER	webrtc/base/java/src/org/webrtc/Logging.java	/^    TRACE_TIMER(0x0200),$/;"	e	enum:Logging.TraceLevel	file:
TRACE_VALUE_TYPE_BOOL	webrtc/base/trace_event.h	/^#define TRACE_VALUE_TYPE_BOOL /;"	d
TRACE_VALUE_TYPE_COPY_STRING	webrtc/base/trace_event.h	/^#define TRACE_VALUE_TYPE_COPY_STRING /;"	d
TRACE_VALUE_TYPE_DOUBLE	webrtc/base/trace_event.h	/^#define TRACE_VALUE_TYPE_DOUBLE /;"	d
TRACE_VALUE_TYPE_INT	webrtc/base/trace_event.h	/^#define TRACE_VALUE_TYPE_INT /;"	d
TRACE_VALUE_TYPE_POINTER	webrtc/base/trace_event.h	/^#define TRACE_VALUE_TYPE_POINTER /;"	d
TRACE_VALUE_TYPE_STRING	webrtc/base/trace_event.h	/^#define TRACE_VALUE_TYPE_STRING /;"	d
TRACE_VALUE_TYPE_UINT	webrtc/base/trace_event.h	/^#define TRACE_VALUE_TYPE_UINT /;"	d
TRACE_WARNING	webrtc/base/java/src/org/webrtc/Logging.java	/^    TRACE_WARNING(0x0002),$/;"	e	enum:Logging.TraceLevel	file:
TRANSPARENT_CACHE_NAMES	webrtc/base/diskcache.cc	/^#define TRANSPARENT_CACHE_NAMES /;"	d	file:
TYPED_TEST	webrtc/common_audio/real_fourier_unittest.cc	/^TYPED_TEST(RealFourierTest, SimpleBackwardTransform) {$/;"	f	namespace:webrtc
TYPED_TEST	webrtc/common_audio/real_fourier_unittest.cc	/^TYPED_TEST(RealFourierTest, SimpleForwardTransform) {$/;"	f	namespace:webrtc
TYPE_Float32	webrtc/system_wrappers/include/sort.h	/^  TYPE_Float32,$/;"	e	enum:webrtc::Type
TYPE_Float64	webrtc/system_wrappers/include/sort.h	/^  TYPE_Float64$/;"	e	enum:webrtc::Type
TYPE_INVALID	webrtc/base/safe_conversions_impl.h	/^  TYPE_INVALID = 3     \/\/ Source value is invalid (i.e. NaN).$/;"	e	enum:rtc::internal::RangeCheckResult
TYPE_OVERFLOW	webrtc/base/safe_conversions_impl.h	/^  TYPE_OVERFLOW = 2,   \/\/ Value would underflow.$/;"	e	enum:rtc::internal::RangeCheckResult
TYPE_UNDERFLOW	webrtc/base/safe_conversions_impl.h	/^  TYPE_UNDERFLOW = 1,  \/\/ Value would overflow.$/;"	e	enum:rtc::internal::RangeCheckResult
TYPE_UWord16	webrtc/system_wrappers/include/sort.h	/^  TYPE_UWord16,$/;"	e	enum:webrtc::Type
TYPE_UWord32	webrtc/system_wrappers/include/sort.h	/^  TYPE_UWord32,$/;"	e	enum:webrtc::Type
TYPE_UWord64	webrtc/system_wrappers/include/sort.h	/^  TYPE_UWord64,$/;"	e	enum:webrtc::Type
TYPE_UWord8	webrtc/system_wrappers/include/sort.h	/^  TYPE_UWord8,$/;"	e	enum:webrtc::Type
TYPE_VALID	webrtc/base/safe_conversions_impl.h	/^  TYPE_VALID = 0,      \/\/ Value can be represented by the destination type.$/;"	e	enum:rtc::internal::RangeCheckResult
TYPE_Word16	webrtc/system_wrappers/include/sort.h	/^  TYPE_Word16,$/;"	e	enum:webrtc::Type
TYPE_Word32	webrtc/system_wrappers/include/sort.h	/^  TYPE_Word32,$/;"	e	enum:webrtc::Type
TYPE_Word64	webrtc/system_wrappers/include/sort.h	/^  TYPE_Word64,$/;"	e	enum:webrtc::Type
TYPE_Word8	webrtc/system_wrappers/include/sort.h	/^  TYPE_Word8,$/;"	e	enum:webrtc::Type
TableInfo	webrtc/base/latebindingsymboltable.h	/^  struct TableInfo {$/;"	s	class:rtc::LateBindingSymbolTable
Target	webrtc/base/weak_ptr_unittest.cc	/^struct Target {};$/;"	s	namespace:rtc::__anon74	file:
TargetWithFactory	webrtc/base/weak_ptr_unittest.cc	/^  TargetWithFactory() : factory(this) {}$/;"	f	struct:rtc::__anon74::TargetWithFactory
TargetWithFactory	webrtc/base/weak_ptr_unittest.cc	/^struct TargetWithFactory : public Target {$/;"	s	namespace:rtc::__anon74	file:
Task	webrtc/base/task.cc	/^Task::Task(TaskParent *parent)$/;"	f	class:rtc::Task
Task	webrtc/base/task.h	/^class Task : public TaskParent {$/;"	c	namespace:rtc
TaskAbortTest	webrtc/base/task_unittest.cc	/^  TaskAbortTest() {}$/;"	f	class:rtc::TaskAbortTest
TaskAbortTest	webrtc/base/task_unittest.cc	/^class TaskAbortTest : public sigslot::has_slots<> {$/;"	c	namespace:rtc	file:
TaskContext	webrtc/base/task_queue_gcd.cc	/^  TaskContext(QueueContext* queue_ctx, std::unique_ptr<QueuedTask> task)$/;"	f	struct:rtc::TaskQueue::TaskContext
TaskContext	webrtc/base/task_queue_gcd.cc	/^struct TaskQueue::TaskContext {$/;"	s	class:rtc::TaskQueue	file:
TaskInfo	webrtc/base/task_unittest.cc	/^  struct TaskInfo {$/;"	s	class:rtc::TaskTest	file:
TaskParent	webrtc/base/taskparent.cc	/^TaskParent::TaskParent(Task* derived_instance, TaskParent *parent)$/;"	f	class:rtc::TaskParent
TaskParent	webrtc/base/taskparent.cc	/^TaskParent::TaskParent(TaskRunner *derived_instance)$/;"	f	class:rtc::TaskParent
TaskParent	webrtc/base/taskparent.h	/^class TaskParent {$/;"	c	namespace:rtc
TaskQueue	webrtc/base/task_queue.h	/^class LOCKABLE TaskQueue {$/;"	c	namespace:rtc
TaskQueue	webrtc/base/task_queue_gcd.cc	/^TaskQueue::TaskQueue(const char* queue_name)$/;"	f	class:rtc::TaskQueue
TaskQueue	webrtc/base/task_queue_libevent.cc	/^TaskQueue::TaskQueue(const char* queue_name)$/;"	f	class:rtc::TaskQueue
TaskQueue	webrtc/base/task_queue_win.cc	/^TaskQueue::TaskQueue(const char* queue_name)$/;"	f	class:rtc::TaskQueue
TaskRunner	webrtc/base/taskrunner.cc	/^TaskRunner::TaskRunner()$/;"	f	class:rtc::TaskRunner
TaskRunner	webrtc/base/taskrunner.h	/^class TaskRunner : public TaskParent, public sigslot::has_slots<> {$/;"	c	namespace:rtc
TaskTest	webrtc/base/task_unittest.cc	/^  TaskTest() {}$/;"	f	class:rtc::TaskTest
TaskTest	webrtc/base/task_unittest.cc	/^class TaskTest : public sigslot::has_slots<> {$/;"	c	namespace:rtc	file:
TcpInternal	webrtc/base/socket_unittest.cc	/^void SocketTest::TcpInternal(const IPAddress& loopback, size_t data_size,$/;"	f	class:rtc::SocketTest
TcpSendTest	webrtc/base/virtualsocket_unittest.cc	/^  void TcpSendTest(const SocketAddress& initial_addr) {$/;"	f	class:VirtualSocketServerTest
TcpSendsPacketsInOrderTest	webrtc/base/virtualsocket_unittest.cc	/^  void TcpSendsPacketsInOrderTest(const SocketAddress& initial_addr) {$/;"	f	class:VirtualSocketServerTest
TearDown	webrtc/base/file_unittest.cc	/^  void TearDown() { RemoveFile(path_); }$/;"	f	class:rtc::FileTest
TearDown	webrtc/base/filerotatingstream_unittest.cc	/^  virtual void TearDown() {$/;"	f	class:rtc::MAYBE_CallSessionFileRotatingStreamTest
TearDown	webrtc/base/httpbase_unittest.cc	/^  virtual void TearDown() {$/;"	f	class:rtc::HttpBaseTest
TearDown	webrtc/base/physicalsocketserver_unittest.cc	/^  void TearDown() {$/;"	f	class:rtc::PosixSignalDeliveryTest
TearDown	webrtc/base/signalthread_unittest.cc	/^  virtual void TearDown() {$/;"	f	class:SignalThreadTest
TearDown	webrtc/base/sigslot_unittest.cc	/^  virtual void TearDown() {$/;"	f	class:SigslotMTLockTest
TearDown	webrtc/base/sigslot_unittest.cc	/^  virtual void TearDown() {$/;"	f	class:SigslotSlotTest
TearDown	webrtc/base/virtualsocket_unittest.cc	/^  virtual void TearDown() {$/;"	f	class:VirtualSocketServerTest
TearDown	webrtc/common_audio/resampler/resampler_unittest.cc	/^void ResamplerTest::TearDown() {}$/;"	f	class:webrtc::__anon86::ResamplerTest
TearDown	webrtc/common_audio/vad/vad_unittest.cc	/^void VadTest::TearDown() {}$/;"	f	class:VadTest
TearDown	webrtc/modules/audio_processing/aec/system_delay_unittest.cc	/^void SystemDelayTest::TearDown() {$/;"	f	class:webrtc::__anon162::SystemDelayTest
TearDown	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^void AudioProcessingImplLockTest::TearDown() {$/;"	f	class:webrtc::__anon181::AudioProcessingImplLockTest
TearDown	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^void ApmTest::TearDown() {$/;"	f	class:webrtc::__anon183::ApmTest
TearDown	webrtc/modules/audio_processing/utility/delay_estimator_unittest.cc	/^void DelayEstimatorTest::TearDown() {$/;"	f	class:__anon232::DelayEstimatorTest
TearDownTestCase	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^  static void TearDownTestCase() {$/;"	f	class:webrtc::__anon183::ApmTest
TearDownTestCase	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^  static void TearDownTestCase() {$/;"	f	class:webrtc::__anon183::AudioProcessingTest
TempFilename	webrtc/base/fileutils.h	/^  static std::string TempFilename(const Pathname &dir,$/;"	f	class:rtc::Filesystem
TempFilename	webrtc/base/fileutils_mock.h	/^    std::string TempFilename(const Pathname &dir, const std::string &prefix) {$/;"	f	class:rtc::FakeFileSystem
TempFilename	webrtc/base/unixfilesystem.cc	/^std::string UnixFilesystem::TempFilename(const Pathname &dir,$/;"	f	class:rtc::UnixFilesystem
TempFilename	webrtc/base/win32filesystem.cc	/^std::string Win32Filesystem::TempFilename(const Pathname &dir,$/;"	f	class:rtc::Win32Filesystem
TemplateIsMT	webrtc/base/sigslot_unittest.cc	/^static bool TemplateIsMT(const sigslot::multi_threaded_local* p) {$/;"	f	file:
TemplateIsST	webrtc/base/sigslot_unittest.cc	/^static bool TemplateIsST(const sigslot::single_threaded* p) {$/;"	f	file:
TemporalStructureMode	webrtc/modules/include/module_common_types.h	/^enum TemporalStructureMode {$/;"	g	namespace:webrtc
TernaryTypeOperator	webrtc/base/bind.h	/^struct TernaryTypeOperator {};$/;"	s	namespace:rtc::detail
TernaryTypeOperator	webrtc/base/bind.h	/^struct TernaryTypeOperator<false, IfTrueT, IfFalseT> {$/;"	s	namespace:rtc::detail
TernaryTypeOperator	webrtc/base/bind.h	/^struct TernaryTypeOperator<true, IfTrueT, IfFalseT> {$/;"	s	namespace:rtc::detail
Test1	webrtc/base/type_traits.h	/^struct Test1 {$/;"	s	namespace:rtc::test_has_data_and_size
Test2	webrtc/base/type_traits.h	/^struct Test2 {$/;"	s	namespace:rtc::test_has_data_and_size
Test3	webrtc/base/type_traits.h	/^struct Test3 {$/;"	s	namespace:rtc::test_has_data_and_size
Test4	webrtc/base/type_traits.h	/^class Test4 {$/;"	c	namespace:rtc::test_has_data_and_size
TestASN1TimeToSec	webrtc/base/sslidentity_unittest.cc	/^  void TestASN1TimeToSec() {$/;"	f	class:SSLIdentityExpirationTest
TestAnnotations	webrtc/base/sequenced_task_checker_unittest.cc	/^  TestAnnotations() : test_var_(false) {}$/;"	f	class:rtc::TestAnnotations
TestAnnotations	webrtc/base/sequenced_task_checker_unittest.cc	/^class TestAnnotations {$/;"	c	namespace:rtc	file:
TestAnnotationsOnWrongQueue	webrtc/base/sequenced_task_checker_unittest.cc	/^void TestAnnotationsOnWrongQueue() {$/;"	f	namespace:rtc
TestBasicNetworkManager	webrtc/base/network_unittest.cc	/^class TestBasicNetworkManager : public BasicNetworkManager {$/;"	c	namespace:rtc	file:
TestBindings	webrtc/base/nat_unittest.cc	/^void TestBindings($/;"	f
TestBuf	webrtc/base/buffer_unittest.cc	/^void TestBuf(const Buffer& b1, size_t size, size_t capacity) {$/;"	f	namespace:rtc::__anon7
TestChangingChannelsInt16Interface	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^void ApmTest::TestChangingChannelsInt16Interface($/;"	f	class:webrtc::__anon183::ApmTest
TestChangingForwardChannels	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^void ApmTest::TestChangingForwardChannels($/;"	f	class:webrtc::__anon183::ApmTest
TestChangingReverseChannels	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^void ApmTest::TestChangingReverseChannels($/;"	f	class:webrtc::__anon183::ApmTest
TestClean	webrtc/modules/audio_processing/agc/loudness_histogram_unittest.cc	/^void LoudnessHistogramTest::TestClean() {$/;"	f	class:webrtc::LoudnessHistogramTest
TestClient	webrtc/base/testclient.cc	/^TestClient::TestClient(AsyncPacketSocket* socket)$/;"	f	class:rtc::TestClient
TestClient	webrtc/base/testclient.h	/^class TestClient : public sigslot::has_slots<> {$/;"	c	namespace:rtc
TestClientCloseDuringConnectIPv4	webrtc/base/socket_unittest.cc	/^void SocketTest::TestClientCloseDuringConnectIPv4() {$/;"	f	class:rtc::SocketTest
TestClientCloseDuringConnectIPv6	webrtc/base/socket_unittest.cc	/^void SocketTest::TestClientCloseDuringConnectIPv6() {$/;"	f	class:rtc::SocketTest
TestCloningIdentity	webrtc/base/sslidentity_unittest.cc	/^  void TestCloningIdentity(const SSLIdentity& identity) {$/;"	f	class:SSLIdentityTest
TestCloseInClosedCallbackIPv4	webrtc/base/socket_unittest.cc	/^void SocketTest::TestCloseInClosedCallbackIPv4() {$/;"	f	class:rtc::SocketTest
TestCloseInClosedCallbackIPv6	webrtc/base/socket_unittest.cc	/^void SocketTest::TestCloseInClosedCallbackIPv6() {$/;"	f	class:rtc::SocketTest
TestConfig	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^struct TestConfig {$/;"	s	namespace:webrtc::__anon181	file:
TestConnectFailIPv4	webrtc/base/socket_unittest.cc	/^void SocketTest::TestConnectFailIPv4() {$/;"	f	class:rtc::SocketTest
TestConnectFailIPv6	webrtc/base/socket_unittest.cc	/^void SocketTest::TestConnectFailIPv6() {$/;"	f	class:rtc::SocketTest
TestConnectIPv4	webrtc/base/socket_unittest.cc	/^void SocketTest::TestConnectIPv4() {$/;"	f	class:rtc::SocketTest
TestConnectIPv6	webrtc/base/socket_unittest.cc	/^void SocketTest::TestConnectIPv6() {$/;"	f	class:rtc::SocketTest
TestConnectWhileNotClosedIPv4	webrtc/base/socket_unittest.cc	/^void SocketTest::TestConnectWhileNotClosedIPv4() {$/;"	f	class:rtc::SocketTest
TestConnectWhileNotClosedIPv6	webrtc/base/socket_unittest.cc	/^void SocketTest::TestConnectWhileNotClosedIPv6() {$/;"	f	class:rtc::SocketTest
TestConnectWithClosedSocketIPv4	webrtc/base/socket_unittest.cc	/^void SocketTest::TestConnectWithClosedSocketIPv4() {$/;"	f	class:rtc::SocketTest
TestConnectWithClosedSocketIPv6	webrtc/base/socket_unittest.cc	/^void SocketTest::TestConnectWithClosedSocketIPv6() {$/;"	f	class:rtc::SocketTest
TestConnectWithDnsLookupFailIPv4	webrtc/base/socket_unittest.cc	/^void SocketTest::TestConnectWithDnsLookupFailIPv4() {$/;"	f	class:rtc::SocketTest
TestConnectWithDnsLookupFailIPv6	webrtc/base/socket_unittest.cc	/^void SocketTest::TestConnectWithDnsLookupFailIPv6() {$/;"	f	class:rtc::SocketTest
TestConnectWithDnsLookupIPv4	webrtc/base/socket_unittest.cc	/^void SocketTest::TestConnectWithDnsLookupIPv4() {$/;"	f	class:rtc::SocketTest
TestConnectWithDnsLookupIPv6	webrtc/base/socket_unittest.cc	/^void SocketTest::TestConnectWithDnsLookupIPv6() {$/;"	f	class:rtc::SocketTest
TestConnectivity	webrtc/base/nat_unittest.cc	/^bool TestConnectivity(const SocketAddress& src, const IPAddress& dst) {$/;"	f
TestCopesWithProxy	webrtc/base/autodetectproxy_unittest.cc	/^  void TestCopesWithProxy(const SocketAddress& proxy) {$/;"	f	class:rtc::AutoDetectProxyTest
TestCrtReportHandler	webrtc/base/unittest_main.cc	/^int TestCrtReportHandler(int report_type, char* msg, int* retval) {$/;"	f
TestDefaultRoute	webrtc/base/virtualsocket_unittest.cc	/^  void TestDefaultRoute(const IPAddress& default_route) {$/;"	f	class:VirtualSocketServerTest
TestDigestForFixedCert	webrtc/base/sslidentity_unittest.cc	/^  void TestDigestForFixedCert(const std::string& algorithm,$/;"	f	class:SSLIdentityTest
TestDigestForGeneratedCert	webrtc/base/sslidentity_unittest.cc	/^  void TestDigestForGeneratedCert(const std::string& algorithm,$/;"	f	class:SSLIdentityTest
TestDigestHelper	webrtc/base/sslidentity_unittest.cc	/^  void TestDigestHelper(DigestType digest,$/;"	f	class:SSLIdentityTest
TestDone	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  bool TestDone() {$/;"	f	class:webrtc::__anon181::AudioProcessingImplLockTest	file:
TestEchoServer	webrtc/base/testechoserver.h	/^  TestEchoServer(Thread* thread, const SocketAddress& addr)$/;"	f	class:rtc::TestEchoServer
TestEchoServer	webrtc/base/testechoserver.h	/^class TestEchoServer : public sigslot::has_slots<> {$/;"	c	namespace:rtc
TestExpireTime	webrtc/base/sslidentity_unittest.cc	/^  void TestExpireTime(int times) {$/;"	f	class:SSLIdentityExpirationTest
TestFilters	webrtc/base/nat_unittest.cc	/^void TestFilters($/;"	f
TestGenerator	webrtc/base/thread_unittest.cc	/^  TestGenerator() : last(0), count(0) {}$/;"	f	class:TestGenerator
TestGenerator	webrtc/base/thread_unittest.cc	/^class TestGenerator {$/;"	c	file:
TestGetSetOptionsIPv4	webrtc/base/socket_unittest.cc	/^void SocketTest::TestGetSetOptionsIPv4() {$/;"	f	class:rtc::SocketTest
TestGetSetOptionsIPv6	webrtc/base/socket_unittest.cc	/^void SocketTest::TestGetSetOptionsIPv6() {$/;"	f	class:rtc::SocketTest
TestGetSignatureDigestAlgorithm	webrtc/base/sslidentity_unittest.cc	/^  void TestGetSignatureDigestAlgorithm() {$/;"	f	class:SSLIdentityTest
TestHandshake	webrtc/base/ssladapter_unittest.cc	/^  void TestHandshake(bool expect_success) {$/;"	f	class:SSLAdapterTestBase
TestHandshake	webrtc/base/sslstreamadapter_unittest.cc	/^  void TestHandshake(bool expect_success = true) {$/;"	f	class:SSLStreamAdapterTestBase
TestHandshakeWithDelayedIdentity	webrtc/base/sslstreamadapter_unittest.cc	/^  void TestHandshakeWithDelayedIdentity(bool valid_identity) {$/;"	f	class:SSLStreamAdapterTestBase
TestInvalidParameterHandler	webrtc/base/unittest_main.cc	/^void TestInvalidParameterHandler(const wchar_t* expression,$/;"	f
TestMessage	webrtc/base/thread_unittest.cc	/^  explicit TestMessage(int v) : value(v) {}$/;"	f	struct:TestMessage
TestMessage	webrtc/base/thread_unittest.cc	/^struct TestMessage : public MessageData {$/;"	s	file:
TestModOps	webrtc/base/mod_ops_unittest.cc	/^class TestModOps : public ::testing::Test {$/;"	c	namespace:webrtc	file:
TestPhysicalInternal	webrtc/base/nat_unittest.cc	/^void TestPhysicalInternal(const SocketAddress& int_addr) {$/;"	f
TestPostTaskAndReply	webrtc/base/task_queue_unittest.cc	/^void TestPostTaskAndReply(TaskQueue* work_queue,$/;"	f	namespace:rtc
TestPureCallHandler	webrtc/base/unittest_main.cc	/^void TestPureCallHandler() {$/;"	f
TestRandomGenerator	webrtc/base/helpers.cc	/^  TestRandomGenerator() : seed_(7) {$/;"	f	class:rtc::TestRandomGenerator
TestRandomGenerator	webrtc/base/helpers.cc	/^class TestRandomGenerator : public RandomGenerator {$/;"	c	namespace:rtc	file:
TestRecv	webrtc/base/nat_unittest.cc	/^void TestRecv($/;"	f
TestSend	webrtc/base/nat_unittest.cc	/^void TestSend($/;"	f
TestServerCloseDuringConnectIPv4	webrtc/base/socket_unittest.cc	/^void SocketTest::TestServerCloseDuringConnectIPv4() {$/;"	f	class:rtc::SocketTest
TestServerCloseDuringConnectIPv6	webrtc/base/socket_unittest.cc	/^void SocketTest::TestServerCloseDuringConnectIPv6() {$/;"	f	class:rtc::SocketTest
TestServerCloseIPv4	webrtc/base/socket_unittest.cc	/^void SocketTest::TestServerCloseIPv4() {$/;"	f	class:rtc::SocketTest
TestServerCloseIPv6	webrtc/base/socket_unittest.cc	/^void SocketTest::TestServerCloseIPv6() {$/;"	f	class:rtc::SocketTest
TestSingleFlowControlCallbackIPv4	webrtc/base/socket_unittest.cc	/^void SocketTest::TestSingleFlowControlCallbackIPv4() {$/;"	f	class:rtc::SocketTest
TestSingleFlowControlCallbackIPv6	webrtc/base/socket_unittest.cc	/^void SocketTest::TestSingleFlowControlCallbackIPv6() {$/;"	f	class:rtc::SocketTest
TestSocketRecvTimestampIPv4	webrtc/base/socket_unittest.cc	/^void SocketTest::TestSocketRecvTimestampIPv4() {$/;"	f	class:rtc::SocketTest
TestSocketRecvTimestampIPv6	webrtc/base/socket_unittest.cc	/^void SocketTest::TestSocketRecvTimestampIPv6() {$/;"	f	class:rtc::SocketTest
TestSocketServerWaitIPv4	webrtc/base/socket_unittest.cc	/^void SocketTest::TestSocketServerWaitIPv4() {$/;"	f	class:rtc::SocketTest
TestSocketServerWaitIPv6	webrtc/base/socket_unittest.cc	/^void SocketTest::TestSocketServerWaitIPv6() {$/;"	f	class:rtc::SocketTest
TestStatistics	webrtc/base/event_tracer_unittest.cc	/^  TestStatistics() : events_logged_(0) {$/;"	f	class:__anon13::TestStatistics
TestStatistics	webrtc/base/event_tracer_unittest.cc	/^class TestStatistics {$/;"	c	namespace:__anon13	file:
TestStats	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^void TestStats(const AudioProcessing::Statistic& test,$/;"	f	namespace:webrtc::__anon183
TestStream	webrtc/base/stream_unittest.cc	/^  TestStream() : pos_(0) { }$/;"	f	class:rtc::TestStream
TestStream	webrtc/base/stream_unittest.cc	/^class TestStream : public StreamInterface {$/;"	c	namespace:rtc	file:
TestTcpIPv4	webrtc/base/socket_unittest.cc	/^void SocketTest::TestTcpIPv4() {$/;"	f	class:rtc::SocketTest
TestTcpIPv6	webrtc/base/socket_unittest.cc	/^void SocketTest::TestTcpIPv6() {$/;"	f	class:rtc::SocketTest
TestTcpInternal	webrtc/base/testclient_unittest.cc	/^void TestTcpInternal(const SocketAddress& loopback) {$/;"	f
TestTimestampFilter	webrtc/base/timestampaligner_unittest.cc	/^void TestTimestampFilter(double rel_freq_error) {$/;"	f	namespace:rtc::__anon71
TestTmToSeconds	webrtc/base/timeutils_unittest.cc	/^  void TestTmToSeconds(int times) {$/;"	f	class:rtc::TmToSeconds
TestTransfer	webrtc/base/ssladapter_unittest.cc	/^  void TestTransfer(const std::string& message) {$/;"	f	class:SSLAdapterTestBase
TestUdpIPv4	webrtc/base/socket_unittest.cc	/^void SocketTest::TestUdpIPv4() {$/;"	f	class:rtc::SocketTest
TestUdpIPv6	webrtc/base/socket_unittest.cc	/^void SocketTest::TestUdpIPv6() {$/;"	f	class:rtc::SocketTest
TestUdpInternal	webrtc/base/testclient_unittest.cc	/^void TestUdpInternal(const SocketAddress& loopback) {$/;"	f
TestUdpReadyToSendIPv4	webrtc/base/socket_unittest.cc	/^void SocketTest::TestUdpReadyToSendIPv4() {$/;"	f	class:rtc::SocketTest
TestUdpReadyToSendIPv6	webrtc/base/socket_unittest.cc	/^void SocketTest::TestUdpReadyToSendIPv6() {$/;"	f	class:rtc::SocketTest
TestVirtualInternal	webrtc/base/nat_unittest.cc	/^void TestVirtualInternal(int family) {$/;"	f
TestVirtualSocketServer	webrtc/base/nat_unittest.cc	/^  explicit TestVirtualSocketServer(SocketServer* ss)$/;"	f	class:__anon33::TestVirtualSocketServer
TestVirtualSocketServer	webrtc/base/nat_unittest.cc	/^class TestVirtualSocketServer : public VirtualSocketServer {$/;"	c	namespace:__anon33	file:
TestVolumeCallbacks	webrtc/modules/audio_processing/agc/agc_manager_direct_unittest.cc	/^  TestVolumeCallbacks() : volume_(0) {}$/;"	f	class:webrtc::__anon170::TestVolumeCallbacks
TestVolumeCallbacks	webrtc/modules/audio_processing/agc/agc_manager_direct_unittest.cc	/^class TestVolumeCallbacks : public VolumeCallbacks {$/;"	c	namespace:webrtc::__anon170	file:
TestWindow	webrtc/base/win32window_unittest.cc	/^  TestWindow() : destroyed_(false) { memset(&msg_, 0, sizeof(msg_)); }$/;"	f	class:TestWindow
TestWindow	webrtc/base/win32window_unittest.cc	/^class TestWindow : public rtc::Win32Window {$/;"	c	file:
Thread	webrtc/base/thread.cc	/^Thread::Thread() : Thread(SocketServer::CreateDefault()) {}$/;"	f	class:rtc::Thread
Thread	webrtc/base/thread.cc	/^Thread::Thread(SocketServer* ss)$/;"	f	class:rtc::Thread
Thread	webrtc/base/thread.cc	/^Thread::Thread(std::unique_ptr<SocketServer> ss)$/;"	f	class:rtc::Thread
Thread	webrtc/base/thread.h	/^class LOCKABLE Thread : public MessageQueue {$/;"	c	namespace:rtc
ThreadAnnotateTest	webrtc/base/thread_checker_unittest.cc	/^class ThreadAnnotateTest {$/;"	c	namespace:rtc	file:
ThreadChecker	webrtc/base/java/src/org/webrtc/ThreadUtils.java	/^  public static class ThreadChecker {$/;"	c	class:ThreadUtils
ThreadChecker	webrtc/base/thread_checker.h	/^class LOCKABLE ThreadChecker : public ThreadCheckerDoNothing {$/;"	c	namespace:rtc
ThreadChecker	webrtc/base/thread_checker.h	/^class LOCKABLE ThreadChecker : public ThreadCheckerImpl {$/;"	c	namespace:rtc
ThreadCheckerClass	webrtc/base/thread_checker_unittest.cc	/^  ThreadCheckerClass() {}$/;"	f	class:rtc::__anon69::ThreadCheckerClass
ThreadCheckerClass	webrtc/base/thread_checker_unittest.cc	/^class ThreadCheckerClass : public ThreadChecker {$/;"	c	namespace:rtc::__anon69	file:
ThreadCheckerDoNothing	webrtc/base/thread_checker.h	/^class ThreadCheckerDoNothing {$/;"	c	namespace:rtc
ThreadCheckerImpl	webrtc/base/thread_checker_impl.cc	/^ThreadCheckerImpl::ThreadCheckerImpl() : valid_thread_(CurrentThreadRef()) {$/;"	f	class:rtc::ThreadCheckerImpl
ThreadCheckerImpl	webrtc/base/thread_checker_impl.h	/^class ThreadCheckerImpl {$/;"	c	namespace:rtc
ThreadDestroyed	webrtc/base/asyncinvoker.cc	/^void GuardedAsyncInvoker::ThreadDestroyed() {$/;"	f	class:rtc::GuardedAsyncInvoker
ThreadFunc	webrtc/base/criticalsection_unittest.cc	/^  static bool ThreadFunc(void* param) {$/;"	f	class:rtc::PerfTestThread	file:
ThreadInit	webrtc/base/thread.cc	/^struct ThreadInit {$/;"	s	namespace:rtc	file:
ThreadMain	webrtc/base/task_queue_libevent.cc	/^bool TaskQueue::ThreadMain(void* context) {$/;"	f	class:rtc::TaskQueue
ThreadMain	webrtc/base/task_queue_win.cc	/^bool TaskQueue::ThreadMain(void* context) {$/;"	f	class:rtc::TaskQueue
ThreadManager	webrtc/base/thread.cc	/^ThreadManager::ThreadManager() {$/;"	f	class:rtc::ThreadManager
ThreadManager	webrtc/base/thread.h	/^class ThreadManager {$/;"	c	namespace:rtc
ThreadPriority	webrtc/base/platform_thread.h	/^enum ThreadPriority {$/;"	g	namespace:rtc
ThreadRunFunction	webrtc/base/platform_thread.h	/^typedef bool (*ThreadRunFunction)(void*);$/;"	t	namespace:rtc
ThreadSafe	webrtc/base/thread_annotations_unittest.cc	/^  ThreadSafe() {$/;"	f	class:__anon68::ThreadSafe
ThreadSafe	webrtc/base/thread_annotations_unittest.cc	/^class ThreadSafe {$/;"	c	namespace:__anon68	file:
ThreadStartupData	webrtc/base/task_queue_win.cc	/^struct ThreadStartupData {$/;"	s	namespace:rtc::__anon67	file:
ThreadTask	webrtc/base/rate_limiter_unittest.cc	/^  explicit ThreadTask(RateLimiter* rate_limiter)$/;"	f	class:webrtc::ThreadTask
ThreadTask	webrtc/base/rate_limiter_unittest.cc	/^class ThreadTask {$/;"	c	namespace:webrtc	file:
ThreadUnsafeOneTimeEvent	webrtc/base/onetimeevent.h	/^  ThreadUnsafeOneTimeEvent() {}$/;"	f	class:webrtc::ThreadUnsafeOneTimeEvent
ThreadUnsafeOneTimeEvent	webrtc/base/onetimeevent.h	/^class ThreadUnsafeOneTimeEvent {$/;"	c	namespace:webrtc
ThreadUtils	webrtc/base/java/src/org/webrtc/ThreadUtils.java	/^public class ThreadUtils {$/;"	c
ThreeBandFilterBank	webrtc/modules/audio_processing/three_band_filter_bank.cc	/^ThreeBandFilterBank::ThreeBandFilterBank(size_t length)$/;"	f	class:webrtc::ThreeBandFilterBank
ThreeBandsAnalysis	webrtc/modules/audio_processing/splitting_filter.cc	/^void SplittingFilter::ThreeBandsAnalysis(const IFChannelBuffer* data,$/;"	f	class:webrtc::SplittingFilter
ThreeBandsSynthesis	webrtc/modules/audio_processing/splitting_filter.cc	/^void SplittingFilter::ThreeBandsSynthesis(const IFChannelBuffer* bands,$/;"	f	class:webrtc::SplittingFilter
TickIntervalStats	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^  TickIntervalStats() : min(std::numeric_limits<int64_t>::max()) {}$/;"	f	struct:webrtc::test::TickIntervalStats
TickIntervalStats	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^struct TickIntervalStats {$/;"	s	namespace:webrtc::test
Time	webrtc/base/ratetracker.cc	/^int64_t RateTracker::Time() const {$/;"	f	class:rtc::RateTracker
Time	webrtc/base/ratetracker_unittest.cc	/^  virtual int64_t Time() const { return time_; }$/;"	f	class:rtc::RateTrackerForTest
Time	webrtc/base/timeutils.h	/^inline int64_t Time() {$/;"	f	namespace:rtc
Time32	webrtc/base/timeutils.cc	/^uint32_t Time32() {$/;"	f	namespace:rtc
TimeAfter	webrtc/base/timeutils.cc	/^int64_t TimeAfter(int64_t elapsed) {$/;"	f	namespace:rtc
TimeCallback	webrtc/base/opensslstreamadapter.cc	/^static void TimeCallback(const SSL* ssl, struct timeval* out_clock) {$/;"	f	namespace:rtc
TimeDelta	webrtc/base/timedelta.h	/^  TimeDelta() : delta_(0) {}$/;"	f	class:rtc::TimeDelta
TimeDelta	webrtc/base/timedelta.h	/^  constexpr explicit TimeDelta(int64_t delta_ns) : delta_(delta_ns) {}$/;"	f	class:rtc::TimeDelta
TimeDelta	webrtc/base/timedelta.h	/^class TimeDelta {$/;"	c	namespace:rtc
TimeDiff	webrtc/base/timeutils.cc	/^int64_t TimeDiff(int64_t later, int64_t earlier) {$/;"	f	namespace:rtc
TimeDiff32	webrtc/base/timeutils.cc	/^int32_t TimeDiff32(uint32_t later, uint32_t earlier) {$/;"	f	namespace:rtc
TimeMicros	webrtc/base/timeutils.cc	/^uint64_t TimeMicros() {$/;"	f	namespace:rtc
TimeMillis	webrtc/base/timeutils.cc	/^int64_t TimeMillis() {$/;"	f	namespace:rtc
TimeNanos	webrtc/base/fakeclock.cc	/^uint64_t FakeClock::TimeNanos() const {$/;"	f	class:rtc::FakeClock
TimeNanos	webrtc/base/timeutils.cc	/^uint64_t TimeNanos() {$/;"	f	namespace:rtc
TimeSince	webrtc/base/timeutils.h	/^inline int64_t TimeSince(int64_t earlier) {$/;"	f	namespace:rtc
TimeSinceFirstPacketInMs	webrtc/common_types.h	/^  int64_t TimeSinceFirstPacketInMs(int64_t now_ms) const {$/;"	f	struct:webrtc::RtcpPacketTypeCounter
TimeSinceFirstPacketInMs	webrtc/common_types.h	/^  int64_t TimeSinceFirstPacketInMs(int64_t now_ms) const {$/;"	f	struct:webrtc::StreamDataCounters
TimeSinceLastDetectionInSeconds	webrtc/modules/audio_processing/typing_detection.cc	/^int TypingDetection::TimeSinceLastDetectionInSeconds() {$/;"	f	class:webrtc::TypingDetection
TimeToFrequencyDomain	webrtc/modules/audio_processing/aecm/aecm_core_c.cc	/^static int TimeToFrequencyDomain(AecmCore* aecm,$/;"	f	file:
TimeToFrequencyDomain	webrtc/modules/audio_processing/aecm/aecm_core_mips.cc	/^static int TimeToFrequencyDomain(AecmCore* aecm,$/;"	f	file:
TimeUTCMicros	webrtc/base/timeutils.cc	/^int64_t TimeUTCMicros() {$/;"	f	namespace:rtc
TimeUntil	webrtc/base/timeutils.h	/^inline int64_t TimeUntil(uint64_t later) {$/;"	f	namespace:rtc
TimedOut	webrtc/base/task.cc	/^bool Task::TimedOut() {$/;"	f	class:rtc::Task
TimedThreadApiProcessor	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^  TimedThreadApiProcessor(ProcessorType processor_type,$/;"	f	class:webrtc::__anon182::TimedThreadApiProcessor
TimedThreadApiProcessor	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^class TimedThreadApiProcessor {$/;"	c	namespace:webrtc::__anon182	file:
TimeoutChangeTest	webrtc/base/task_unittest.cc	/^  TimeoutChangeTest()$/;"	f	class:rtc::TimeoutChangeTest
TimeoutChangeTest	webrtc/base/task_unittest.cc	/^class TimeoutChangeTest : public sigslot::has_slots<> {$/;"	c	namespace:rtc	file:
TimerEvent	webrtc/base/task_queue_libevent.cc	/^  explicit TimerEvent(std::unique_ptr<QueuedTask> task)$/;"	f	struct:rtc::__anon65::TimerEvent
TimerEvent	webrtc/base/task_queue_libevent.cc	/^struct TimerEvent {$/;"	s	namespace:rtc::__anon65	file:
TimestampAligner	webrtc/base/timestampaligner.cc	/^TimestampAligner::TimestampAligner()$/;"	f	class:rtc::TimestampAligner
TimestampAligner	webrtc/base/timestampaligner.h	/^class TimestampAligner {$/;"	c	namespace:rtc
TimestampAlignerForTest	webrtc/base/timestampaligner_unittest.cc	/^class TimestampAlignerForTest : public TimestampAligner {$/;"	c	namespace:rtc::__anon71	file:
TimestampExtrapolator	webrtc/system_wrappers/include/timestamp_extrapolator.h	/^class TimestampExtrapolator$/;"	c	namespace:webrtc
TimestampWrapAroundHandler	webrtc/base/timeutils.cc	/^TimestampWrapAroundHandler::TimestampWrapAroundHandler()$/;"	f	class:rtc::TimestampWrapAroundHandler
TimestampWrapAroundHandler	webrtc/base/timeutils.h	/^class TimestampWrapAroundHandler {$/;"	c	namespace:rtc
TimestampWrapAroundHandlerTest	webrtc/base/timeutils_unittest.cc	/^  TimestampWrapAroundHandlerTest() {}$/;"	f	class:rtc::TimestampWrapAroundHandlerTest
TimestampWrapAroundHandlerTest	webrtc/base/timeutils_unittest.cc	/^class TimestampWrapAroundHandlerTest : public testing::Test {$/;"	c	namespace:rtc	file:
TmToSeconds	webrtc/base/timeutils.cc	/^int64_t TmToSeconds(const std::tm& tm) {$/;"	f	namespace:rtc
TmToSeconds	webrtc/base/timeutils_unittest.cc	/^  TmToSeconds() {$/;"	f	class:rtc::TmToSeconds
TmToSeconds	webrtc/base/timeutils_unittest.cc	/^class TmToSeconds : public testing::Test {$/;"	c	namespace:rtc	file:
Tmp0	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  double Tmp0[MAXFFTSIZE];$/;"	m	struct:__anon133
Tmp1	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  double Tmp1[MAXFFTSIZE];$/;"	m	struct:__anon133
Tmp2	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  double Tmp2[MAXFFTSIZE];$/;"	m	struct:__anon133
Tmp3	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  double Tmp3[MAXFFTSIZE];$/;"	m	struct:__anon133
ToDER	webrtc/base/opensslidentity.cc	/^void OpenSSLCertificate::ToDER(Buffer* der_buffer) const {$/;"	f	class:rtc::OpenSSLCertificate
ToDualStackSockAddrStorage	webrtc/base/socketaddress.cc	/^size_t SocketAddress::ToDualStackSockAddrStorage(sockaddr_storage *addr) const {$/;"	f	class:rtc::SocketAddress
ToMicroseconds	webrtc/base/timedelta.h	/^  int64_t ToMicroseconds() const { return delta_ \/ kNumNanosecsPerMicrosec; }$/;"	f	class:rtc::TimeDelta
ToMilliseconds	webrtc/base/timedelta.h	/^  int64_t ToMilliseconds() const { return delta_ \/ kNumNanosecsPerMillisec; }$/;"	f	class:rtc::TimeDelta
ToMs	webrtc/system_wrappers/include/ntp_time.h	/^  int64_t ToMs() const { return Clock::NtpToMs(seconds_, fractions_); }$/;"	f	class:webrtc::NtpTime
ToNanoseconds	webrtc/base/timedelta.h	/^  int64_t ToNanoseconds() const { return delta_; }$/;"	f	class:rtc::TimeDelta
ToPEM	webrtc/base/rtccertificate.cc	/^RTCCertificatePEM RTCCertificate::ToPEM() const {$/;"	f	class:rtc::RTCCertificate
ToPEMString	webrtc/base/opensslidentity.cc	/^std::string OpenSSLCertificate::ToPEMString() const {$/;"	f	class:rtc::OpenSSLCertificate
ToSeconds	webrtc/base/timedelta.h	/^  int64_t ToSeconds() const { return delta_ \/ kNumNanosecsPerSec; }$/;"	f	class:rtc::TimeDelta
ToSensitiveString	webrtc/base/ipaddress.cc	/^std::string IPAddress::ToSensitiveString() const {$/;"	f	class:rtc::IPAddress
ToSensitiveString	webrtc/base/socketaddress.cc	/^std::string SocketAddress::ToSensitiveString() const {$/;"	f	class:rtc::SocketAddress
ToSockAddr	webrtc/base/socketaddress.cc	/^void SocketAddress::ToSockAddr(sockaddr_in* saddr) const {$/;"	f	class:rtc::SocketAddress
ToSockAddrStorage	webrtc/base/socketaddress.cc	/^size_t SocketAddress::ToSockAddrStorage(sockaddr_storage* addr) const {$/;"	f	class:rtc::SocketAddress
ToSockAddrStorageHelper	webrtc/base/socketaddress.cc	/^static size_t ToSockAddrStorageHelper(sockaddr_storage* addr,$/;"	f	namespace:rtc
ToString	webrtc/base/httpcommon.cc	/^const char* ToString(HttpHeader header) {$/;"	f	namespace:rtc
ToString	webrtc/base/httpcommon.cc	/^const char* ToString(HttpVerb verb) {$/;"	f	namespace:rtc
ToString	webrtc/base/httpcommon.cc	/^const char* ToString(HttpVersion version) {$/;"	f	namespace:rtc
ToString	webrtc/base/ipaddress.cc	/^std::string IPAddress::ToString() const {$/;"	f	class:rtc::IPAddress
ToString	webrtc/base/location.cc	/^std::string Location::ToString() const {$/;"	f	class:rtc::Location
ToString	webrtc/base/network.cc	/^std::string Network::ToString() const {$/;"	f	class:rtc::Network
ToString	webrtc/base/socketaddress.cc	/^std::string SocketAddress::ToString() const {$/;"	f	class:rtc::SocketAddress
ToString	webrtc/base/sslfingerprint.cc	/^std::string SSLFingerprint::ToString() const {$/;"	f	class:rtc::SSLFingerprint
ToString	webrtc/base/stringencode.h	/^static bool ToString(const T &t, std::string* s) {$/;"	f	namespace:rtc
ToString	webrtc/base/stringencode.h	/^static inline std::string ToString(const T& val) {$/;"	f	namespace:rtc
ToString	webrtc/base/window.h	/^inline std::string ToString(const WindowId& window) {$/;"	f	namespace:rtc
ToString	webrtc/config.cc	/^std::string FlexfecConfig::ToString() const {$/;"	f	class:webrtc::FlexfecConfig
ToString	webrtc/config.cc	/^std::string NackConfig::ToString() const {$/;"	f	class:webrtc::NackConfig
ToString	webrtc/config.cc	/^std::string RtpExtension::ToString() const {$/;"	f	class:webrtc::RtpExtension
ToString	webrtc/config.cc	/^std::string UlpfecConfig::ToString() const {$/;"	f	class:webrtc::UlpfecConfig
ToString	webrtc/config.cc	/^std::string VideoEncoderConfig::ToString() const {$/;"	f	class:webrtc::VideoEncoderConfig
ToString	webrtc/config.cc	/^std::string VideoStream::ToString() const {$/;"	f	class:webrtc::VideoStream
ToString	webrtc/modules/audio_processing/beamformer/matrix.h	/^  std::string ToString() const {$/;"	f	class:webrtc::Matrix
ToString	webrtc/modules/audio_processing/level_controller/level_controller.cc	/^std::string LevelController::ToString($/;"	f	class:webrtc::LevelController
ToUInt64	webrtc/base/win32.h	/^inline uint64_t ToUInt64(const FILETIME& ft) {$/;"	f	namespace:rtc
ToUtf16	webrtc/base/macutils.cc	/^bool ToUtf16(const std::string& str8, CFStringRef* str16) {$/;"	f	namespace:rtc
ToUtf16	webrtc/base/win32.h	/^inline std::wstring ToUtf16(const char* utf8, size_t len) {$/;"	f	namespace:rtc
ToUtf16	webrtc/base/win32.h	/^inline std::wstring ToUtf16(const std::string& str) {$/;"	f	namespace:rtc
ToUtf16	webrtc/system_wrappers/include/utf_util_win.h	/^inline std::wstring ToUtf16(const char* utf8, size_t len) {$/;"	f	namespace:webrtc
ToUtf16	webrtc/system_wrappers/include/utf_util_win.h	/^inline std::wstring ToUtf16(const std::string& str) {$/;"	f	namespace:webrtc
ToUtf8	webrtc/base/macutils.cc	/^bool ToUtf8(const CFStringRef str16, std::string* str8) {$/;"	f	namespace:rtc
ToUtf8	webrtc/base/win32.h	/^inline std::string ToUtf8(const std::wstring& wstr) {$/;"	f	namespace:rtc
ToUtf8	webrtc/base/win32.h	/^inline std::string ToUtf8(const wchar_t* wide) {$/;"	f	namespace:rtc
ToUtf8	webrtc/base/win32.h	/^inline std::string ToUtf8(const wchar_t* wide, size_t len) {$/;"	f	namespace:rtc
ToUtf8	webrtc/system_wrappers/include/utf_util_win.h	/^inline std::string ToUtf8(const std::wstring& wstr) {$/;"	f	namespace:webrtc
ToUtf8	webrtc/system_wrappers/include/utf_util_win.h	/^inline std::string ToUtf8(const wchar_t* wide) {$/;"	f	namespace:webrtc
ToUtf8	webrtc/system_wrappers/include/utf_util_win.h	/^inline std::string ToUtf8(const wchar_t* wide, size_t len) {$/;"	f	namespace:webrtc
TokenIntegrityLevel	webrtc/base/win32.h	/^#define TokenIntegrityLevel /;"	d
Tos	webrtc/base/winping.h	/^    UCHAR   Tos;                \/\/ Type Of Service$/;"	m	struct:rtc::ip_option_information
TotalBytes	webrtc/common_types.h	/^  size_t TotalBytes() const {$/;"	f	struct:webrtc::RtpPacketCounter
TotalChannelsFromLayout	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^size_t TotalChannelsFromLayout(AudioProcessing::ChannelLayout layout) {$/;"	f	namespace:webrtc::__anon183
TotalSampleCount	webrtc/base/ratetracker.cc	/^size_t RateTracker::TotalSampleCount() const {$/;"	f	class:rtc::RateTracker
Trace	webrtc/modules/audio_processing/beamformer/matrix.h	/^  T Trace() {$/;"	f	class:webrtc::Matrix
Trace	webrtc/system_wrappers/include/trace.h	/^class Trace {$/;"	c	namespace:webrtc
TraceArg	webrtc/base/event_tracer.cc	/^  struct TraceArg {$/;"	s	class:rtc::tracing::__anon12::final	file:
TraceArgValue	webrtc/base/event_tracer.cc	/^    union TraceArgValue {$/;"	u	struct:rtc::tracing::__anon12::final::TraceArg	file:
TraceArgValueAsString	webrtc/base/event_tracer.cc	/^  static std::string TraceArgValueAsString(TraceArg arg) {$/;"	f	class:rtc::tracing::__anon12::final	file:
TraceCallback	webrtc/common_types.h	/^  TraceCallback() {}$/;"	f	class:webrtc::TraceCallback
TraceCallback	webrtc/common_types.h	/^class TraceCallback {$/;"	c	namespace:webrtc
TraceCheck	webrtc/system_wrappers/source/trace_impl.cc	/^bool TraceImpl::TraceCheck(const TraceLevel level) const {$/;"	f	class:webrtc::TraceImpl
TraceEndOnScopeClose	webrtc/base/trace_event.h	/^  TraceEndOnScopeClose() : p_data_(NULL) {}$/;"	f	class:webrtc::trace_event_internal::TraceEndOnScopeClose
TraceEndOnScopeClose	webrtc/base/trace_event.h	/^class TraceEndOnScopeClose {$/;"	c	namespace:webrtc::trace_event_internal
TraceEvent	webrtc/base/event_tracer.cc	/^  struct TraceEvent {$/;"	s	class:rtc::tracing::__anon12::final	file:
TraceID	webrtc/base/trace_event.h	/^  explicit TraceID(ForceMangle id, unsigned char* flags) : data_(id.data()) {$/;"	f	class:webrtc::trace_event_internal::TraceID
TraceID	webrtc/base/trace_event.h	/^  explicit TraceID(const void* id, unsigned char* flags)$/;"	f	class:webrtc::trace_event_internal::TraceID
TraceID	webrtc/base/trace_event.h	/^  explicit TraceID(int id, unsigned char* flags)$/;"	f	class:webrtc::trace_event_internal::TraceID
TraceID	webrtc/base/trace_event.h	/^  explicit TraceID(long id, unsigned char* flags)$/;"	f	class:webrtc::trace_event_internal::TraceID
TraceID	webrtc/base/trace_event.h	/^  explicit TraceID(long long id, unsigned char* flags)$/;"	f	class:webrtc::trace_event_internal::TraceID
TraceID	webrtc/base/trace_event.h	/^  explicit TraceID(short id, unsigned char* flags)$/;"	f	class:webrtc::trace_event_internal::TraceID
TraceID	webrtc/base/trace_event.h	/^  explicit TraceID(signed char id, unsigned char* flags)$/;"	f	class:webrtc::trace_event_internal::TraceID
TraceID	webrtc/base/trace_event.h	/^  explicit TraceID(unsigned char id, unsigned char* flags)$/;"	f	class:webrtc::trace_event_internal::TraceID
TraceID	webrtc/base/trace_event.h	/^  explicit TraceID(unsigned int id, unsigned char* flags)$/;"	f	class:webrtc::trace_event_internal::TraceID
TraceID	webrtc/base/trace_event.h	/^  explicit TraceID(unsigned long id, unsigned char* flags)$/;"	f	class:webrtc::trace_event_internal::TraceID
TraceID	webrtc/base/trace_event.h	/^  explicit TraceID(unsigned long long id, unsigned char* flags)$/;"	f	class:webrtc::trace_event_internal::TraceID
TraceID	webrtc/base/trace_event.h	/^  explicit TraceID(unsigned short id, unsigned char* flags)$/;"	f	class:webrtc::trace_event_internal::TraceID
TraceID	webrtc/base/trace_event.h	/^class TraceID {$/;"	c	namespace:webrtc::trace_event_internal
TraceImpl	webrtc/system_wrappers/source/trace_impl.cc	/^TraceImpl::TraceImpl()$/;"	f	class:webrtc::TraceImpl
TraceImpl	webrtc/system_wrappers/source/trace_impl.h	/^class TraceImpl : public Trace {$/;"	c	namespace:webrtc
TraceLevel	webrtc/base/java/src/org/webrtc/Logging.java	/^    TraceLevel(int level) {$/;"	m	class:Logging.TraceLevel
TraceLevel	webrtc/base/java/src/org/webrtc/Logging.java	/^  public enum TraceLevel {$/;"	g	class:Logging
TraceLevel	webrtc/common_types.h	/^enum TraceLevel {$/;"	g	namespace:webrtc
TraceModule	webrtc/common_types.h	/^enum TraceModule {$/;"	g	namespace:webrtc
TracePosix	webrtc/system_wrappers/source/trace_posix.cc	/^TracePosix::TracePosix()$/;"	f	class:webrtc::TracePosix
TracePosix	webrtc/system_wrappers/source/trace_posix.h	/^class TracePosix : public TraceImpl {$/;"	c	namespace:webrtc
TraceStringWithCopy	webrtc/base/trace_event.h	/^  explicit TraceStringWithCopy(const char* str) : str_(str) {}$/;"	f	class:webrtc::trace_event_internal::TraceStringWithCopy
TraceStringWithCopy	webrtc/base/trace_event.h	/^class TraceStringWithCopy {$/;"	c	namespace:webrtc::trace_event_internal
TraceValueUnion	webrtc/base/trace_event.h	/^union TraceValueUnion {$/;"	u	namespace:webrtc::trace_event_internal
Traits	webrtc/base/stringutils.h	/^struct Traits {$/;"	s	namespace:rtc
Traits	webrtc/base/stringutils.h	/^struct Traits<char> {$/;"	s	namespace:rtc
Traits	webrtc/base/stringutils.h	/^struct Traits<wchar_t> {$/;"	s	namespace:rtc
TransEntry	webrtc/base/natserver.cc	/^NATServer::TransEntry::TransEntry($/;"	f	class:rtc::NATServer::TransEntry
TransEntry	webrtc/base/natserver.h	/^  struct TransEntry {$/;"	s	class:rtc::NATServer
Transform	webrtc/base/stringencode.h	/^typedef size_t (*Transform)(char * buffer, size_t buflen,$/;"	t	namespace:rtc
TransformAdapter	webrtc/base/transformadapter.cc	/^TransformAdapter::TransformAdapter(StreamInterface * stream,$/;"	f	class:rtc::TransformAdapter
TransformAdapter	webrtc/base/transformadapter.h	/^class TransformAdapter : public StreamAdapterInterface {$/;"	c	namespace:rtc
TransformInterface	webrtc/base/transformadapter.h	/^class TransformInterface {$/;"	c	namespace:rtc
TransformTables	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^} TransformTables;$/;"	t	typeref:struct:__anon143
TransientDetector	webrtc/modules/audio_processing/transient/transient_detector.cc	/^TransientDetector::TransientDetector(int sample_rate_hz)$/;"	f	class:webrtc::TransientDetector
TransientDetector	webrtc/modules/audio_processing/transient/transient_detector.h	/^class TransientDetector {$/;"	c	namespace:webrtc
TransientFileUtilsTest	webrtc/modules/audio_processing/transient/file_utils_unittest.cc	/^  TransientFileUtilsTest()$/;"	f	class:webrtc::TransientFileUtilsTest
TransientFileUtilsTest	webrtc/modules/audio_processing/transient/file_utils_unittest.cc	/^class TransientFileUtilsTest: public ::testing::Test {$/;"	c	namespace:webrtc	file:
TransientSuppressor	webrtc/modules/audio_processing/transient/transient_suppressor.cc	/^TransientSuppressor::TransientSuppressor()$/;"	f	class:webrtc::TransientSuppressor
TransientSuppressor	webrtc/modules/audio_processing/transient/transient_suppressor.h	/^class TransientSuppressor {$/;"	c	namespace:webrtc
Translate	webrtc/base/natserver.cc	/^void NATServer::Translate(const SocketAddressPair& route) {$/;"	f	class:rtc::NATServer
TranslateOption	webrtc/base/physicalsocketserver.cc	/^int PhysicalSocket::TranslateOption(Option opt, int* slevel, int* sopt) {$/;"	f	class:rtc::PhysicalSocket
TranslateOption	webrtc/base/win32socketserver.cc	/^int Win32Socket::TranslateOption(Option opt, int* slevel, int* sopt) {$/;"	f	class:rtc::Win32Socket
TranslateTimestamp	webrtc/base/timestampaligner.cc	/^int64_t TimestampAligner::TranslateTimestamp(int64_t camera_time_us,$/;"	f	class:rtc::TimestampAligner
Translator	webrtc/base/natsocketfactory.cc	/^NATSocketServer::Translator::Translator($/;"	f	class:rtc::NATSocketServer::Translator
Translator	webrtc/base/natsocketfactory.h	/^  class Translator {$/;"	c	class:rtc::NATSocketServer
TranslatorMap	webrtc/base/natsocketfactory.h	/^  class TranslatorMap : private std::map<SocketAddress, Translator*> {$/;"	c	class:rtc::NATSocketServer
Transpose	webrtc/modules/audio_processing/beamformer/matrix.h	/^  Matrix& Transpose() {$/;"	f	class:webrtc::Matrix
Transpose	webrtc/modules/audio_processing/beamformer/matrix.h	/^  Matrix& Transpose(const Matrix& operand) {$/;"	f	class:webrtc::Matrix
Transpose	webrtc/modules/audio_processing/beamformer/matrix.h	/^  Matrix& Transpose(const T* const* src) {$/;"	f	class:webrtc::Matrix
TransposedConjugatedProduct	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.cc	/^void TransposedConjugatedProduct(const ComplexMatrix<float>& in,$/;"	f	namespace:webrtc::__anon188
TriggerCallback	webrtc/base/asyncinvoker.cc	/^void NotifyingAsyncClosureBase::TriggerCallback() {$/;"	f	class:rtc::NotifyingAsyncClosureBase
TruncateIP	webrtc/base/ipaddress.cc	/^IPAddress TruncateIP(const IPAddress& ip, int length) {$/;"	f	namespace:rtc
TruncateToMultipleOf10	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^int TruncateToMultipleOf10(int value) {$/;"	f	namespace:webrtc::__anon183
TryCritScope	webrtc/base/criticalsection.cc	/^TryCritScope::TryCritScope(const CriticalSection* cs)$/;"	f	class:rtc::TryCritScope
TryCritScope	webrtc/base/criticalsection.h	/^class TryCritScope {$/;"	c	namespace:rtc
TryInvalidMaskCount	webrtc/base/ipaddress_unittest.cc	/^bool TryInvalidMaskCount(const std::string& mask) {$/;"	f	namespace:rtc
TryLock	webrtc/base/stream.cc	/^bool FileStream::TryLock() {$/;"	f	class:rtc::FileStream
TryUseRate	webrtc/base/rate_limiter.cc	/^bool RateLimiter::TryUseRate(size_t packet_size_bytes) {$/;"	f	class:webrtc::RateLimiter
Ttl	webrtc/base/winping.h	/^    UCHAR   Ttl;                \/\/ Time To Live$/;"	m	struct:rtc::ip_option_information
TwoBandsAnalysis	webrtc/modules/audio_processing/splitting_filter.cc	/^void SplittingFilter::TwoBandsAnalysis(const IFChannelBuffer* data,$/;"	f	class:webrtc::SplittingFilter
TwoBandsStates	webrtc/modules/audio_processing/splitting_filter.h	/^  TwoBandsStates() {$/;"	f	struct:webrtc::TwoBandsStates
TwoBandsStates	webrtc/modules/audio_processing/splitting_filter.h	/^struct TwoBandsStates {$/;"	s	namespace:webrtc
TwoBandsSynthesis	webrtc/modules/audio_processing/splitting_filter.cc	/^void SplittingFilter::TwoBandsSynthesis(const IFChannelBuffer* bands,$/;"	f	class:webrtc::SplittingFilter
Type	webrtc/base/flags.h	/^  enum Type { BOOL, INT, FLOAT, STRING };$/;"	g	class:rtc::Flag
Type	webrtc/system_wrappers/include/sort.h	/^enum Type {$/;"	g	namespace:webrtc
Type2String	webrtc/base/flags.cc	/^static const char* Type2String(Flag::Type type) {$/;"	f	namespace:rtc
TypedMessageData	webrtc/base/messagequeue.h	/^  explicit TypedMessageData(const T& data) : data_(data) { }$/;"	f	class:rtc::TypedMessageData
TypedMessageData	webrtc/base/messagequeue.h	/^class TypedMessageData : public MessageData {$/;"	c	namespace:rtc
TypingDetection	webrtc/modules/audio_processing/typing_detection.cc	/^TypingDetection::TypingDetection()$/;"	f	class:webrtc::TypingDetection
TypingDetection	webrtc/modules/audio_processing/typing_detection.h	/^class TypingDetection {$/;"	c	namespace:webrtc
UA_FIREFOX	webrtc/base/proxydetect.cc	/^  UA_FIREFOX,$/;"	e	enum:UserAgent	file:
UA_INTERNETEXPLORER	webrtc/base/proxydetect.cc	/^  UA_INTERNETEXPLORER,$/;"	e	enum:UserAgent	file:
UA_OTHER	webrtc/base/proxydetect.cc	/^  UA_OTHER,$/;"	e	enum:UserAgent	file:
UA_UNKNOWN	webrtc/base/proxydetect.cc	/^  UA_UNKNOWN$/;"	e	enum:UserAgent	file:
UB16_INTERPOL_SEGMENTS	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define UB16_INTERPOL_SEGMENTS /;"	d
UB16_LPC_VEC_PER_FRAME	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define UB16_LPC_VEC_PER_FRAME /;"	d
UB_ACTIVE_SUBFRAMES	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define UB_ACTIVE_SUBFRAMES /;"	d
UB_INTERPOL_SEGMENTS	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define UB_INTERPOL_SEGMENTS /;"	d
UB_LOOKAHEAD	webrtc/modules/audio_coding/codecs/isac/main/source/encode.c	/^#define UB_LOOKAHEAD /;"	d	file:
UB_LPC_GAIN_DIM	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define UB_LPC_GAIN_DIM /;"	d
UB_LPC_ORDER	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define UB_LPC_ORDER /;"	d
UB_LPC_VEC_PER_FRAME	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define UB_LPC_VEC_PER_FRAME /;"	d
UB_MAX_LPC_ORDER	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define UB_MAX_LPC_ORDER /;"	d
UDP_HEADER_SIZE	webrtc/base/virtualsocketserver.cc	/^const uint32_t UDP_HEADER_SIZE = 28;  \/\/ IP + UDP headers$/;"	m	namespace:rtc	file:
UIntVectorToJsonArray	webrtc/base/json.cc	/^Json::Value UIntVectorToJsonArray(const std::vector<unsigned int>& in) {$/;"	f	namespace:rtc
UNKNOWN	webrtc/base/sslstreamadapter.h	/^enum class SSLHandshakeError { UNKNOWN, INCOMPATIBLE_CIPHERSUITE, MAX_VALUE };$/;"	m	class:rtc::SSLHandshakeError
UNKNOWN_ALGORITHM	webrtc/base/sslstreamadapter.h	/^  UNKNOWN_ALGORITHM,$/;"	m	class:rtc::SSLPeerCertificateDigestError
UNLOCK_FUNCTION	webrtc/base/criticalsection.cc	/^void CriticalSection::Leave() const UNLOCK_FUNCTION() {$/;"	f	namespace:rtc
UNLOCK_FUNCTION	webrtc/base/criticalsection_unittest.cc	/^  void Unlock() UNLOCK_FUNCTION() {$/;"	f	class:rtc::__anon10::CriticalSectionLock
UNLOCK_FUNCTION	webrtc/base/messagequeue.cc	/^  ~DebugNonReentrantCritScope() UNLOCK_FUNCTION() {$/;"	f	class:rtc::__anon32::DebugNonReentrantCritScope
UNLOCK_FUNCTION	webrtc/base/race_checker.h	/^  ~RaceCheckerScopeDoNothing() UNLOCK_FUNCTION() {}$/;"	f	class:rtc::internal::RaceCheckerScopeDoNothing
UNLOCK_FUNCTION	webrtc/base/sharedexclusivelock.h	/^  ~ExclusiveScope() UNLOCK_FUNCTION() { lock_->UnlockExclusive(); }$/;"	f	class:rtc::ExclusiveScope
UNLOCK_FUNCTION	webrtc/base/sharedexclusivelock.h	/^  ~SharedScope() UNLOCK_FUNCTION() { lock_->UnlockShared(); }$/;"	f	class:rtc::SharedScope
UNLOCK_FUNCTION	webrtc/base/signalthread.h	/^    ~EnterExit() UNLOCK_FUNCTION() {$/;"	f	class:rtc::SignalThread::EnterExit
UNLOCK_FUNCTION	webrtc/base/thread_annotations.h	/^#define UNLOCK_FUNCTION(/;"	d
UNLOCK_FUNCTION	webrtc/base/thread_annotations_unittest.cc	/^  void Leave() const UNLOCK_FUNCTION() {}$/;"	f	class:__anon68::Lock
UNLOCK_FUNCTION	webrtc/base/thread_annotations_unittest.cc	/^  ~ScopeLock() UNLOCK_FUNCTION() {}$/;"	f	class:__anon68::ScopeLock
UNLOCK_FUNCTION	webrtc/base/thread_checker.h	/^  ~AnnounceOnThread() UNLOCK_FUNCTION() {}$/;"	f	class:rtc::internal::AnnounceOnThread
UNLOCK_FUNCTION	webrtc/system_wrappers/include/critical_section_wrapper.h	/^  void Leave() UNLOCK_FUNCTION() { lock_.Leave(); }$/;"	f	class:webrtc::CriticalSectionWrapper
UNLOCK_FUNCTION	webrtc/system_wrappers/include/critical_section_wrapper.h	/^  ~CriticalSectionScoped() UNLOCK_FUNCTION() { ptr_crit_sec_->Leave(); }$/;"	f	class:webrtc::CriticalSectionScoped
UNLOCK_FUNCTION	webrtc/system_wrappers/include/rw_lock_wrapper.h	/^  ~ReadLockScoped() UNLOCK_FUNCTION() {$/;"	f	class:webrtc::ReadLockScoped
UNLOCK_FUNCTION	webrtc/system_wrappers/include/rw_lock_wrapper.h	/^  ~WriteLockScoped() UNLOCK_FUNCTION() {$/;"	f	class:webrtc::WriteLockScoped
UNSHIPPED_TRACE_EVENT0	webrtc/base/trace_event.h	/^#define UNSHIPPED_TRACE_EVENT0(/;"	d
UNSHIPPED_TRACE_EVENT1	webrtc/base/trace_event.h	/^#define UNSHIPPED_TRACE_EVENT1(/;"	d
UNSHIPPED_TRACE_EVENT2	webrtc/base/trace_event.h	/^#define UNSHIPPED_TRACE_EVENT2(/;"	d
UNSHIPPED_TRACE_EVENT_INSTANT0	webrtc/base/trace_event.h	/^#define UNSHIPPED_TRACE_EVENT_INSTANT0(/;"	d
UNSHIPPED_TRACE_EVENT_INSTANT1	webrtc/base/trace_event.h	/^#define UNSHIPPED_TRACE_EVENT_INSTANT1(/;"	d
UNSHIPPED_TRACE_EVENT_INSTANT2	webrtc/base/trace_event.h	/^#define UNSHIPPED_TRACE_EVENT_INSTANT2(/;"	d
UPDATE	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define UPDATE /;"	d
UPDATE_NETWORKS_MESSAGE	webrtc/base/networkmonitor.cc	/^const uint32_t UPDATE_NETWORKS_MESSAGE = 1;$/;"	m	namespace:__anon37	file:
UPDATE_REGISTERS	webrtc/common_audio/signal_processing/complex_bit_reverse_arm.S	/^UPDATE_REGISTERS:$/;"	l
URI_ABSOLUTE	webrtc/base/httpclient.h	/^  enum UriForm { URI_DEFAULT, URI_ABSOLUTE, URI_RELATIVE };$/;"	e	enum:rtc::HttpClient::UriForm
URI_DEFAULT	webrtc/base/httpclient.h	/^  enum UriForm { URI_DEFAULT, URI_ABSOLUTE, URI_RELATIVE };$/;"	e	enum:rtc::HttpClient::UriForm
URI_RELATIVE	webrtc/base/httpclient.h	/^  enum UriForm { URI_DEFAULT, URI_ABSOLUTE, URI_RELATIVE };$/;"	e	enum:rtc::HttpClient::UriForm
URL_UNSAFE	webrtc/base/stringencode.cc	/^const unsigned char URL_UNSAFE  = 0x1; \/\/ 0-33 "#$%&+,\/:;<=>?@[\\]^`{|} 127$/;"	m	namespace:rtc	file:
USERTrust_ECC_Certification_Authority_certificate	webrtc/base/sslroots.h	/^const unsigned char USERTrust_ECC_Certification_Authority_certificate[659]={$/;"	v
USERTrust_RSA_Certification_Authority_certificate	webrtc/base/sslroots.h	/^const unsigned char USERTrust_RSA_Certification_Authority_certificate[1506]={$/;"	v
USE_FIREFOX_PROFILES_INI	webrtc/base/proxydetect.cc	/^#define USE_FIREFOX_PROFILES_INI /;"	d	file:
USE_NATIVE_MUTEX_ON_MAC	webrtc/base/criticalsection.h	/^#define USE_NATIVE_MUTEX_ON_MAC /;"	d
UTN_DATACorp_SGC_Root_CA_certificate	webrtc/base/sslroots.h	/^const unsigned char UTN_DATACorp_SGC_Root_CA_certificate[1122]={$/;"	v
UTN_USERFirst_Hardware_Root_CA_certificate	webrtc/base/sslroots.h	/^const unsigned char UTN_USERFirst_Hardware_Root_CA_certificate[1144]={$/;"	v
UdpInternal	webrtc/base/socket_unittest.cc	/^void SocketTest::UdpInternal(const IPAddress& loopback) {$/;"	f	class:rtc::SocketTest
UdpReadyToSend	webrtc/base/socket_unittest.cc	/^void SocketTest::UdpReadyToSend(const IPAddress& loopback) {$/;"	f	class:rtc::SocketTest
UlpfecConfig	webrtc/config.h	/^  UlpfecConfig()$/;"	f	struct:webrtc::UlpfecConfig
UlpfecConfig	webrtc/config.h	/^struct UlpfecConfig {$/;"	s	namespace:webrtc
UnRegisterAllFilters	webrtc/base/dbus.cc	/^  void UnRegisterAllFilters() {$/;"	f	class:rtc::DBusMonitor::DBusMonitoringThread	file:
UnaryByPointer	webrtc/base/bind_unittest.cc	/^  int UnaryByPointer(int* value) const {$/;"	f	struct:rtc::__anon4::MethodBindTester
UnaryByRef	webrtc/base/bind_unittest.cc	/^  int UnaryByRef(const int& value) const {$/;"	f	struct:rtc::__anon4::MethodBindTester
UnaryVoid	webrtc/base/bind_unittest.cc	/^  void UnaryVoid(int dummy) { ++call_count; }$/;"	f	struct:rtc::__anon4::MethodBindTester
Unbind	webrtc/base/virtualsocketserver.cc	/^int VirtualSocketServer::Unbind(const SocketAddress& addr,$/;"	f	class:rtc::VirtualSocketServer
UniformBucketTest	webrtc/base/random_unittest.cc	/^void UniformBucketTest(T bucket_count, int samples, Random* prng) {$/;"	f	namespace:webrtc
UniformCovarianceMatrix	webrtc/modules/audio_processing/beamformer/covariance_matrix_generator.cc	/^void CovarianceMatrixGenerator::UniformCovarianceMatrix($/;"	f	class:webrtc::CovarianceMatrixGenerator
UniqueNackRequestsInPercent	webrtc/common_types.h	/^  int UniqueNackRequestsInPercent() const {$/;"	f	struct:webrtc::RtcpPacketTypeCounter
UniqueValueVerifier	webrtc/base/criticalsection_unittest.cc	/^class UniqueValueVerifier {$/;"	c	namespace:rtc::__anon10	file:
UnixFilesystem	webrtc/base/unixfilesystem.cc	/^UnixFilesystem::UnixFilesystem() {$/;"	f	class:rtc::UnixFilesystem
UnixFilesystem	webrtc/base/unixfilesystem.h	/^class UnixFilesystem : public FilesystemInterface {$/;"	c	namespace:rtc
UnixTimeToFileTime	webrtc/base/win32.cc	/^void UnixTimeToFileTime(const time_t& ut, FILETIME* ft) {$/;"	f	namespace:rtc
Unload	webrtc/base/latebindingsymboltable.cc	/^void LateBindingSymbolTable::Unload() {$/;"	f	class:rtc::LateBindingSymbolTable
Unlock	webrtc/base/criticalsection.cc	/^void GlobalLockPod::Unlock() {$/;"	f	class:rtc::GlobalLockPod
Unlock	webrtc/base/stream.cc	/^bool FileStream::Unlock() {$/;"	f	class:rtc::FileStream
UnlockExclusive	webrtc/base/sharedexclusivelock.cc	/^void SharedExclusiveLock::UnlockExclusive() {$/;"	f	class:rtc::SharedExclusiveLock
UnlockResource	webrtc/base/diskcache.cc	/^bool DiskCache::UnlockResource(const std::string& id) {$/;"	f	class:rtc::DiskCache
UnlockResource	webrtc/base/diskcache.h	/^#undef UnlockResource$/;"	d
UnlockShared	webrtc/base/sharedexclusivelock.cc	/^void SharedExclusiveLock::UnlockShared() {$/;"	f	class:rtc::SharedExclusiveLock
Unmonitor	webrtc/base/testutils.h	/^  void Unmonitor(AsyncSocket* socket) {$/;"	f	class:testing::StreamSink
Unmonitor	webrtc/base/testutils.h	/^  void Unmonitor(StreamInterface* stream) {$/;"	f	class:testing::StreamSink
UnpackAddressFromNAT	webrtc/base/natsocketfactory.cc	/^size_t UnpackAddressFromNAT(const char* buf, size_t buf_size,$/;"	f	namespace:rtc
UnpoisonValue	webrtc/base/optional.h	/^  void UnpoisonValue() {$/;"	f	class:rtc::final
UnsuppressX11Errors	webrtc/base/x11windowpicker.cc	/^  void UnsuppressX11Errors() {$/;"	f	class:rtc::XErrorSuppressor	file:
Unwrap	webrtc/base/timeutils.cc	/^int64_t TimestampWrapAroundHandler::Unwrap(uint32_t ts) {$/;"	f	class:rtc::TimestampWrapAroundHandler
Unwrap	webrtc/modules/include/module_common_types.h	/^  int64_t Unwrap(uint16_t sequence_number) {$/;"	f	class:webrtc::SequenceNumberUnwrapper
UnwrapCurrent	webrtc/base/thread.cc	/^void Thread::UnwrapCurrent() {$/;"	f	class:rtc::Thread
UnwrapCurrent	webrtc/base/thread_unittest.cc	/^  void UnwrapCurrent() {$/;"	f	class:CustomThread
UnwrapCurrentThread	webrtc/base/thread.cc	/^void ThreadManager::UnwrapCurrentThread() {$/;"	f	class:rtc::ThreadManager
UnwrapMainThreadScope	webrtc/base/messagequeue_unittest.cc	/^  UnwrapMainThreadScope() : rewrap_(Thread::Current() != NULL) {$/;"	f	struct:UnwrapMainThreadScope
UnwrapMainThreadScope	webrtc/base/messagequeue_unittest.cc	/^struct UnwrapMainThreadScope {$/;"	s	file:
UnwrapWithoutUpdate	webrtc/modules/include/module_common_types.h	/^  int64_t UnwrapWithoutUpdate(uint16_t sequence_number) {$/;"	f	class:webrtc::SequenceNumberUnwrapper
UpModulate	webrtc/modules/audio_processing/three_band_filter_bank.cc	/^void ThreeBandFilterBank::UpModulate(const float* const* in,$/;"	f	class:webrtc::ThreeBandFilterBank
Update	webrtc/base/md5digest.cc	/^void Md5Digest::Update(const void* buf, size_t len) {$/;"	f	class:rtc::Md5Digest
Update	webrtc/base/openssldigest.cc	/^void OpenSSLDigest::Update(const void* buf, size_t len) {$/;"	f	class:rtc::OpenSSLDigest
Update	webrtc/base/rate_statistics.cc	/^void RateStatistics::Update(size_t count, int64_t now_ms) {$/;"	f	class:webrtc::RateStatistics
Update	webrtc/base/sha1digest.cc	/^void Sha1Digest::Update(const void* buf, size_t len) {$/;"	f	class:rtc::Sha1Digest
Update	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_filter.c	/^static void Update(PitchFilterParam* parameters) {$/;"	f	file:
Update	webrtc/modules/audio_processing/agc/loudness_histogram.cc	/^void LoudnessHistogram::Update(double rms, double activity_probaility) {$/;"	f	class:webrtc::LoudnessHistogram
Update	webrtc/modules/audio_processing/audio_processing_impl.cc	/^bool AudioProcessingImpl::ApmSubmoduleStates::Update($/;"	f	class:webrtc::AudioProcessingImpl::ApmSubmoduleStates
Update	webrtc/modules/audio_processing/echo_detector/mean_variance_estimator.cc	/^void MeanVarianceEstimator::Update(float value) {$/;"	f	class:webrtc::MeanVarianceEstimator
Update	webrtc/modules/audio_processing/echo_detector/normalized_covariance_estimator.cc	/^void NormalizedCovarianceEstimator::Update(float x,$/;"	f	class:webrtc::NormalizedCovarianceEstimator
Update	webrtc/modules/audio_processing/level_controller/level_controller.cc	/^void LevelController::Metrics::Update(float long_term_peak_level,$/;"	f	class:webrtc::LevelController::Metrics
Update	webrtc/modules/audio_processing/level_controller/noise_spectrum_estimator.cc	/^void NoiseSpectrumEstimator::Update(rtc::ArrayView<const float> spectrum,$/;"	f	class:webrtc::NoiseSpectrumEstimator
Update	webrtc/modules/audio_processing/level_controller/saturating_gain_estimator.cc	/^void SaturatingGainEstimator::Update(float gain, int num_saturations) {$/;"	f	class:webrtc::SaturatingGainEstimator
Update	webrtc/modules/audio_processing/transient/wpd_node.cc	/^int WPDNode::Update(const float* parent_data, size_t parent_data_length) {$/;"	f	class:webrtc::WPDNode
Update	webrtc/modules/audio_processing/transient/wpd_tree.cc	/^int WPDTree::Update(const float* data, size_t data_length) {$/;"	f	class:webrtc::WPDTree
UpdateActiveSubmoduleStates	webrtc/modules/audio_processing/audio_processing_impl.cc	/^bool AudioProcessingImpl::UpdateActiveSubmoduleStates() {$/;"	f	class:webrtc::AudioProcessingImpl
UpdateAndRemoveDcLevel	webrtc/modules/audio_processing/level_controller/level_controller.cc	/^void UpdateAndRemoveDcLevel(float forgetting_factor,$/;"	f	namespace:webrtc::__anon208
UpdateBase	webrtc/base/exp_filter.cc	/^void ExpFilter::UpdateBase(float alpha) {$/;"	f	class:rtc::ExpFilter
UpdateBestSNR	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^void UpdateBestSNR(const float* ref,$/;"	f	namespace:webrtc::__anon183
UpdateBottleneck	webrtc/modules/audio_coding/codecs/isac/main/source/isac.c	/^static void UpdateBottleneck(ISACMainStruct* instISAC) {$/;"	f	file:
UpdateBuffer	webrtc/modules/audio_processing/ns/ns_core.c	/^static void UpdateBuffer(const float* frame,$/;"	f	file:
UpdateBuffers	webrtc/modules/audio_processing/transient/transient_suppressor.cc	/^void TransientSuppressor::UpdateBuffers(float* data) {$/;"	f	class:webrtc::TransientSuppressor
UpdateCoherenceSpectra	webrtc/modules/audio_processing/aec/aec_core.cc	/^static void UpdateCoherenceSpectra(int mult,$/;"	f	namespace:webrtc
UpdateCoherenceSpectraNEON	webrtc/modules/audio_processing/aec/aec_core_neon.cc	/^static void UpdateCoherenceSpectraNEON(int mult,$/;"	f	namespace:webrtc
UpdateCoherenceSpectraSSE2	webrtc/modules/audio_processing/aec/aec_core_sse2.cc	/^static void UpdateCoherenceSpectraSSE2(int mult,$/;"	f	namespace:webrtc
UpdateCompressor	webrtc/modules/audio_processing/agc/agc_manager_direct.cc	/^void AgcManagerDirect::UpdateCompressor() {$/;"	f	class:webrtc::AgcManagerDirect
UpdateCrc32	webrtc/base/crc32.cc	/^uint32_t UpdateCrc32(uint32_t start, const void* buf, size_t len) {$/;"	f	namespace:rtc
UpdateDelayDistribution	webrtc/base/virtualsocketserver.cc	/^void VirtualSocketServer::UpdateDelayDistribution() {$/;"	f	class:rtc::VirtualSocketServer
UpdateDelayMetrics	webrtc/modules/audio_processing/aec/aec_core.cc	/^static void UpdateDelayMetrics(AecCore* self) {$/;"	f	namespace:webrtc
UpdateErbGains	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer.cc	/^void IntelligibilityEnhancer::UpdateErbGains() {$/;"	f	class:webrtc::IntelligibilityEnhancer
UpdateFactor	webrtc/modules/audio_processing/intelligibility/intelligibility_utils.cc	/^float UpdateFactor(float target, float current, float limit) {$/;"	f	namespace:webrtc::intelligibility::__anon204
UpdateFileName	webrtc/system_wrappers/source/trace_impl.cc	/^bool TraceImpl::UpdateFileName($/;"	f	class:webrtc::TraceImpl
UpdateFrame	webrtc/modules/include/module_common_types.h	/^inline void AudioFrame::UpdateFrame(int id,$/;"	f	class:webrtc::AudioFrame
UpdateGain	webrtc/modules/audio_processing/agc/agc_manager_direct.cc	/^void AgcManagerDirect::UpdateGain() {$/;"	f	class:webrtc::AgcManagerDirect
UpdateHist	webrtc/modules/audio_processing/agc/loudness_histogram.cc	/^void LoudnessHistogram::UpdateHist(int activity_prob_q10, int hist_index) {$/;"	f	class:webrtc::LoudnessHistogram
UpdateHistogramsOnCallEnd	webrtc/modules/audio_processing/audio_processing_impl.cc	/^void AudioProcessingImpl::UpdateHistogramsOnCallEnd() {$/;"	f	class:webrtc::AudioProcessingImpl
UpdateInputBuffers	webrtc/modules/audio_processing/level_controller/level_controller_complexity_unittest.cc	/^  void UpdateInputBuffers() {$/;"	f	struct:webrtc::__anon209::SimulatorBuffers
UpdateKeypress	webrtc/modules/audio_processing/transient/transient_suppressor.cc	/^void TransientSuppressor::UpdateKeypress(bool key_pressed) {$/;"	f	class:webrtc::TransientSuppressor
UpdateLast	webrtc/modules/include/module_common_types.h	/^  void UpdateLast(int64_t last_sequence) { last_seq_ = last_sequence; }$/;"	f	class:webrtc::SequenceNumberUnwrapper
UpdateLastError	webrtc/base/physicalsocketserver.cc	/^void PhysicalSocket::UpdateLastError() {$/;"	f	class:rtc::PhysicalSocket
UpdateLastError	webrtc/base/win32socketserver.cc	/^void Win32Socket::UpdateLastError() {$/;"	f	class:rtc::Win32Socket
UpdateLevel	webrtc/modules/audio_processing/aec/aec_core.cc	/^static void UpdateLevel(PowerLevel* level, float power) {$/;"	f	namespace:webrtc
UpdateLogRatioMetric	webrtc/modules/audio_processing/aec/aec_core.cc	/^static void UpdateLogRatioMetric(Stats* metric, float numerator,$/;"	f	namespace:webrtc
UpdateMetrics	webrtc/modules/audio_processing/aec/aec_core.cc	/^static void UpdateMetrics(AecCore* aec) {$/;"	f	namespace:webrtc
UpdateNetworksContinually	webrtc/base/network.cc	/^void BasicNetworkManager::UpdateNetworksContinually() {$/;"	f	class:rtc::BasicNetworkManager
UpdateNetworksOnce	webrtc/base/network.cc	/^void BasicNetworkManager::UpdateNetworksOnce() {$/;"	f	class:rtc::BasicNetworkManager
UpdateNoiseEstimate	webrtc/modules/audio_processing/ns/ns_core.c	/^static void UpdateNoiseEstimate(NoiseSuppressionC* self,$/;"	f	file:
UpdateNoiseEstimate	webrtc/modules/audio_processing/ns/nsx_core.c	/^static void UpdateNoiseEstimate(NoiseSuppressionFixedC* inst, int offset) {$/;"	f	file:
UpdateNoiseEstimateNeon	webrtc/modules/audio_processing/ns/nsx_core_neon.c	/^static void UpdateNoiseEstimateNeon(NoiseSuppressionFixedC* inst, int offset) {$/;"	f	file:
UpdateOffset	webrtc/base/timestampaligner.cc	/^int64_t TimestampAligner::UpdateOffset(int64_t camera_time_us,$/;"	f	class:rtc::TimestampAligner
UpdatePayloadSizeLimit	webrtc/modules/audio_coding/codecs/isac/main/source/isac.c	/^static void UpdatePayloadSizeLimit(ISACMainStruct* instISAC) {$/;"	f	file:
UpdatePrior	webrtc/modules/audio_processing/vad/pitch_based_vad.cc	/^int PitchBasedVad::UpdatePrior(double p) {$/;"	f	class:webrtc::PitchBasedVad
UpdateRegions	webrtc/common_audio/resampler/sinc_resampler.cc	/^void SincResampler::UpdateRegions(bool second_load) {$/;"	f	class:webrtc::SincResampler
UpdateRestoration	webrtc/modules/audio_processing/transient/transient_suppressor.cc	/^void TransientSuppressor::UpdateRestoration(float voice_probability) {$/;"	f	class:webrtc::TransientSuppressor
UpdateRobustValidationStatistics	webrtc/modules/audio_processing/utility/delay_estimator.cc	/^static void UpdateRobustValidationStatistics(BinaryDelayEstimator* self,$/;"	f	file:
UpdateTaskTimeout	webrtc/base/taskrunner.cc	/^void TaskRunner::UpdateTaskTimeout(Task* task,$/;"	f	class:rtc::TaskRunner
UpmixConverter	webrtc/common_audio/audio_converter.cc	/^  UpmixConverter(size_t src_channels, size_t src_frames, size_t dst_channels,$/;"	f	class:webrtc::UpmixConverter
UpmixConverter	webrtc/common_audio/audio_converter.cc	/^class UpmixConverter : public AudioConverter {$/;"	c	namespace:webrtc	file:
UpmixMonoToInterleaved	webrtc/common_audio/include/audio_util.h	/^void UpmixMonoToInterleaved(const T* mono,$/;"	f	namespace:webrtc
Upsample	webrtc/modules/audio_processing/three_band_filter_bank.cc	/^void Upsample(const float* in, size_t split_length, size_t offset, float* out) {$/;"	f	namespace:webrtc::__anon224
UriForm	webrtc/base/httpclient.h	/^  enum UriForm { URI_DEFAULT, URI_ABSOLUTE, URI_RELATIVE };$/;"	g	class:rtc::HttpClient
Url	webrtc/base/httpcommon.h	/^  Url(const string& path, const string& host, uint16_t port = HTTP_DEFAULT_PORT)$/;"	f	class:rtc::Url
Url	webrtc/base/httpcommon.h	/^  Url(const string& url) { do_set_url(url.c_str(), url.size()); }$/;"	f	class:rtc::Url
Url	webrtc/base/httpcommon.h	/^class Url {$/;"	c	namespace:rtc
UrlDecode	webrtc/base/urlencode.cc	/^int UrlDecode(const char *source, char *dest) {$/;"	f	namespace:rtc
UrlDecodeString	webrtc/base/urlencode.cc	/^UrlDecodeString(const std::string & encoded) {$/;"	f	namespace:rtc
UrlDecodeStringWithoutEncodingSpaceAsPlus	webrtc/base/urlencode.cc	/^UrlDecodeStringWithoutEncodingSpaceAsPlus(const std::string & encoded) {$/;"	f	namespace:rtc
UrlDecodeWithoutEncodingSpaceAsPlus	webrtc/base/urlencode.cc	/^int UrlDecodeWithoutEncodingSpaceAsPlus(const char *source, char *dest) {$/;"	f	namespace:rtc
UrlEncode	webrtc/base/cryptstring.cc	/^std::string EmptyCryptStringImpl::UrlEncode() const {$/;"	f	class:rtc::EmptyCryptStringImpl
UrlEncode	webrtc/base/cryptstring.cc	/^std::string InsecureCryptStringImpl::UrlEncode() const {$/;"	f	class:rtc::InsecureCryptStringImpl
UrlEncode	webrtc/base/cryptstring.h	/^  std::string UrlEncode() const { return impl_->UrlEncode(); }$/;"	f	class:rtc::CryptString
UrlEncode	webrtc/base/urlencode.cc	/^int UrlEncode(const char *source, char *dest, unsigned max) {$/;"	f	namespace:rtc
UrlEncodeOnlyUnsafeChars	webrtc/base/urlencode.cc	/^int UrlEncodeOnlyUnsafeChars(const char *source, char *dest, unsigned max) {$/;"	f	namespace:rtc
UrlEncodeString	webrtc/base/urlencode.cc	/^UrlEncodeString(const std::string & decoded) {$/;"	f	namespace:rtc
UrlEncodeStringForOnlyUnsafeChars	webrtc/base/urlencode.cc	/^UrlEncodeStringForOnlyUnsafeChars(const std::string & decoded) {$/;"	f	namespace:rtc
UrlEncodeStringWithoutEncodingSpaceAsPlus	webrtc/base/urlencode.cc	/^UrlEncodeStringWithoutEncodingSpaceAsPlus(const std::string & decoded) {$/;"	f	namespace:rtc
UrlEncodeWithoutEncodingSpaceAsPlus	webrtc/base/urlencode.cc	/^int UrlEncodeWithoutEncodingSpaceAsPlus(const char *source, char *dest,$/;"	f	namespace:rtc
Use	webrtc/base/ratelimiter.cc	/^void RateLimiter::Use(size_t used, double time) {$/;"	f	class:rtc::RateLimiter
UseMessageData	webrtc/base/messagequeue.h	/^inline const T& UseMessageData(MessageData* data) {$/;"	f	namespace:rtc
UseSSL	webrtc/base/sslsocketfactory.h	/^  void UseSSL(const char* hostname) { hostname_ = hostname; }$/;"	f	class:rtc::SslSocketFactory
UserAgent	webrtc/base/proxydetect.cc	/^enum UserAgent {$/;"	g	file:
Utf8String	webrtc/base/proxydetect.cc	/^std::string Utf8String(const tstring& str) { return ToUtf8(str); }$/;"	f	namespace:rtc
Utf8ToWindowsFilename	webrtc/base/win32.cc	/^bool Utf8ToWindowsFilename(const std::string& utf8, std::wstring* filename) {$/;"	f	namespace:rtc
V	webrtc/base/optional_unittest.cc	/^std::vector<std::string> V(Ts... es) {$/;"	f	namespace:rtc::__anon41
VADActivity	webrtc/modules/include/module_common_types.h	/^  enum VADActivity {$/;"	g	class:webrtc::AudioFrame
VERIFICATION_FAILED	webrtc/base/sslstreamadapter.h	/^  VERIFICATION_FAILED,$/;"	m	class:rtc::SSLPeerCertificateDigestError
VERIFY	webrtc/base/common.h	/^#define VERIFY(/;"	d
VP8	webrtc/common_types.cc	/^VideoCodecVP8* VideoCodec::VP8() {$/;"	f	class:webrtc::VideoCodec
VP8	webrtc/common_types.cc	/^const VideoCodecVP8& VideoCodec::VP8() const {$/;"	f	class:webrtc::VideoCodec
VP8	webrtc/common_types.h	/^  VideoCodecVP8 VP8;$/;"	m	union:webrtc::VideoCodecUnion
VP8	webrtc/modules/include/module_common_types.h	/^  RTPVideoHeaderVP8 VP8;$/;"	m	union:webrtc::RTPVideoTypeHeader
VP8ResilienceMode	webrtc/common_types.h	/^enum VP8ResilienceMode {$/;"	g	namespace:webrtc
VP9	webrtc/common_types.cc	/^VideoCodecVP9* VideoCodec::VP9() {$/;"	f	class:webrtc::VideoCodec
VP9	webrtc/common_types.cc	/^const VideoCodecVP9& VideoCodec::VP9() const {$/;"	f	class:webrtc::VideoCodec
VP9	webrtc/common_types.h	/^  VideoCodecVP9 VP9;$/;"	m	union:webrtc::VideoCodecUnion
VP9	webrtc/modules/include/module_common_types.h	/^  RTPVideoHeaderVP9 VP9;$/;"	m	union:webrtc::RTPVideoTypeHeader
VPrintError	webrtc/base/checks.cc	/^void VPrintError(const char* format, va_list args) {$/;"	f	namespace:rtc
Vad	webrtc/common_audio/vad/include/vad.h	/^class Vad {$/;"	c	namespace:webrtc
Vad	webrtc/modules/audio_processing/voice_detection_impl.cc	/^  Vad() {$/;"	f	class:webrtc::VoiceDetectionImpl::Vad
Vad	webrtc/modules/audio_processing/voice_detection_impl.cc	/^class VoiceDetectionImpl::Vad {$/;"	c	class:webrtc::VoiceDetectionImpl	file:
VadAudioProc	webrtc/modules/audio_processing/vad/vad_audio_proc.cc	/^VadAudioProc::VadAudioProc()$/;"	f	class:webrtc::VadAudioProc
VadAudioProc	webrtc/modules/audio_processing/vad/vad_audio_proc.h	/^class VadAudioProc {$/;"	c	namespace:webrtc
VadCircularBuffer	webrtc/modules/audio_processing/vad/vad_circular_buffer.cc	/^VadCircularBuffer::VadCircularBuffer(int buffer_size)$/;"	f	class:webrtc::VadCircularBuffer
VadCircularBuffer	webrtc/modules/audio_processing/vad/vad_circular_buffer.h	/^class VadCircularBuffer {$/;"	c	namespace:webrtc
VadImpl	webrtc/common_audio/vad/vad.cc	/^  explicit VadImpl(Aggressiveness aggressiveness)$/;"	f	class:webrtc::__anon101::final
VadInst	webrtc/common_audio/vad/include/webrtc_vad.h	/^typedef struct WebRtcVadInst VadInst;$/;"	t	typeref:struct:WebRtcVadInst
VadInstT	webrtc/common_audio/vad/vad_core.h	/^} VadInstT;$/;"	t	typeref:struct:VadInstT_
VadInstT_	webrtc/common_audio/vad/vad_core.h	/^typedef struct VadInstT_$/;"	s
VadModes	webrtc/common_types.h	/^enum VadModes {$/;"	g	namespace:webrtc
VadTest	webrtc/common_audio/vad/vad_unittest.cc	/^VadTest::VadTest() {}$/;"	f	class:VadTest
VadTest	webrtc/common_audio/vad/vad_unittest.h	/^class VadTest : public ::testing::Test {$/;"	c
Valid	webrtc/system_wrappers/include/ntp_time.h	/^  bool Valid() const { return !(seconds_ == 0 && fractions_ == 0); }$/;"	f	class:webrtc::NtpTime
ValidAlignment	webrtc/system_wrappers/source/aligned_malloc.cc	/^bool ValidAlignment(size_t alignment) {$/;"	f	namespace:webrtc
ValidRates	webrtc/common_audio/resampler/resampler_unittest.cc	/^bool ValidRates(int in_rate, int out_rate) {$/;"	f	namespace:webrtc::__anon86
ValidRatesAndFrameLengths	webrtc/common_audio/vad/vad_unittest.cc	/^bool VadTest::ValidRatesAndFrameLengths(int rate, size_t frame_length) {$/;"	f	class:VadTest
Validate	webrtc/modules/audio_processing/level_controller/level_controller.cc	/^bool LevelController::Validate($/;"	f	class:webrtc::LevelController
ValidateInitialDelay	webrtc/common_audio/blocker_unittest.cc	/^  void ValidateInitialDelay(const float* const* output,$/;"	f	class:webrtc::BlockerTest
ValidateMatrixEquality	webrtc/modules/audio_processing/beamformer/matrix_test_helpers.h	/^  static void ValidateMatrixEquality(const Matrix<T>& expected,$/;"	f	class:webrtc::MatrixTestHelpers
ValidateMatrixEqualityComplexFloat	webrtc/modules/audio_processing/beamformer/matrix_test_helpers.h	/^  static void ValidateMatrixEqualityComplexFloat($/;"	f	class:webrtc::MatrixTestHelpers
ValidateMatrixEqualityFloat	webrtc/modules/audio_processing/beamformer/matrix_test_helpers.h	/^  static void ValidateMatrixEqualityFloat(const Matrix<float>& expected,$/;"	f	class:webrtc::MatrixTestHelpers
ValidateMatrixNearEqualityComplexFloat	webrtc/modules/audio_processing/beamformer/matrix_test_helpers.h	/^  static void ValidateMatrixNearEqualityComplexFloat($/;"	f	class:webrtc::MatrixTestHelpers
ValidatePositiveInt	webrtc/modules/audio_processing/transient/transient_suppression_test.cc	/^static bool ValidatePositiveInt(const char* flagname, int32_t value) {$/;"	f	file:
ValidateSignalEquality	webrtc/common_audio/blocker_unittest.cc	/^  void ValidateSignalEquality(const float* const* expected,$/;"	f	class:webrtc::BlockerTest
Value	webrtc/system_wrappers/include/atomic32.h	/^  int32_t Value() {$/;"	f	class:webrtc::Atomic32
ValueVectorToJsonArray	webrtc/base/json.cc	/^Json::Value ValueVectorToJsonArray(const std::vector<Json::Value>& in) {$/;"	f	namespace:rtc
VecOf3	webrtc/base/json_unittest.cc	/^std::vector<T> VecOf3(const T& a, const T& b, const T& c) {$/;"	f	namespace:rtc::__anon25
VectorAppend	webrtc/base/optional_unittest.cc	/^void VectorAppend(std::vector<T>* v) {}$/;"	f	namespace:rtc::__anon41
VectorAppend	webrtc/base/optional_unittest.cc	/^void VectorAppend(std::vector<T>* v, const T& e, Ts... es) {$/;"	f	namespace:rtc::__anon41
VectorT	webrtc/base/scopedptrcollection.h	/^  typedef std::vector<T*> VectorT;$/;"	t	class:rtc::ScopedPtrCollection
VectorToJsonArray	webrtc/base/json.cc	/^Json::Value VectorToJsonArray(const std::vector<T>& vec) {$/;"	f	namespace:rtc::__anon24
VeriSign_Class_3_Public_Primary_Certification_Authority___G4_certificate	webrtc/base/sslroots.h	/^const unsigned char VeriSign_Class_3_Public_Primary_Certification_Authority___G4_certificate[904]={$/;"	v
VeriSign_Class_3_Public_Primary_Certification_Authority___G5_certificate	webrtc/base/sslroots.h	/^const unsigned char VeriSign_Class_3_Public_Primary_Certification_Authority___G5_certificate[1239]={$/;"	v
VeriSign_Universal_Root_Certification_Authority_certificate	webrtc/base/sslroots.h	/^const unsigned char VeriSign_Universal_Root_Certification_Authority_certificate[1213]={$/;"	v
VerificationCallback	webrtc/base/ssladapter.h	/^typedef bool (*VerificationCallback)(void* cert);$/;"	t	namespace:rtc
Verify	webrtc/base/criticalsection_unittest.cc	/^  void Verify(const std::vector<int>& values) {$/;"	f	class:rtc::__anon10::CompareAndSwapVerifier
Verify	webrtc/base/criticalsection_unittest.cc	/^  void Verify(const std::vector<int>& values) {$/;"	f	class:rtc::__anon10::UniqueValueVerifier
Verify	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer_unittest.cc	/^void Verify(NonlinearBeamformer* bf, float target_azimuth_radians) {$/;"	f	namespace:webrtc::__anon190
VerifyAndAllocateFragmentationHeader	webrtc/modules/include/module_common_types.h	/^  void VerifyAndAllocateFragmentationHeader(const size_t size) {$/;"	f	class:webrtc::RTPFragmentationHeader
VerifyArray	webrtc/modules/audio_processing/test/bitexactness_tools.cc	/^::testing::AssertionResult VerifyArray(rtc::ArrayView<const float> reference,$/;"	f	namespace:webrtc::test
VerifyBuffer	webrtc/base/file_unittest.cc	/^bool VerifyBuffer(uint8_t* buffer, size_t length, uint8_t start_value) {$/;"	f	namespace:rtc
VerifyChannelsAreEqual	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^void VerifyChannelsAreEqual(int16_t* stereo, size_t samples_per_channel) {$/;"	f	namespace:webrtc::__anon183
VerifyDebugDump	webrtc/modules/audio_processing/test/debug_dump_test.cc	/^void DebugDumpTest::VerifyDebugDump(const std::string& in_filename) {$/;"	f	class:webrtc::test::DebugDumpTest
VerifyDebugDumpTest	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^void ApmTest::VerifyDebugDumpTest(Format format) {$/;"	f	class:webrtc::__anon183::ApmTest
VerifyDeinterleavedArray	webrtc/modules/audio_processing/test/bitexactness_tools.cc	/^::testing::AssertionResult VerifyDeinterleavedArray($/;"	f	namespace:webrtc::test
VerifyDelay	webrtc/modules/audio_processing/utility/delay_estimator_unittest.cc	/^void DelayEstimatorTest::VerifyDelay(BinaryDelayEstimator* binary_handle,$/;"	f	class:__anon232::DelayEstimatorTest
VerifyDocumentContents	webrtc/base/httpbase_unittest.cc	/^void HttpBaseTest::VerifyDocumentContents(const char* expected_data,$/;"	f	class:rtc::HttpBaseTest
VerifyDocumentStreamIsEOS	webrtc/base/httpbase_unittest.cc	/^void HttpBaseTest::VerifyDocumentStreamIsEOS() {$/;"	f	class:rtc::HttpBaseTest
VerifyDocumentStreamIsOpening	webrtc/base/httpbase_unittest.cc	/^void HttpBaseTest::VerifyDocumentStreamIsOpening() {$/;"	f	class:rtc::HttpBaseTest
VerifyDocumentStreamOpenEvent	webrtc/base/httpbase_unittest.cc	/^void HttpBaseTest::VerifyDocumentStreamOpenEvent() {$/;"	f	class:rtc::HttpBaseTest
VerifyFileContents	webrtc/base/filerotatingstream_unittest.cc	/^  void VerifyFileContents(const char* expected_contents,$/;"	f	class:rtc::MAYBE_FileRotatingStreamTest
VerifyFixedBitExactness	webrtc/modules/audio_processing/test/aec_dump_based_simulator.cc	/^bool VerifyFixedBitExactness(const webrtc::audioproc::Stream& msg,$/;"	f	namespace:webrtc::test::__anon219
VerifyFloatBitExactness	webrtc/modules/audio_processing/test/aec_dump_based_simulator.cc	/^bool VerifyFloatBitExactness(const webrtc::audioproc::Stream& msg,$/;"	f	namespace:webrtc::test::__anon219
VerifyHeaderComplete	webrtc/base/httpbase_unittest.cc	/^void HttpBaseTest::VerifyHeaderComplete(size_t event_count, bool empty_doc) {$/;"	f	class:rtc::HttpBaseTest
VerifyOutput	webrtc/common_audio/fir_filter_unittest.cc	/^void VerifyOutput(const float* expected_output,$/;"	f	namespace:webrtc::__anon80
VerifyOutput	webrtc/common_audio/sparse_fir_filter_unittest.cc	/^void VerifyOutput(const float (&expected_output)[N], const float (&output)[N]) {$/;"	f	namespace:webrtc::__anon100
VerifyParams	webrtc/common_audio/audio_converter_unittest.cc	/^void VerifyParams(const ChannelBuffer<float>& ref,$/;"	f	namespace:webrtc
VerifyPeerCertificate	webrtc/base/opensslstreamadapter.cc	/^bool OpenSSLStreamAdapter::VerifyPeerCertificate() {$/;"	f	class:rtc::OpenSSLStreamAdapter
VerifyProcessStreamBitExactness	webrtc/modules/audio_processing/test/aec_dump_based_simulator.cc	/^void AecDumpBasedSimulator::VerifyProcessStreamBitExactness($/;"	f	class:webrtc::test::AecDumpBasedSimulator
VerifyQueueSlots	webrtc/base/swap_queue.h	/^  bool VerifyQueueSlots() {$/;"	f	class:webrtc::SwapQueue
VerifyServerName	webrtc/base/openssladapter.cc	/^bool OpenSSLAdapter::VerifyServerName(SSL* ssl, const char* host,$/;"	f	class:rtc::OpenSSLAdapter
VerifySourceContents	webrtc/base/httpbase_unittest.cc	/^void HttpBaseTest::VerifySourceContents(const char* expected_data,$/;"	f	class:rtc::HttpBaseTest
VerifyStreamRead	webrtc/base/filerotatingstream_unittest.cc	/^  void VerifyStreamRead(const char* expected_contents,$/;"	f	class:rtc::MAYBE_CallSessionFileRotatingStreamTest
VerifyStreamRead	webrtc/base/filerotatingstream_unittest.cc	/^  void VerifyStreamRead(const char* expected_contents,$/;"	f	class:rtc::MAYBE_FileRotatingStreamTest
VerifyTestBuffer	webrtc/base/stream_unittest.cc	/^bool VerifyTestBuffer(unsigned char* buffer, size_t len,$/;"	f	namespace:rtc
VerifyTransferComplete	webrtc/base/httpbase_unittest.cc	/^void HttpBaseTest::VerifyTransferComplete(HttpMode mode, HttpError error) {$/;"	f	class:rtc::HttpBaseTest
Verisign_Class_3_Public_Primary_Certification_Authority___G3_certificate	webrtc/base/sslroots.h	/^const unsigned char Verisign_Class_3_Public_Primary_Certification_Authority___G3_certificate[1054]={$/;"	v
Verisign_Class_4_Public_Primary_Certification_Authority___G3_certificate	webrtc/base/sslroots.h	/^const unsigned char Verisign_Class_4_Public_Primary_Certification_Authority___G3_certificate[1054]={$/;"	v
Video	webrtc/modules/include/module_common_types.h	/^  RTPVideoHeader Video;$/;"	m	union:webrtc::RTPTypeHeader
VideoCodec	webrtc/common_types.cc	/^VideoCodec::VideoCodec()$/;"	f	class:webrtc::VideoCodec
VideoCodec	webrtc/common_types.h	/^class VideoCodec {$/;"	c	namespace:webrtc
VideoCodecComplexity	webrtc/common_types.h	/^enum VideoCodecComplexity {$/;"	g	namespace:webrtc
VideoCodecH264	webrtc/common_types.h	/^struct VideoCodecH264 {$/;"	s	namespace:webrtc
VideoCodecMode	webrtc/common_types.h	/^enum VideoCodecMode { kRealtimeVideo, kScreensharing };$/;"	g	namespace:webrtc
VideoCodecType	webrtc/common_types.h	/^enum VideoCodecType {$/;"	g	namespace:webrtc
VideoCodecUnion	webrtc/common_types.h	/^union VideoCodecUnion {$/;"	u	namespace:webrtc
VideoCodecVP8	webrtc/common_types.h	/^struct VideoCodecVP8 {$/;"	s	namespace:webrtc
VideoCodecVP9	webrtc/common_types.h	/^struct VideoCodecVP9 {$/;"	s	namespace:webrtc
VideoDecoderH264Settings	webrtc/config.h	/^struct VideoDecoderH264Settings {$/;"	s	namespace:webrtc
VideoEncoderConfig	webrtc/config.cc	/^VideoEncoderConfig::VideoEncoderConfig()$/;"	f	class:webrtc::VideoEncoderConfig
VideoEncoderConfig	webrtc/config.h	/^class VideoEncoderConfig {$/;"	c	namespace:webrtc
VideoRotation	webrtc/common_video/rotation.h	/^enum VideoRotation {$/;"	g	namespace:webrtc
VideoStream	webrtc/config.cc	/^VideoStream::VideoStream()$/;"	f	class:webrtc::VideoStream
VideoStream	webrtc/config.h	/^struct VideoStream {$/;"	s	namespace:webrtc
VideoStreamFactoryInterface	webrtc/config.h	/^  class VideoStreamFactoryInterface : public rtc::RefCountInterface {$/;"	c	class:webrtc::VideoEncoderConfig
VirtualSocket	webrtc/base/virtualsocketserver.cc	/^VirtualSocket::VirtualSocket(VirtualSocketServer* server,$/;"	f	class:rtc::VirtualSocket
VirtualSocket	webrtc/base/virtualsocketserver.h	/^class VirtualSocket : public AsyncSocket,$/;"	c	namespace:rtc
VirtualSocketServer	webrtc/base/virtualsocketserver.cc	/^VirtualSocketServer::VirtualSocketServer(SocketServer* ss)$/;"	f	class:rtc::VirtualSocketServer
VirtualSocketServer	webrtc/base/virtualsocketserver.h	/^class VirtualSocketServer : public SocketServer, public sigslot::has_slots<> {$/;"	c	namespace:rtc
VirtualSocketServerTest	webrtc/base/virtualsocket_unittest.cc	/^  VirtualSocketServerTest() : ss_(new VirtualSocketServer(NULL)),$/;"	f	class:VirtualSocketServerTest
VirtualSocketServerTest	webrtc/base/virtualsocket_unittest.cc	/^class VirtualSocketServerTest : public testing::Test {$/;"	c	file:
VoiceActivityDetector	webrtc/modules/audio_processing/vad/voice_activity_detector.cc	/^VoiceActivityDetector::VoiceActivityDetector()$/;"	f	class:webrtc::VoiceActivityDetector
VoiceActivityDetector	webrtc/modules/audio_processing/vad/voice_activity_detector.h	/^class VoiceActivityDetector {$/;"	c	namespace:webrtc
VoiceDetection	webrtc/modules/audio_processing/include/audio_processing.h	/^class VoiceDetection {$/;"	c	namespace:webrtc
VoiceDetectionImpl	webrtc/modules/audio_processing/voice_detection_impl.cc	/^VoiceDetectionImpl::VoiceDetectionImpl(rtc::CriticalSection* crit)$/;"	f	class:webrtc::VoiceDetectionImpl
VoiceDetectionImpl	webrtc/modules/audio_processing/voice_detection_impl.h	/^class VoiceDetectionImpl : public VoiceDetection {$/;"	c	namespace:webrtc
VoicingProbability	webrtc/modules/audio_processing/vad/pitch_based_vad.cc	/^int PitchBasedVad::VoicingProbability(const AudioFeatures& features,$/;"	f	class:webrtc::PitchBasedVad
VoidUnion	webrtc/base/function_view.h	/^  union VoidUnion {$/;"	u	class:rtc::final
VolumeCallbacks	webrtc/modules/audio_processing/agc/agc_manager_direct.h	/^class VolumeCallbacks {$/;"	c	namespace:webrtc
Vp8EncoderSpecificSettings	webrtc/config.cc	/^VideoEncoderConfig::Vp8EncoderSpecificSettings::Vp8EncoderSpecificSettings($/;"	f	class:webrtc::VideoEncoderConfig::Vp8EncoderSpecificSettings
Vp8EncoderSpecificSettings	webrtc/config.h	/^  class Vp8EncoderSpecificSettings : public EncoderSpecificSettings {$/;"	c	class:webrtc::VideoEncoderConfig
Vp9EncoderSpecificSettings	webrtc/config.cc	/^VideoEncoderConfig::Vp9EncoderSpecificSettings::Vp9EncoderSpecificSettings($/;"	f	class:webrtc::VideoEncoderConfig::Vp9EncoderSpecificSettings
Vp9EncoderSpecificSettings	webrtc/config.h	/^  class Vp9EncoderSpecificSettings : public EncoderSpecificSettings {$/;"	c	class:webrtc::VideoEncoderConfig
WAIT	webrtc/base/gunit.h	/^#define WAIT(/;"	d
WAIT_	webrtc/base/gunit.h	/^#define WAIT_(/;"	d
WARNING	webrtc/base/logging.h	/^  WARNING = LS_WARNING,$/;"	e	enum:rtc::LoggingSeverity
WARN_UNUSED_RESULT	webrtc/base/common.h	/^#define WARN_UNUSED_RESULT /;"	d
WARN_UNUSED_RESULT	webrtc/typedefs.h	/^#define WARN_UNUSED_RESULT /;"	d
WARN_UNUSED_RESULT	webrtc/typedefs.h	/^#define WARN_UNUSED_RESULT$/;"	d
WEBRTC_ARCH_32_BITS	webrtc/typedefs.h	/^#define WEBRTC_ARCH_32_BITS$/;"	d
WEBRTC_ARCH_64_BITS	webrtc/typedefs.h	/^#define WEBRTC_ARCH_64_BITS$/;"	d
WEBRTC_ARCH_ARM_FAMILY	webrtc/typedefs.h	/^#define WEBRTC_ARCH_ARM_FAMILY$/;"	d
WEBRTC_ARCH_LITTLE_ENDIAN	webrtc/typedefs.h	/^#define WEBRTC_ARCH_LITTLE_ENDIAN$/;"	d
WEBRTC_ARCH_MIPS_FAMILY	webrtc/typedefs.h	/^#define WEBRTC_ARCH_MIPS_FAMILY$/;"	d
WEBRTC_ARCH_X86	webrtc/typedefs.h	/^#define WEBRTC_ARCH_X86$/;"	d
WEBRTC_ARCH_X86_64	webrtc/typedefs.h	/^#define WEBRTC_ARCH_X86_64$/;"	d
WEBRTC_ARCH_X86_FAMILY	webrtc/typedefs.h	/^#define WEBRTC_ARCH_X86_FAMILY$/;"	d
WEBRTC_BASE_ARRAYSIZE_H_	webrtc/base/arraysize.h	/^#define WEBRTC_BASE_ARRAYSIZE_H_$/;"	d
WEBRTC_BASE_ARRAY_VIEW_H_	webrtc/base/array_view.h	/^#define WEBRTC_BASE_ARRAY_VIEW_H_$/;"	d
WEBRTC_BASE_ASYNCFILE_H__	webrtc/base/asyncfile.h	/^#define WEBRTC_BASE_ASYNCFILE_H__$/;"	d
WEBRTC_BASE_ASYNCINVOKER_H_	webrtc/base/asyncinvoker.h	/^#define WEBRTC_BASE_ASYNCINVOKER_H_$/;"	d
WEBRTC_BASE_ASYNCINVOKER_INL_H_	webrtc/base/asyncinvoker-inl.h	/^#define WEBRTC_BASE_ASYNCINVOKER_INL_H_$/;"	d
WEBRTC_BASE_ASYNCPACKETSOCKET_H_	webrtc/base/asyncpacketsocket.h	/^#define WEBRTC_BASE_ASYNCPACKETSOCKET_H_$/;"	d
WEBRTC_BASE_ASYNCRESOLVERINTERFACE_H_	webrtc/base/asyncresolverinterface.h	/^#define WEBRTC_BASE_ASYNCRESOLVERINTERFACE_H_$/;"	d
WEBRTC_BASE_ASYNCSOCKET_H_	webrtc/base/asyncsocket.h	/^#define WEBRTC_BASE_ASYNCSOCKET_H_$/;"	d
WEBRTC_BASE_ASYNCTCPSOCKET_H_	webrtc/base/asynctcpsocket.h	/^#define WEBRTC_BASE_ASYNCTCPSOCKET_H_$/;"	d
WEBRTC_BASE_ASYNCUDPSOCKET_H_	webrtc/base/asyncudpsocket.h	/^#define WEBRTC_BASE_ASYNCUDPSOCKET_H_$/;"	d
WEBRTC_BASE_ATOMICOPS_H_	webrtc/base/atomicops.h	/^#define WEBRTC_BASE_ATOMICOPS_H_$/;"	d
WEBRTC_BASE_AUTODETECTPROXY_H_	webrtc/base/autodetectproxy.h	/^#define WEBRTC_BASE_AUTODETECTPROXY_H_$/;"	d
WEBRTC_BASE_BASE64_H__	webrtc/base/base64.h	/^#define WEBRTC_BASE_BASE64_H__$/;"	d
WEBRTC_BASE_BASICTYPES_H_	webrtc/base/basictypes.h	/^#define WEBRTC_BASE_BASICTYPES_H_$/;"	d
WEBRTC_BASE_BIND_H_	webrtc/base/bind.h	/^#define WEBRTC_BASE_BIND_H_$/;"	d
WEBRTC_BASE_BITBUFFER_H_	webrtc/base/bitbuffer.h	/^#define WEBRTC_BASE_BITBUFFER_H_$/;"	d
WEBRTC_BASE_BUFFERQUEUE_H_	webrtc/base/bufferqueue.h	/^#define WEBRTC_BASE_BUFFERQUEUE_H_$/;"	d
WEBRTC_BASE_BUFFER_H_	webrtc/base/buffer.h	/^#define WEBRTC_BASE_BUFFER_H_$/;"	d
WEBRTC_BASE_BYTEBUFFER_H_	webrtc/base/bytebuffer.h	/^#define WEBRTC_BASE_BYTEBUFFER_H_$/;"	d
WEBRTC_BASE_BYTEORDER_H_	webrtc/base/byteorder.h	/^#define WEBRTC_BASE_BYTEORDER_H_$/;"	d
WEBRTC_BASE_CALLBACK_H_	webrtc/base/callback.h	/^#define WEBRTC_BASE_CALLBACK_H_$/;"	d
WEBRTC_BASE_CHECKS_H_	webrtc/base/checks.h	/^#define WEBRTC_BASE_CHECKS_H_$/;"	d
WEBRTC_BASE_COMMON_H_	webrtc/base/common.h	/^#define WEBRTC_BASE_COMMON_H_$/;"	d
WEBRTC_BASE_CONSTRUCTORMAGIC_H_	webrtc/base/constructormagic.h	/^#define WEBRTC_BASE_CONSTRUCTORMAGIC_H_$/;"	d
WEBRTC_BASE_COPYONWRITEBUFFER_H_	webrtc/base/copyonwritebuffer.h	/^#define WEBRTC_BASE_COPYONWRITEBUFFER_H_$/;"	d
WEBRTC_BASE_CRC32_H_	webrtc/base/crc32.h	/^#define WEBRTC_BASE_CRC32_H_$/;"	d
WEBRTC_BASE_CRITICALSECTION_H_	webrtc/base/criticalsection.h	/^#define WEBRTC_BASE_CRITICALSECTION_H_$/;"	d
WEBRTC_BASE_DBUS_H_	webrtc/base/dbus.h	/^#define WEBRTC_BASE_DBUS_H_$/;"	d
WEBRTC_BASE_DEPRECATION_H_	webrtc/base/deprecation.h	/^#define WEBRTC_BASE_DEPRECATION_H_$/;"	d
WEBRTC_BASE_DISKCACHEWIN32_H__	webrtc/base/diskcache_win32.h	/^#define WEBRTC_BASE_DISKCACHEWIN32_H__$/;"	d
WEBRTC_BASE_DISKCACHE_H__	webrtc/base/diskcache.h	/^#define WEBRTC_BASE_DISKCACHE_H__$/;"	d
WEBRTC_BASE_DSCP_H_	webrtc/base/dscp.h	/^#define WEBRTC_BASE_DSCP_H_$/;"	d
WEBRTC_BASE_EVENT_H__	webrtc/base/event.h	/^#define WEBRTC_BASE_EVENT_H__$/;"	d
WEBRTC_BASE_EVENT_TRACER_H_	webrtc/base/event_tracer.h	/^#define WEBRTC_BASE_EVENT_TRACER_H_$/;"	d
WEBRTC_BASE_EXP_FILTER_H_	webrtc/base/exp_filter.h	/^#define WEBRTC_BASE_EXP_FILTER_H_$/;"	d
WEBRTC_BASE_FAKECLOCK_H_	webrtc/base/fakeclock.h	/^#define WEBRTC_BASE_FAKECLOCK_H_$/;"	d
WEBRTC_BASE_FAKENETWORK_H_	webrtc/base/fakenetwork.h	/^#define WEBRTC_BASE_FAKENETWORK_H_$/;"	d
WEBRTC_BASE_FAKESSLIDENTITY_H_	webrtc/base/fakesslidentity.h	/^#define WEBRTC_BASE_FAKESSLIDENTITY_H_$/;"	d
WEBRTC_BASE_FAKETASKRUNNER_H_	webrtc/base/faketaskrunner.h	/^#define WEBRTC_BASE_FAKETASKRUNNER_H_$/;"	d
WEBRTC_BASE_FILEROTATINGSTREAM_H_	webrtc/base/filerotatingstream.h	/^#define WEBRTC_BASE_FILEROTATINGSTREAM_H_$/;"	d
WEBRTC_BASE_FILEUTILS_H_	webrtc/base/fileutils.h	/^#define WEBRTC_BASE_FILEUTILS_H_$/;"	d
WEBRTC_BASE_FILEUTILS_MOCK_H_	webrtc/base/fileutils_mock.h	/^#define WEBRTC_BASE_FILEUTILS_MOCK_H_$/;"	d
WEBRTC_BASE_FILE_H_	webrtc/base/file.h	/^#define WEBRTC_BASE_FILE_H_$/;"	d
WEBRTC_BASE_FILE_ROTATING_LOG_SINK_H_	webrtc/base/logsinks.h	/^#define WEBRTC_BASE_FILE_ROTATING_LOG_SINK_H_$/;"	d
WEBRTC_BASE_FIREWALLSOCKETSERVER_H_	webrtc/base/firewallsocketserver.h	/^#define WEBRTC_BASE_FIREWALLSOCKETSERVER_H_$/;"	d
WEBRTC_BASE_FLAGS_H__	webrtc/base/flags.h	/^#define WEBRTC_BASE_FLAGS_H__$/;"	d
WEBRTC_BASE_FORMAT_MACROS_H_	webrtc/base/format_macros.h	/^#define WEBRTC_BASE_FORMAT_MACROS_H_$/;"	d
WEBRTC_BASE_FUNCTION_VIEW_H_	webrtc/base/function_view.h	/^#define WEBRTC_BASE_FUNCTION_VIEW_H_$/;"	d
WEBRTC_BASE_GTEST_PROD_UTIL_H_	webrtc/base/gtest_prod_util.h	/^#define WEBRTC_BASE_GTEST_PROD_UTIL_H_$/;"	d
WEBRTC_BASE_GUNIT_H_	webrtc/base/gunit.h	/^#define WEBRTC_BASE_GUNIT_H_$/;"	d
WEBRTC_BASE_GUNIT_PROD_H_	webrtc/base/gunit_prod.h	/^#define WEBRTC_BASE_GUNIT_PROD_H_$/;"	d
WEBRTC_BASE_HELPERS_H_	webrtc/base/helpers.h	/^#define WEBRTC_BASE_HELPERS_H_$/;"	d
WEBRTC_BASE_HTTPBASE_H__	webrtc/base/httpbase.h	/^#define WEBRTC_BASE_HTTPBASE_H__$/;"	d
WEBRTC_BASE_HTTPCLIENT_H__	webrtc/base/httpclient.h	/^#define WEBRTC_BASE_HTTPCLIENT_H__$/;"	d
WEBRTC_BASE_HTTPCOMMON_H__	webrtc/base/httpcommon.h	/^#define WEBRTC_BASE_HTTPCOMMON_H__$/;"	d
WEBRTC_BASE_HTTPCOMMON_INL_H__	webrtc/base/httpcommon-inl.h	/^#define WEBRTC_BASE_HTTPCOMMON_INL_H__$/;"	d
WEBRTC_BASE_HTTPSERVER_H__	webrtc/base/httpserver.h	/^#define WEBRTC_BASE_HTTPSERVER_H__$/;"	d
WEBRTC_BASE_IFADDRS_ANDROID_H_	webrtc/base/ifaddrs-android.h	/^#define WEBRTC_BASE_IFADDRS_ANDROID_H_$/;"	d
WEBRTC_BASE_IFADDRS_CONVERTER_H_	webrtc/base/ifaddrs_converter.h	/^#define WEBRTC_BASE_IFADDRS_CONVERTER_H_$/;"	d
WEBRTC_BASE_IGNORE_WUNDEF_H_	webrtc/base/ignore_wundef.h	/^#define WEBRTC_BASE_IGNORE_WUNDEF_H_$/;"	d
WEBRTC_BASE_IPADDRESS_H_	webrtc/base/ipaddress.h	/^#define WEBRTC_BASE_IPADDRESS_H_$/;"	d
WEBRTC_BASE_JSON_H_	webrtc/base/json.h	/^#define WEBRTC_BASE_JSON_H_$/;"	d
WEBRTC_BASE_KEEP_REF_UNTIL_DONE_H_	webrtc/base/keep_ref_until_done.h	/^#define WEBRTC_BASE_KEEP_REF_UNTIL_DONE_H_$/;"	d
WEBRTC_BASE_LATEBINDINGSYMBOLTABLE_H_	webrtc/base/latebindingsymboltable.h	/^#define WEBRTC_BASE_LATEBINDINGSYMBOLTABLE_H_$/;"	d
WEBRTC_BASE_LIBDBUSGLIBSYMBOLTABLE_H_	webrtc/base/libdbusglibsymboltable.h	/^#define WEBRTC_BASE_LIBDBUSGLIBSYMBOLTABLE_H_$/;"	d
WEBRTC_BASE_LINKED_PTR_H__	webrtc/base/linked_ptr.h	/^#define WEBRTC_BASE_LINKED_PTR_H__$/;"	d
WEBRTC_BASE_LINUXFDWALK_H_	webrtc/base/linuxfdwalk.h	/^#define WEBRTC_BASE_LINUXFDWALK_H_$/;"	d
WEBRTC_BASE_LINUXWINDOWPICKER_H_	webrtc/base/x11windowpicker.h	/^#define WEBRTC_BASE_LINUXWINDOWPICKER_H_$/;"	d
WEBRTC_BASE_LINUX_H_	webrtc/base/linux.h	/^#define WEBRTC_BASE_LINUX_H_$/;"	d
WEBRTC_BASE_LOCATION_H_	webrtc/base/location.h	/^#define WEBRTC_BASE_LOCATION_H_$/;"	d
WEBRTC_BASE_LOGGING_H_	webrtc/base/logging.h	/^#define WEBRTC_BASE_LOGGING_H_$/;"	d
WEBRTC_BASE_MACCOCOATHREADHELPER_H__	webrtc/base/maccocoathreadhelper.h	/^#define WEBRTC_BASE_MACCOCOATHREADHELPER_H__$/;"	d
WEBRTC_BASE_MACCONVERSION_H_	webrtc/base/macconversion.h	/^#define WEBRTC_BASE_MACCONVERSION_H_$/;"	d
WEBRTC_BASE_MACUTILS_H__	webrtc/base/macutils.h	/^#define WEBRTC_BASE_MACUTILS_H__$/;"	d
WEBRTC_BASE_MACWINDOWPICKER_H_	webrtc/base/macwindowpicker.h	/^#define WEBRTC_BASE_MACWINDOWPICKER_H_$/;"	d
WEBRTC_BASE_MATHUTILS_H_	webrtc/base/mathutils.h	/^#define WEBRTC_BASE_MATHUTILS_H_$/;"	d
WEBRTC_BASE_MD5DIGEST_H_	webrtc/base/md5digest.h	/^#define WEBRTC_BASE_MD5DIGEST_H_$/;"	d
WEBRTC_BASE_MD5_H_	webrtc/base/md5.h	/^#define WEBRTC_BASE_MD5_H_$/;"	d
WEBRTC_BASE_MESSAGEDIGEST_H_	webrtc/base/messagedigest.h	/^#define WEBRTC_BASE_MESSAGEDIGEST_H_$/;"	d
WEBRTC_BASE_MESSAGEHANDLER_H_	webrtc/base/messagehandler.h	/^#define WEBRTC_BASE_MESSAGEHANDLER_H_$/;"	d
WEBRTC_BASE_MESSAGEQUEUE_H_	webrtc/base/messagequeue.h	/^#define WEBRTC_BASE_MESSAGEQUEUE_H_$/;"	d
WEBRTC_BASE_MOD_OPS_H_	webrtc/base/mod_ops.h	/^#define WEBRTC_BASE_MOD_OPS_H_$/;"	d
WEBRTC_BASE_NATSERVER_H_	webrtc/base/natserver.h	/^#define WEBRTC_BASE_NATSERVER_H_$/;"	d
WEBRTC_BASE_NATSOCKETFACTORY_H_	webrtc/base/natsocketfactory.h	/^#define WEBRTC_BASE_NATSOCKETFACTORY_H_$/;"	d
WEBRTC_BASE_NATTYPE_H__	webrtc/base/nattypes.h	/^#define WEBRTC_BASE_NATTYPE_H__$/;"	d
WEBRTC_BASE_NETHELPERS_H_	webrtc/base/nethelpers.h	/^#define WEBRTC_BASE_NETHELPERS_H_$/;"	d
WEBRTC_BASE_NETWORKMONITOR_H_	webrtc/base/networkmonitor.h	/^#define WEBRTC_BASE_NETWORKMONITOR_H_$/;"	d
WEBRTC_BASE_NETWORKROUTE_H_	webrtc/base/networkroute.h	/^#define WEBRTC_BASE_NETWORKROUTE_H_$/;"	d
WEBRTC_BASE_NETWORK_H_	webrtc/base/network.h	/^#define WEBRTC_BASE_NETWORK_H_$/;"	d
WEBRTC_BASE_NULLSOCKETSERVER_H_	webrtc/base/nullsocketserver.h	/^#define WEBRTC_BASE_NULLSOCKETSERVER_H_$/;"	d
WEBRTC_BASE_ONETIMEEVENT_H_	webrtc/base/onetimeevent.h	/^#define WEBRTC_BASE_ONETIMEEVENT_H_$/;"	d
WEBRTC_BASE_OPENSSLADAPTER_H__	webrtc/base/openssladapter.h	/^#define WEBRTC_BASE_OPENSSLADAPTER_H__$/;"	d
WEBRTC_BASE_OPENSSLDIGEST_H_	webrtc/base/openssldigest.h	/^#define WEBRTC_BASE_OPENSSLDIGEST_H_$/;"	d
WEBRTC_BASE_OPENSSLIDENTITY_H_	webrtc/base/opensslidentity.h	/^#define WEBRTC_BASE_OPENSSLIDENTITY_H_$/;"	d
WEBRTC_BASE_OPENSSLSTREAMADAPTER_H__	webrtc/base/opensslstreamadapter.h	/^#define WEBRTC_BASE_OPENSSLSTREAMADAPTER_H__$/;"	d
WEBRTC_BASE_OPENSSL_H_	webrtc/base/openssl.h	/^#define WEBRTC_BASE_OPENSSL_H_$/;"	d
WEBRTC_BASE_OPTIONAL_H_	webrtc/base/optional.h	/^#define WEBRTC_BASE_OPTIONAL_H_$/;"	d
WEBRTC_BASE_OPTIONSFILE_H_	webrtc/base/optionsfile.h	/^#define WEBRTC_BASE_OPTIONSFILE_H_$/;"	d
WEBRTC_BASE_PATHUTILS_H__	webrtc/base/pathutils.h	/^#define WEBRTC_BASE_PATHUTILS_H__$/;"	d
WEBRTC_BASE_PHYSICALSOCKETSERVER_H__	webrtc/base/physicalsocketserver.h	/^#define WEBRTC_BASE_PHYSICALSOCKETSERVER_H__$/;"	d
WEBRTC_BASE_PLATFORM_FILE_H_	webrtc/base/platform_file.h	/^#define WEBRTC_BASE_PLATFORM_FILE_H_$/;"	d
WEBRTC_BASE_PLATFORM_THREAD_H_	webrtc/base/platform_thread.h	/^#define WEBRTC_BASE_PLATFORM_THREAD_H_$/;"	d
WEBRTC_BASE_PLATFORM_THREAD_TYPES_H_	webrtc/base/platform_thread_types.h	/^#define WEBRTC_BASE_PLATFORM_THREAD_TYPES_H_$/;"	d
WEBRTC_BASE_PROXYINFO_H__	webrtc/base/proxyinfo.h	/^#define WEBRTC_BASE_PROXYINFO_H__$/;"	d
WEBRTC_BASE_PROXYSERVER_H_	webrtc/base/proxyserver.h	/^#define WEBRTC_BASE_PROXYSERVER_H_$/;"	d
WEBRTC_BASE_RACE_CHECKER_H_	webrtc/base/race_checker.h	/^#define WEBRTC_BASE_RACE_CHECKER_H_$/;"	d
WEBRTC_BASE_RANDOM_H_	webrtc/base/random.h	/^#define WEBRTC_BASE_RANDOM_H_$/;"	d
WEBRTC_BASE_RATELIMITER_H_	webrtc/base/ratelimiter.h	/^#define WEBRTC_BASE_RATELIMITER_H_$/;"	d
WEBRTC_BASE_RATETRACKER_H_	webrtc/base/ratetracker.h	/^#define WEBRTC_BASE_RATETRACKER_H_$/;"	d
WEBRTC_BASE_RATE_LIMITER_H_	webrtc/base/rate_limiter.h	/^#define WEBRTC_BASE_RATE_LIMITER_H_$/;"	d
WEBRTC_BASE_RATE_STATISTICS_H_	webrtc/base/rate_statistics.h	/^#define WEBRTC_BASE_RATE_STATISTICS_H_$/;"	d
WEBRTC_BASE_REFCOUNTEDOBJECT_H_	webrtc/base/refcountedobject.h	/^#define WEBRTC_BASE_REFCOUNTEDOBJECT_H_$/;"	d
WEBRTC_BASE_REFCOUNT_H_	webrtc/base/refcount.h	/^#define WEBRTC_BASE_REFCOUNT_H_$/;"	d
WEBRTC_BASE_ROLLINGACCUMULATOR_H_	webrtc/base/rollingaccumulator.h	/^#define WEBRTC_BASE_ROLLINGACCUMULATOR_H_$/;"	d
WEBRTC_BASE_RTCCERTIFICATEGENERATOR_H_	webrtc/base/rtccertificategenerator.h	/^#define WEBRTC_BASE_RTCCERTIFICATEGENERATOR_H_$/;"	d
WEBRTC_BASE_RTCCERTIFICATE_H_	webrtc/base/rtccertificate.h	/^#define WEBRTC_BASE_RTCCERTIFICATE_H_$/;"	d
WEBRTC_BASE_SAFE_CONVERSIONS_H_	webrtc/base/safe_conversions.h	/^#define WEBRTC_BASE_SAFE_CONVERSIONS_H_$/;"	d
WEBRTC_BASE_SAFE_CONVERSIONS_IMPL_H_	webrtc/base/safe_conversions_impl.h	/^#define WEBRTC_BASE_SAFE_CONVERSIONS_IMPL_H_$/;"	d
WEBRTC_BASE_SANITIZER_H_	webrtc/base/sanitizer.h	/^#define WEBRTC_BASE_SANITIZER_H_$/;"	d
WEBRTC_BASE_SCOPEDPTRCOLLECTION_H_	webrtc/base/scopedptrcollection.h	/^#define WEBRTC_BASE_SCOPEDPTRCOLLECTION_H_$/;"	d
WEBRTC_BASE_SCOPED_AUTORELEASE_POOL_H__	webrtc/base/scoped_autorelease_pool.h	/^#define WEBRTC_BASE_SCOPED_AUTORELEASE_POOL_H__$/;"	d
WEBRTC_BASE_SCOPED_REF_PTR_H_	webrtc/base/scoped_ref_ptr.h	/^#define WEBRTC_BASE_SCOPED_REF_PTR_H_$/;"	d
WEBRTC_BASE_SEQUENCED_TASK_CHECKER_H_	webrtc/base/sequenced_task_checker.h	/^#define WEBRTC_BASE_SEQUENCED_TASK_CHECKER_H_$/;"	d
WEBRTC_BASE_SEQUENCED_TASK_CHECKER_IMPL_H_	webrtc/base/sequenced_task_checker_impl.h	/^#define WEBRTC_BASE_SEQUENCED_TASK_CHECKER_IMPL_H_$/;"	d
WEBRTC_BASE_SHA1DIGEST_H_	webrtc/base/sha1digest.h	/^#define WEBRTC_BASE_SHA1DIGEST_H_$/;"	d
WEBRTC_BASE_SHA1_H_	webrtc/base/sha1.h	/^#define WEBRTC_BASE_SHA1_H_$/;"	d
WEBRTC_BASE_SHAREDEXCLUSIVELOCK_H_	webrtc/base/sharedexclusivelock.h	/^#define WEBRTC_BASE_SHAREDEXCLUSIVELOCK_H_$/;"	d
WEBRTC_BASE_SIGNALTHREAD_H_	webrtc/base/signalthread.h	/^#define WEBRTC_BASE_SIGNALTHREAD_H_$/;"	d
WEBRTC_BASE_SIGSLOTREPEATER_H__	webrtc/base/sigslotrepeater.h	/^#define WEBRTC_BASE_SIGSLOTREPEATER_H__$/;"	d
WEBRTC_BASE_SIGSLOTTESTER_H_	webrtc/base/sigslottester.h	/^#define WEBRTC_BASE_SIGSLOTTESTER_H_$/;"	d
WEBRTC_BASE_SIGSLOT_H__	webrtc/base/sigslot.h	/^#define WEBRTC_BASE_SIGSLOT_H__$/;"	d
WEBRTC_BASE_SOCKETADAPTERS_H_	webrtc/base/socketadapters.h	/^#define WEBRTC_BASE_SOCKETADAPTERS_H_$/;"	d
WEBRTC_BASE_SOCKETADDRESSPAIR_H__	webrtc/base/socketaddresspair.h	/^#define WEBRTC_BASE_SOCKETADDRESSPAIR_H__$/;"	d
WEBRTC_BASE_SOCKETADDRESS_H_	webrtc/base/socketaddress.h	/^#define WEBRTC_BASE_SOCKETADDRESS_H_$/;"	d
WEBRTC_BASE_SOCKETFACTORY_H__	webrtc/base/socketfactory.h	/^#define WEBRTC_BASE_SOCKETFACTORY_H__$/;"	d
WEBRTC_BASE_SOCKETPOOL_H_	webrtc/base/socketpool.h	/^#define WEBRTC_BASE_SOCKETPOOL_H_$/;"	d
WEBRTC_BASE_SOCKETSERVER_H_	webrtc/base/socketserver.h	/^#define WEBRTC_BASE_SOCKETSERVER_H_$/;"	d
WEBRTC_BASE_SOCKETSTREAM_H_	webrtc/base/socketstream.h	/^#define WEBRTC_BASE_SOCKETSTREAM_H_$/;"	d
WEBRTC_BASE_SOCKET_H__	webrtc/base/socket.h	/^#define WEBRTC_BASE_SOCKET_H__$/;"	d
WEBRTC_BASE_SOCKET_UNITTEST_H_	webrtc/base/socket_unittest.h	/^#define WEBRTC_BASE_SOCKET_UNITTEST_H_$/;"	d
WEBRTC_BASE_SSLADAPTER_H_	webrtc/base/ssladapter.h	/^#define WEBRTC_BASE_SSLADAPTER_H_$/;"	d
WEBRTC_BASE_SSLCONFIG_H_	webrtc/base/sslconfig.h	/^#define WEBRTC_BASE_SSLCONFIG_H_$/;"	d
WEBRTC_BASE_SSLFINGERPRINT_H_	webrtc/base/sslfingerprint.h	/^#define WEBRTC_BASE_SSLFINGERPRINT_H_$/;"	d
WEBRTC_BASE_SSLIDENTITY_H_	webrtc/base/sslidentity.h	/^#define WEBRTC_BASE_SSLIDENTITY_H_$/;"	d
WEBRTC_BASE_SSLSOCKETFACTORY_H__	webrtc/base/sslsocketfactory.h	/^#define WEBRTC_BASE_SSLSOCKETFACTORY_H__$/;"	d
WEBRTC_BASE_SSLSTREAMADAPTER_H_	webrtc/base/sslstreamadapter.h	/^#define WEBRTC_BASE_SSLSTREAMADAPTER_H_$/;"	d
WEBRTC_BASE_STREAM_H_	webrtc/base/stream.h	/^#define WEBRTC_BASE_STREAM_H_$/;"	d
WEBRTC_BASE_STRINGENCODE_H_	webrtc/base/stringencode.h	/^#define WEBRTC_BASE_STRINGENCODE_H_$/;"	d
WEBRTC_BASE_STRINGUTILS_H__	webrtc/base/stringutils.h	/^#define WEBRTC_BASE_STRINGUTILS_H__$/;"	d
WEBRTC_BASE_SWAP_QUEUE_H_	webrtc/base/swap_queue.h	/^#define WEBRTC_BASE_SWAP_QUEUE_H_$/;"	d
WEBRTC_BASE_SYSTEMINFO_H__	webrtc/base/systeminfo.h	/^#define WEBRTC_BASE_SYSTEMINFO_H__$/;"	d
WEBRTC_BASE_TASKPARENT_H__	webrtc/base/taskparent.h	/^#define WEBRTC_BASE_TASKPARENT_H__$/;"	d
WEBRTC_BASE_TASKRUNNER_H__	webrtc/base/taskrunner.h	/^#define WEBRTC_BASE_TASKRUNNER_H__$/;"	d
WEBRTC_BASE_TASK_H__	webrtc/base/task.h	/^#define WEBRTC_BASE_TASK_H__$/;"	d
WEBRTC_BASE_TASK_QUEUE_H_	webrtc/base/task_queue.h	/^#define WEBRTC_BASE_TASK_QUEUE_H_$/;"	d
WEBRTC_BASE_TASK_QUEUE_POSIX_H_	webrtc/base/task_queue_posix.h	/^#define WEBRTC_BASE_TASK_QUEUE_POSIX_H_$/;"	d
WEBRTC_BASE_TEMPLATE_UTIL_H_	webrtc/base/template_util.h	/^#define WEBRTC_BASE_TEMPLATE_UTIL_H_$/;"	d
WEBRTC_BASE_TESTCLIENT_H_	webrtc/base/testclient.h	/^#define WEBRTC_BASE_TESTCLIENT_H_$/;"	d
WEBRTC_BASE_TESTECHOSERVER_H_	webrtc/base/testechoserver.h	/^#define WEBRTC_BASE_TESTECHOSERVER_H_$/;"	d
WEBRTC_BASE_TESTUTILS_H__	webrtc/base/testutils.h	/^#define WEBRTC_BASE_TESTUTILS_H__$/;"	d
WEBRTC_BASE_THREAD_CHECKER_H_	webrtc/base/thread_checker.h	/^#define WEBRTC_BASE_THREAD_CHECKER_H_$/;"	d
WEBRTC_BASE_THREAD_CHECKER_IMPL_H_	webrtc/base/thread_checker_impl.h	/^#define WEBRTC_BASE_THREAD_CHECKER_IMPL_H_$/;"	d
WEBRTC_BASE_THREAD_H_	webrtc/base/thread.h	/^#define WEBRTC_BASE_THREAD_H_$/;"	d
WEBRTC_BASE_TIMEDELTA_H_	webrtc/base/timedelta.h	/^#define WEBRTC_BASE_TIMEDELTA_H_$/;"	d
WEBRTC_BASE_TIMESTAMPALIGNER_H_	webrtc/base/timestampaligner.h	/^#define WEBRTC_BASE_TIMESTAMPALIGNER_H_$/;"	d
WEBRTC_BASE_TIMEUTILS_H_	webrtc/base/timeutils.h	/^#define WEBRTC_BASE_TIMEUTILS_H_$/;"	d
WEBRTC_BASE_TRACE_EVENT_H_	webrtc/base/trace_event.h	/^#define WEBRTC_BASE_TRACE_EVENT_H_$/;"	d
WEBRTC_BASE_TRANSFORMADAPTER_H__	webrtc/base/transformadapter.h	/^#define WEBRTC_BASE_TRANSFORMADAPTER_H__$/;"	d
WEBRTC_BASE_TYPE_TRAITS_H_	webrtc/base/type_traits.h	/^#define WEBRTC_BASE_TYPE_TRAITS_H_$/;"	d
WEBRTC_BASE_UNIXFILESYSTEM_H_	webrtc/base/unixfilesystem.h	/^#define WEBRTC_BASE_UNIXFILESYSTEM_H_$/;"	d
WEBRTC_BASE_VIRTUALSOCKETSERVER_H_	webrtc/base/virtualsocketserver.h	/^#define WEBRTC_BASE_VIRTUALSOCKETSERVER_H_$/;"	d
WEBRTC_BASE_WEAK_PTR_H_	webrtc/base/weak_ptr.h	/^#define WEBRTC_BASE_WEAK_PTR_H_$/;"	d
WEBRTC_BASE_WIN32REGKEY_H_	webrtc/base/win32regkey.h	/^#define WEBRTC_BASE_WIN32REGKEY_H_$/;"	d
WEBRTC_BASE_WIN32SOCKETINIT_H_	webrtc/base/win32socketinit.h	/^#define WEBRTC_BASE_WIN32SOCKETINIT_H_$/;"	d
WEBRTC_BASE_WIN32SOCKETSERVER_H_	webrtc/base/win32socketserver.h	/^#define WEBRTC_BASE_WIN32SOCKETSERVER_H_$/;"	d
WEBRTC_BASE_WIN32WINDOWPICKER_H_	webrtc/base/win32windowpicker.h	/^#define WEBRTC_BASE_WIN32WINDOWPICKER_H_$/;"	d
WEBRTC_BASE_WIN32WINDOW_H_	webrtc/base/win32window.h	/^#define WEBRTC_BASE_WIN32WINDOW_H_$/;"	d
WEBRTC_BASE_WIN32_H_	webrtc/base/win32.h	/^#define WEBRTC_BASE_WIN32_H_$/;"	d
WEBRTC_BASE_WINDOWPICKERFACTORY_H_	webrtc/base/windowpickerfactory.h	/^#define WEBRTC_BASE_WINDOWPICKERFACTORY_H_$/;"	d
WEBRTC_BASE_WINDOWPICKER_H_	webrtc/base/windowpicker.h	/^#define WEBRTC_BASE_WINDOWPICKER_H_$/;"	d
WEBRTC_BASE_WINDOW_H_	webrtc/base/window.h	/^#define WEBRTC_BASE_WINDOW_H_$/;"	d
WEBRTC_BASE_WINPING_H__	webrtc/base/winping.h	/^#define WEBRTC_BASE_WINPING_H__$/;"	d
WEBRTC_COMMON_AUDIO_AUDIO_CONVERTER_H_	webrtc/common_audio/audio_converter.h	/^#define WEBRTC_COMMON_AUDIO_AUDIO_CONVERTER_H_$/;"	d
WEBRTC_COMMON_AUDIO_AUDIO_RING_BUFFER_H_	webrtc/common_audio/audio_ring_buffer.h	/^#define WEBRTC_COMMON_AUDIO_AUDIO_RING_BUFFER_H_$/;"	d
WEBRTC_COMMON_AUDIO_FFT4G_H_	webrtc/common_audio/fft4g.h	/^#define WEBRTC_COMMON_AUDIO_FFT4G_H_$/;"	d
WEBRTC_COMMON_AUDIO_FIR_FILTER_H_	webrtc/common_audio/fir_filter.h	/^#define WEBRTC_COMMON_AUDIO_FIR_FILTER_H_$/;"	d
WEBRTC_COMMON_AUDIO_FIR_FILTER_NEON_H_	webrtc/common_audio/fir_filter_neon.h	/^#define WEBRTC_COMMON_AUDIO_FIR_FILTER_NEON_H_$/;"	d
WEBRTC_COMMON_AUDIO_FIR_FILTER_SSE_H_	webrtc/common_audio/fir_filter_sse.h	/^#define WEBRTC_COMMON_AUDIO_FIR_FILTER_SSE_H_$/;"	d
WEBRTC_COMMON_AUDIO_INCLUDE_AUDIO_UTIL_H_	webrtc/common_audio/include/audio_util.h	/^#define WEBRTC_COMMON_AUDIO_INCLUDE_AUDIO_UTIL_H_$/;"	d
WEBRTC_COMMON_AUDIO_LAPPED_TRANSFORM_H_	webrtc/common_audio/lapped_transform.h	/^#define WEBRTC_COMMON_AUDIO_LAPPED_TRANSFORM_H_$/;"	d
WEBRTC_COMMON_AUDIO_REAL_FOURIER_H_	webrtc/common_audio/real_fourier.h	/^#define WEBRTC_COMMON_AUDIO_REAL_FOURIER_H_$/;"	d
WEBRTC_COMMON_AUDIO_REAL_FOURIER_OOURA_H_	webrtc/common_audio/real_fourier_ooura.h	/^#define WEBRTC_COMMON_AUDIO_REAL_FOURIER_OOURA_H_$/;"	d
WEBRTC_COMMON_AUDIO_REAL_FOURIER_OPENMAX_H_	webrtc/common_audio/real_fourier_openmax.h	/^#define WEBRTC_COMMON_AUDIO_REAL_FOURIER_OPENMAX_H_$/;"	d
WEBRTC_COMMON_AUDIO_RESAMPLER_INCLUDE_PUSH_RESAMPLER_H_	webrtc/common_audio/resampler/include/push_resampler.h	/^#define WEBRTC_COMMON_AUDIO_RESAMPLER_INCLUDE_PUSH_RESAMPLER_H_$/;"	d
WEBRTC_COMMON_AUDIO_RESAMPLER_PUSH_SINC_RESAMPLER_H_	webrtc/common_audio/resampler/push_sinc_resampler.h	/^#define WEBRTC_COMMON_AUDIO_RESAMPLER_PUSH_SINC_RESAMPLER_H_$/;"	d
WEBRTC_COMMON_AUDIO_RESAMPLER_SINC_RESAMPLER_H_	webrtc/common_audio/resampler/sinc_resampler.h	/^#define WEBRTC_COMMON_AUDIO_RESAMPLER_SINC_RESAMPLER_H_$/;"	d
WEBRTC_COMMON_AUDIO_RESAMPLER_SINUSOIDAL_LINEAR_CHIRP_SOURCE_H_	webrtc/common_audio/resampler/sinusoidal_linear_chirp_source.h	/^#define WEBRTC_COMMON_AUDIO_RESAMPLER_SINUSOIDAL_LINEAR_CHIRP_SOURCE_H_$/;"	d
WEBRTC_COMMON_AUDIO_RING_BUFFER_H_	webrtc/common_audio/ring_buffer.h	/^#define WEBRTC_COMMON_AUDIO_RING_BUFFER_H_$/;"	d
WEBRTC_COMMON_AUDIO_SIGNAL_PROCESSING_COMPLEX_FFT_TABLES_H_	webrtc/common_audio/signal_processing/complex_fft_tables.h	/^#define WEBRTC_COMMON_AUDIO_SIGNAL_PROCESSING_COMPLEX_FFT_TABLES_H_$/;"	d
WEBRTC_COMMON_AUDIO_SIGNAL_PROCESSING_INCLUDE_REAL_FFT_H_	webrtc/common_audio/signal_processing/include/real_fft.h	/^#define WEBRTC_COMMON_AUDIO_SIGNAL_PROCESSING_INCLUDE_REAL_FFT_H_$/;"	d
WEBRTC_COMMON_AUDIO_SPARSE_FIR_FILTER_H_	webrtc/common_audio/sparse_fir_filter.h	/^#define WEBRTC_COMMON_AUDIO_SPARSE_FIR_FILTER_H_$/;"	d
WEBRTC_COMMON_AUDIO_VAD_INCLUDE_VAD_H_	webrtc/common_audio/vad/include/vad.h	/^#define WEBRTC_COMMON_AUDIO_VAD_INCLUDE_VAD_H_$/;"	d
WEBRTC_COMMON_AUDIO_VAD_INCLUDE_WEBRTC_VAD_H_	webrtc/common_audio/vad/include/webrtc_vad.h	/^#define WEBRTC_COMMON_AUDIO_VAD_INCLUDE_WEBRTC_VAD_H_$/;"	d
WEBRTC_COMMON_AUDIO_VAD_MOCK_MOCK_VAD_H_	webrtc/common_audio/vad/mock/mock_vad.h	/^#define WEBRTC_COMMON_AUDIO_VAD_MOCK_MOCK_VAD_H_$/;"	d
WEBRTC_COMMON_AUDIO_VAD_VAD_CORE_H_	webrtc/common_audio/vad/vad_core.h	/^#define WEBRTC_COMMON_AUDIO_VAD_VAD_CORE_H_$/;"	d
WEBRTC_COMMON_AUDIO_VAD_VAD_FILTERBANK_H_	webrtc/common_audio/vad/vad_filterbank.h	/^#define WEBRTC_COMMON_AUDIO_VAD_VAD_FILTERBANK_H_$/;"	d
WEBRTC_COMMON_AUDIO_VAD_VAD_GMM_H_	webrtc/common_audio/vad/vad_gmm.h	/^#define WEBRTC_COMMON_AUDIO_VAD_VAD_GMM_H_$/;"	d
WEBRTC_COMMON_AUDIO_VAD_VAD_SP_H_	webrtc/common_audio/vad/vad_sp.h	/^#define WEBRTC_COMMON_AUDIO_VAD_VAD_SP_H_$/;"	d
WEBRTC_COMMON_AUDIO_VAD_VAD_UNITTEST_H	webrtc/common_audio/vad/vad_unittest.h	/^#define WEBRTC_COMMON_AUDIO_VAD_VAD_UNITTEST_H$/;"	d
WEBRTC_COMMON_AUDIO_WAV_FILE_H_	webrtc/common_audio/wav_file.h	/^#define WEBRTC_COMMON_AUDIO_WAV_FILE_H_$/;"	d
WEBRTC_COMMON_AUDIO_WAV_HEADER_H_	webrtc/common_audio/wav_header.h	/^#define WEBRTC_COMMON_AUDIO_WAV_HEADER_H_$/;"	d
WEBRTC_COMMON_AUDIO_WINDOW_GENERATOR_H_	webrtc/common_audio/window_generator.h	/^#define WEBRTC_COMMON_AUDIO_WINDOW_GENERATOR_H_$/;"	d
WEBRTC_COMMON_TYPES_H_	webrtc/common_types.h	/^#define WEBRTC_COMMON_TYPES_H_$/;"	d
WEBRTC_COMMON_VIDEO_ROTATION_H_	webrtc/common_video/rotation.h	/^#define WEBRTC_COMMON_VIDEO_ROTATION_H_$/;"	d
WEBRTC_CONFIG_H_	webrtc/config.h	/^#define WEBRTC_CONFIG_H_$/;"	d
WEBRTC_CPU_DETECTION	webrtc/typedefs.h	/^#define WEBRTC_CPU_DETECTION$/;"	d
WEBRTC_DLLEXPORT	webrtc/common_types.h	/^#define WEBRTC_DLLEXPORT /;"	d
WEBRTC_DLLEXPORT	webrtc/common_types.h	/^#define WEBRTC_DLLEXPORT$/;"	d
WEBRTC_EVENT_INFINITE	webrtc/system_wrappers/include/event_wrapper.h	/^#define WEBRTC_EVENT_INFINITE /;"	d
WEBRTC_INTERNAL_BEAMFORMER_BLOCKER_H_	webrtc/common_audio/blocker.h	/^#define WEBRTC_INTERNAL_BEAMFORMER_BLOCKER_H_$/;"	d
WEBRTC_MODULES_AUDIO_CODING_CODECS_ISAC_BANDWIDTH_INFO_H_	webrtc/modules/audio_coding/codecs/isac/bandwidth_info.h	/^#define WEBRTC_MODULES_AUDIO_CODING_CODECS_ISAC_BANDWIDTH_INFO_H_$/;"	d
WEBRTC_MODULES_AUDIO_CODING_CODECS_ISAC_MAIN_INCLUDE_ISAC_H_	webrtc/modules/audio_coding/codecs/isac/main/include/isac.h	/^#define WEBRTC_MODULES_AUDIO_CODING_CODECS_ISAC_MAIN_INCLUDE_ISAC_H_$/;"	d
WEBRTC_MODULES_AUDIO_CODING_CODECS_ISAC_MAIN_SOURCE_ARITH_ROUTINES_H_	webrtc/modules/audio_coding/codecs/isac/main/source/arith_routines.h	/^#define WEBRTC_MODULES_AUDIO_CODING_CODECS_ISAC_MAIN_SOURCE_ARITH_ROUTINES_H_$/;"	d
WEBRTC_MODULES_AUDIO_CODING_CODECS_ISAC_MAIN_SOURCE_BANDWIDTH_ESTIMATOR_H_	webrtc/modules/audio_coding/codecs/isac/main/source/bandwidth_estimator.h	/^#define WEBRTC_MODULES_AUDIO_CODING_CODECS_ISAC_MAIN_SOURCE_BANDWIDTH_ESTIMATOR_H_$/;"	d
WEBRTC_MODULES_AUDIO_CODING_CODECS_ISAC_MAIN_SOURCE_CODEC_H_	webrtc/modules/audio_coding/codecs/isac/main/source/codec.h	/^#define WEBRTC_MODULES_AUDIO_CODING_CODECS_ISAC_MAIN_SOURCE_CODEC_H_$/;"	d
WEBRTC_MODULES_AUDIO_CODING_CODECS_ISAC_MAIN_SOURCE_CRC_H_	webrtc/modules/audio_coding/codecs/isac/main/source/crc.h	/^#define WEBRTC_MODULES_AUDIO_CODING_CODECS_ISAC_MAIN_SOURCE_CRC_H_$/;"	d
WEBRTC_MODULES_AUDIO_CODING_CODECS_ISAC_MAIN_SOURCE_ENCODE_LPC_SWB_H_	webrtc/modules/audio_coding/codecs/isac/main/source/encode_lpc_swb.h	/^#define WEBRTC_MODULES_AUDIO_CODING_CODECS_ISAC_MAIN_SOURCE_ENCODE_LPC_SWB_H_$/;"	d
WEBRTC_MODULES_AUDIO_CODING_CODECS_ISAC_MAIN_SOURCE_ENTROPY_CODING_H_	webrtc/modules/audio_coding/codecs/isac/main/source/entropy_coding.h	/^#define WEBRTC_MODULES_AUDIO_CODING_CODECS_ISAC_MAIN_SOURCE_ENTROPY_CODING_H_$/;"	d
WEBRTC_MODULES_AUDIO_CODING_CODECS_ISAC_MAIN_SOURCE_FFT_H_	webrtc/modules/audio_coding/codecs/isac/main/source/fft.h	/^#define WEBRTC_MODULES_AUDIO_CODING_CODECS_ISAC_MAIN_SOURCE_FFT_H_$/;"	d
WEBRTC_MODULES_AUDIO_CODING_CODECS_ISAC_MAIN_SOURCE_FILTERBANK_TABLES_H_	webrtc/modules/audio_coding/codecs/isac/main/source/filterbank_tables.h	/^#define WEBRTC_MODULES_AUDIO_CODING_CODECS_ISAC_MAIN_SOURCE_FILTERBANK_TABLES_H_$/;"	d
WEBRTC_MODULES_AUDIO_CODING_CODECS_ISAC_MAIN_SOURCE_LPC_ANALYSIS_H_	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_analysis.h	/^#define WEBRTC_MODULES_AUDIO_CODING_CODECS_ISAC_MAIN_SOURCE_LPC_ANALYSIS_H_$/;"	d
WEBRTC_MODULES_AUDIO_CODING_CODECS_ISAC_MAIN_SOURCE_LPC_GAIN_SWB_TABLES_H_	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_gain_swb_tables.h	/^#define WEBRTC_MODULES_AUDIO_CODING_CODECS_ISAC_MAIN_SOURCE_LPC_GAIN_SWB_TABLES_H_$/;"	d
WEBRTC_MODULES_AUDIO_CODING_CODECS_ISAC_MAIN_SOURCE_LPC_SHAPE_SWB12_TABLES_H_	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_shape_swb12_tables.h	/^#define WEBRTC_MODULES_AUDIO_CODING_CODECS_ISAC_MAIN_SOURCE_LPC_SHAPE_SWB12_TABLES_H_$/;"	d
WEBRTC_MODULES_AUDIO_CODING_CODECS_ISAC_MAIN_SOURCE_LPC_SHAPE_SWB16_TABLES_H_	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_shape_swb16_tables.h	/^#define WEBRTC_MODULES_AUDIO_CODING_CODECS_ISAC_MAIN_SOURCE_LPC_SHAPE_SWB16_TABLES_H_$/;"	d
WEBRTC_MODULES_AUDIO_CODING_CODECS_ISAC_MAIN_SOURCE_LPC_TABLES_H_	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_tables.h	/^#define WEBRTC_MODULES_AUDIO_CODING_CODECS_ISAC_MAIN_SOURCE_LPC_TABLES_H_$/;"	d
WEBRTC_MODULES_AUDIO_CODING_CODECS_ISAC_MAIN_SOURCE_OS_SPECIFIC_INLINE_H_	webrtc/modules/audio_coding/codecs/isac/main/source/os_specific_inline.h	/^#define WEBRTC_MODULES_AUDIO_CODING_CODECS_ISAC_MAIN_SOURCE_OS_SPECIFIC_INLINE_H_$/;"	d
WEBRTC_MODULES_AUDIO_CODING_CODECS_ISAC_MAIN_SOURCE_PITCH_ESTIMATOR_H_	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_estimator.h	/^#define WEBRTC_MODULES_AUDIO_CODING_CODECS_ISAC_MAIN_SOURCE_PITCH_ESTIMATOR_H_$/;"	d
WEBRTC_MODULES_AUDIO_CODING_CODECS_ISAC_MAIN_SOURCE_PITCH_GAIN_TABLES_H_	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_gain_tables.h	/^#define WEBRTC_MODULES_AUDIO_CODING_CODECS_ISAC_MAIN_SOURCE_PITCH_GAIN_TABLES_H_$/;"	d
WEBRTC_MODULES_AUDIO_CODING_CODECS_ISAC_MAIN_SOURCE_PITCH_LAG_TABLES_H_	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_lag_tables.h	/^#define WEBRTC_MODULES_AUDIO_CODING_CODECS_ISAC_MAIN_SOURCE_PITCH_LAG_TABLES_H_$/;"	d
WEBRTC_MODULES_AUDIO_CODING_CODECS_ISAC_MAIN_SOURCE_SETTINGS_H_	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define WEBRTC_MODULES_AUDIO_CODING_CODECS_ISAC_MAIN_SOURCE_SETTINGS_H_$/;"	d
WEBRTC_MODULES_AUDIO_CODING_CODECS_ISAC_MAIN_SOURCE_SPECTRUM_AR_MODEL_TABLES_H_	webrtc/modules/audio_coding/codecs/isac/main/source/spectrum_ar_model_tables.h	/^#define WEBRTC_MODULES_AUDIO_CODING_CODECS_ISAC_MAIN_SOURCE_SPECTRUM_AR_MODEL_TABLES_H_$/;"	d
WEBRTC_MODULES_AUDIO_CODING_CODECS_ISAC_MAIN_SOURCE_STRUCTS_H_	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^#define WEBRTC_MODULES_AUDIO_CODING_CODECS_ISAC_MAIN_SOURCE_STRUCTS_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_AECM_AECM_CORE_H_	webrtc/modules/audio_processing/aecm/aecm_core.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_AECM_AECM_CORE_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_AECM_AECM_DEFINES_H_	webrtc/modules/audio_processing/aecm/aecm_defines.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_AECM_AECM_DEFINES_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_AECM_ECHO_CONTROL_MOBILE_H_	webrtc/modules/audio_processing/aecm/echo_control_mobile.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_AECM_ECHO_CONTROL_MOBILE_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_AEC_AEC_COMMON_H_	webrtc/modules/audio_processing/aec/aec_common.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_AEC_AEC_COMMON_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_AEC_AEC_CORE_H_	webrtc/modules/audio_processing/aec/aec_core.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_AEC_AEC_CORE_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_AEC_AEC_CORE_OPTIMIZED_METHODS_H_	webrtc/modules/audio_processing/aec/aec_core_optimized_methods.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_AEC_AEC_CORE_OPTIMIZED_METHODS_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_AEC_AEC_RESAMPLER_H_	webrtc/modules/audio_processing/aec/aec_resampler.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_AEC_AEC_RESAMPLER_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_AEC_ECHO_CANCELLATION_H_	webrtc/modules/audio_processing/aec/echo_cancellation.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_AEC_ECHO_CANCELLATION_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_AGC_AGC_H_	webrtc/modules/audio_processing/agc/agc.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_AGC_AGC_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_AGC_AGC_MANAGER_DIRECT_H_	webrtc/modules/audio_processing/agc/agc_manager_direct.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_AGC_AGC_MANAGER_DIRECT_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_AGC_GAIN_MAP_INTERNAL_H_	webrtc/modules/audio_processing/agc/gain_map_internal.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_AGC_GAIN_MAP_INTERNAL_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_AGC_LEGACY_ANALOG_AGC_H_	webrtc/modules/audio_processing/agc/legacy/analog_agc.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_AGC_LEGACY_ANALOG_AGC_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_AGC_LEGACY_DIGITAL_AGC_H_	webrtc/modules/audio_processing/agc/legacy/digital_agc.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_AGC_LEGACY_DIGITAL_AGC_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_AGC_LEGACY_GAIN_CONTROL_H_	webrtc/modules/audio_processing/agc/legacy/gain_control.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_AGC_LEGACY_GAIN_CONTROL_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_AGC_LOUDNESS_HISTOGRAM_H_	webrtc/modules/audio_processing/agc/loudness_histogram.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_AGC_LOUDNESS_HISTOGRAM_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_AGC_MOCK_AGC_H_	webrtc/modules/audio_processing/agc/mock_agc.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_AGC_MOCK_AGC_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_AGC_STANDALONE_VAD_H_	webrtc/modules/audio_processing/vad/standalone_vad.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_AGC_STANDALONE_VAD_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_AGC_UTILITY_H_	webrtc/modules/audio_processing/agc/utility.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_AGC_UTILITY_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_AUDIO_BUFFER_H_	webrtc/modules/audio_processing/audio_buffer.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_AUDIO_BUFFER_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_AUDIO_PROCESSING_IMPL_H_	webrtc/modules/audio_processing/audio_processing_impl.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_AUDIO_PROCESSING_IMPL_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_BEAMFORMER_ARRAY_UTIL_H_	webrtc/modules/audio_processing/beamformer/array_util.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_BEAMFORMER_ARRAY_UTIL_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_BEAMFORMER_COMPLEX_MATRIX_H_	webrtc/modules/audio_processing/beamformer/complex_matrix.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_BEAMFORMER_COMPLEX_MATRIX_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_BEAMFORMER_COVARIANCE_MATRIX_GENERATOR_H_	webrtc/modules/audio_processing/beamformer/covariance_matrix_generator.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_BEAMFORMER_COVARIANCE_MATRIX_GENERATOR_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_BEAMFORMER_MATRIX_H_	webrtc/modules/audio_processing/beamformer/matrix.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_BEAMFORMER_MATRIX_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_BEAMFORMER_MATRIX_TEST_HELPERS_H_	webrtc/modules/audio_processing/beamformer/matrix_test_helpers.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_BEAMFORMER_MATRIX_TEST_HELPERS_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_BEAMFORMER_MOCK_BEAMFORMER_H_	webrtc/modules/audio_processing/beamformer/mock_nonlinear_beamformer.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_BEAMFORMER_MOCK_BEAMFORMER_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_BEAMFORMER_NONLINEAR_BEAMFORMER_H_	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_BEAMFORMER_NONLINEAR_BEAMFORMER_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_CHANNEL_BUFFER_H_	webrtc/common_audio/channel_buffer.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_CHANNEL_BUFFER_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_COMMON_H_	webrtc/modules/audio_processing/common.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_COMMON_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_ECHO_CANCELLATION_IMPL_H_	webrtc/modules/audio_processing/echo_cancellation_impl.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_ECHO_CANCELLATION_IMPL_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_ECHO_CONTROL_MOBILE_IMPL_H_	webrtc/modules/audio_processing/echo_control_mobile_impl.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_ECHO_CONTROL_MOBILE_IMPL_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_ECHO_DETECTOR_CIRCULAR_BUFFER_H_	webrtc/modules/audio_processing/echo_detector/circular_buffer.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_ECHO_DETECTOR_CIRCULAR_BUFFER_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_ECHO_DETECTOR_MEAN_VARIANCE_ESTIMATOR_H_	webrtc/modules/audio_processing/echo_detector/mean_variance_estimator.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_ECHO_DETECTOR_MEAN_VARIANCE_ESTIMATOR_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_ECHO_DETECTOR_NORMALIZED_COVARIANCE_ESTIMATOR_H_	webrtc/modules/audio_processing/echo_detector/normalized_covariance_estimator.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_ECHO_DETECTOR_NORMALIZED_COVARIANCE_ESTIMATOR_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_GAIN_CONTROL_FOR_EXPERIMENTAL_AGC_H_	webrtc/modules/audio_processing/gain_control_for_experimental_agc.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_GAIN_CONTROL_FOR_EXPERIMENTAL_AGC_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_GAIN_CONTROL_IMPL_H_	webrtc/modules/audio_processing/gain_control_impl.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_GAIN_CONTROL_IMPL_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_HIGH_PASS_FILTER_IMPL_H_	webrtc/modules/audio_processing/high_pass_filter_impl.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_HIGH_PASS_FILTER_IMPL_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_INCLUDE_AUDIO_PROCESSING_H_	webrtc/modules/audio_processing/include/audio_processing.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_INCLUDE_AUDIO_PROCESSING_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_INCLUDE_CONFIG_H_	webrtc/modules/audio_processing/include/config.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_INCLUDE_CONFIG_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_INCLUDE_MOCK_AUDIO_PROCESSING_H_	webrtc/modules/audio_processing/include/mock_audio_processing.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_INCLUDE_MOCK_AUDIO_PROCESSING_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_INTELLIGIBILITY_INTELLIGIBILITY_ENHANCER_H_	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_INTELLIGIBILITY_INTELLIGIBILITY_ENHANCER_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_INTELLIGIBILITY_INTELLIGIBILITY_UTILS_H_	webrtc/modules/audio_processing/intelligibility/intelligibility_utils.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_INTELLIGIBILITY_INTELLIGIBILITY_UTILS_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_LEVEL_CONTROLLER_BIQUAD_FILTER_H_	webrtc/modules/audio_processing/level_controller/biquad_filter.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_LEVEL_CONTROLLER_BIQUAD_FILTER_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_LEVEL_CONTROLLER_DOWN_SAMPLER_H_	webrtc/modules/audio_processing/level_controller/down_sampler.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_LEVEL_CONTROLLER_DOWN_SAMPLER_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_LEVEL_CONTROLLER_GAIN_APPLIER_H_	webrtc/modules/audio_processing/level_controller/gain_applier.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_LEVEL_CONTROLLER_GAIN_APPLIER_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_LEVEL_CONTROLLER_GAIN_SELECTOR_H_	webrtc/modules/audio_processing/level_controller/gain_selector.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_LEVEL_CONTROLLER_GAIN_SELECTOR_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_LEVEL_CONTROLLER_LEVEL_CONTROLLER_CONSTANTS_H_	webrtc/modules/audio_processing/level_controller/level_controller_constants.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_LEVEL_CONTROLLER_LEVEL_CONTROLLER_CONSTANTS_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_LEVEL_CONTROLLER_LEVEL_CONTROLLER_H_	webrtc/modules/audio_processing/level_controller/level_controller.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_LEVEL_CONTROLLER_LEVEL_CONTROLLER_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_LEVEL_CONTROLLER_NOISE_LEVEL_ESTIMATOR_H_	webrtc/modules/audio_processing/level_controller/noise_level_estimator.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_LEVEL_CONTROLLER_NOISE_LEVEL_ESTIMATOR_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_LEVEL_CONTROLLER_NOISE_SPECTRUM_ESTIMATOR_H_	webrtc/modules/audio_processing/level_controller/noise_spectrum_estimator.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_LEVEL_CONTROLLER_NOISE_SPECTRUM_ESTIMATOR_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_LEVEL_CONTROLLER_PEAK_LEVEL_ESTIMATOR_H_	webrtc/modules/audio_processing/level_controller/peak_level_estimator.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_LEVEL_CONTROLLER_PEAK_LEVEL_ESTIMATOR_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_LEVEL_CONTROLLER_SATURATING_GAIN_ESTIMATOR_H_	webrtc/modules/audio_processing/level_controller/saturating_gain_estimator.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_LEVEL_CONTROLLER_SATURATING_GAIN_ESTIMATOR_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_LEVEL_CONTROLLER_SIGNAL_CLASSIFIER_H_	webrtc/modules/audio_processing/level_controller/signal_classifier.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_LEVEL_CONTROLLER_SIGNAL_CLASSIFIER_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_LEVEL_ESTIMATOR_IMPL_H_	webrtc/modules/audio_processing/level_estimator_impl.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_LEVEL_ESTIMATOR_IMPL_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_LOGGING_APM_DATA_DUMPER_H_	webrtc/modules/audio_processing/logging/apm_data_dumper.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_LOGGING_APM_DATA_DUMPER_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_NOISE_SUPPRESSION_IMPL_H_	webrtc/modules/audio_processing/noise_suppression_impl.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_NOISE_SUPPRESSION_IMPL_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_NS_MAIN_SOURCE_DEFINES_H_	webrtc/modules/audio_processing/ns/defines.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_NS_MAIN_SOURCE_DEFINES_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_NS_MAIN_SOURCE_NSX_CORE_H_	webrtc/modules/audio_processing/ns/nsx_core.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_NS_MAIN_SOURCE_NSX_CORE_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_NS_MAIN_SOURCE_NSX_DEFINES_H_	webrtc/modules/audio_processing/ns/nsx_defines.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_NS_MAIN_SOURCE_NSX_DEFINES_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_NS_MAIN_SOURCE_WINDOWS_PRIVATE_H_	webrtc/modules/audio_processing/ns/windows_private.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_NS_MAIN_SOURCE_WINDOWS_PRIVATE_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_NS_NOISE_SUPPRESSION_H_	webrtc/modules/audio_processing/ns/noise_suppression.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_NS_NOISE_SUPPRESSION_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_NS_NOISE_SUPPRESSION_X_H_	webrtc/modules/audio_processing/ns/noise_suppression_x.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_NS_NOISE_SUPPRESSION_X_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_NS_NS_CORE_H_	webrtc/modules/audio_processing/ns/ns_core.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_NS_NS_CORE_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_RENDER_QUEUE_ITEM_VERIFIER_H_	webrtc/modules/audio_processing/render_queue_item_verifier.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_RENDER_QUEUE_ITEM_VERIFIER_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_RESIDUAL_ECHO_DETECTOR_H_	webrtc/modules/audio_processing/residual_echo_detector.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_RESIDUAL_ECHO_DETECTOR_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_RMS_LEVEL_H_	webrtc/modules/audio_processing/rms_level.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_RMS_LEVEL_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_SPLITTING_FILTER_H_	webrtc/modules/audio_processing/splitting_filter.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_SPLITTING_FILTER_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_TEST_AEC_DUMP_BASED_SIMULATOR_H_	webrtc/modules/audio_processing/test/aec_dump_based_simulator.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_TEST_AEC_DUMP_BASED_SIMULATOR_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_TEST_AUDIO_BUFFER_TOOLS_H_	webrtc/modules/audio_processing/test/audio_buffer_tools.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_TEST_AUDIO_BUFFER_TOOLS_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_TEST_AUDIO_PROCESSING_SIMULATOR_H_	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_TEST_AUDIO_PROCESSING_SIMULATOR_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_TEST_BITEXACTNESS_TOOLS_H_	webrtc/modules/audio_processing/test/bitexactness_tools.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_TEST_BITEXACTNESS_TOOLS_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_TEST_DEBUG_DUMP_REPLAYER_H_	webrtc/modules/audio_processing/test/debug_dump_replayer.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_TEST_DEBUG_DUMP_REPLAYER_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_TEST_PROTOBUF_UTILS_H_	webrtc/modules/audio_processing/test/protobuf_utils.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_TEST_PROTOBUF_UTILS_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_TEST_TEST_UTILS_H_	webrtc/modules/audio_processing/test/test_utils.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_TEST_TEST_UTILS_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_TEST_WAV_BASED_SIMULATOR_H_	webrtc/modules/audio_processing/test/wav_based_simulator.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_TEST_WAV_BASED_SIMULATOR_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_THREE_BAND_FILTER_BANK_H_	webrtc/modules/audio_processing/three_band_filter_bank.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_THREE_BAND_FILTER_BANK_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_TRANSIENT_COMMON_H_	webrtc/modules/audio_processing/transient/common.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_TRANSIENT_COMMON_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_TRANSIENT_DAUBECHIES_8_WAVELET_COEFFS_H_	webrtc/modules/audio_processing/transient/daubechies_8_wavelet_coeffs.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_TRANSIENT_DAUBECHIES_8_WAVELET_COEFFS_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_TRANSIENT_DYADIC_DECIMATOR_H_	webrtc/modules/audio_processing/transient/dyadic_decimator.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_TRANSIENT_DYADIC_DECIMATOR_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_TRANSIENT_FILE_UTILS_H_	webrtc/modules/audio_processing/transient/file_utils.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_TRANSIENT_FILE_UTILS_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_TRANSIENT_MOVING_MOMENTS_H_	webrtc/modules/audio_processing/transient/moving_moments.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_TRANSIENT_MOVING_MOMENTS_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_TRANSIENT_TRANSIENT_DETECTOR_H_	webrtc/modules/audio_processing/transient/transient_detector.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_TRANSIENT_TRANSIENT_DETECTOR_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_TRANSIENT_TRANSIENT_SUPPRESSOR_H_	webrtc/modules/audio_processing/transient/transient_suppressor.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_TRANSIENT_TRANSIENT_SUPPRESSOR_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_TRANSIENT_WPD_NODE_H_	webrtc/modules/audio_processing/transient/wpd_node.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_TRANSIENT_WPD_NODE_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_TRANSIENT_WPD_TREE_H_	webrtc/modules/audio_processing/transient/wpd_tree.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_TRANSIENT_WPD_TREE_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_TYPING_DETECTION_H_	webrtc/modules/audio_processing/typing_detection.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_TYPING_DETECTION_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_UTILITY_BLOCK_MEAN_CALCULATOR_H_	webrtc/modules/audio_processing/utility/block_mean_calculator.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_UTILITY_BLOCK_MEAN_CALCULATOR_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_UTILITY_DELAY_ESTIMATOR_H_	webrtc/modules/audio_processing/utility/delay_estimator.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_UTILITY_DELAY_ESTIMATOR_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_UTILITY_DELAY_ESTIMATOR_INTERNAL_H_	webrtc/modules/audio_processing/utility/delay_estimator_internal.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_UTILITY_DELAY_ESTIMATOR_INTERNAL_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_UTILITY_DELAY_ESTIMATOR_WRAPPER_H_	webrtc/modules/audio_processing/utility/delay_estimator_wrapper.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_UTILITY_DELAY_ESTIMATOR_WRAPPER_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_UTILITY_OOURA_FFT_H_	webrtc/modules/audio_processing/utility/ooura_fft.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_UTILITY_OOURA_FFT_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_UTILITY_OOURA_FFT_TABLES_COMMON_H_	webrtc/modules/audio_processing/utility/ooura_fft_tables_common.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_UTILITY_OOURA_FFT_TABLES_COMMON_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_UTILITY_OOURA_FFT_TABLES_NEON_SSE2_H_	webrtc/modules/audio_processing/utility/ooura_fft_tables_neon_sse2.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_UTILITY_OOURA_FFT_TABLES_NEON_SSE2_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_VAD_COMMON_H_	webrtc/modules/audio_processing/vad/common.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_VAD_COMMON_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_VAD_GMM_H_	webrtc/modules/audio_processing/vad/gmm.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_VAD_GMM_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_VAD_NOISE_GMM_TABLES_H_	webrtc/modules/audio_processing/vad/noise_gmm_tables.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_VAD_NOISE_GMM_TABLES_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_VAD_PITCH_BASED_VAD_H_	webrtc/modules/audio_processing/vad/pitch_based_vad.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_VAD_PITCH_BASED_VAD_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_VAD_PITCH_INTERNAL_H_	webrtc/modules/audio_processing/vad/pitch_internal.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_VAD_PITCH_INTERNAL_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_VAD_POLE_ZERO_FILTER_H_	webrtc/modules/audio_processing/vad/pole_zero_filter.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_VAD_POLE_ZERO_FILTER_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_VAD_VAD_AUDIO_PROC_H_	webrtc/modules/audio_processing/vad/vad_audio_proc.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_VAD_VAD_AUDIO_PROC_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_VAD_VAD_AUDIO_PROC_INTERNAL_H_	webrtc/modules/audio_processing/vad/vad_audio_proc_internal.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_VAD_VAD_AUDIO_PROC_INTERNAL_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_VAD_VAD_CIRCULAR_BUFFER_H_	webrtc/modules/audio_processing/vad/vad_circular_buffer.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_VAD_VAD_CIRCULAR_BUFFER_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_VAD_VOICE_ACTIVITY_DETECTOR_H_	webrtc/modules/audio_processing/vad/voice_activity_detector.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_VAD_VOICE_ACTIVITY_DETECTOR_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_VAD_VOICE_GMM_TABLES_H_	webrtc/modules/audio_processing/vad/voice_gmm_tables.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_VAD_VOICE_GMM_TABLES_H_$/;"	d
WEBRTC_MODULES_AUDIO_PROCESSING_VOICE_DETECTION_IMPL_H_	webrtc/modules/audio_processing/voice_detection_impl.h	/^#define WEBRTC_MODULES_AUDIO_PROCESSING_VOICE_DETECTION_IMPL_H_$/;"	d
WEBRTC_MODULES_INCLUDE_MODULE_COMMON_TYPES_H_	webrtc/modules/include/module_common_types.h	/^#define WEBRTC_MODULES_INCLUDE_MODULE_COMMON_TYPES_H_$/;"	d
WEBRTC_MODULES_INCLUDE_MODULE_H_	webrtc/modules/include/module.h	/^#define WEBRTC_MODULES_INCLUDE_MODULE_H_$/;"	d
WEBRTC_MODULES_UTILITY_INCLUDE_AUDIO_FRAME_OPERATIONS_H_	webrtc/modules/utility/include/audio_frame_operations.h	/^#define WEBRTC_MODULES_UTILITY_INCLUDE_AUDIO_FRAME_OPERATIONS_H_$/;"	d
WEBRTC_RESAMPLER_RESAMPLER_H_	webrtc/common_audio/resampler/include/resampler.h	/^#define WEBRTC_RESAMPLER_RESAMPLER_H_$/;"	d
WEBRTC_SPL_ABS_W16	webrtc/common_audio/signal_processing/include/signal_processing_library.h	/^#define WEBRTC_SPL_ABS_W16(/;"	d
WEBRTC_SPL_ABS_W32	webrtc/common_audio/signal_processing/include/signal_processing_library.h	/^#define WEBRTC_SPL_ABS_W32(/;"	d
WEBRTC_SPL_LSHIFT_W32	webrtc/common_audio/signal_processing/include/signal_processing_library.h	/^#define WEBRTC_SPL_LSHIFT_W32(/;"	d
WEBRTC_SPL_MAX	webrtc/common_audio/signal_processing/include/signal_processing_library.h	/^#define WEBRTC_SPL_MAX(/;"	d
WEBRTC_SPL_MAX_LPC_ORDER	webrtc/common_audio/signal_processing/include/signal_processing_library.h	/^#define WEBRTC_SPL_MAX_LPC_ORDER /;"	d
WEBRTC_SPL_MEMCPY_W16	webrtc/common_audio/signal_processing/include/signal_processing_library.h	/^#define WEBRTC_SPL_MEMCPY_W16(/;"	d
WEBRTC_SPL_MIN	webrtc/common_audio/signal_processing/include/signal_processing_library.h	/^#define WEBRTC_SPL_MIN(/;"	d
WEBRTC_SPL_MUL	webrtc/common_audio/signal_processing/include/signal_processing_library.h	/^#define WEBRTC_SPL_MUL(/;"	d
WEBRTC_SPL_MUL_16_16	webrtc/common_audio/signal_processing/include/signal_processing_library.h	/^#define WEBRTC_SPL_MUL_16_16(/;"	d
WEBRTC_SPL_MUL_16_16	webrtc/common_audio/signal_processing/include/spl_inl_armv7.h	/^static __inline int32_t WEBRTC_SPL_MUL_16_16(int16_t a, int16_t b) {$/;"	f
WEBRTC_SPL_MUL_16_16	webrtc/common_audio/signal_processing/include/spl_inl_mips.h	/^static __inline int32_t WEBRTC_SPL_MUL_16_16(int32_t a,$/;"	f
WEBRTC_SPL_MUL_16_16_RSFT	webrtc/common_audio/signal_processing/include/signal_processing_library.h	/^#define WEBRTC_SPL_MUL_16_16_RSFT(/;"	d
WEBRTC_SPL_MUL_16_16_RSFT_WITH_ROUND	webrtc/common_audio/signal_processing/include/signal_processing_library.h	/^#define WEBRTC_SPL_MUL_16_16_RSFT_WITH_ROUND(/;"	d
WEBRTC_SPL_MUL_16_32_RSFT11	webrtc/common_audio/signal_processing/include/signal_processing_library.h	/^#define WEBRTC_SPL_MUL_16_32_RSFT11(/;"	d
WEBRTC_SPL_MUL_16_32_RSFT14	webrtc/common_audio/signal_processing/include/signal_processing_library.h	/^#define WEBRTC_SPL_MUL_16_32_RSFT14(/;"	d
WEBRTC_SPL_MUL_16_32_RSFT15	webrtc/common_audio/signal_processing/include/signal_processing_library.h	/^#define WEBRTC_SPL_MUL_16_32_RSFT15(/;"	d
WEBRTC_SPL_MUL_16_32_RSFT16	webrtc/common_audio/signal_processing/include/signal_processing_library.h	/^#define WEBRTC_SPL_MUL_16_32_RSFT16(/;"	d
WEBRTC_SPL_MUL_16_32_RSFT16	webrtc/common_audio/signal_processing/include/spl_inl_armv7.h	/^static __inline int32_t WEBRTC_SPL_MUL_16_32_RSFT16(int16_t a, int32_t b) {$/;"	f
WEBRTC_SPL_MUL_16_32_RSFT16	webrtc/common_audio/signal_processing/include/spl_inl_mips.h	/^static __inline int32_t WEBRTC_SPL_MUL_16_32_RSFT16(int16_t a,$/;"	f
WEBRTC_SPL_MUL_16_U16	webrtc/common_audio/signal_processing/include/signal_processing_library.h	/^#define WEBRTC_SPL_MUL_16_U16(/;"	d
WEBRTC_SPL_RAND	webrtc/common_audio/signal_processing/include/signal_processing_library.h	/^#define WEBRTC_SPL_RAND(/;"	d
WEBRTC_SPL_RESAMPLE_BY_2_INTERNAL_H_	webrtc/common_audio/signal_processing/resample_by_2_internal.h	/^#define WEBRTC_SPL_RESAMPLE_BY_2_INTERNAL_H_$/;"	d
WEBRTC_SPL_RSHIFT_U32	webrtc/common_audio/signal_processing/include/signal_processing_library.h	/^#define WEBRTC_SPL_RSHIFT_U32(/;"	d
WEBRTC_SPL_SAT	webrtc/common_audio/signal_processing/include/signal_processing_library.h	/^#define WEBRTC_SPL_SAT(/;"	d
WEBRTC_SPL_SCALEDIFF32	webrtc/common_audio/signal_processing/include/signal_processing_library.h	/^#define WEBRTC_SPL_SCALEDIFF32(/;"	d
WEBRTC_SPL_SHIFT_W32	webrtc/common_audio/signal_processing/include/signal_processing_library.h	/^#define WEBRTC_SPL_SHIFT_W32(/;"	d
WEBRTC_SPL_SIGNAL_PROCESSING_LIBRARY_H_	webrtc/common_audio/signal_processing/include/signal_processing_library.h	/^#define WEBRTC_SPL_SIGNAL_PROCESSING_LIBRARY_H_$/;"	d
WEBRTC_SPL_SPL_INL_ARMV7_H_	webrtc/common_audio/signal_processing/include/spl_inl_armv7.h	/^#define WEBRTC_SPL_SPL_INL_ARMV7_H_$/;"	d
WEBRTC_SPL_SPL_INL_H_	webrtc/common_audio/signal_processing/include/spl_inl.h	/^#define WEBRTC_SPL_SPL_INL_H_$/;"	d
WEBRTC_SPL_SPL_INL_MIPS_H_	webrtc/common_audio/signal_processing/include/spl_inl_mips.h	/^#define WEBRTC_SPL_SPL_INL_MIPS_H_$/;"	d
WEBRTC_SPL_SQRT_ITER	webrtc/common_audio/signal_processing/spl_sqrt_floor.c	/^#define WEBRTC_SPL_SQRT_ITER(/;"	d	file:
WEBRTC_SPL_UMUL	webrtc/common_audio/signal_processing/include/signal_processing_library.h	/^#define WEBRTC_SPL_UMUL(/;"	d
WEBRTC_SPL_UMUL_32_16	webrtc/common_audio/signal_processing/include/signal_processing_library.h	/^#define WEBRTC_SPL_UMUL_32_16(/;"	d
WEBRTC_SPL_WORD16_MAX	webrtc/common_audio/signal_processing/include/signal_processing_library.h	/^#define WEBRTC_SPL_WORD16_MAX /;"	d
WEBRTC_SPL_WORD16_MIN	webrtc/common_audio/signal_processing/include/signal_processing_library.h	/^#define WEBRTC_SPL_WORD16_MIN /;"	d
WEBRTC_SPL_WORD32_MAX	webrtc/common_audio/signal_processing/include/signal_processing_library.h	/^#define WEBRTC_SPL_WORD32_MAX /;"	d
WEBRTC_SPL_WORD32_MIN	webrtc/common_audio/signal_processing/include/signal_processing_library.h	/^#define WEBRTC_SPL_WORD32_MIN /;"	d
WEBRTC_SYSTEM_WRAPPERS_INCLUDE_ALIGNED_ARRAY_	webrtc/system_wrappers/include/aligned_array.h	/^#define WEBRTC_SYSTEM_WRAPPERS_INCLUDE_ALIGNED_ARRAY_$/;"	d
WEBRTC_SYSTEM_WRAPPERS_INCLUDE_ALIGNED_MALLOC_H_	webrtc/system_wrappers/include/aligned_malloc.h	/^#define WEBRTC_SYSTEM_WRAPPERS_INCLUDE_ALIGNED_MALLOC_H_$/;"	d
WEBRTC_SYSTEM_WRAPPERS_INCLUDE_ASM_DEFINES_H_	webrtc/system_wrappers/include/asm_defines.h	/^#define WEBRTC_SYSTEM_WRAPPERS_INCLUDE_ASM_DEFINES_H_$/;"	d
WEBRTC_SYSTEM_WRAPPERS_INCLUDE_ATOMIC32_H_	webrtc/system_wrappers/include/atomic32.h	/^#define WEBRTC_SYSTEM_WRAPPERS_INCLUDE_ATOMIC32_H_$/;"	d
WEBRTC_SYSTEM_WRAPPERS_INCLUDE_CLOCK_H_	webrtc/system_wrappers/include/clock.h	/^#define WEBRTC_SYSTEM_WRAPPERS_INCLUDE_CLOCK_H_$/;"	d
WEBRTC_SYSTEM_WRAPPERS_INCLUDE_COMPILE_ASSERT_H_	webrtc/system_wrappers/include/compile_assert_c.h	/^#define WEBRTC_SYSTEM_WRAPPERS_INCLUDE_COMPILE_ASSERT_H_$/;"	d
WEBRTC_SYSTEM_WRAPPERS_INCLUDE_CPU_FEATURES_WRAPPER_H_	webrtc/system_wrappers/include/cpu_features_wrapper.h	/^#define WEBRTC_SYSTEM_WRAPPERS_INCLUDE_CPU_FEATURES_WRAPPER_H_$/;"	d
WEBRTC_SYSTEM_WRAPPERS_INCLUDE_CPU_INFO_H_	webrtc/system_wrappers/include/cpu_info.h	/^#define WEBRTC_SYSTEM_WRAPPERS_INCLUDE_CPU_INFO_H_$/;"	d
WEBRTC_SYSTEM_WRAPPERS_INCLUDE_CRITICAL_SECTION_WRAPPER_H_	webrtc/system_wrappers/include/critical_section_wrapper.h	/^#define WEBRTC_SYSTEM_WRAPPERS_INCLUDE_CRITICAL_SECTION_WRAPPER_H_$/;"	d
WEBRTC_SYSTEM_WRAPPERS_INCLUDE_EVENT_WRAPPER_H_	webrtc/system_wrappers/include/event_wrapper.h	/^#define WEBRTC_SYSTEM_WRAPPERS_INCLUDE_EVENT_WRAPPER_H_$/;"	d
WEBRTC_SYSTEM_WRAPPERS_INCLUDE_FIELD_TRIAL_DEFAULT_H_	webrtc/system_wrappers/include/field_trial_default.h	/^#define WEBRTC_SYSTEM_WRAPPERS_INCLUDE_FIELD_TRIAL_DEFAULT_H_$/;"	d
WEBRTC_SYSTEM_WRAPPERS_INCLUDE_FIELD_TRIAL_H_	webrtc/system_wrappers/include/field_trial.h	/^#define WEBRTC_SYSTEM_WRAPPERS_INCLUDE_FIELD_TRIAL_H_$/;"	d
WEBRTC_SYSTEM_WRAPPERS_INCLUDE_FILE_WRAPPER_H_	webrtc/system_wrappers/include/file_wrapper.h	/^#define WEBRTC_SYSTEM_WRAPPERS_INCLUDE_FILE_WRAPPER_H_$/;"	d
WEBRTC_SYSTEM_WRAPPERS_INCLUDE_LOGCAT_TRACE_CONTEXT_H_	webrtc/system_wrappers/include/logcat_trace_context.h	/^#define WEBRTC_SYSTEM_WRAPPERS_INCLUDE_LOGCAT_TRACE_CONTEXT_H_$/;"	d
WEBRTC_SYSTEM_WRAPPERS_INCLUDE_LOGGING_H_	webrtc/system_wrappers/include/logging.h	/^#define WEBRTC_SYSTEM_WRAPPERS_INCLUDE_LOGGING_H_$/;"	d
WEBRTC_SYSTEM_WRAPPERS_INCLUDE_METRICS_DEFAULT_H_	webrtc/system_wrappers/include/metrics_default.h	/^#define WEBRTC_SYSTEM_WRAPPERS_INCLUDE_METRICS_DEFAULT_H_$/;"	d
WEBRTC_SYSTEM_WRAPPERS_INCLUDE_METRICS_H_	webrtc/system_wrappers/include/metrics.h	/^#define WEBRTC_SYSTEM_WRAPPERS_INCLUDE_METRICS_H_$/;"	d
WEBRTC_SYSTEM_WRAPPERS_INCLUDE_NTP_TIME_H_	webrtc/system_wrappers/include/ntp_time.h	/^#define WEBRTC_SYSTEM_WRAPPERS_INCLUDE_NTP_TIME_H_$/;"	d
WEBRTC_SYSTEM_WRAPPERS_INCLUDE_RW_LOCK_WRAPPER_H_	webrtc/system_wrappers/include/rw_lock_wrapper.h	/^#define WEBRTC_SYSTEM_WRAPPERS_INCLUDE_RW_LOCK_WRAPPER_H_$/;"	d
WEBRTC_SYSTEM_WRAPPERS_INCLUDE_SLEEP_H_	webrtc/system_wrappers/include/sleep.h	/^#define WEBRTC_SYSTEM_WRAPPERS_INCLUDE_SLEEP_H_$/;"	d
WEBRTC_SYSTEM_WRAPPERS_INCLUDE_SORT_H_	webrtc/system_wrappers/include/sort.h	/^#define WEBRTC_SYSTEM_WRAPPERS_INCLUDE_SORT_H_$/;"	d
WEBRTC_SYSTEM_WRAPPERS_INCLUDE_STATIC_INSTANCE_H_	webrtc/system_wrappers/include/static_instance.h	/^#define WEBRTC_SYSTEM_WRAPPERS_INCLUDE_STATIC_INSTANCE_H_$/;"	d
WEBRTC_SYSTEM_WRAPPERS_INCLUDE_STL_UTIL_H_	webrtc/system_wrappers/include/stl_util.h	/^#define WEBRTC_SYSTEM_WRAPPERS_INCLUDE_STL_UTIL_H_$/;"	d
WEBRTC_SYSTEM_WRAPPERS_INCLUDE_STRINGIZE_MACROS_H_	webrtc/system_wrappers/include/stringize_macros.h	/^#define WEBRTC_SYSTEM_WRAPPERS_INCLUDE_STRINGIZE_MACROS_H_$/;"	d
WEBRTC_SYSTEM_WRAPPERS_INCLUDE_TRACE_H_	webrtc/system_wrappers/include/trace.h	/^#define WEBRTC_SYSTEM_WRAPPERS_INCLUDE_TRACE_H_$/;"	d
WEBRTC_SYSTEM_WRAPPERS_INCLUDE_UTF_UTIL_H_	webrtc/system_wrappers/include/utf_util_win.h	/^#define WEBRTC_SYSTEM_WRAPPERS_INCLUDE_UTF_UTIL_H_$/;"	d
WEBRTC_SYSTEM_WRAPPERS_SOURCE_FIX_INTERLOCKED_EXCHANGE_POINTER_WINDOWS_H_	webrtc/system_wrappers/include/fix_interlocked_exchange_pointer_win.h	/^#define WEBRTC_SYSTEM_WRAPPERS_SOURCE_FIX_INTERLOCKED_EXCHANGE_POINTER_WINDOWS_H_$/;"	d
WEBRTC_SYSTEM_WRAPPERS_SOURCE_TRACE_IMPL_H_	webrtc/system_wrappers/source/trace_impl.h	/^#define WEBRTC_SYSTEM_WRAPPERS_SOURCE_TRACE_IMPL_H_$/;"	d
WEBRTC_SYSTEM_WRAPPERS_SOURCE_TRACE_POSIX_H_	webrtc/system_wrappers/source/trace_posix.h	/^#define WEBRTC_SYSTEM_WRAPPERS_SOURCE_TRACE_POSIX_H_$/;"	d
WEBRTC_TRACE	webrtc/system_wrappers/include/trace.h	/^#define WEBRTC_TRACE /;"	d
WEBRTC_TRACE_MAX_FILE_SIZE	webrtc/system_wrappers/source/trace_impl.h	/^#define WEBRTC_TRACE_MAX_FILE_SIZE /;"	d
WEBRTC_TRACE_MAX_MESSAGE_SIZE	webrtc/system_wrappers/source/trace_impl.h	/^#define WEBRTC_TRACE_MAX_MESSAGE_SIZE /;"	d
WEBRTC_TYPEDEFS_H_	webrtc/typedefs.h	/^#define WEBRTC_TYPEDEFS_H_$/;"	d
WEBRTC_UNTRUSTED_DELAY	webrtc/modules/audio_processing/aec/echo_cancellation.cc	/^#define WEBRTC_UNTRUSTED_DELAY$/;"	d	file:
WE_CLOSE	webrtc/base/window.h	/^  WE_CLOSE = 1,$/;"	e	enum:rtc::WindowEvent
WE_MINIMIZE	webrtc/base/window.h	/^  WE_MINIMIZE = 2,$/;"	e	enum:rtc::WindowEvent
WE_RESIZE	webrtc/base/window.h	/^  WE_RESIZE = 0,$/;"	e	enum:rtc::WindowEvent
WE_RESTORE	webrtc/base/window.h	/^  WE_RESTORE = 3,$/;"	e	enum:rtc::WindowEvent
WIDTH	webrtc/modules/audio_processing/ns/defines.h	/^#define WIDTH /;"	d
WIDTH_PR_MAP	webrtc/modules/audio_processing/ns/defines.h	/^#define WIDTH_PR_MAP /;"	d
WIDTH_Q8	webrtc/modules/audio_processing/ns/nsx_defines.h	/^#define WIDTH_Q8 /;"	d
WIN32_LEAN_AND_MEAN	webrtc/base/common.cc	/^#define WIN32_LEAN_AND_MEAN$/;"	d	file:
WIN32_LEAN_AND_MEAN	webrtc/base/helpers.cc	/^#define WIN32_LEAN_AND_MEAN$/;"	d	file:
WIN32_LEAN_AND_MEAN	webrtc/base/httpcommon.cc	/^#define WIN32_LEAN_AND_MEAN$/;"	d	file:
WIN32_LEAN_AND_MEAN	webrtc/base/logging.cc	/^#define WIN32_LEAN_AND_MEAN$/;"	d	file:
WIN32_LEAN_AND_MEAN	webrtc/base/physicalsocketserver.cc	/^#define WIN32_LEAN_AND_MEAN$/;"	d	file:
WIN32_LEAN_AND_MEAN	webrtc/base/sigslot.h	/^#		define WIN32_LEAN_AND_MEAN$/;"	d
WIN32_LEAN_AND_MEAN	webrtc/base/socketadapters.cc	/^#define WIN32_LEAN_AND_MEAN$/;"	d	file:
WIN32_LEAN_AND_MEAN	webrtc/base/timeutils.cc	/^#define WIN32_LEAN_AND_MEAN$/;"	d	file:
WIN32_LEAN_AND_MEAN	webrtc/base/win32.h	/^#define WIN32_LEAN_AND_MEAN$/;"	d
WINHTTP	webrtc/base/proxydetect.cc	/^const char WINHTTP[] = "winhttp";$/;"	v
WINHTTP_ACCESS_TYPE_DEFAULT_PROXY	webrtc/base/proxydetect.cc	/^#define WINHTTP_ACCESS_TYPE_DEFAULT_PROXY /;"	d	file:
WINHTTP_ACCESS_TYPE_NAMED_PROXY	webrtc/base/proxydetect.cc	/^#define WINHTTP_ACCESS_TYPE_NAMED_PROXY /;"	d	file:
WINHTTP_ACCESS_TYPE_NO_PROXY	webrtc/base/proxydetect.cc	/^#define WINHTTP_ACCESS_TYPE_NO_PROXY /;"	d	file:
WINHTTP_AUTOPROXY_AUTO_DETECT	webrtc/base/proxydetect.cc	/^#define WINHTTP_AUTOPROXY_AUTO_DETECT /;"	d	file:
WINHTTP_AUTOPROXY_CONFIG_URL	webrtc/base/proxydetect.cc	/^#define WINHTTP_AUTOPROXY_CONFIG_URL /;"	d	file:
WINHTTP_AUTOPROXY_OPTIONS	webrtc/base/proxydetect.cc	/^} WINHTTP_AUTOPROXY_OPTIONS;$/;"	t	typeref:struct:__anon45	file:
WINHTTP_AUTOPROXY_RUN_INPROCESS	webrtc/base/proxydetect.cc	/^#define WINHTTP_AUTOPROXY_RUN_INPROCESS /;"	d	file:
WINHTTP_AUTOPROXY_RUN_OUTPROCESS_ONLY	webrtc/base/proxydetect.cc	/^#define WINHTTP_AUTOPROXY_RUN_OUTPROCESS_ONLY /;"	d	file:
WINHTTP_AUTO_DETECT_TYPE_DHCP	webrtc/base/proxydetect.cc	/^#define WINHTTP_AUTO_DETECT_TYPE_DHCP /;"	d	file:
WINHTTP_AUTO_DETECT_TYPE_DNS_A	webrtc/base/proxydetect.cc	/^#define WINHTTP_AUTO_DETECT_TYPE_DNS_A /;"	d	file:
WINHTTP_CURRENT_USER_IE_PROXY_CONFIG	webrtc/base/proxydetect.cc	/^} WINHTTP_CURRENT_USER_IE_PROXY_CONFIG;$/;"	t	typeref:struct:__anon46	file:
WINHTTP_NO_PROXY_BYPASS	webrtc/base/proxydetect.cc	/^#define WINHTTP_NO_PROXY_BYPASS /;"	d	file:
WINHTTP_NO_PROXY_NAME	webrtc/base/proxydetect.cc	/^#define WINHTTP_NO_PROXY_NAME /;"	d	file:
WINHTTP_PROXY_INFO	webrtc/base/proxydetect.cc	/^} WINHTTP_PROXY_INFO, * LPWINHTTP_PROXY_INFO;$/;"	t	typeref:struct:__anon44	file:
WINLEN	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^#define WINLEN /;"	d
WM_DNSNOTIFY	webrtc/base/win32socketserver.cc	/^#define WM_DNSNOTIFY /;"	d	file:
WM_QUEUE_DELAYED_TASK	webrtc/base/task_queue_win.cc	/^#define WM_QUEUE_DELAYED_TASK /;"	d	file:
WM_RUN_TASK	webrtc/base/task_queue_win.cc	/^#define WM_RUN_TASK /;"	d	file:
WM_SOCKETNOTIFY	webrtc/base/win32socketserver.cc	/^#define WM_SOCKETNOTIFY /;"	d	file:
WPDNode	webrtc/modules/audio_processing/transient/wpd_node.cc	/^WPDNode::WPDNode(size_t length,$/;"	f	class:webrtc::WPDNode
WPDNode	webrtc/modules/audio_processing/transient/wpd_node.h	/^class WPDNode {$/;"	c	namespace:webrtc
WPDTree	webrtc/modules/audio_processing/transient/wpd_tree.cc	/^WPDTree::WPDTree(size_t data_length, const float* high_pass_coefficients,$/;"	f	class:webrtc::WPDTree
WPDTree	webrtc/modules/audio_processing/transient/wpd_tree.h	/^class WPDTree {$/;"	c	namespace:webrtc
WSAErrorToString	webrtc/base/win32socketserver.cc	/^LPCSTR WSAErrorToString(int error, LPCSTR *description_result) {$/;"	f	namespace:rtc
W_LENGTH	webrtc/modules/audio_processing/ns/defines.h	/^#define W_LENGTH /;"	d
W_upper	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  uint32_t  W_upper;$/;"	m	struct:Bitstreamstruct
W_upper	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  uint32_t W_upper;$/;"	m	struct:__anon142
Wait	webrtc/base/event.cc	/^bool Event::Wait(int milliseconds) {$/;"	f	class:rtc::Event
Wait	webrtc/base/firewallsocketserver.cc	/^bool FirewallSocketServer::Wait(int cms, bool process_io) {$/;"	f	class:rtc::FirewallSocketServer
Wait	webrtc/base/natsocketfactory.cc	/^bool NATSocketServer::Wait(int cms, bool process_io) {$/;"	f	class:rtc::NATSocketServer
Wait	webrtc/base/nullsocketserver.cc	/^bool NullSocketServer::Wait(int cms, bool process_io) {$/;"	f	class:rtc::NullSocketServer
Wait	webrtc/base/physicalsocketserver.cc	/^bool PhysicalSocketServer::Wait(int cmsWait, bool process_io) {$/;"	f	class:rtc::PhysicalSocketServer
Wait	webrtc/base/virtualsocketserver.cc	/^bool VirtualSocketServer::Wait(int cmsWait, bool process_io) {$/;"	f	class:rtc::VirtualSocketServer
Wait	webrtc/base/win32socketserver.cc	/^bool Win32SocketServer::Wait(int cms, bool process_io) {$/;"	f	class:rtc::Win32SocketServer
Wake	webrtc/base/task.cc	/^void Task::Wake() {$/;"	f	class:rtc::Task
WakeTasks	webrtc/base/faketaskrunner.h	/^  virtual void WakeTasks() { RunTasks(); }$/;"	f	class:rtc::FakeTaskRunner
WakeTasks	webrtc/base/task_unittest.cc	/^  virtual void WakeTasks() { RunTasks(); }$/;"	f	class:rtc::MyTaskRunner
WakeTasks	webrtc/base/task_unittest.cc	/^  virtual void WakeTasks() { }$/;"	f	class:rtc::DeleteTestTaskRunner
WakeUp	webrtc/base/firewallsocketserver.cc	/^void FirewallSocketServer::WakeUp() {$/;"	f	class:rtc::FirewallSocketServer
WakeUp	webrtc/base/natsocketfactory.cc	/^void NATSocketServer::WakeUp() {$/;"	f	class:rtc::NATSocketServer
WakeUp	webrtc/base/nullsocketserver.cc	/^void NullSocketServer::WakeUp() {$/;"	f	class:rtc::NullSocketServer
WakeUp	webrtc/base/physicalsocketserver.cc	/^void PhysicalSocketServer::WakeUp() {$/;"	f	class:rtc::PhysicalSocketServer
WakeUp	webrtc/base/virtualsocketserver.cc	/^void VirtualSocketServer::WakeUp() {$/;"	f	class:rtc::VirtualSocketServer
WakeUp	webrtc/base/win32socketserver.cc	/^void Win32SocketServer::WakeUp() {$/;"	f	class:rtc::Win32SocketServer
WakeUpSocketServer	webrtc/base/messagequeue.cc	/^void MessageQueue::WakeUpSocketServer() {$/;"	f	class:rtc::MessageQueue
WallClockStartTime	webrtc/base/logging.cc	/^uint32_t LogMessage::WallClockStartTime() {$/;"	f	class:rtc::LogMessage
WavBasedSimulator	webrtc/modules/audio_processing/test/wav_based_simulator.cc	/^WavBasedSimulator::WavBasedSimulator(const SimulationSettings& settings)$/;"	f	class:webrtc::test::WavBasedSimulator
WavFile	webrtc/common_audio/wav_file.h	/^class WavFile {$/;"	c	namespace:webrtc
WavFormat	webrtc/common_audio/wav_header.h	/^enum WavFormat {$/;"	g	namespace:webrtc
WavHeader	webrtc/common_audio/wav_header.cc	/^struct WavHeader {$/;"	s	namespace:webrtc::__anon112	file:
WavReader	webrtc/common_audio/wav_file.cc	/^WavReader::WavReader(const std::string& filename)$/;"	f	class:webrtc::WavReader
WavWriter	webrtc/common_audio/wav_file.cc	/^WavWriter::WavWriter(const std::string& filename, int sample_rate,$/;"	f	class:webrtc::WavWriter
WeakPtr	webrtc/base/weak_ptr.h	/^  WeakPtr() : ptr_(nullptr) {}$/;"	f	class:rtc::WeakPtr
WeakPtr	webrtc/base/weak_ptr.h	/^  WeakPtr(WeakPtr<U>&& other)$/;"	f	class:rtc::WeakPtr
WeakPtr	webrtc/base/weak_ptr.h	/^  WeakPtr(const WeakPtr<U>& other)$/;"	f	class:rtc::WeakPtr
WeakPtr	webrtc/base/weak_ptr.h	/^  WeakPtr(const internal::WeakReference& ref, T* ptr)$/;"	f	class:rtc::WeakPtr
WeakPtr	webrtc/base/weak_ptr.h	/^class WeakPtr : public internal::WeakPtrBase {$/;"	c	namespace:rtc
WeakPtrBase	webrtc/base/weak_ptr.cc	/^WeakPtrBase::WeakPtrBase() {}$/;"	f	class:rtc::internal::WeakPtrBase
WeakPtrBase	webrtc/base/weak_ptr.cc	/^WeakPtrBase::WeakPtrBase(const WeakReference& ref) : ref_(ref) {}$/;"	f	class:rtc::internal::WeakPtrBase
WeakPtrBase	webrtc/base/weak_ptr.h	/^class WeakPtrBase {$/;"	c	namespace:rtc::internal
WeakPtrFactory	webrtc/base/weak_ptr.h	/^  explicit WeakPtrFactory(T* ptr) : ptr_(ptr) {}$/;"	f	class:rtc::WeakPtrFactory
WeakPtrFactory	webrtc/base/weak_ptr.h	/^class WeakPtrFactory {$/;"	c	namespace:rtc
WeakReference	webrtc/base/weak_ptr.cc	/^WeakReference::WeakReference() {}$/;"	f	class:rtc::internal::WeakReference
WeakReference	webrtc/base/weak_ptr.cc	/^WeakReference::WeakReference(const Flag* flag) : flag_(flag) {}$/;"	f	class:rtc::internal::WeakReference
WeakReference	webrtc/base/weak_ptr.h	/^class WeakReference {$/;"	c	namespace:rtc::internal
WeakReferenceOwner	webrtc/base/weak_ptr.cc	/^WeakReferenceOwner::WeakReferenceOwner() {$/;"	f	class:rtc::internal::WeakReferenceOwner
WeakReferenceOwner	webrtc/base/weak_ptr.h	/^class WeakReferenceOwner {$/;"	c	namespace:rtc::internal
WebRTCAudioProcessing	WebRTCAudioProcessing_jni.h	/^typedef struct WebRTCAudioProcessing {$/;"	s
WebRTCAudioProcessing	WebRTCAudioProcessing_jni.h	/^}WebRTCAudioProcessing;$/;"	t	typeref:struct:WebRTCAudioProcessing
WebRtcAecComputeCoherence	webrtc/modules/audio_processing/aec/aec_core_optimized_methods.h	/^typedef void (*WebRtcAecComputeCoherence)(const CoherenceState* coherence_state,$/;"	t	namespace:webrtc
WebRtcAecFilterAdaptation	webrtc/modules/audio_processing/aec/aec_core_optimized_methods.h	/^typedef void (*WebRtcAecFilterAdaptation)($/;"	t	namespace:webrtc
WebRtcAecFilterFar	webrtc/modules/audio_processing/aec/aec_core_optimized_methods.h	/^typedef void (*WebRtcAecFilterFar)($/;"	t	namespace:webrtc
WebRtcAecOverdrive	webrtc/modules/audio_processing/aec/aec_core_optimized_methods.h	/^typedef void (*WebRtcAecOverdrive)(float overdrive_scaling,$/;"	t	namespace:webrtc
WebRtcAecPartitionDelay	webrtc/modules/audio_processing/aec/aec_core_optimized_methods.h	/^typedef int (*WebRtcAecPartitionDelay)($/;"	t	namespace:webrtc
WebRtcAecScaleErrorSignal	webrtc/modules/audio_processing/aec/aec_core_optimized_methods.h	/^typedef void (*WebRtcAecScaleErrorSignal)(float mu,$/;"	t	namespace:webrtc
WebRtcAecStoreAsComplex	webrtc/modules/audio_processing/aec/aec_core_optimized_methods.h	/^typedef void (*WebRtcAecStoreAsComplex)(const float* data,$/;"	t	namespace:webrtc
WebRtcAecSuppress	webrtc/modules/audio_processing/aec/aec_core_optimized_methods.h	/^typedef void (*WebRtcAecSuppress)(const float hNl[PART_LEN1],$/;"	t	namespace:webrtc
WebRtcAecUpdateCoherenceSpectra	webrtc/modules/audio_processing/aec/aec_core_optimized_methods.h	/^typedef void (*WebRtcAecUpdateCoherenceSpectra)(int mult,$/;"	t	namespace:webrtc
WebRtcAecWindowData	webrtc/modules/audio_processing/aec/aec_core_optimized_methods.h	/^typedef void (*WebRtcAecWindowData)(float* x_windowed, const float* x);$/;"	t	namespace:webrtc
WebRtcAec_AdjustFarendBufferSizeAndSystemDelay	webrtc/modules/audio_processing/aec/aec_core.cc	/^int WebRtcAec_AdjustFarendBufferSizeAndSystemDelay(AecCore* aec,$/;"	f	namespace:webrtc
WebRtcAec_BufferFarend	webrtc/modules/audio_processing/aec/echo_cancellation.cc	/^int32_t WebRtcAec_BufferFarend(void* aecInst,$/;"	f	namespace:webrtc
WebRtcAec_BufferFarendBlock	webrtc/modules/audio_processing/aec/aec_core.cc	/^void WebRtcAec_BufferFarendBlock(AecCore* aec, const float* farend) {$/;"	f	namespace:webrtc
WebRtcAec_ComputeCoherence	webrtc/modules/audio_processing/aec/aec_core.cc	/^WebRtcAecComputeCoherence WebRtcAec_ComputeCoherence;$/;"	m	namespace:webrtc	file:
WebRtcAec_Create	webrtc/modules/audio_processing/aec/echo_cancellation.cc	/^void* WebRtcAec_Create() {$/;"	f	namespace:webrtc
WebRtcAec_CreateAec	webrtc/modules/audio_processing/aec/aec_core.cc	/^AecCore* WebRtcAec_CreateAec(int instance_count) {$/;"	f	namespace:webrtc
WebRtcAec_CreateResampler	webrtc/modules/audio_processing/aec/aec_resampler.cc	/^void* WebRtcAec_CreateResampler() {$/;"	f	namespace:webrtc
WebRtcAec_FilterAdaptation	webrtc/modules/audio_processing/aec/aec_core.cc	/^WebRtcAecFilterAdaptation WebRtcAec_FilterAdaptation;$/;"	m	namespace:webrtc	file:
WebRtcAec_FilterAdaptation_mips	webrtc/modules/audio_processing/aec/aec_core_mips.cc	/^void WebRtcAec_FilterAdaptation_mips($/;"	f	namespace:webrtc
WebRtcAec_FilterFar	webrtc/modules/audio_processing/aec/aec_core.cc	/^WebRtcAecFilterFar WebRtcAec_FilterFar;$/;"	m	namespace:webrtc	file:
WebRtcAec_FilterFar_mips	webrtc/modules/audio_processing/aec/aec_core_mips.cc	/^void WebRtcAec_FilterFar_mips($/;"	f	namespace:webrtc
WebRtcAec_Free	webrtc/modules/audio_processing/aec/echo_cancellation.cc	/^void WebRtcAec_Free(void* aecInst) {$/;"	f	namespace:webrtc
WebRtcAec_FreeAec	webrtc/modules/audio_processing/aec/aec_core.cc	/^void WebRtcAec_FreeAec(AecCore* aec) {$/;"	f	namespace:webrtc
WebRtcAec_FreeResampler	webrtc/modules/audio_processing/aec/aec_resampler.cc	/^void WebRtcAec_FreeResampler(void* resampInst) {$/;"	f	namespace:webrtc
WebRtcAec_GetBufferFarendError	webrtc/modules/audio_processing/aec/echo_cancellation.cc	/^int32_t WebRtcAec_GetBufferFarendError(void* aecInst,$/;"	f	namespace:webrtc
WebRtcAec_GetDelayMetrics	webrtc/modules/audio_processing/aec/echo_cancellation.cc	/^int WebRtcAec_GetDelayMetrics(void* handle,$/;"	f	namespace:webrtc
WebRtcAec_GetDelayMetricsCore	webrtc/modules/audio_processing/aec/aec_core.cc	/^int WebRtcAec_GetDelayMetricsCore(AecCore* self,$/;"	f	namespace:webrtc
WebRtcAec_GetEchoStats	webrtc/modules/audio_processing/aec/aec_core.cc	/^void WebRtcAec_GetEchoStats(AecCore* self,$/;"	f	namespace:webrtc
WebRtcAec_GetMetrics	webrtc/modules/audio_processing/aec/echo_cancellation.cc	/^int WebRtcAec_GetMetrics(void* handle, AecMetrics* metrics) {$/;"	f	namespace:webrtc
WebRtcAec_GetSkew	webrtc/modules/audio_processing/aec/aec_resampler.cc	/^int WebRtcAec_GetSkew(void* resampInst, int rawSkew, float* skewEst) {$/;"	f	namespace:webrtc
WebRtcAec_Init	webrtc/modules/audio_processing/aec/echo_cancellation.cc	/^int32_t WebRtcAec_Init(void* aecInst, int32_t sampFreq, int32_t scSampFreq) {$/;"	f	namespace:webrtc
WebRtcAec_InitAec	webrtc/modules/audio_processing/aec/aec_core.cc	/^int WebRtcAec_InitAec(AecCore* aec, int sampFreq) {$/;"	f	namespace:webrtc
WebRtcAec_InitAec_SSE2	webrtc/modules/audio_processing/aec/aec_core_sse2.cc	/^void WebRtcAec_InitAec_SSE2(void) {$/;"	f	namespace:webrtc
WebRtcAec_InitAec_mips	webrtc/modules/audio_processing/aec/aec_core_mips.cc	/^void WebRtcAec_InitAec_mips(void) {$/;"	f	namespace:webrtc
WebRtcAec_InitAec_neon	webrtc/modules/audio_processing/aec/aec_core_neon.cc	/^void WebRtcAec_InitAec_neon(void) {$/;"	f	namespace:webrtc
WebRtcAec_InitResampler	webrtc/modules/audio_processing/aec/aec_resampler.cc	/^int WebRtcAec_InitResampler(void* resampInst, int deviceSampleRateHz) {$/;"	f	namespace:webrtc
WebRtcAec_Overdrive	webrtc/modules/audio_processing/aec/aec_core.cc	/^WebRtcAecOverdrive WebRtcAec_Overdrive;$/;"	m	namespace:webrtc	file:
WebRtcAec_Overdrive_mips	webrtc/modules/audio_processing/aec/aec_core_mips.cc	/^void WebRtcAec_Overdrive_mips(float overdrive_scaling,$/;"	f	namespace:webrtc
WebRtcAec_PartitionDelay	webrtc/modules/audio_processing/aec/aec_core.cc	/^WebRtcAecPartitionDelay WebRtcAec_PartitionDelay;$/;"	m	namespace:webrtc	file:
WebRtcAec_Process	webrtc/modules/audio_processing/aec/echo_cancellation.cc	/^int32_t WebRtcAec_Process(void* aecInst,$/;"	f	namespace:webrtc
WebRtcAec_ProcessFrames	webrtc/modules/audio_processing/aec/aec_core.cc	/^void WebRtcAec_ProcessFrames(AecCore* aec,$/;"	f	namespace:webrtc
WebRtcAec_ResampleLinear	webrtc/modules/audio_processing/aec/aec_resampler.cc	/^void WebRtcAec_ResampleLinear(void* resampInst,$/;"	f	namespace:webrtc
WebRtcAec_ScaleErrorSignal	webrtc/modules/audio_processing/aec/aec_core.cc	/^WebRtcAecScaleErrorSignal WebRtcAec_ScaleErrorSignal;$/;"	m	namespace:webrtc	file:
WebRtcAec_ScaleErrorSignal_mips	webrtc/modules/audio_processing/aec/aec_core_mips.cc	/^void WebRtcAec_ScaleErrorSignal_mips(float mu,$/;"	f	namespace:webrtc
WebRtcAec_SetConfigCore	webrtc/modules/audio_processing/aec/aec_core.cc	/^void WebRtcAec_SetConfigCore(AecCore* self,$/;"	f	namespace:webrtc
WebRtcAec_SetSystemDelay	webrtc/modules/audio_processing/aec/aec_core.cc	/^void WebRtcAec_SetSystemDelay(AecCore* self, int delay) {$/;"	f	namespace:webrtc
WebRtcAec_StoreAsComplex	webrtc/modules/audio_processing/aec/aec_core.cc	/^WebRtcAecStoreAsComplex WebRtcAec_StoreAsComplex;$/;"	m	namespace:webrtc	file:
WebRtcAec_Suppress	webrtc/modules/audio_processing/aec/aec_core.cc	/^WebRtcAecSuppress WebRtcAec_Suppress;$/;"	m	namespace:webrtc	file:
WebRtcAec_Suppress_mips	webrtc/modules/audio_processing/aec/aec_core_mips.cc	/^void WebRtcAec_Suppress_mips(const float hNl[PART_LEN1],$/;"	f	namespace:webrtc
WebRtcAec_UpdateCoherenceSpectra	webrtc/modules/audio_processing/aec/aec_core.cc	/^WebRtcAecUpdateCoherenceSpectra WebRtcAec_UpdateCoherenceSpectra;$/;"	m	namespace:webrtc	file:
WebRtcAec_WindowData	webrtc/modules/audio_processing/aec/aec_core.cc	/^WebRtcAecWindowData WebRtcAec_WindowData;$/;"	m	namespace:webrtc	file:
WebRtcAec_aec3_enabled	webrtc/modules/audio_processing/aec/aec_core.cc	/^int WebRtcAec_aec3_enabled(AecCore* self) {$/;"	f	namespace:webrtc
WebRtcAec_aec_core	webrtc/modules/audio_processing/aec/echo_cancellation.cc	/^AecCore* WebRtcAec_aec_core(void* handle) {$/;"	f	namespace:webrtc
WebRtcAec_delay_agnostic_enabled	webrtc/modules/audio_processing/aec/aec_core.cc	/^int WebRtcAec_delay_agnostic_enabled(AecCore* self) {$/;"	f	namespace:webrtc
WebRtcAec_echo_state	webrtc/modules/audio_processing/aec/aec_core.cc	/^int WebRtcAec_echo_state(AecCore* self) {$/;"	f	namespace:webrtc
WebRtcAec_enable_aec3	webrtc/modules/audio_processing/aec/aec_core.cc	/^void WebRtcAec_enable_aec3(AecCore* self, int enable) {$/;"	f	namespace:webrtc
WebRtcAec_enable_delay_agnostic	webrtc/modules/audio_processing/aec/aec_core.cc	/^void WebRtcAec_enable_delay_agnostic(AecCore* self, int enable) {$/;"	f	namespace:webrtc
WebRtcAec_enable_extended_filter	webrtc/modules/audio_processing/aec/aec_core.cc	/^void WebRtcAec_enable_extended_filter(AecCore* self, int enable) {$/;"	f	namespace:webrtc
WebRtcAec_enable_refined_adaptive_filter	webrtc/modules/audio_processing/aec/aec_core.cc	/^void WebRtcAec_enable_refined_adaptive_filter(AecCore* self, bool enable) {$/;"	f	namespace:webrtc
WebRtcAec_extended_filter_enabled	webrtc/modules/audio_processing/aec/aec_core.cc	/^int WebRtcAec_extended_filter_enabled(AecCore* self) {$/;"	f	namespace:webrtc
WebRtcAec_get_echo_status	webrtc/modules/audio_processing/aec/echo_cancellation.cc	/^int WebRtcAec_get_echo_status(void* handle, int* status) {$/;"	f	namespace:webrtc
WebRtcAec_kExtendedSmoothingCoefficients	webrtc/modules/audio_processing/aec/aec_core.cc	/^const float WebRtcAec_kExtendedSmoothingCoefficients[2][2] = {{0.9f, 0.1f},$/;"	m	namespace:webrtc	file:
WebRtcAec_kMinFarendPSD	webrtc/modules/audio_processing/aec/aec_core.cc	/^const float WebRtcAec_kMinFarendPSD = 15;$/;"	m	namespace:webrtc	file:
WebRtcAec_kNormalSmoothingCoefficients	webrtc/modules/audio_processing/aec/aec_core.cc	/^const float WebRtcAec_kNormalSmoothingCoefficients[2][2] = {{0.9f, 0.1f},$/;"	m	namespace:webrtc	file:
WebRtcAec_overDriveCurve	webrtc/modules/audio_processing/aec/aec_core.cc	/^ALIGN16_BEG const float ALIGN16_END WebRtcAec_overDriveCurve[65] = {$/;"	m	namespace:webrtc	file:
WebRtcAec_refined_adaptive_filter_enabled	webrtc/modules/audio_processing/aec/aec_core.cc	/^bool WebRtcAec_refined_adaptive_filter_enabled(const AecCore* self) {$/;"	f	namespace:webrtc
WebRtcAec_set_config	webrtc/modules/audio_processing/aec/echo_cancellation.cc	/^int WebRtcAec_set_config(void* handle, AecConfig config) {$/;"	f	namespace:webrtc
WebRtcAec_sqrtHanning	webrtc/modules/audio_processing/aec/aec_core.cc	/^ALIGN16_BEG const float ALIGN16_END WebRtcAec_sqrtHanning[65] = {$/;"	m	namespace:webrtc	file:
WebRtcAec_system_delay	webrtc/modules/audio_processing/aec/aec_core.cc	/^int WebRtcAec_system_delay(AecCore* self) {$/;"	f	namespace:webrtc
WebRtcAec_weightCurve	webrtc/modules/audio_processing/aec/aec_core.cc	/^ALIGN16_BEG const float ALIGN16_END WebRtcAec_weightCurve[65] = {$/;"	m	namespace:webrtc	file:
WebRtcAecm_AlignedFarend	webrtc/modules/audio_processing/aecm/aecm_core.cc	/^const uint16_t* WebRtcAecm_AlignedFarend(AecmCore* self,$/;"	f
WebRtcAecm_AsymFilt	webrtc/modules/audio_processing/aecm/aecm_core.cc	/^int16_t WebRtcAecm_AsymFilt(const int16_t filtOld, const int16_t inVal,$/;"	f
WebRtcAecm_BufferFarFrame	webrtc/modules/audio_processing/aecm/aecm_core.cc	/^void WebRtcAecm_BufferFarFrame(AecmCore* const aecm,$/;"	f
WebRtcAecm_BufferFarend	webrtc/modules/audio_processing/aecm/echo_control_mobile.cc	/^int32_t WebRtcAecm_BufferFarend(void *aecmInst, const int16_t *farend,$/;"	f
WebRtcAecm_CalcEnergies	webrtc/modules/audio_processing/aecm/aecm_core.cc	/^void WebRtcAecm_CalcEnergies(AecmCore* aecm,$/;"	f
WebRtcAecm_CalcLinearEnergies	webrtc/modules/audio_processing/aecm/aecm_core.cc	/^CalcLinearEnergies WebRtcAecm_CalcLinearEnergies;$/;"	v
WebRtcAecm_CalcLinearEnergiesNeon	webrtc/modules/audio_processing/aecm/aecm_core_neon.cc	/^void WebRtcAecm_CalcLinearEnergiesNeon(AecmCore* aecm,$/;"	f
WebRtcAecm_CalcLinearEnergies_mips	webrtc/modules/audio_processing/aecm/aecm_core_mips.cc	/^void WebRtcAecm_CalcLinearEnergies_mips(AecmCore* aecm,$/;"	f
WebRtcAecm_CalcStepSize	webrtc/modules/audio_processing/aecm/aecm_core.cc	/^int16_t WebRtcAecm_CalcStepSize(AecmCore* const aecm) {$/;"	f
WebRtcAecm_CalcSuppressionGain	webrtc/modules/audio_processing/aecm/aecm_core.cc	/^int16_t WebRtcAecm_CalcSuppressionGain(AecmCore* const aecm) {$/;"	f
WebRtcAecm_Control	webrtc/modules/audio_processing/aecm/aecm_core.cc	/^int WebRtcAecm_Control(AecmCore* aecm, int delay, int nlpFlag) {$/;"	f
WebRtcAecm_Create	webrtc/modules/audio_processing/aecm/echo_control_mobile.cc	/^void* WebRtcAecm_Create() {$/;"	f
WebRtcAecm_CreateCore	webrtc/modules/audio_processing/aecm/aecm_core.cc	/^AecmCore* WebRtcAecm_CreateCore() {$/;"	f
WebRtcAecm_DelayComp	webrtc/modules/audio_processing/aecm/echo_control_mobile.cc	/^static int WebRtcAecm_DelayComp(AecMobile* aecm) {$/;"	f	file:
WebRtcAecm_EstBufDelay	webrtc/modules/audio_processing/aecm/echo_control_mobile.cc	/^static int WebRtcAecm_EstBufDelay(AecMobile* aecm, short msInSndCardBuf) {$/;"	f	file:
WebRtcAecm_FetchFarFrame	webrtc/modules/audio_processing/aecm/aecm_core.cc	/^void WebRtcAecm_FetchFarFrame(AecmCore* const aecm,$/;"	f
WebRtcAecm_Free	webrtc/modules/audio_processing/aecm/echo_control_mobile.cc	/^void WebRtcAecm_Free(void* aecmInst) {$/;"	f
WebRtcAecm_FreeCore	webrtc/modules/audio_processing/aecm/aecm_core.cc	/^void WebRtcAecm_FreeCore(AecmCore* aecm) {$/;"	f
WebRtcAecm_GetBufferFarendError	webrtc/modules/audio_processing/aecm/echo_control_mobile.cc	/^int32_t WebRtcAecm_GetBufferFarendError(void *aecmInst, const int16_t *farend,$/;"	f
WebRtcAecm_GetEchoPath	webrtc/modules/audio_processing/aecm/echo_control_mobile.cc	/^int32_t WebRtcAecm_GetEchoPath(void* aecmInst,$/;"	f
WebRtcAecm_Init	webrtc/modules/audio_processing/aecm/echo_control_mobile.cc	/^int32_t WebRtcAecm_Init(void *aecmInst, int32_t sampFreq)$/;"	f
WebRtcAecm_InitCore	webrtc/modules/audio_processing/aecm/aecm_core.cc	/^int WebRtcAecm_InitCore(AecmCore* const aecm, int samplingFreq) {$/;"	f
WebRtcAecm_InitEchoPath	webrtc/modules/audio_processing/aecm/echo_control_mobile.cc	/^int32_t WebRtcAecm_InitEchoPath(void* aecmInst,$/;"	f
WebRtcAecm_InitEchoPathCore	webrtc/modules/audio_processing/aecm/aecm_core.cc	/^void WebRtcAecm_InitEchoPathCore(AecmCore* aecm, const int16_t* echo_path) {$/;"	f
WebRtcAecm_InitMips	webrtc/modules/audio_processing/aecm/aecm_core.cc	/^static void WebRtcAecm_InitMips(void)$/;"	f	file:
WebRtcAecm_InitNeon	webrtc/modules/audio_processing/aecm/aecm_core.cc	/^static void WebRtcAecm_InitNeon(void)$/;"	f	file:
WebRtcAecm_Process	webrtc/modules/audio_processing/aecm/echo_control_mobile.cc	/^int32_t WebRtcAecm_Process(void *aecmInst, const int16_t *nearendNoisy,$/;"	f
WebRtcAecm_ProcessBlock	webrtc/modules/audio_processing/aecm/aecm_core_c.cc	/^int WebRtcAecm_ProcessBlock(AecmCore* aecm,$/;"	f
WebRtcAecm_ProcessBlock	webrtc/modules/audio_processing/aecm/aecm_core_mips.cc	/^int WebRtcAecm_ProcessBlock(AecmCore* aecm,$/;"	f
WebRtcAecm_ProcessFrame	webrtc/modules/audio_processing/aecm/aecm_core.cc	/^int WebRtcAecm_ProcessFrame(AecmCore* aecm,$/;"	f
WebRtcAecm_ResetAdaptiveChannel	webrtc/modules/audio_processing/aecm/aecm_core.cc	/^ResetAdaptiveChannel WebRtcAecm_ResetAdaptiveChannel;$/;"	v
WebRtcAecm_ResetAdaptiveChannelNeon	webrtc/modules/audio_processing/aecm/aecm_core_neon.cc	/^void WebRtcAecm_ResetAdaptiveChannelNeon(AecmCore* aecm) {$/;"	f
WebRtcAecm_ResetAdaptiveChannel_mips	webrtc/modules/audio_processing/aecm/aecm_core_mips.cc	/^void WebRtcAecm_ResetAdaptiveChannel_mips(AecmCore* aecm) {$/;"	f
WebRtcAecm_StoreAdaptiveChannel	webrtc/modules/audio_processing/aecm/aecm_core.cc	/^StoreAdaptiveChannel WebRtcAecm_StoreAdaptiveChannel;$/;"	v
WebRtcAecm_StoreAdaptiveChannelNeon	webrtc/modules/audio_processing/aecm/aecm_core_neon.cc	/^void WebRtcAecm_StoreAdaptiveChannelNeon(AecmCore* aecm,$/;"	f
WebRtcAecm_StoreAdaptiveChannel_mips	webrtc/modules/audio_processing/aecm/aecm_core_mips.cc	/^void WebRtcAecm_StoreAdaptiveChannel_mips(AecmCore* aecm,$/;"	f
WebRtcAecm_UpdateChannel	webrtc/modules/audio_processing/aecm/aecm_core.cc	/^void WebRtcAecm_UpdateChannel(AecmCore* aecm,$/;"	f
WebRtcAecm_UpdateFarHistory	webrtc/modules/audio_processing/aecm/aecm_core.cc	/^void WebRtcAecm_UpdateFarHistory(AecmCore* self,$/;"	f
WebRtcAecm_echo_path_size_bytes	webrtc/modules/audio_processing/aecm/echo_control_mobile.cc	/^size_t WebRtcAecm_echo_path_size_bytes()$/;"	f
WebRtcAecm_kCosTable	webrtc/modules/audio_processing/aecm/aecm_core.cc	/^const int16_t WebRtcAecm_kCosTable[] = {$/;"	v
WebRtcAecm_kSinTable	webrtc/modules/audio_processing/aecm/aecm_core.cc	/^const int16_t WebRtcAecm_kSinTable[] = {$/;"	v
WebRtcAecm_set_config	webrtc/modules/audio_processing/aecm/echo_control_mobile.cc	/^int32_t WebRtcAecm_set_config(void *aecmInst, AecmConfig config)$/;"	f
WebRtcAgcConfig	webrtc/modules/audio_processing/agc/legacy/gain_control.h	/^} WebRtcAgcConfig;$/;"	t	typeref:struct:__anon177
WebRtcAgc_AddFarend	webrtc/modules/audio_processing/agc/legacy/analog_agc.c	/^int WebRtcAgc_AddFarend(void* state, const int16_t* in_far, size_t samples) {$/;"	f
WebRtcAgc_AddFarendToDigital	webrtc/modules/audio_processing/agc/legacy/digital_agc.c	/^int32_t WebRtcAgc_AddFarendToDigital(DigitalAgc* stt,$/;"	f
WebRtcAgc_AddMic	webrtc/modules/audio_processing/agc/legacy/analog_agc.c	/^int WebRtcAgc_AddMic(void* state,$/;"	f
WebRtcAgc_CalculateGainTable	webrtc/modules/audio_processing/agc/legacy/digital_agc.c	/^int32_t WebRtcAgc_CalculateGainTable(int32_t* gainTable,       \/\/ Q16$/;"	f
WebRtcAgc_Create	webrtc/modules/audio_processing/agc/legacy/analog_agc.c	/^void* WebRtcAgc_Create() {$/;"	f
WebRtcAgc_ExpCurve	webrtc/modules/audio_processing/agc/legacy/analog_agc.c	/^void WebRtcAgc_ExpCurve(int16_t volume, int16_t* index) {$/;"	f
WebRtcAgc_Free	webrtc/modules/audio_processing/agc/legacy/analog_agc.c	/^void WebRtcAgc_Free(void* state) {$/;"	f
WebRtcAgc_GetAddFarendError	webrtc/modules/audio_processing/agc/legacy/analog_agc.c	/^int WebRtcAgc_GetAddFarendError(void* state, size_t samples) {$/;"	f
WebRtcAgc_Init	webrtc/modules/audio_processing/agc/legacy/analog_agc.c	/^int WebRtcAgc_Init(void* agcInst,$/;"	f
WebRtcAgc_InitDigital	webrtc/modules/audio_processing/agc/legacy/digital_agc.c	/^int32_t WebRtcAgc_InitDigital(DigitalAgc* stt, int16_t agcMode) {$/;"	f
WebRtcAgc_InitVad	webrtc/modules/audio_processing/agc/legacy/digital_agc.c	/^void WebRtcAgc_InitVad(AgcVad* state) {$/;"	f
WebRtcAgc_Process	webrtc/modules/audio_processing/agc/legacy/analog_agc.c	/^int WebRtcAgc_Process(void* agcInst,$/;"	f
WebRtcAgc_ProcessAnalog	webrtc/modules/audio_processing/agc/legacy/analog_agc.c	/^int32_t WebRtcAgc_ProcessAnalog(void* state,$/;"	f
WebRtcAgc_ProcessDigital	webrtc/modules/audio_processing/agc/legacy/digital_agc.c	/^int32_t WebRtcAgc_ProcessDigital(DigitalAgc* stt,$/;"	f
WebRtcAgc_ProcessVad	webrtc/modules/audio_processing/agc/legacy/digital_agc.c	/^int16_t WebRtcAgc_ProcessVad(AgcVad* state,      \/\/ (i) VAD state$/;"	f
WebRtcAgc_SaturationCtrl	webrtc/modules/audio_processing/agc/legacy/analog_agc.c	/^void WebRtcAgc_SaturationCtrl(LegacyAgc* stt,$/;"	f
WebRtcAgc_SpeakerInactiveCtrl	webrtc/modules/audio_processing/agc/legacy/analog_agc.c	/^void WebRtcAgc_SpeakerInactiveCtrl(LegacyAgc* stt) {$/;"	f
WebRtcAgc_UpdateAgcThresholds	webrtc/modules/audio_processing/agc/legacy/analog_agc.c	/^void WebRtcAgc_UpdateAgcThresholds(LegacyAgc* stt) {$/;"	f
WebRtcAgc_VirtualMic	webrtc/modules/audio_processing/agc/legacy/analog_agc.c	/^int WebRtcAgc_VirtualMic(void* agcInst,$/;"	f
WebRtcAgc_ZeroCtrl	webrtc/modules/audio_processing/agc/legacy/analog_agc.c	/^void WebRtcAgc_ZeroCtrl(LegacyAgc* stt, int32_t* inMicLevel, int32_t* env) {$/;"	f
WebRtcAgc_get_config	webrtc/modules/audio_processing/agc/legacy/analog_agc.c	/^int WebRtcAgc_get_config(void* agcInst, WebRtcAgcConfig* config) {$/;"	f
WebRtcAgc_set_config	webrtc/modules/audio_processing/agc/legacy/analog_agc.c	/^int WebRtcAgc_set_config(void* agcInst, WebRtcAgcConfig agcConfig) {$/;"	f
WebRtcIsacBw_GetBandwidthInfo	webrtc/modules/audio_coding/codecs/isac/main/source/bandwidth_estimator.c	/^void WebRtcIsacBw_GetBandwidthInfo(BwEstimatorstr* bwest_str,$/;"	f
WebRtcIsacBw_SetBandwidthInfo	webrtc/modules/audio_coding/codecs/isac/main/source/bandwidth_estimator.c	/^void WebRtcIsacBw_SetBandwidthInfo(BwEstimatorstr* bwest_str,$/;"	f
WebRtcIsac_AddLarMean	webrtc/modules/audio_coding/codecs/isac/main/source/encode_lpc_swb.c	/^WebRtcIsac_AddLarMean($/;"	f
WebRtcIsac_AddMeanToLinearDomain	webrtc/modules/audio_coding/codecs/isac/main/source/encode_lpc_swb.c	/^int16_t WebRtcIsac_AddMeanToLinearDomain($/;"	f
WebRtcIsac_AllPassFilter2Float	webrtc/modules/audio_coding/codecs/isac/main/source/filterbanks.c	/^static void WebRtcIsac_AllPassFilter2Float(float *InOut, const float *APSectionFactors,$/;"	f	file:
WebRtcIsac_AllPoleFilter	webrtc/modules/audio_coding/codecs/isac/main/source/filter_functions.c	/^void WebRtcIsac_AllPoleFilter(double* InOut,$/;"	f
WebRtcIsac_AllZeroFilter	webrtc/modules/audio_coding/codecs/isac/main/source/filter_functions.c	/^void WebRtcIsac_AllZeroFilter(double* In,$/;"	f
WebRtcIsac_AllpassFilterForDec	webrtc/modules/audio_coding/codecs/isac/main/source/filter_functions.c	/^void WebRtcIsac_AllpassFilterForDec(double* InOut,$/;"	f
WebRtcIsac_Assign	webrtc/modules/audio_coding/codecs/isac/main/source/isac.c	/^int16_t WebRtcIsac_Assign(ISACStruct** ISAC_main_inst,$/;"	f
WebRtcIsac_AssignSize	webrtc/modules/audio_coding/codecs/isac/main/source/isac.c	/^int16_t WebRtcIsac_AssignSize(int* sizeInBytes) {$/;"	f
WebRtcIsac_AutoCorr	webrtc/modules/audio_coding/codecs/isac/main/source/filter_functions.c	/^void WebRtcIsac_AutoCorr(double* r, const double* x, size_t N, size_t order) {$/;"	f
WebRtcIsac_BwExpand	webrtc/modules/audio_coding/codecs/isac/main/source/filter_functions.c	/^void WebRtcIsac_BwExpand(double* out, double* in, double coef, size_t length) {$/;"	f
WebRtcIsac_Control	webrtc/modules/audio_coding/codecs/isac/main/source/isac.c	/^int16_t WebRtcIsac_Control(ISACStruct* ISAC_main_inst,$/;"	f
WebRtcIsac_ControlBwe	webrtc/modules/audio_coding/codecs/isac/main/source/isac.c	/^int16_t WebRtcIsac_ControlBwe(ISACStruct* ISAC_main_inst,$/;"	f
WebRtcIsac_CorrelateInterVec	webrtc/modules/audio_coding/codecs/isac/main/source/encode_lpc_swb.c	/^WebRtcIsac_CorrelateInterVec($/;"	f
WebRtcIsac_CorrelateIntraVec	webrtc/modules/audio_coding/codecs/isac/main/source/encode_lpc_swb.c	/^WebRtcIsac_CorrelateIntraVec($/;"	f
WebRtcIsac_CorrelateLpcGain	webrtc/modules/audio_coding/codecs/isac/main/source/encode_lpc_swb.c	/^int16_t WebRtcIsac_CorrelateLpcGain($/;"	f
WebRtcIsac_Create	webrtc/modules/audio_coding/codecs/isac/main/source/isac.c	/^int16_t WebRtcIsac_Create(ISACStruct** ISAC_main_inst) {$/;"	f
WebRtcIsac_DecHistBisectMulti	webrtc/modules/audio_coding/codecs/isac/main/source/arith_routines_hist.c	/^int WebRtcIsac_DecHistBisectMulti(int *data,     \/* output: data vector *\/$/;"	f
WebRtcIsac_DecHistOneStepMulti	webrtc/modules/audio_coding/codecs/isac/main/source/arith_routines_hist.c	/^int WebRtcIsac_DecHistOneStepMulti(int *data,        \/* output: data vector *\/$/;"	f
WebRtcIsac_DecLogisticMulti2	webrtc/modules/audio_coding/codecs/isac/main/source/arith_routines_logist.c	/^int WebRtcIsac_DecLogisticMulti2($/;"	f
WebRtcIsac_DecSampRate	webrtc/modules/audio_coding/codecs/isac/main/source/isac.c	/^uint16_t WebRtcIsac_DecSampRate(ISACStruct* ISAC_main_inst) {$/;"	f
WebRtcIsac_DecimateAllpass	webrtc/modules/audio_coding/codecs/isac/main/source/filter_functions.c	/^void WebRtcIsac_DecimateAllpass(const double* in,$/;"	f
WebRtcIsac_Decode	webrtc/modules/audio_coding/codecs/isac/main/source/isac.c	/^int WebRtcIsac_Decode(ISACStruct* ISAC_main_inst,$/;"	f
WebRtcIsac_DecodeBandwidth	webrtc/modules/audio_coding/codecs/isac/main/source/entropy_coding.c	/^int16_t WebRtcIsac_DecodeBandwidth(Bitstr* streamData,$/;"	f
WebRtcIsac_DecodeFrameLen	webrtc/modules/audio_coding/codecs/isac/main/source/entropy_coding.c	/^int WebRtcIsac_DecodeFrameLen(Bitstr* streamdata, int16_t* framesamples) {$/;"	f
WebRtcIsac_DecodeGain2	webrtc/modules/audio_coding/codecs/isac/main/source/entropy_coding.c	/^int WebRtcIsac_DecodeGain2(Bitstr* streamdata, int32_t* gainQ10) {$/;"	f
WebRtcIsac_DecodeInterpolLpcUb	webrtc/modules/audio_coding/codecs/isac/main/source/entropy_coding.c	/^int16_t WebRtcIsac_DecodeInterpolLpcUb(Bitstr* streamdata,$/;"	f
WebRtcIsac_DecodeJitterInfo	webrtc/modules/audio_coding/codecs/isac/main/source/entropy_coding.c	/^int16_t WebRtcIsac_DecodeJitterInfo(Bitstr* streamData,$/;"	f
WebRtcIsac_DecodeLb	webrtc/modules/audio_coding/codecs/isac/main/source/decode.c	/^int WebRtcIsac_DecodeLb(const TransformTables* transform_tables,$/;"	f
WebRtcIsac_DecodeLpc	webrtc/modules/audio_coding/codecs/isac/main/source/entropy_coding.c	/^int WebRtcIsac_DecodeLpc(Bitstr* streamdata, double* LPCCoef_lo,$/;"	f
WebRtcIsac_DecodeLpcCoef	webrtc/modules/audio_coding/codecs/isac/main/source/entropy_coding.c	/^int WebRtcIsac_DecodeLpcCoef(Bitstr* streamdata, double* LPCCoef) {$/;"	f
WebRtcIsac_DecodeLpcCoefUB	webrtc/modules/audio_coding/codecs/isac/main/source/entropy_coding.c	/^int WebRtcIsac_DecodeLpcCoefUB(Bitstr* streamdata, double* lpcVecs,$/;"	f
WebRtcIsac_DecodeLpcGainUb	webrtc/modules/audio_coding/codecs/isac/main/source/entropy_coding.c	/^int16_t WebRtcIsac_DecodeLpcGainUb(double* lpGains, Bitstr* streamdata) {$/;"	f
WebRtcIsac_DecodePitchGain	webrtc/modules/audio_coding/codecs/isac/main/source/entropy_coding.c	/^int WebRtcIsac_DecodePitchGain(Bitstr* streamdata,$/;"	f
WebRtcIsac_DecodePitchLag	webrtc/modules/audio_coding/codecs/isac/main/source/entropy_coding.c	/^int WebRtcIsac_DecodePitchLag(Bitstr* streamdata, int16_t* PitchGain_Q12,$/;"	f
WebRtcIsac_DecodePlc	webrtc/modules/audio_coding/codecs/isac/main/source/isac.c	/^size_t WebRtcIsac_DecodePlc(ISACStruct* ISAC_main_inst,$/;"	f
WebRtcIsac_DecodeRc	webrtc/modules/audio_coding/codecs/isac/main/source/entropy_coding.c	/^int WebRtcIsac_DecodeRc(Bitstr* streamdata, int16_t* RCQ15) {$/;"	f
WebRtcIsac_DecodeRcu	webrtc/modules/audio_coding/codecs/isac/main/source/isac.c	/^int WebRtcIsac_DecodeRcu(ISACStruct* ISAC_main_inst,$/;"	f
WebRtcIsac_DecodeSendBW	webrtc/modules/audio_coding/codecs/isac/main/source/entropy_coding.c	/^int WebRtcIsac_DecodeSendBW(Bitstr* streamdata, int16_t* BWno) {$/;"	f
WebRtcIsac_DecodeSpec	webrtc/modules/audio_coding/codecs/isac/main/source/entropy_coding.c	/^int WebRtcIsac_DecodeSpec(Bitstr* streamdata, int16_t AvgPitchGain_Q12,$/;"	f
WebRtcIsac_DecodeUb12	webrtc/modules/audio_coding/codecs/isac/main/source/decode.c	/^int WebRtcIsac_DecodeUb12(const TransformTables* transform_tables,$/;"	f
WebRtcIsac_DecodeUb16	webrtc/modules/audio_coding/codecs/isac/main/source/decode.c	/^int WebRtcIsac_DecodeUb16(const TransformTables* transform_tables,$/;"	f
WebRtcIsac_DecoderInit	webrtc/modules/audio_coding/codecs/isac/main/source/isac.c	/^void WebRtcIsac_DecoderInit(ISACStruct* ISAC_main_inst) {$/;"	f
WebRtcIsac_DecorrelateInterVec	webrtc/modules/audio_coding/codecs/isac/main/source/encode_lpc_swb.c	/^WebRtcIsac_DecorrelateInterVec($/;"	f
WebRtcIsac_DecorrelateIntraVec	webrtc/modules/audio_coding/codecs/isac/main/source/encode_lpc_swb.c	/^WebRtcIsac_DecorrelateIntraVec($/;"	f
WebRtcIsac_DecorrelateLPGain	webrtc/modules/audio_coding/codecs/isac/main/source/encode_lpc_swb.c	/^int16_t WebRtcIsac_DecorrelateLPGain($/;"	f
WebRtcIsac_DequantizeLpcGain	webrtc/modules/audio_coding/codecs/isac/main/source/encode_lpc_swb.c	/^int16_t WebRtcIsac_DequantizeLpcGain($/;"	f
WebRtcIsac_DequantizeLpcParam	webrtc/modules/audio_coding/codecs/isac/main/source/encode_lpc_swb.c	/^WebRtcIsac_DequantizeLpcParam($/;"	f
WebRtcIsac_Dir2Lat	webrtc/modules/audio_coding/codecs/isac/main/source/lattice.c	/^void WebRtcIsac_Dir2Lat(double *a,$/;"	f
WebRtcIsac_EncHistMulti	webrtc/modules/audio_coding/codecs/isac/main/source/arith_routines_hist.c	/^void WebRtcIsac_EncHistMulti(Bitstr *streamdata, \/* in-\/output struct containing bitstream *\/$/;"	f
WebRtcIsac_EncLogisticMulti2	webrtc/modules/audio_coding/codecs/isac/main/source/arith_routines_logist.c	/^int WebRtcIsac_EncLogisticMulti2($/;"	f
WebRtcIsac_EncSampRate	webrtc/modules/audio_coding/codecs/isac/main/source/isac.c	/^uint16_t WebRtcIsac_EncSampRate(ISACStruct* ISAC_main_inst) {$/;"	f
WebRtcIsac_EncTerminate	webrtc/modules/audio_coding/codecs/isac/main/source/arith_routines.c	/^int WebRtcIsac_EncTerminate(Bitstr *streamdata) \/* in-\/output struct containing bitstream *\/$/;"	f
WebRtcIsac_Encode	webrtc/modules/audio_coding/codecs/isac/main/source/isac.c	/^int WebRtcIsac_Encode(ISACStruct* ISAC_main_inst,$/;"	f
WebRtcIsac_EncodeBandwidth	webrtc/modules/audio_coding/codecs/isac/main/source/entropy_coding.c	/^int16_t WebRtcIsac_EncodeBandwidth(enum ISACBandwidth bandwidth,$/;"	f
WebRtcIsac_EncodeFrameLen	webrtc/modules/audio_coding/codecs/isac/main/source/entropy_coding.c	/^int WebRtcIsac_EncodeFrameLen(int16_t framesamples, Bitstr* streamdata) {$/;"	f
WebRtcIsac_EncodeGain2	webrtc/modules/audio_coding/codecs/isac/main/source/entropy_coding.c	/^int WebRtcIsac_EncodeGain2(int32_t* gainQ10, Bitstr* streamdata) {$/;"	f
WebRtcIsac_EncodeJitterInfo	webrtc/modules/audio_coding/codecs/isac/main/source/entropy_coding.c	/^int16_t WebRtcIsac_EncodeJitterInfo(int32_t jitterIndex,$/;"	f
WebRtcIsac_EncodeLar	webrtc/modules/audio_coding/codecs/isac/main/source/entropy_coding.c	/^void WebRtcIsac_EncodeLar(double* LPCCoef, Bitstr* streamdata,$/;"	f
WebRtcIsac_EncodeLb	webrtc/modules/audio_coding/codecs/isac/main/source/encode.c	/^int WebRtcIsac_EncodeLb(const TransformTables* transform_tables,$/;"	f
WebRtcIsac_EncodeLpcGainLb	webrtc/modules/audio_coding/codecs/isac/main/source/entropy_coding.c	/^void WebRtcIsac_EncodeLpcGainLb(double* LPCCoef_lo, double* LPCCoef_hi,$/;"	f
WebRtcIsac_EncodeLpcGainUb	webrtc/modules/audio_coding/codecs/isac/main/source/entropy_coding.c	/^void WebRtcIsac_EncodeLpcGainUb(double* lpGains, Bitstr* streamdata,$/;"	f
WebRtcIsac_EncodeLpcLb	webrtc/modules/audio_coding/codecs/isac/main/source/entropy_coding.c	/^void WebRtcIsac_EncodeLpcLb(double* LPCCoef_lo, double* LPCCoef_hi,$/;"	f
WebRtcIsac_EncodeLpcUB	webrtc/modules/audio_coding/codecs/isac/main/source/entropy_coding.c	/^int16_t WebRtcIsac_EncodeLpcUB(double* lpcVecs, Bitstr* streamdata,$/;"	f
WebRtcIsac_EncodePitchGain	webrtc/modules/audio_coding/codecs/isac/main/source/entropy_coding.c	/^void WebRtcIsac_EncodePitchGain(int16_t* PitchGains_Q12,$/;"	f
WebRtcIsac_EncodePitchLag	webrtc/modules/audio_coding/codecs/isac/main/source/entropy_coding.c	/^void WebRtcIsac_EncodePitchLag(double* PitchLags, int16_t* PitchGain_Q12,$/;"	f
WebRtcIsac_EncodeRc	webrtc/modules/audio_coding/codecs/isac/main/source/entropy_coding.c	/^void WebRtcIsac_EncodeRc(int16_t* RCQ15, Bitstr* streamdata) {$/;"	f
WebRtcIsac_EncodeReceiveBw	webrtc/modules/audio_coding/codecs/isac/main/source/entropy_coding.c	/^void WebRtcIsac_EncodeReceiveBw(int* BWno, Bitstr* streamdata) {$/;"	f
WebRtcIsac_EncodeSpec	webrtc/modules/audio_coding/codecs/isac/main/source/entropy_coding.c	/^int WebRtcIsac_EncodeSpec(const int16_t* fr, const int16_t* fi,$/;"	f
WebRtcIsac_EncodeStoredDataLb	webrtc/modules/audio_coding/codecs/isac/main/source/encode.c	/^int WebRtcIsac_EncodeStoredDataLb(const IsacSaveEncoderData* ISACSavedEnc_obj,$/;"	f
WebRtcIsac_EncodeStoredDataUb	webrtc/modules/audio_coding/codecs/isac/main/source/encode.c	/^int WebRtcIsac_EncodeStoredDataUb($/;"	f
WebRtcIsac_EncodeUb12	webrtc/modules/audio_coding/codecs/isac/main/source/encode.c	/^int WebRtcIsac_EncodeUb12(const TransformTables* transform_tables,$/;"	f
WebRtcIsac_EncodeUb16	webrtc/modules/audio_coding/codecs/isac/main/source/encode.c	/^int WebRtcIsac_EncodeUb16(const TransformTables* transform_tables,$/;"	f
WebRtcIsac_EncoderInit	webrtc/modules/audio_coding/codecs/isac/main/source/isac.c	/^int16_t WebRtcIsac_EncoderInit(ISACStruct* ISAC_main_inst,$/;"	f
WebRtcIsac_EstimateBandwidth	webrtc/modules/audio_coding/codecs/isac/main/source/decode_bwe.c	/^WebRtcIsac_EstimateBandwidth($/;"	f
WebRtcIsac_Fftns	webrtc/modules/audio_coding/codecs/isac/main/source/fft.c	/^int  WebRtcIsac_Fftns(unsigned int ndim, const int dims[],$/;"	f
WebRtcIsac_FilterAndCombineFloat	webrtc/modules/audio_coding/codecs/isac/main/source/filterbanks.c	/^void WebRtcIsac_FilterAndCombineFloat(float *InLP,$/;"	f
WebRtcIsac_Free	webrtc/modules/audio_coding/codecs/isac/main/source/isac.c	/^int16_t WebRtcIsac_Free(ISACStruct* ISAC_main_inst) {$/;"	f
WebRtcIsac_GetBandwidthInfo	webrtc/modules/audio_coding/codecs/isac/main/source/isac.c	/^void WebRtcIsac_GetBandwidthInfo(ISACStruct* inst,$/;"	f
WebRtcIsac_GetCrc	webrtc/modules/audio_coding/codecs/isac/main/source/crc.c	/^int WebRtcIsac_GetCrc(const int16_t* bitstream,$/;"	f
WebRtcIsac_GetDownLinkBwIndex	webrtc/modules/audio_coding/codecs/isac/main/source/isac.c	/^int16_t WebRtcIsac_GetDownLinkBwIndex(ISACStruct* ISAC_main_inst,$/;"	f
WebRtcIsac_GetDownlinkBandwidth	webrtc/modules/audio_coding/codecs/isac/main/source/bandwidth_estimator.c	/^int32_t WebRtcIsac_GetDownlinkBandwidth( const BwEstimatorstr *bwest_str)$/;"	f
WebRtcIsac_GetDownlinkBwJitIndexImpl	webrtc/modules/audio_coding/codecs/isac/main/source/bandwidth_estimator.c	/^WebRtcIsac_GetDownlinkBwJitIndexImpl($/;"	f
WebRtcIsac_GetDownlinkMaxDelay	webrtc/modules/audio_coding/codecs/isac/main/source/bandwidth_estimator.c	/^WebRtcIsac_GetDownlinkMaxDelay(const BwEstimatorstr *bwest_str)$/;"	f
WebRtcIsac_GetErrorCode	webrtc/modules/audio_coding/codecs/isac/main/source/isac.c	/^int16_t WebRtcIsac_GetErrorCode(ISACStruct* ISAC_main_inst) {$/;"	f
WebRtcIsac_GetLpcCoefLb	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_analysis.c	/^void WebRtcIsac_GetLpcCoefLb(double *inLo, double *inHi, MaskFiltstr *maskdata,$/;"	f
WebRtcIsac_GetLpcCoefUb	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_analysis.c	/^WebRtcIsac_GetLpcCoefUb($/;"	f
WebRtcIsac_GetLpcGain	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_analysis.c	/^WebRtcIsac_GetLpcGain($/;"	f
WebRtcIsac_GetMinBytes	webrtc/modules/audio_coding/codecs/isac/main/source/bandwidth_estimator.c	/^int WebRtcIsac_GetMinBytes($/;"	f
WebRtcIsac_GetNewBitStream	webrtc/modules/audio_coding/codecs/isac/main/source/isac.c	/^int16_t WebRtcIsac_GetNewBitStream(ISACStruct*  ISAC_main_inst,$/;"	f
WebRtcIsac_GetNewFrameLen	webrtc/modules/audio_coding/codecs/isac/main/source/isac.c	/^int16_t WebRtcIsac_GetNewFrameLen(ISACStruct* ISAC_main_inst) {$/;"	f
WebRtcIsac_GetNewFrameLength	webrtc/modules/audio_coding/codecs/isac/main/source/bandwidth_estimator.c	/^int WebRtcIsac_GetNewFrameLength($/;"	f
WebRtcIsac_GetRedPayload	webrtc/modules/audio_coding/codecs/isac/main/source/isac.c	/^int16_t WebRtcIsac_GetRedPayload(ISACStruct* ISAC_main_inst,$/;"	f
WebRtcIsac_GetRedPayloadUb	webrtc/modules/audio_coding/codecs/isac/main/source/encode.c	/^int16_t WebRtcIsac_GetRedPayloadUb($/;"	f
WebRtcIsac_GetSnr	webrtc/modules/audio_coding/codecs/isac/main/source/bandwidth_estimator.c	/^double WebRtcIsac_GetSnr($/;"	f
WebRtcIsac_GetUplinkBandwidth	webrtc/modules/audio_coding/codecs/isac/main/source/bandwidth_estimator.c	/^int32_t WebRtcIsac_GetUplinkBandwidth(const BwEstimatorstr* bwest_str) {$/;"	f
WebRtcIsac_GetUplinkBw	webrtc/modules/audio_coding/codecs/isac/main/source/isac.c	/^int16_t WebRtcIsac_GetUplinkBw(ISACStruct*  ISAC_main_inst,$/;"	f
WebRtcIsac_GetUplinkMaxDelay	webrtc/modules/audio_coding/codecs/isac/main/source/bandwidth_estimator.c	/^int32_t WebRtcIsac_GetUplinkMaxDelay(const BwEstimatorstr* bwest_str) {$/;"	f
WebRtcIsac_GetVars	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_analysis.c	/^void WebRtcIsac_GetVars(const double *input, const int16_t *pitchGains_Q12,$/;"	f
WebRtcIsac_GetVarsUB	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_analysis.c	/^WebRtcIsac_GetVarsUB($/;"	f
WebRtcIsac_Highpass	webrtc/modules/audio_coding/codecs/isac/main/source/filter_functions.c	/^void WebRtcIsac_Highpass(const double* in,$/;"	f
WebRtcIsac_InitBandwidthEstimator	webrtc/modules/audio_coding/codecs/isac/main/source/bandwidth_estimator.c	/^int32_t WebRtcIsac_InitBandwidthEstimator($/;"	f
WebRtcIsac_InitMasking	webrtc/modules/audio_coding/codecs/isac/main/source/intialize.c	/^void WebRtcIsac_InitMasking(MaskFiltstr *maskdata) {$/;"	f
WebRtcIsac_InitPitchAnalysis	webrtc/modules/audio_coding/codecs/isac/main/source/intialize.c	/^void WebRtcIsac_InitPitchAnalysis(PitchAnalysisStruct *State)$/;"	f
WebRtcIsac_InitPitchFilter	webrtc/modules/audio_coding/codecs/isac/main/source/intialize.c	/^void WebRtcIsac_InitPitchFilter(PitchFiltstr *pitchfiltdata)$/;"	f
WebRtcIsac_InitPostFilterbank	webrtc/modules/audio_coding/codecs/isac/main/source/intialize.c	/^void WebRtcIsac_InitPostFilterbank(PostFiltBankstr *postfiltdata)$/;"	f
WebRtcIsac_InitPreFilterbank	webrtc/modules/audio_coding/codecs/isac/main/source/intialize.c	/^void WebRtcIsac_InitPreFilterbank(PreFiltBankstr *prefiltdata)$/;"	f
WebRtcIsac_InitRateModel	webrtc/modules/audio_coding/codecs/isac/main/source/bandwidth_estimator.c	/^void WebRtcIsac_InitRateModel($/;"	f
WebRtcIsac_InitTransform	webrtc/modules/audio_coding/codecs/isac/main/source/transform.c	/^void WebRtcIsac_InitTransform(TransformTables* tables) {$/;"	f
WebRtcIsac_InitWeightingFilter	webrtc/modules/audio_coding/codecs/isac/main/source/intialize.c	/^void WebRtcIsac_InitWeightingFilter(WeightFiltstr *wfdata)$/;"	f
WebRtcIsac_InitializePitch	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_estimator.c	/^void WebRtcIsac_InitializePitch(const double *in,$/;"	f
WebRtcIsac_Lar2Poly	webrtc/modules/audio_coding/codecs/isac/main/source/entropy_coding.c	/^void WebRtcIsac_Lar2Poly(double* lars, double* lowband, int orderLo,$/;"	f
WebRtcIsac_Lar2PolyInterpolUB	webrtc/modules/audio_coding/codecs/isac/main/source/entropy_coding.c	/^void WebRtcIsac_Lar2PolyInterpolUB(double* larVecs, double* percepFilterParams,$/;"	f
WebRtcIsac_Lar2Rc	webrtc/modules/audio_coding/codecs/isac/main/source/entropy_coding.c	/^void WebRtcIsac_Lar2Rc(const double* lar, double* refc,  int order) {$/;"	f
WebRtcIsac_LevDurb	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_analysis.c	/^double WebRtcIsac_LevDurb(double *a, double *k, double *r, size_t order)$/;"	f
WebRtcIsac_NormLatticeFilterAr	webrtc/modules/audio_coding/codecs/isac/main/source/lattice.c	/^void WebRtcIsac_NormLatticeFilterAr(int orderCoef,$/;"	f
WebRtcIsac_NormLatticeFilterMa	webrtc/modules/audio_coding/codecs/isac/main/source/lattice.c	/^void WebRtcIsac_NormLatticeFilterMa(int orderCoef,$/;"	f
WebRtcIsac_PitchAnalysis	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_estimator.c	/^void WebRtcIsac_PitchAnalysis(const double *in,               \/* PITCH_FRAME_LEN samples *\/$/;"	f
WebRtcIsac_PitchfilterPost	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_filter.c	/^void WebRtcIsac_PitchfilterPost(double* in_data, double* out_data,$/;"	f
WebRtcIsac_PitchfilterPre	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_filter.c	/^void WebRtcIsac_PitchfilterPre(double* in_data, double* out_data,$/;"	f
WebRtcIsac_PitchfilterPre_gains	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_filter.c	/^void WebRtcIsac_PitchfilterPre_gains($/;"	f
WebRtcIsac_PitchfilterPre_la	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_filter.c	/^void WebRtcIsac_PitchfilterPre_la(double* in_data, double* out_data,$/;"	f
WebRtcIsac_Poly2Lar	webrtc/modules/audio_coding/codecs/isac/main/source/entropy_coding.c	/^void WebRtcIsac_Poly2Lar(double* lowband, int orderLo, double* hiband,$/;"	f
WebRtcIsac_Poly2LarUB	webrtc/modules/audio_coding/codecs/isac/main/source/entropy_coding.c	/^int16_t WebRtcIsac_Poly2LarUB(double* lpcVecs, int16_t bandwidth) {$/;"	f
WebRtcIsac_Poly2Rc	webrtc/modules/audio_coding/codecs/isac/main/source/entropy_coding.c	/^void WebRtcIsac_Poly2Rc(double* a, int N, double* RC) {$/;"	f
WebRtcIsac_QuantizeLpcGain	webrtc/modules/audio_coding/codecs/isac/main/source/encode_lpc_swb.c	/^double WebRtcIsac_QuantizeLpcGain($/;"	f
WebRtcIsac_QuantizeUncorrLar	webrtc/modules/audio_coding/codecs/isac/main/source/encode_lpc_swb.c	/^WebRtcIsac_QuantizeUncorrLar($/;"	f
WebRtcIsac_RateAllocation	webrtc/modules/audio_coding/codecs/isac/main/source/encode.c	/^int16_t WebRtcIsac_RateAllocation(int32_t inRateBitPerSec,$/;"	f
WebRtcIsac_Rc2Lar	webrtc/modules/audio_coding/codecs/isac/main/source/entropy_coding.c	/^void WebRtcIsac_Rc2Lar(const double* refc, double* lar, int order) {$/;"	f
WebRtcIsac_Rc2Poly	webrtc/modules/audio_coding/codecs/isac/main/source/entropy_coding.c	/^void WebRtcIsac_Rc2Poly(double* RC, int N, double* a) {$/;"	f
WebRtcIsac_ReadBwIndex	webrtc/modules/audio_coding/codecs/isac/main/source/isac.c	/^int16_t WebRtcIsac_ReadBwIndex(const uint8_t* encoded,$/;"	f
WebRtcIsac_ReadFrameLen	webrtc/modules/audio_coding/codecs/isac/main/source/isac.c	/^int16_t WebRtcIsac_ReadFrameLen(ISACStruct* ISAC_main_inst,$/;"	f
WebRtcIsac_RemoveLarMean	webrtc/modules/audio_coding/codecs/isac/main/source/encode_lpc_swb.c	/^WebRtcIsac_RemoveLarMean($/;"	f
WebRtcIsac_ResetBitstream	webrtc/modules/audio_coding/codecs/isac/main/source/encode.c	/^void WebRtcIsac_ResetBitstream(Bitstr* bit_stream) {$/;"	f
WebRtcIsac_SetBandwidthInfo	webrtc/modules/audio_coding/codecs/isac/main/source/isac.c	/^void WebRtcIsac_SetBandwidthInfo(ISACStruct* inst,$/;"	f
WebRtcIsac_SetDecSampRate	webrtc/modules/audio_coding/codecs/isac/main/source/isac.c	/^int16_t WebRtcIsac_SetDecSampRate(ISACStruct* ISAC_main_inst,$/;"	f
WebRtcIsac_SetEncSampRate	webrtc/modules/audio_coding/codecs/isac/main/source/isac.c	/^int16_t WebRtcIsac_SetEncSampRate(ISACStruct* ISAC_main_inst,$/;"	f
WebRtcIsac_SetEncSampRateInDecoder	webrtc/modules/audio_coding/codecs/isac/main/source/isac.c	/^void WebRtcIsac_SetEncSampRateInDecoder(ISACStruct* inst,$/;"	f
WebRtcIsac_SetInitialBweBottleneck	webrtc/modules/audio_coding/codecs/isac/main/source/isac.c	/^void WebRtcIsac_SetInitialBweBottleneck(ISACStruct* ISAC_main_inst,$/;"	f
WebRtcIsac_SetMaxPayloadSize	webrtc/modules/audio_coding/codecs/isac/main/source/isac.c	/^int16_t WebRtcIsac_SetMaxPayloadSize(ISACStruct* ISAC_main_inst,$/;"	f
WebRtcIsac_SetMaxRate	webrtc/modules/audio_coding/codecs/isac/main/source/isac.c	/^int16_t WebRtcIsac_SetMaxRate(ISACStruct* ISAC_main_inst,$/;"	f
WebRtcIsac_Spec2time	webrtc/modules/audio_coding/codecs/isac/main/source/transform.c	/^void WebRtcIsac_Spec2time(const TransformTables* tables,$/;"	f
WebRtcIsac_SplitAndFilterFloat	webrtc/modules/audio_coding/codecs/isac/main/source/filterbanks.c	/^void WebRtcIsac_SplitAndFilterFloat(float *pin, float *LP, float *HP,$/;"	f
WebRtcIsac_StoreLpcGainUb	webrtc/modules/audio_coding/codecs/isac/main/source/entropy_coding.c	/^void WebRtcIsac_StoreLpcGainUb(double* lpGains, Bitstr* streamdata) {$/;"	f
WebRtcIsac_Time2Spec	webrtc/modules/audio_coding/codecs/isac/main/source/transform.c	/^void WebRtcIsac_Time2Spec(const TransformTables* tables,$/;"	f
WebRtcIsac_ToLogDomainRemoveMean	webrtc/modules/audio_coding/codecs/isac/main/source/encode_lpc_swb.c	/^WebRtcIsac_ToLogDomainRemoveMean($/;"	f
WebRtcIsac_TranscodeLPCCoef	webrtc/modules/audio_coding/codecs/isac/main/source/entropy_coding.c	/^void WebRtcIsac_TranscodeLPCCoef(double* LPCCoef_lo, double* LPCCoef_hi,$/;"	f
WebRtcIsac_UpdateBandwidthEstimator	webrtc/modules/audio_coding/codecs/isac/main/source/bandwidth_estimator.c	/^int16_t WebRtcIsac_UpdateBandwidthEstimator($/;"	f
WebRtcIsac_UpdateBwEstimate	webrtc/modules/audio_coding/codecs/isac/main/source/isac.c	/^int16_t WebRtcIsac_UpdateBwEstimate(ISACStruct* ISAC_main_inst,$/;"	f
WebRtcIsac_UpdateRateModel	webrtc/modules/audio_coding/codecs/isac/main/source/bandwidth_estimator.c	/^void WebRtcIsac_UpdateRateModel($/;"	f
WebRtcIsac_UpdateUplinkBw	webrtc/modules/audio_coding/codecs/isac/main/source/isac.c	/^int16_t WebRtcIsac_UpdateUplinkBw(ISACStruct* ISAC_main_inst,$/;"	f
WebRtcIsac_UpdateUplinkBwImpl	webrtc/modules/audio_coding/codecs/isac/main/source/bandwidth_estimator.c	/^int16_t WebRtcIsac_UpdateUplinkBwImpl($/;"	f
WebRtcIsac_UpdateUplinkJitter	webrtc/modules/audio_coding/codecs/isac/main/source/bandwidth_estimator.c	/^int16_t WebRtcIsac_UpdateUplinkJitter($/;"	f
WebRtcIsac_WeightingFilter	webrtc/modules/audio_coding/codecs/isac/main/source/filter_functions.c	/^void WebRtcIsac_WeightingFilter(const double* in,$/;"	f
WebRtcIsac_ZeroPoleFilter	webrtc/modules/audio_coding/codecs/isac/main/source/filter_functions.c	/^void WebRtcIsac_ZeroPoleFilter(double* In,$/;"	f
WebRtcIsac_kCompositeApFactorsFloat	webrtc/modules/audio_coding/codecs/isac/main/source/filterbank_tables.c	/^const float WebRtcIsac_kCompositeApFactorsFloat[4] = {$/;"	v
WebRtcIsac_kCos	webrtc/modules/audio_coding/codecs/isac/main/source/spectrum_ar_model_tables.c	/^const int16_t WebRtcIsac_kCos[6][60] = {$/;"	v
WebRtcIsac_kFrameLengthCdf	webrtc/modules/audio_coding/codecs/isac/main/source/entropy_coding.c	/^const uint16_t WebRtcIsac_kFrameLengthCdf[4] = {$/;"	v
WebRtcIsac_kFrameLengthCdf_ptr	webrtc/modules/audio_coding/codecs/isac/main/source/entropy_coding.c	/^const uint16_t* WebRtcIsac_kFrameLengthCdf_ptr[1] = {$/;"	v
WebRtcIsac_kFrameLengthInitIndex	webrtc/modules/audio_coding/codecs/isac/main/source/entropy_coding.c	/^const uint16_t WebRtcIsac_kFrameLengthInitIndex[1] = { 1 };$/;"	v
WebRtcIsac_kIintraVecDecorrMatUb16	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_shape_swb16_tables.c	/^const double WebRtcIsac_kIintraVecDecorrMatUb16[UB_LPC_ORDER][UB_LPC_ORDER] =$/;"	v
WebRtcIsac_kIndexLowerLimitGain	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_gain_tables.c	/^const int16_t WebRtcIsac_kIndexLowerLimitGain[3] = {$/;"	v
WebRtcIsac_kIndexMultsGain	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_gain_tables.c	/^const uint16_t WebRtcIsac_kIndexMultsGain[2] = {$/;"	v
WebRtcIsac_kIndexUpperLimitGain	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_gain_tables.c	/^const int16_t WebRtcIsac_kIndexUpperLimitGain[3] = {$/;"	v
WebRtcIsac_kInterVecDecorrMatUb12	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_shape_swb12_tables.c	/^const double WebRtcIsac_kInterVecDecorrMatUb12$/;"	v
WebRtcIsac_kInterVecDecorrMatUb16	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_shape_swb16_tables.c	/^const double WebRtcIsac_kInterVecDecorrMatUb16$/;"	v
WebRtcIsac_kIntraVecDecorrMatUb12	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_shape_swb12_tables.c	/^const double WebRtcIsac_kIntraVecDecorrMatUb12[UB_LPC_ORDER][UB_LPC_ORDER] =$/;"	v
WebRtcIsac_kKltT1Gain	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_tables.c	/^const double WebRtcIsac_kKltT1Gain[4] = {$/;"	v
WebRtcIsac_kKltT1Shape	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_tables.c	/^const double WebRtcIsac_kKltT1Shape[324] = {$/;"	v
WebRtcIsac_kKltT2Gain	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_tables.c	/^const double WebRtcIsac_kKltT2Gain[36] = {$/;"	v
WebRtcIsac_kKltT2Shape	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_tables.c	/^const double WebRtcIsac_kKltT2Shape[36] = {$/;"	v
WebRtcIsac_kLeftRecPointLpcGain	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_gain_swb_tables.c	/^const double WebRtcIsac_kLeftRecPointLpcGain[SUBFRAMES] =$/;"	v
WebRtcIsac_kLowerApFactorsFloat	webrtc/modules/audio_coding/codecs/isac/main/source/filterbank_tables.c	/^const float WebRtcIsac_kLowerApFactorsFloat[2] = {$/;"	v
WebRtcIsac_kLpcGainCdfMat	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_gain_swb_tables.c	/^const uint16_t* WebRtcIsac_kLpcGainCdfMat[SUBFRAMES] =$/;"	v
WebRtcIsac_kLpcGainCdfVec0	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_gain_swb_tables.c	/^const uint16_t WebRtcIsac_kLpcGainCdfVec0[18] =$/;"	v
WebRtcIsac_kLpcGainCdfVec1	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_gain_swb_tables.c	/^const uint16_t WebRtcIsac_kLpcGainCdfVec1[21] =$/;"	v
WebRtcIsac_kLpcGainCdfVec2	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_gain_swb_tables.c	/^const uint16_t WebRtcIsac_kLpcGainCdfVec2[26] =$/;"	v
WebRtcIsac_kLpcGainCdfVec3	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_gain_swb_tables.c	/^const uint16_t WebRtcIsac_kLpcGainCdfVec3[46] =$/;"	v
WebRtcIsac_kLpcGainCdfVec4	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_gain_swb_tables.c	/^const uint16_t WebRtcIsac_kLpcGainCdfVec4[78] =$/;"	v
WebRtcIsac_kLpcGainCdfVec5	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_gain_swb_tables.c	/^const uint16_t WebRtcIsac_kLpcGainCdfVec5[171] =$/;"	v
WebRtcIsac_kLpcGainDecorrMat	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_gain_swb_tables.c	/^const double WebRtcIsac_kLpcGainDecorrMat[SUBFRAMES][SUBFRAMES] =$/;"	v
WebRtcIsac_kLpcGainEntropySearch	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_gain_swb_tables.c	/^const uint16_t WebRtcIsac_kLpcGainEntropySearch[SUBFRAMES] =$/;"	v
WebRtcIsac_kLpcMeansGain	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_tables.c	/^const double WebRtcIsac_kLpcMeansGain[12] = {$/;"	v
WebRtcIsac_kLpcMeansShape	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_tables.c	/^const double WebRtcIsac_kLpcMeansShape[108] = {$/;"	v
WebRtcIsac_kLpcShapeCdfMatUb12	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_shape_swb12_tables.c	/^const uint16_t* WebRtcIsac_kLpcShapeCdfMatUb12$/;"	v
WebRtcIsac_kLpcShapeCdfMatUb16	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_shape_swb16_tables.c	/^const uint16_t* WebRtcIsac_kLpcShapeCdfMatUb16$/;"	v
WebRtcIsac_kLpcShapeCdfVec01Ub16	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_shape_swb16_tables.c	/^const uint16_t WebRtcIsac_kLpcShapeCdfVec01Ub16[14] =$/;"	v
WebRtcIsac_kLpcShapeCdfVec01Ub160	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_shape_swb16_tables.c	/^const uint16_t WebRtcIsac_kLpcShapeCdfVec01Ub160[21] =$/;"	v
WebRtcIsac_kLpcShapeCdfVec01Ub161	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_shape_swb16_tables.c	/^const uint16_t WebRtcIsac_kLpcShapeCdfVec01Ub161[28] =$/;"	v
WebRtcIsac_kLpcShapeCdfVec01Ub162	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_shape_swb16_tables.c	/^const uint16_t WebRtcIsac_kLpcShapeCdfVec01Ub162[55] =$/;"	v
WebRtcIsac_kLpcShapeCdfVec01Ub163	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_shape_swb16_tables.c	/^const uint16_t WebRtcIsac_kLpcShapeCdfVec01Ub163[26] =$/;"	v
WebRtcIsac_kLpcShapeCdfVec01Ub164	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_shape_swb16_tables.c	/^const uint16_t WebRtcIsac_kLpcShapeCdfVec01Ub164[28] =$/;"	v
WebRtcIsac_kLpcShapeCdfVec01Ub165	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_shape_swb16_tables.c	/^const uint16_t WebRtcIsac_kLpcShapeCdfVec01Ub165[34] =$/;"	v
WebRtcIsac_kLpcShapeCdfVec01Ub166	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_shape_swb16_tables.c	/^const uint16_t WebRtcIsac_kLpcShapeCdfVec01Ub166[71] =$/;"	v
WebRtcIsac_kLpcShapeCdfVec0Ub12	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_shape_swb12_tables.c	/^const uint16_t WebRtcIsac_kLpcShapeCdfVec0Ub12[14] =$/;"	v
WebRtcIsac_kLpcShapeCdfVec1Ub12	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_shape_swb12_tables.c	/^const uint16_t WebRtcIsac_kLpcShapeCdfVec1Ub12[16] =$/;"	v
WebRtcIsac_kLpcShapeCdfVec1Ub16	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_shape_swb16_tables.c	/^const uint16_t WebRtcIsac_kLpcShapeCdfVec1Ub16[16] =$/;"	v
WebRtcIsac_kLpcShapeCdfVec2Ub12	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_shape_swb12_tables.c	/^const uint16_t WebRtcIsac_kLpcShapeCdfVec2Ub12[20] =$/;"	v
WebRtcIsac_kLpcShapeCdfVec2Ub16	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_shape_swb16_tables.c	/^const uint16_t WebRtcIsac_kLpcShapeCdfVec2Ub16[18] =$/;"	v
WebRtcIsac_kLpcShapeCdfVec3Ub12	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_shape_swb12_tables.c	/^const uint16_t WebRtcIsac_kLpcShapeCdfVec3Ub12[28] =$/;"	v
WebRtcIsac_kLpcShapeCdfVec3Ub16	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_shape_swb16_tables.c	/^const uint16_t WebRtcIsac_kLpcShapeCdfVec3Ub16[30] =$/;"	v
WebRtcIsac_kLpcShapeCdfVec4Ub12	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_shape_swb12_tables.c	/^const uint16_t WebRtcIsac_kLpcShapeCdfVec4Ub12[20] =$/;"	v
WebRtcIsac_kLpcShapeCdfVec4Ub16	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_shape_swb16_tables.c	/^const uint16_t WebRtcIsac_kLpcShapeCdfVec4Ub16[16] =$/;"	v
WebRtcIsac_kLpcShapeCdfVec5Ub12	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_shape_swb12_tables.c	/^const uint16_t WebRtcIsac_kLpcShapeCdfVec5Ub12[25] =$/;"	v
WebRtcIsac_kLpcShapeCdfVec5Ub16	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_shape_swb16_tables.c	/^const uint16_t WebRtcIsac_kLpcShapeCdfVec5Ub16[17] =$/;"	v
WebRtcIsac_kLpcShapeCdfVec6Ub12	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_shape_swb12_tables.c	/^const uint16_t WebRtcIsac_kLpcShapeCdfVec6Ub12[33] =$/;"	v
WebRtcIsac_kLpcShapeCdfVec6Ub16	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_shape_swb16_tables.c	/^const uint16_t WebRtcIsac_kLpcShapeCdfVec6Ub16[21] =$/;"	v
WebRtcIsac_kLpcShapeCdfVec7Ub12	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_shape_swb12_tables.c	/^const uint16_t WebRtcIsac_kLpcShapeCdfVec7Ub12[49] =$/;"	v
WebRtcIsac_kLpcShapeCdfVec7Ub16	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_shape_swb16_tables.c	/^const uint16_t WebRtcIsac_kLpcShapeCdfVec7Ub16[36] =$/;"	v
WebRtcIsac_kLpcShapeCdfVec8Ub16	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_shape_swb16_tables.c	/^const uint16_t WebRtcIsac_kLpcShapeCdfVec8Ub16[21] =$/;"	v
WebRtcIsac_kLpcShapeEntropySearchUb12	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_shape_swb12_tables.c	/^const uint16_t WebRtcIsac_kLpcShapeEntropySearchUb12$/;"	v
WebRtcIsac_kLpcShapeEntropySearchUb16	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_shape_swb16_tables.c	/^const uint16_t WebRtcIsac_kLpcShapeEntropySearchUb16$/;"	v
WebRtcIsac_kLpcShapeLeftRecPointUb12	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_shape_swb12_tables.c	/^const double WebRtcIsac_kLpcShapeLeftRecPointUb12$/;"	v
WebRtcIsac_kLpcShapeLeftRecPointUb16	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_shape_swb16_tables.c	/^const double WebRtcIsac_kLpcShapeLeftRecPointUb16$/;"	v
WebRtcIsac_kLpcShapeNumRecPointUb12	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_shape_swb12_tables.c	/^const int16_t WebRtcIsac_kLpcShapeNumRecPointUb12$/;"	v
WebRtcIsac_kLpcShapeNumRecPointUb16	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_shape_swb16_tables.c	/^const int16_t WebRtcIsac_kLpcShapeNumRecPointUb16$/;"	v
WebRtcIsac_kLpcShapeQStepSizeUb12	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_shape_swb12_tables.c	/^const double WebRtcIsac_kLpcShapeQStepSizeUb12 = 0.150000;$/;"	v
WebRtcIsac_kLpcShapeQStepSizeUb16	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_shape_swb16_tables.c	/^const double WebRtcIsac_kLpcShapeQStepSizeUb16 = 0.150000;$/;"	v
WebRtcIsac_kMeanLarUb12	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_shape_swb12_tables.c	/^const double WebRtcIsac_kMeanLarUb12[UB_LPC_ORDER] =$/;"	v
WebRtcIsac_kMeanLarUb16	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_shape_swb16_tables.c	/^const double WebRtcIsac_kMeanLarUb16[UB_LPC_ORDER] =$/;"	v
WebRtcIsac_kMeanLpcGain	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_gain_swb_tables.c	/^const double WebRtcIsac_kMeanLpcGain = -3.3822;$/;"	v
WebRtcIsac_kNumQCellLpcGain	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_gain_swb_tables.c	/^const int16_t WebRtcIsac_kNumQCellLpcGain[SUBFRAMES] =$/;"	v
WebRtcIsac_kQArBoundaryLevels	webrtc/modules/audio_coding/codecs/isac/main/source/spectrum_ar_model_tables.c	/^const int16_t WebRtcIsac_kQArBoundaryLevels[NUM_AR_RC_QUANT_BAUNDARY] = {$/;"	v
WebRtcIsac_kQArRc1Cdf	webrtc/modules/audio_coding/codecs/isac/main/source/spectrum_ar_model_tables.c	/^const uint16_t WebRtcIsac_kQArRc1Cdf[NUM_AR_RC_QUANT_BAUNDARY] = {$/;"	v
WebRtcIsac_kQArRc1Levels	webrtc/modules/audio_coding/codecs/isac/main/source/spectrum_ar_model_tables.c	/^const int16_t WebRtcIsac_kQArRc1Levels[NUM_AR_RC_QUANT_BAUNDARY - 1] = {$/;"	v
WebRtcIsac_kQArRc2Cdf	webrtc/modules/audio_coding/codecs/isac/main/source/spectrum_ar_model_tables.c	/^const uint16_t WebRtcIsac_kQArRc2Cdf[NUM_AR_RC_QUANT_BAUNDARY] = {$/;"	v
WebRtcIsac_kQArRc2Levels	webrtc/modules/audio_coding/codecs/isac/main/source/spectrum_ar_model_tables.c	/^const int16_t WebRtcIsac_kQArRc2Levels[NUM_AR_RC_QUANT_BAUNDARY - 1] = {$/;"	v
WebRtcIsac_kQArRc3Cdf	webrtc/modules/audio_coding/codecs/isac/main/source/spectrum_ar_model_tables.c	/^const uint16_t WebRtcIsac_kQArRc3Cdf[NUM_AR_RC_QUANT_BAUNDARY] = {$/;"	v
WebRtcIsac_kQArRc3Levels	webrtc/modules/audio_coding/codecs/isac/main/source/spectrum_ar_model_tables.c	/^const int16_t WebRtcIsac_kQArRc3Levels[NUM_AR_RC_QUANT_BAUNDARY - 1] = {$/;"	v
WebRtcIsac_kQArRc4Cdf	webrtc/modules/audio_coding/codecs/isac/main/source/spectrum_ar_model_tables.c	/^const uint16_t WebRtcIsac_kQArRc4Cdf[NUM_AR_RC_QUANT_BAUNDARY] = {$/;"	v
WebRtcIsac_kQArRc4Levels	webrtc/modules/audio_coding/codecs/isac/main/source/spectrum_ar_model_tables.c	/^const int16_t WebRtcIsac_kQArRc4Levels[NUM_AR_RC_QUANT_BAUNDARY - 1] = {$/;"	v
WebRtcIsac_kQArRc5Cdf	webrtc/modules/audio_coding/codecs/isac/main/source/spectrum_ar_model_tables.c	/^const uint16_t WebRtcIsac_kQArRc5Cdf[NUM_AR_RC_QUANT_BAUNDARY] = {$/;"	v
WebRtcIsac_kQArRc5Levels	webrtc/modules/audio_coding/codecs/isac/main/source/spectrum_ar_model_tables.c	/^const int16_t WebRtcIsac_kQArRc5Levels[NUM_AR_RC_QUANT_BAUNDARY - 1] = {$/;"	v
WebRtcIsac_kQArRc6Cdf	webrtc/modules/audio_coding/codecs/isac/main/source/spectrum_ar_model_tables.c	/^const uint16_t WebRtcIsac_kQArRc6Cdf[NUM_AR_RC_QUANT_BAUNDARY] = {$/;"	v
WebRtcIsac_kQArRc6Levels	webrtc/modules/audio_coding/codecs/isac/main/source/spectrum_ar_model_tables.c	/^const int16_t WebRtcIsac_kQArRc6Levels[NUM_AR_RC_QUANT_BAUNDARY - 1] = {$/;"	v
WebRtcIsac_kQArRcCdfPtr	webrtc/modules/audio_coding/codecs/isac/main/source/spectrum_ar_model_tables.c	/^const uint16_t *WebRtcIsac_kQArRcCdfPtr[AR_ORDER] = {$/;"	v
WebRtcIsac_kQArRcInitIndex	webrtc/modules/audio_coding/codecs/isac/main/source/spectrum_ar_model_tables.c	/^const uint16_t WebRtcIsac_kQArRcInitIndex[6] = {$/;"	v
WebRtcIsac_kQArRcLevelsPtr	webrtc/modules/audio_coding/codecs/isac/main/source/spectrum_ar_model_tables.c	/^const int16_t *WebRtcIsac_kQArRcLevelsPtr[AR_ORDER] = {$/;"	v
WebRtcIsac_kQCdfTableSizeGain	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_gain_tables.c	/^const uint16_t WebRtcIsac_kQCdfTableSizeGain[1] = {$/;"	v
WebRtcIsac_kQGain2BoundaryLevels	webrtc/modules/audio_coding/codecs/isac/main/source/spectrum_ar_model_tables.c	/^const int32_t WebRtcIsac_kQGain2BoundaryLevels[19] = {$/;"	v
WebRtcIsac_kQGain2Levels	webrtc/modules/audio_coding/codecs/isac/main/source/spectrum_ar_model_tables.c	/^const int32_t WebRtcIsac_kQGain2Levels[18] = {$/;"	v
WebRtcIsac_kQGainCdf	webrtc/modules/audio_coding/codecs/isac/main/source/spectrum_ar_model_tables.c	/^const uint16_t WebRtcIsac_kQGainCdf[19] = {$/;"	v
WebRtcIsac_kQGainCdf_ptr	webrtc/modules/audio_coding/codecs/isac/main/source/spectrum_ar_model_tables.c	/^const uint16_t *WebRtcIsac_kQGainCdf_ptr[1] = {WebRtcIsac_kQGainCdf};$/;"	v
WebRtcIsac_kQGainInitIndex	webrtc/modules/audio_coding/codecs/isac/main/source/spectrum_ar_model_tables.c	/^const uint16_t WebRtcIsac_kQGainInitIndex[1] = {11};$/;"	v
WebRtcIsac_kQIndexLowerLimitLagLo	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_lag_tables.c	/^const int16_t WebRtcIsac_kQIndexLowerLimitLagLo[4] = {$/;"	v
WebRtcIsac_kQIndexLowerLimitLagMid	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_lag_tables.c	/^const int16_t WebRtcIsac_kQIndexLowerLimitLagMid[4] = {$/;"	v
WebRtcIsac_kQIndexUpperLimitLagLo	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_lag_tables.c	/^const int16_t WebRtcIsac_kQIndexUpperLimitLagLo[4] = {$/;"	v
WebRtcIsac_kQIndexUpperLimitLagMid	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_lag_tables.c	/^const int16_t WebRtcIsac_kQIndexUpperLimitLagMid[4] = {$/;"	v
WebRtcIsac_kQInitIndexLagHi	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_lag_tables.c	/^const uint16_t WebRtcIsac_kQInitIndexLagHi[3] = {$/;"	v
WebRtcIsac_kQInitIndexLagLo	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_lag_tables.c	/^const uint16_t WebRtcIsac_kQInitIndexLagLo[3] = {$/;"	v
WebRtcIsac_kQInitIndexLagMid	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_lag_tables.c	/^const uint16_t WebRtcIsac_kQInitIndexLagMid[3] = {$/;"	v
WebRtcIsac_kQKltCdfGain	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_tables.c	/^const uint16_t WebRtcIsac_kQKltCdfGain[404] = {$/;"	v
WebRtcIsac_kQKltCdfPtrGain	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_tables.c	/^const uint16_t *WebRtcIsac_kQKltCdfPtrGain[12] = {$/;"	v
WebRtcIsac_kQKltCdfPtrShape	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_tables.c	/^const uint16_t *WebRtcIsac_kQKltCdfPtrShape[108] = {$/;"	v
WebRtcIsac_kQKltCdfShape	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_tables.c	/^const uint16_t WebRtcIsac_kQKltCdfShape[686] = {$/;"	v
WebRtcIsac_kQKltInitIndexGain	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_tables.c	/^const uint16_t WebRtcIsac_kQKltInitIndexGain[12] = {$/;"	v
WebRtcIsac_kQKltInitIndexShape	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_tables.c	/^const uint16_t WebRtcIsac_kQKltInitIndexShape[108] = {$/;"	v
WebRtcIsac_kQKltLevelsGain	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_tables.c	/^const double WebRtcIsac_kQKltLevelsGain[392] = {$/;"	v
WebRtcIsac_kQKltLevelsShape	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_tables.c	/^const double WebRtcIsac_kQKltLevelsShape[578] = {$/;"	v
WebRtcIsac_kQKltMaxIndGain	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_tables.c	/^const uint16_t WebRtcIsac_kQKltMaxIndGain[12] = {$/;"	v
WebRtcIsac_kQKltMaxIndShape	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_tables.c	/^const uint16_t WebRtcIsac_kQKltMaxIndShape[108] = {$/;"	v
WebRtcIsac_kQKltModelCdf	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_tables.c	/^const uint16_t WebRtcIsac_kQKltModelCdf[4] = {$/;"	v
WebRtcIsac_kQKltModelCdfPtr	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_tables.c	/^const uint16_t *WebRtcIsac_kQKltModelCdfPtr[1] = {$/;"	v
WebRtcIsac_kQKltModelInitIndex	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_tables.c	/^const uint16_t WebRtcIsac_kQKltModelInitIndex[1] = { 1 };$/;"	v
WebRtcIsac_kQKltOffsetGain	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_tables.c	/^const uint16_t WebRtcIsac_kQKltOffsetGain[12] = {$/;"	v
WebRtcIsac_kQKltOffsetShape	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_tables.c	/^const uint16_t WebRtcIsac_kQKltOffsetShape[108] = {$/;"	v
WebRtcIsac_kQKltQuantMinGain	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_tables.c	/^const short WebRtcIsac_kQKltQuantMinGain[12] = {$/;"	v
WebRtcIsac_kQKltQuantMinShape	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_tables.c	/^const short WebRtcIsac_kQKltQuantMinShape[108] = {$/;"	v
WebRtcIsac_kQMeanGain1Q12	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_gain_tables.c	/^const int16_t WebRtcIsac_kQMeanGain1Q12[144] = {$/;"	v
WebRtcIsac_kQMeanGain2Q12	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_gain_tables.c	/^const int16_t WebRtcIsac_kQMeanGain2Q12[144] = {$/;"	v
WebRtcIsac_kQMeanGain3Q12	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_gain_tables.c	/^const int16_t WebRtcIsac_kQMeanGain3Q12[144] = {$/;"	v
WebRtcIsac_kQMeanGain4Q12	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_gain_tables.c	/^const int16_t WebRtcIsac_kQMeanGain4Q12[144] = {$/;"	v
WebRtcIsac_kQMeanLag2Hi	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_lag_tables.c	/^const double WebRtcIsac_kQMeanLag2Hi[67] = {$/;"	v
WebRtcIsac_kQMeanLag2Lo	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_lag_tables.c	/^const double WebRtcIsac_kQMeanLag2Lo[19] = {$/;"	v
WebRtcIsac_kQMeanLag2Mid	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_lag_tables.c	/^const double WebRtcIsac_kQMeanLag2Mid[35] = {$/;"	v
WebRtcIsac_kQMeanLag3Hi	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_lag_tables.c	/^const double WebRtcIsac_kQMeanLag3Hi[1] = {$/;"	v
WebRtcIsac_kQMeanLag3Lo	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_lag_tables.c	/^const double WebRtcIsac_kQMeanLag3Lo[1] = {$/;"	v
WebRtcIsac_kQMeanLag3Mid	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_lag_tables.c	/^const double WebRtcIsac_kQMeanLag3Mid[1] = {$/;"	v
WebRtcIsac_kQMeanLag4Hi	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_lag_tables.c	/^const double WebRtcIsac_kQMeanLag4Hi[34] = {$/;"	v
WebRtcIsac_kQMeanLag4Lo	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_lag_tables.c	/^const double WebRtcIsac_kQMeanLag4Lo[9] = {$/;"	v
WebRtcIsac_kQMeanLag4Mid	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_lag_tables.c	/^const double WebRtcIsac_kQMeanLag4Mid[19] = {$/;"	v
WebRtcIsac_kQPitchGainCdf	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_gain_tables.c	/^const uint16_t WebRtcIsac_kQPitchGainCdf[255] = {$/;"	v
WebRtcIsac_kQPitchLagCdf1Hi	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_lag_tables.c	/^const uint16_t WebRtcIsac_kQPitchLagCdf1Hi[511] = {$/;"	v
WebRtcIsac_kQPitchLagCdf1Lo	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_lag_tables.c	/^const uint16_t WebRtcIsac_kQPitchLagCdf1Lo[127] = {$/;"	v
WebRtcIsac_kQPitchLagCdf1Mid	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_lag_tables.c	/^const uint16_t WebRtcIsac_kQPitchLagCdf1Mid[255] = {$/;"	v
WebRtcIsac_kQPitchLagCdf2Hi	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_lag_tables.c	/^const uint16_t WebRtcIsac_kQPitchLagCdf2Hi[68] = {$/;"	v
WebRtcIsac_kQPitchLagCdf2Lo	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_lag_tables.c	/^const uint16_t WebRtcIsac_kQPitchLagCdf2Lo[20] = {$/;"	v
WebRtcIsac_kQPitchLagCdf2Mid	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_lag_tables.c	/^const uint16_t WebRtcIsac_kQPitchLagCdf2Mid[36] = {$/;"	v
WebRtcIsac_kQPitchLagCdf3Hi	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_lag_tables.c	/^const uint16_t WebRtcIsac_kQPitchLagCdf3Hi[2] = {$/;"	v
WebRtcIsac_kQPitchLagCdf3Lo	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_lag_tables.c	/^const uint16_t WebRtcIsac_kQPitchLagCdf3Lo[2] = {$/;"	v
WebRtcIsac_kQPitchLagCdf3Mid	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_lag_tables.c	/^const uint16_t WebRtcIsac_kQPitchLagCdf3Mid[2] = {$/;"	v
WebRtcIsac_kQPitchLagCdf4Hi	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_lag_tables.c	/^const uint16_t WebRtcIsac_kQPitchLagCdf4Hi[35] = {$/;"	v
WebRtcIsac_kQPitchLagCdf4Lo	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_lag_tables.c	/^const uint16_t WebRtcIsac_kQPitchLagCdf4Lo[10] = {$/;"	v
WebRtcIsac_kQPitchLagCdf4Mid	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_lag_tables.c	/^const uint16_t WebRtcIsac_kQPitchLagCdf4Mid[20] = {$/;"	v
WebRtcIsac_kQPitchLagCdfPtrHi	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_lag_tables.c	/^const uint16_t *WebRtcIsac_kQPitchLagCdfPtrHi[4] = {WebRtcIsac_kQPitchLagCdf1Hi, WebRtcIsac_kQPitchLagCdf2Hi, WebRtcIsac_kQPitchLagCdf3Hi, WebRtcIsac_kQPitchLagCdf4Hi};$/;"	v
WebRtcIsac_kQPitchLagCdfPtrLo	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_lag_tables.c	/^const uint16_t *WebRtcIsac_kQPitchLagCdfPtrLo[4] = {WebRtcIsac_kQPitchLagCdf1Lo, WebRtcIsac_kQPitchLagCdf2Lo, WebRtcIsac_kQPitchLagCdf3Lo, WebRtcIsac_kQPitchLagCdf4Lo};$/;"	v
WebRtcIsac_kQPitchLagCdfPtrMid	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_lag_tables.c	/^const uint16_t *WebRtcIsac_kQPitchLagCdfPtrMid[4] = {WebRtcIsac_kQPitchLagCdf1Mid, WebRtcIsac_kQPitchLagCdf2Mid, WebRtcIsac_kQPitchLagCdf3Mid, WebRtcIsac_kQPitchLagCdf4Mid};$/;"	v
WebRtcIsac_kQPitchLagCdfSizeHi	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_lag_tables.c	/^const uint16_t WebRtcIsac_kQPitchLagCdfSizeHi[1] = {512};$/;"	v
WebRtcIsac_kQPitchLagCdfSizeLo	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_lag_tables.c	/^const uint16_t WebRtcIsac_kQPitchLagCdfSizeLo[1] = {128};$/;"	v
WebRtcIsac_kQPitchLagCdfSizeMid	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_lag_tables.c	/^const uint16_t WebRtcIsac_kQPitchLagCdfSizeMid[1] = {256};$/;"	v
WebRtcIsac_kQPitchLagStepsizeHi	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_lag_tables.c	/^const double WebRtcIsac_kQPitchLagStepsizeHi = 0.500000;$/;"	v
WebRtcIsac_kQPitchLagStepsizeLo	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_lag_tables.c	/^const double WebRtcIsac_kQPitchLagStepsizeLo = 2.000000;$/;"	v
WebRtcIsac_kQPitchLagStepsizeMid	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_lag_tables.c	/^const double WebRtcIsac_kQPitchLagStepsizeMid = 1.000000;$/;"	v
WebRtcIsac_kQSizeLpcGain	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_gain_swb_tables.c	/^const double WebRtcIsac_kQSizeLpcGain = 0.100000;$/;"	v
WebRtcIsac_kQindexLowerLimitLagHi	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_lag_tables.c	/^const int16_t WebRtcIsac_kQindexLowerLimitLagHi[4] = {$/;"	v
WebRtcIsac_kQindexUpperLimitLagHi	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_lag_tables.c	/^const int16_t WebRtcIsac_kQindexUpperLimitLagHi[4] = {$/;"	v
WebRtcIsac_kTransform	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_lag_tables.c	/^const double WebRtcIsac_kTransform[4][4] = {$/;"	v
WebRtcIsac_kTransform1Float	webrtc/modules/audio_coding/codecs/isac/main/source/filterbank_tables.c	/^const float WebRtcIsac_kTransform1Float[8] = {$/;"	v
WebRtcIsac_kTransform2Float	webrtc/modules/audio_coding/codecs/isac/main/source/filterbank_tables.c	/^const float WebRtcIsac_kTransform2Float[8] = {$/;"	v
WebRtcIsac_kTransformTranspose	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_lag_tables.c	/^const double WebRtcIsac_kTransformTranspose[4][4] = {$/;"	v
WebRtcIsac_kUpperApFactorsFloat	webrtc/modules/audio_coding/codecs/isac/main/source/filterbank_tables.c	/^const float WebRtcIsac_kUpperApFactorsFloat[2] = {$/;"	v
WebRtcIsac_lrint	webrtc/modules/audio_coding/codecs/isac/main/source/os_specific_inline.h	/^#define WebRtcIsac_lrint /;"	d
WebRtcIsac_lrint	webrtc/modules/audio_coding/codecs/isac/main/source/os_specific_inline.h	/^static __inline long int WebRtcIsac_lrint(double x_dbl) {$/;"	f
WebRtcIsac_version	webrtc/modules/audio_coding/codecs/isac/main/source/isac.c	/^void WebRtcIsac_version(char* version) {$/;"	f
WebRtcNs_Analyze	webrtc/modules/audio_processing/ns/noise_suppression.c	/^void WebRtcNs_Analyze(NsHandle* NS_inst, const float* spframe) {$/;"	f
WebRtcNs_AnalyzeCore	webrtc/modules/audio_processing/ns/ns_core.c	/^void WebRtcNs_AnalyzeCore(NoiseSuppressionC* self, const float* speechFrame) {$/;"	f
WebRtcNs_Create	webrtc/modules/audio_processing/ns/noise_suppression.c	/^NsHandle* WebRtcNs_Create() {$/;"	f
WebRtcNs_Free	webrtc/modules/audio_processing/ns/noise_suppression.c	/^void WebRtcNs_Free(NsHandle* NS_inst) {$/;"	f
WebRtcNs_Init	webrtc/modules/audio_processing/ns/noise_suppression.c	/^int WebRtcNs_Init(NsHandle* NS_inst, uint32_t fs) {$/;"	f
WebRtcNs_InitCore	webrtc/modules/audio_processing/ns/ns_core.c	/^int WebRtcNs_InitCore(NoiseSuppressionC* self, uint32_t fs) {$/;"	f
WebRtcNs_Process	webrtc/modules/audio_processing/ns/noise_suppression.c	/^void WebRtcNs_Process(NsHandle* NS_inst,$/;"	f
WebRtcNs_ProcessCore	webrtc/modules/audio_processing/ns/ns_core.c	/^void WebRtcNs_ProcessCore(NoiseSuppressionC* self,$/;"	f
WebRtcNs_noise_estimate	webrtc/modules/audio_processing/ns/noise_suppression.c	/^const float* WebRtcNs_noise_estimate(const NsHandle* handle) {$/;"	f
WebRtcNs_num_freq	webrtc/modules/audio_processing/ns/noise_suppression.c	/^size_t WebRtcNs_num_freq() {$/;"	f
WebRtcNs_prior_speech_probability	webrtc/modules/audio_processing/ns/noise_suppression.c	/^float WebRtcNs_prior_speech_probability(NsHandle* handle) {$/;"	f
WebRtcNs_set_policy	webrtc/modules/audio_processing/ns/noise_suppression.c	/^int WebRtcNs_set_policy(NsHandle* NS_inst, int mode) {$/;"	f
WebRtcNs_set_policy_core	webrtc/modules/audio_processing/ns/ns_core.c	/^int WebRtcNs_set_policy_core(NoiseSuppressionC* self, int mode) {$/;"	f
WebRtcNsx_AnalysisUpdate	webrtc/modules/audio_processing/ns/nsx_core.c	/^AnalysisUpdate WebRtcNsx_AnalysisUpdate;$/;"	v
WebRtcNsx_AnalysisUpdateNeon	webrtc/modules/audio_processing/ns/nsx_core_neon.c	/^void WebRtcNsx_AnalysisUpdateNeon(NoiseSuppressionFixedC* inst,$/;"	f
WebRtcNsx_AnalysisUpdate_mips	webrtc/modules/audio_processing/ns/nsx_core_mips.c	/^void WebRtcNsx_AnalysisUpdate_mips(NoiseSuppressionFixedC* inst,$/;"	f
WebRtcNsx_CalcParametricNoiseEstimate	webrtc/modules/audio_processing/ns/nsx_core.c	/^void WebRtcNsx_CalcParametricNoiseEstimate(NoiseSuppressionFixedC* inst,$/;"	f
WebRtcNsx_ComputeSpectralDifference	webrtc/modules/audio_processing/ns/nsx_core.c	/^void WebRtcNsx_ComputeSpectralDifference(NoiseSuppressionFixedC* inst,$/;"	f
WebRtcNsx_ComputeSpectralFlatness	webrtc/modules/audio_processing/ns/nsx_core.c	/^void WebRtcNsx_ComputeSpectralFlatness(NoiseSuppressionFixedC* inst,$/;"	f
WebRtcNsx_Create	webrtc/modules/audio_processing/ns/noise_suppression_x.c	/^NsxHandle* WebRtcNsx_Create() {$/;"	f
WebRtcNsx_DataAnalysis	webrtc/modules/audio_processing/ns/nsx_core.c	/^void WebRtcNsx_DataAnalysis(NoiseSuppressionFixedC* inst,$/;"	f
WebRtcNsx_DataSynthesis	webrtc/modules/audio_processing/ns/nsx_core.c	/^void WebRtcNsx_DataSynthesis(NoiseSuppressionFixedC* inst, short* outFrame) {$/;"	f
WebRtcNsx_Denormalize	webrtc/modules/audio_processing/ns/nsx_core.c	/^Denormalize WebRtcNsx_Denormalize;$/;"	v
WebRtcNsx_Denormalize_mips	webrtc/modules/audio_processing/ns/nsx_core_mips.c	/^void WebRtcNsx_Denormalize_mips(NoiseSuppressionFixedC* inst,$/;"	f
WebRtcNsx_FeatureParameterExtraction	webrtc/modules/audio_processing/ns/nsx_core.c	/^void WebRtcNsx_FeatureParameterExtraction(NoiseSuppressionFixedC* inst,$/;"	f
WebRtcNsx_Free	webrtc/modules/audio_processing/ns/noise_suppression_x.c	/^void WebRtcNsx_Free(NsxHandle* nsxInst) {$/;"	f
WebRtcNsx_Init	webrtc/modules/audio_processing/ns/noise_suppression_x.c	/^int WebRtcNsx_Init(NsxHandle* nsxInst, uint32_t fs) {$/;"	f
WebRtcNsx_InitCore	webrtc/modules/audio_processing/ns/nsx_core.c	/^int32_t WebRtcNsx_InitCore(NoiseSuppressionFixedC* inst, uint32_t fs) {$/;"	f
WebRtcNsx_InitMips	webrtc/modules/audio_processing/ns/nsx_core.c	/^static void WebRtcNsx_InitMips(void) {$/;"	f	file:
WebRtcNsx_InitNeon	webrtc/modules/audio_processing/ns/nsx_core.c	/^static void WebRtcNsx_InitNeon(void) {$/;"	f	file:
WebRtcNsx_NoiseEstimation	webrtc/modules/audio_processing/ns/nsx_core.c	/^NoiseEstimation WebRtcNsx_NoiseEstimation;$/;"	v
WebRtcNsx_NoiseEstimationNeon	webrtc/modules/audio_processing/ns/nsx_core_neon.c	/^void WebRtcNsx_NoiseEstimationNeon(NoiseSuppressionFixedC* inst,$/;"	f
WebRtcNsx_NormalizeRealBuffer	webrtc/modules/audio_processing/ns/nsx_core.c	/^NormalizeRealBuffer WebRtcNsx_NormalizeRealBuffer;$/;"	v
WebRtcNsx_NormalizeRealBuffer_mips	webrtc/modules/audio_processing/ns/nsx_core_mips.c	/^void WebRtcNsx_NormalizeRealBuffer_mips(NoiseSuppressionFixedC* inst,$/;"	f
WebRtcNsx_PrepareSpectrum	webrtc/modules/audio_processing/ns/nsx_core.c	/^PrepareSpectrum WebRtcNsx_PrepareSpectrum;$/;"	v
WebRtcNsx_PrepareSpectrumNeon	webrtc/modules/audio_processing/ns/nsx_core_neon.c	/^void WebRtcNsx_PrepareSpectrumNeon(NoiseSuppressionFixedC* inst,$/;"	f
WebRtcNsx_PrepareSpectrum_mips	webrtc/modules/audio_processing/ns/nsx_core_mips.c	/^void WebRtcNsx_PrepareSpectrum_mips(NoiseSuppressionFixedC* inst,$/;"	f
WebRtcNsx_Process	webrtc/modules/audio_processing/ns/noise_suppression_x.c	/^void WebRtcNsx_Process(NsxHandle* nsxInst,$/;"	f
WebRtcNsx_ProcessCore	webrtc/modules/audio_processing/ns/nsx_core.c	/^void WebRtcNsx_ProcessCore(NoiseSuppressionFixedC* inst,$/;"	f
WebRtcNsx_SpeechNoiseProb	webrtc/modules/audio_processing/ns/nsx_core_c.c	/^void WebRtcNsx_SpeechNoiseProb(NoiseSuppressionFixedC* inst,$/;"	f
WebRtcNsx_SpeechNoiseProb	webrtc/modules/audio_processing/ns/nsx_core_mips.c	/^void WebRtcNsx_SpeechNoiseProb(NoiseSuppressionFixedC* inst,$/;"	f
WebRtcNsx_SynthesisUpdate	webrtc/modules/audio_processing/ns/nsx_core.c	/^SynthesisUpdate WebRtcNsx_SynthesisUpdate;$/;"	v
WebRtcNsx_SynthesisUpdateNeon	webrtc/modules/audio_processing/ns/nsx_core_neon.c	/^void WebRtcNsx_SynthesisUpdateNeon(NoiseSuppressionFixedC* inst,$/;"	f
WebRtcNsx_SynthesisUpdate_mips	webrtc/modules/audio_processing/ns/nsx_core_mips.c	/^void WebRtcNsx_SynthesisUpdate_mips(NoiseSuppressionFixedC* inst,$/;"	f
WebRtcNsx_kCounterDiv	webrtc/modules/audio_processing/ns/nsx_core.c	/^static const int16_t WebRtcNsx_kCounterDiv[201] = {$/;"	v	file:
WebRtcNsx_kCounterDiv	webrtc/modules/audio_processing/ns/nsx_core_neon.c	/^const int16_t WebRtcNsx_kCounterDiv[201] = {$/;"	v
WebRtcNsx_kLogTable	webrtc/modules/audio_processing/ns/nsx_core.c	/^static const int16_t WebRtcNsx_kLogTable[9] = {$/;"	v	file:
WebRtcNsx_kLogTable	webrtc/modules/audio_processing/ns/nsx_core_neon.c	/^const int16_t WebRtcNsx_kLogTable[9] = {$/;"	v
WebRtcNsx_kLogTableFrac	webrtc/modules/audio_processing/ns/nsx_core.c	/^static const int16_t WebRtcNsx_kLogTableFrac[256] = {$/;"	v	file:
WebRtcNsx_kLogTableFrac	webrtc/modules/audio_processing/ns/nsx_core_neon.c	/^const int16_t WebRtcNsx_kLogTableFrac[256] = {$/;"	v
WebRtcNsx_noise_estimate	webrtc/modules/audio_processing/ns/noise_suppression_x.c	/^const uint32_t* WebRtcNsx_noise_estimate(const NsxHandle* nsxInst,$/;"	f
WebRtcNsx_num_freq	webrtc/modules/audio_processing/ns/noise_suppression_x.c	/^size_t WebRtcNsx_num_freq() {$/;"	f
WebRtcNsx_set_policy	webrtc/modules/audio_processing/ns/noise_suppression_x.c	/^int WebRtcNsx_set_policy(NsxHandle* nsxInst, int mode) {$/;"	f
WebRtcNsx_set_policy_core	webrtc/modules/audio_processing/ns/nsx_core.c	/^int WebRtcNsx_set_policy_core(NoiseSuppressionFixedC* inst, int mode) {$/;"	f
WebRtcRTPHeader	webrtc/modules/include/module_common_types.h	/^struct WebRtcRTPHeader {$/;"	s	namespace:webrtc
WebRtcSeverity	webrtc/system_wrappers/source/logging.cc	/^TraceLevel WebRtcSeverity(LoggingSeverity sev) {$/;"	f	namespace:webrtc::__anon250
WebRtcSpl_32khzTo22khzIntToInt	webrtc/common_audio/signal_processing/resample.c	/^void WebRtcSpl_32khzTo22khzIntToInt(const int32_t* In,$/;"	f
WebRtcSpl_32khzTo22khzIntToShort	webrtc/common_audio/signal_processing/resample.c	/^void WebRtcSpl_32khzTo22khzIntToShort(const int32_t *In,$/;"	f
WebRtcSpl_AddAffineVectorToVector	webrtc/common_audio/signal_processing/ilbc_specific_functions.c	/^void WebRtcSpl_AddAffineVectorToVector(int16_t *out, int16_t *in,$/;"	f
WebRtcSpl_AddSatW16	webrtc/common_audio/signal_processing/include/spl_inl.h	/^static __inline int16_t WebRtcSpl_AddSatW16(int16_t a, int16_t b) {$/;"	f
WebRtcSpl_AddSatW16	webrtc/common_audio/signal_processing/include/spl_inl_armv7.h	/^static __inline int16_t WebRtcSpl_AddSatW16(int16_t a, int16_t b) {$/;"	f
WebRtcSpl_AddSatW16	webrtc/common_audio/signal_processing/include/spl_inl_mips.h	/^static __inline int16_t WebRtcSpl_AddSatW16(int16_t a, int16_t b) {$/;"	f
WebRtcSpl_AddSatW32	webrtc/common_audio/signal_processing/include/spl_inl.h	/^static __inline int32_t WebRtcSpl_AddSatW32(int32_t a, int32_t b) {$/;"	f
WebRtcSpl_AddSatW32	webrtc/common_audio/signal_processing/include/spl_inl_armv7.h	/^static __inline int32_t WebRtcSpl_AddSatW32(int32_t l_var1, int32_t l_var2) {$/;"	f
WebRtcSpl_AddSatW32	webrtc/common_audio/signal_processing/include/spl_inl_mips.h	/^static __inline int32_t WebRtcSpl_AddSatW32(int32_t l_var1, int32_t l_var2) {$/;"	f
WebRtcSpl_AddVectorsAndShift	webrtc/common_audio/signal_processing/ilbc_specific_functions.c	/^void WebRtcSpl_AddVectorsAndShift(int16_t *out, const int16_t *in1,$/;"	f
WebRtcSpl_AffineTransformVector	webrtc/common_audio/signal_processing/ilbc_specific_functions.c	/^void WebRtcSpl_AffineTransformVector(int16_t *out, int16_t *in,$/;"	f
WebRtcSpl_AllPassQMF	webrtc/common_audio/signal_processing/splitting_filter.c	/^void WebRtcSpl_AllPassQMF(int32_t* in_data, size_t data_length,$/;"	f
WebRtcSpl_AnalysisQMF	webrtc/common_audio/signal_processing/splitting_filter.c	/^void WebRtcSpl_AnalysisQMF(const int16_t* in_data, size_t in_data_length,$/;"	f
WebRtcSpl_AutoCorrToReflCoef	webrtc/common_audio/signal_processing/auto_corr_to_refl_coef.c	/^void WebRtcSpl_AutoCorrToReflCoef(const int32_t *R, int use_order, int16_t *K)$/;"	f
WebRtcSpl_AutoCorrelation	webrtc/common_audio/signal_processing/auto_correlation.c	/^size_t WebRtcSpl_AutoCorrelation(const int16_t* in_vector,$/;"	f
WebRtcSpl_ComplexBitReverse	webrtc/common_audio/signal_processing/complex_bit_reverse.c	/^void WebRtcSpl_ComplexBitReverse(int16_t* __restrict complex_data, int stages) {$/;"	f
WebRtcSpl_ComplexBitReverse	webrtc/common_audio/signal_processing/complex_bit_reverse_mips.c	/^void WebRtcSpl_ComplexBitReverse(int16_t frfi[], int stages) {$/;"	f
WebRtcSpl_ComplexFFT	webrtc/common_audio/signal_processing/complex_fft.c	/^int WebRtcSpl_ComplexFFT(int16_t frfi[], int stages, int mode)$/;"	f
WebRtcSpl_ComplexFFT	webrtc/common_audio/signal_processing/complex_fft_mips.c	/^int WebRtcSpl_ComplexFFT(int16_t frfi[], int stages, int mode) {$/;"	f
WebRtcSpl_ComplexIFFT	webrtc/common_audio/signal_processing/complex_fft.c	/^int WebRtcSpl_ComplexIFFT(int16_t frfi[], int stages, int mode)$/;"	f
WebRtcSpl_ComplexIFFT	webrtc/common_audio/signal_processing/complex_fft_mips.c	/^int WebRtcSpl_ComplexIFFT(int16_t frfi[], int stages, int mode) {$/;"	f
WebRtcSpl_CopyFromEndW16	webrtc/common_audio/signal_processing/copy_set_operations.c	/^void WebRtcSpl_CopyFromEndW16(const int16_t *vector_in,$/;"	f
WebRtcSpl_CountLeadingZeros32	webrtc/common_audio/signal_processing/include/spl_inl.h	/^static __inline int WebRtcSpl_CountLeadingZeros32(uint32_t n) {$/;"	f
WebRtcSpl_CountLeadingZeros32_NotBuiltin	webrtc/common_audio/signal_processing/include/spl_inl.h	/^static __inline int WebRtcSpl_CountLeadingZeros32_NotBuiltin(uint32_t n) {$/;"	f
WebRtcSpl_CountLeadingZeros64	webrtc/common_audio/signal_processing/include/spl_inl.h	/^static __inline int WebRtcSpl_CountLeadingZeros64(uint64_t n) {$/;"	f
WebRtcSpl_CountLeadingZeros64_NotBuiltin	webrtc/common_audio/signal_processing/include/spl_inl.h	/^static __inline int WebRtcSpl_CountLeadingZeros64_NotBuiltin(uint64_t n) {$/;"	f
WebRtcSpl_CreateRealFFT	webrtc/common_audio/signal_processing/real_fft.c	/^struct RealFFT* WebRtcSpl_CreateRealFFT(int order) {$/;"	f
WebRtcSpl_CrossCorrelation	webrtc/common_audio/signal_processing/spl_init.c	/^CrossCorrelation WebRtcSpl_CrossCorrelation;$/;"	v
WebRtcSpl_CrossCorrelationC	webrtc/common_audio/signal_processing/cross_correlation.c	/^void WebRtcSpl_CrossCorrelationC(int32_t* cross_correlation,$/;"	f
WebRtcSpl_CrossCorrelationNeon	webrtc/common_audio/signal_processing/cross_correlation_neon.c	/^void WebRtcSpl_CrossCorrelationNeon(int32_t* cross_correlation,$/;"	f
WebRtcSpl_CrossCorrelation_mips	webrtc/common_audio/signal_processing/cross_correlation_mips.c	/^void WebRtcSpl_CrossCorrelation_mips(int32_t* cross_correlation,$/;"	f
WebRtcSpl_DivResultInQ31	webrtc/common_audio/signal_processing/division_operations.c	/^int32_t WebRtcSpl_DivResultInQ31(int32_t num, int32_t den)$/;"	f
WebRtcSpl_DivU32U16	webrtc/common_audio/signal_processing/division_operations.c	/^uint32_t WebRtcSpl_DivU32U16(uint32_t num, uint16_t den)$/;"	f
WebRtcSpl_DivW32HiLow	webrtc/common_audio/signal_processing/division_operations.c	/^int32_t WebRtcSpl_DivW32HiLow(int32_t num, int16_t den_hi, int16_t den_low)$/;"	f
WebRtcSpl_DivW32W16	webrtc/common_audio/signal_processing/division_operations.c	/^int32_t WebRtcSpl_DivW32W16(int32_t num, int16_t den)$/;"	f
WebRtcSpl_DivW32W16ResW16	webrtc/common_audio/signal_processing/division_operations.c	/^int16_t WebRtcSpl_DivW32W16ResW16(int32_t num, int16_t den)$/;"	f
WebRtcSpl_DotProdIntToInt	webrtc/common_audio/signal_processing/resample.c	/^static void WebRtcSpl_DotProdIntToInt(const int32_t* in1, const int32_t* in2,$/;"	f	file:
WebRtcSpl_DotProdIntToShort	webrtc/common_audio/signal_processing/resample.c	/^static void WebRtcSpl_DotProdIntToShort(const int32_t* in1, const int32_t* in2,$/;"	f	file:
WebRtcSpl_DotProductWithScale	webrtc/common_audio/signal_processing/dot_product_with_scale.c	/^int32_t WebRtcSpl_DotProductWithScale(const int16_t* vector1,$/;"	f
WebRtcSpl_DownBy2IntToShort	webrtc/common_audio/signal_processing/resample_by_2_internal.c	/^void WebRtcSpl_DownBy2IntToShort(int32_t *in, int32_t len, int16_t *out,$/;"	f
WebRtcSpl_DownBy2ShortToInt	webrtc/common_audio/signal_processing/resample_by_2_internal.c	/^void WebRtcSpl_DownBy2ShortToInt(const int16_t *in,$/;"	f
WebRtcSpl_DownsampleBy2	webrtc/common_audio/signal_processing/resample_by_2.c	/^void WebRtcSpl_DownsampleBy2(const int16_t* in, size_t len,$/;"	f
WebRtcSpl_DownsampleBy2	webrtc/common_audio/signal_processing/resample_by_2_mips.c	/^void WebRtcSpl_DownsampleBy2(const int16_t* in,$/;"	f
WebRtcSpl_DownsampleFast	webrtc/common_audio/signal_processing/spl_init.c	/^DownsampleFast WebRtcSpl_DownsampleFast;$/;"	v
WebRtcSpl_DownsampleFastC	webrtc/common_audio/signal_processing/downsample_fast.c	/^int WebRtcSpl_DownsampleFastC(const int16_t* data_in,$/;"	f
WebRtcSpl_DownsampleFastNeon	webrtc/common_audio/signal_processing/downsample_fast_neon.c	/^int WebRtcSpl_DownsampleFastNeon(const int16_t* data_in,$/;"	f
WebRtcSpl_DownsampleFast_mips	webrtc/common_audio/signal_processing/downsample_fast_mips.c	/^int WebRtcSpl_DownsampleFast_mips(const int16_t* data_in,$/;"	f
WebRtcSpl_ElementwiseVectorMult	webrtc/common_audio/signal_processing/ilbc_specific_functions.c	/^void WebRtcSpl_ElementwiseVectorMult(int16_t *out, const int16_t *in,$/;"	f
WebRtcSpl_Energy	webrtc/common_audio/signal_processing/energy.c	/^int32_t WebRtcSpl_Energy(int16_t* vector,$/;"	f
WebRtcSpl_FilterAR	webrtc/common_audio/signal_processing/filter_ar.c	/^size_t WebRtcSpl_FilterAR(const int16_t* a,$/;"	f
WebRtcSpl_FilterARFastQ12	webrtc/common_audio/signal_processing/filter_ar_fast_q12.c	/^void WebRtcSpl_FilterARFastQ12(const int16_t* data_in,$/;"	f
WebRtcSpl_FilterARFastQ12	webrtc/common_audio/signal_processing/filter_ar_fast_q12_mips.c	/^void WebRtcSpl_FilterARFastQ12(const int16_t* data_in,$/;"	f
WebRtcSpl_FilterMAFastQ12	webrtc/common_audio/signal_processing/filter_ma_fast_q12.c	/^void WebRtcSpl_FilterMAFastQ12(const int16_t* in_ptr,$/;"	f
WebRtcSpl_FreeRealFFT	webrtc/common_audio/signal_processing/real_fft.c	/^void WebRtcSpl_FreeRealFFT(struct RealFFT* self) {$/;"	f
WebRtcSpl_GetHanningWindow	webrtc/common_audio/signal_processing/get_hanning_window.c	/^void WebRtcSpl_GetHanningWindow(int16_t *v, size_t size)$/;"	f
WebRtcSpl_GetScalingSquare	webrtc/common_audio/signal_processing/get_scaling_square.c	/^int16_t WebRtcSpl_GetScalingSquare(int16_t* in_vector,$/;"	f
WebRtcSpl_GetSizeInBits	webrtc/common_audio/signal_processing/include/spl_inl.h	/^static __inline int16_t WebRtcSpl_GetSizeInBits(uint32_t n) {$/;"	f
WebRtcSpl_GetSizeInBits	webrtc/common_audio/signal_processing/include/spl_inl_armv7.h	/^static __inline int16_t WebRtcSpl_GetSizeInBits(uint32_t n) {$/;"	f
WebRtcSpl_GetSizeInBits	webrtc/common_audio/signal_processing/include/spl_inl_mips.h	/^static __inline int16_t WebRtcSpl_GetSizeInBits(uint32_t n) {$/;"	f
WebRtcSpl_Init	webrtc/common_audio/signal_processing/spl_init.c	/^void WebRtcSpl_Init() {$/;"	f
WebRtcSpl_LPBy2IntToInt	webrtc/common_audio/signal_processing/resample_by_2_internal.c	/^void WebRtcSpl_LPBy2IntToInt(const int32_t* in, int32_t len, int32_t* out,$/;"	f
WebRtcSpl_LPBy2ShortToInt	webrtc/common_audio/signal_processing/resample_by_2_internal.c	/^void WebRtcSpl_LPBy2ShortToInt(const int16_t* in, int32_t len, int32_t* out,$/;"	f
WebRtcSpl_LevinsonDurbin	webrtc/common_audio/signal_processing/levinson_durbin.c	/^int16_t WebRtcSpl_LevinsonDurbin(const int32_t* R, int16_t* A, int16_t* K,$/;"	f
WebRtcSpl_LpcToReflCoef	webrtc/common_audio/signal_processing/lpc_to_refl_coef.c	/^void WebRtcSpl_LpcToReflCoef(int16_t* a16, int use_order, int16_t* k16)$/;"	f
WebRtcSpl_MaxAbsIndexW16	webrtc/common_audio/signal_processing/min_max_operations.c	/^size_t WebRtcSpl_MaxAbsIndexW16(const int16_t* vector, size_t length) {$/;"	f
WebRtcSpl_MaxAbsValueW16	webrtc/common_audio/signal_processing/spl_init.c	/^MaxAbsValueW16 WebRtcSpl_MaxAbsValueW16;$/;"	v
WebRtcSpl_MaxAbsValueW16C	webrtc/common_audio/signal_processing/min_max_operations.c	/^int16_t WebRtcSpl_MaxAbsValueW16C(const int16_t* vector, size_t length) {$/;"	f
WebRtcSpl_MaxAbsValueW16Neon	webrtc/common_audio/signal_processing/min_max_operations_neon.c	/^int16_t WebRtcSpl_MaxAbsValueW16Neon(const int16_t* vector, size_t length) {$/;"	f
WebRtcSpl_MaxAbsValueW16_mips	webrtc/common_audio/signal_processing/min_max_operations_mips.c	/^int16_t WebRtcSpl_MaxAbsValueW16_mips(const int16_t* vector, size_t length) {$/;"	f
WebRtcSpl_MaxAbsValueW32	webrtc/common_audio/signal_processing/spl_init.c	/^MaxAbsValueW32 WebRtcSpl_MaxAbsValueW32;$/;"	v
WebRtcSpl_MaxAbsValueW32C	webrtc/common_audio/signal_processing/min_max_operations.c	/^int32_t WebRtcSpl_MaxAbsValueW32C(const int32_t* vector, size_t length) {$/;"	f
WebRtcSpl_MaxAbsValueW32Neon	webrtc/common_audio/signal_processing/min_max_operations_neon.c	/^int32_t WebRtcSpl_MaxAbsValueW32Neon(const int32_t* vector, size_t length) {$/;"	f
WebRtcSpl_MaxAbsValueW32_mips	webrtc/common_audio/signal_processing/min_max_operations_mips.c	/^int32_t WebRtcSpl_MaxAbsValueW32_mips(const int32_t* vector, size_t length) {$/;"	f
WebRtcSpl_MaxIndexW16	webrtc/common_audio/signal_processing/min_max_operations.c	/^size_t WebRtcSpl_MaxIndexW16(const int16_t* vector, size_t length) {$/;"	f
WebRtcSpl_MaxIndexW32	webrtc/common_audio/signal_processing/min_max_operations.c	/^size_t WebRtcSpl_MaxIndexW32(const int32_t* vector, size_t length) {$/;"	f
WebRtcSpl_MaxValueW16	webrtc/common_audio/signal_processing/spl_init.c	/^MaxValueW16 WebRtcSpl_MaxValueW16;$/;"	v
WebRtcSpl_MaxValueW16C	webrtc/common_audio/signal_processing/min_max_operations.c	/^int16_t WebRtcSpl_MaxValueW16C(const int16_t* vector, size_t length) {$/;"	f
WebRtcSpl_MaxValueW16Neon	webrtc/common_audio/signal_processing/min_max_operations_neon.c	/^int16_t WebRtcSpl_MaxValueW16Neon(const int16_t* vector, size_t length) {$/;"	f
WebRtcSpl_MaxValueW16_mips	webrtc/common_audio/signal_processing/min_max_operations_mips.c	/^int16_t WebRtcSpl_MaxValueW16_mips(const int16_t* vector, size_t length) {$/;"	f
WebRtcSpl_MaxValueW32	webrtc/common_audio/signal_processing/spl_init.c	/^MaxValueW32 WebRtcSpl_MaxValueW32;$/;"	v
WebRtcSpl_MaxValueW32C	webrtc/common_audio/signal_processing/min_max_operations.c	/^int32_t WebRtcSpl_MaxValueW32C(const int32_t* vector, size_t length) {$/;"	f
WebRtcSpl_MaxValueW32Neon	webrtc/common_audio/signal_processing/min_max_operations_neon.c	/^int32_t WebRtcSpl_MaxValueW32Neon(const int32_t* vector, size_t length) {$/;"	f
WebRtcSpl_MaxValueW32_mips	webrtc/common_audio/signal_processing/min_max_operations_mips.c	/^int32_t WebRtcSpl_MaxValueW32_mips(const int32_t* vector, size_t length) {$/;"	f
WebRtcSpl_MemCpyReversedOrder	webrtc/common_audio/signal_processing/copy_set_operations.c	/^void WebRtcSpl_MemCpyReversedOrder(int16_t* dest,$/;"	f
WebRtcSpl_MemSetW16	webrtc/common_audio/signal_processing/copy_set_operations.c	/^void WebRtcSpl_MemSetW16(int16_t *ptr, int16_t set_value, size_t length)$/;"	f
WebRtcSpl_MemSetW32	webrtc/common_audio/signal_processing/copy_set_operations.c	/^void WebRtcSpl_MemSetW32(int32_t *ptr, int32_t set_value, size_t length)$/;"	f
WebRtcSpl_MinIndexW16	webrtc/common_audio/signal_processing/min_max_operations.c	/^size_t WebRtcSpl_MinIndexW16(const int16_t* vector, size_t length) {$/;"	f
WebRtcSpl_MinIndexW32	webrtc/common_audio/signal_processing/min_max_operations.c	/^size_t WebRtcSpl_MinIndexW32(const int32_t* vector, size_t length) {$/;"	f
WebRtcSpl_MinValueW16	webrtc/common_audio/signal_processing/spl_init.c	/^MinValueW16 WebRtcSpl_MinValueW16;$/;"	v
WebRtcSpl_MinValueW16C	webrtc/common_audio/signal_processing/min_max_operations.c	/^int16_t WebRtcSpl_MinValueW16C(const int16_t* vector, size_t length) {$/;"	f
WebRtcSpl_MinValueW16Neon	webrtc/common_audio/signal_processing/min_max_operations_neon.c	/^int16_t WebRtcSpl_MinValueW16Neon(const int16_t* vector, size_t length) {$/;"	f
WebRtcSpl_MinValueW16_mips	webrtc/common_audio/signal_processing/min_max_operations_mips.c	/^int16_t WebRtcSpl_MinValueW16_mips(const int16_t* vector, size_t length) {$/;"	f
WebRtcSpl_MinValueW32	webrtc/common_audio/signal_processing/spl_init.c	/^MinValueW32 WebRtcSpl_MinValueW32;$/;"	v
WebRtcSpl_MinValueW32C	webrtc/common_audio/signal_processing/min_max_operations.c	/^int32_t WebRtcSpl_MinValueW32C(const int32_t* vector, size_t length) {$/;"	f
WebRtcSpl_MinValueW32Neon	webrtc/common_audio/signal_processing/min_max_operations_neon.c	/^int32_t WebRtcSpl_MinValueW32Neon(const int32_t* vector, size_t length) {$/;"	f
WebRtcSpl_MinValueW32_mips	webrtc/common_audio/signal_processing/min_max_operations_mips.c	/^int32_t WebRtcSpl_MinValueW32_mips(const int32_t* vector, size_t length) {$/;"	f
WebRtcSpl_NormU32	webrtc/common_audio/signal_processing/include/spl_inl.h	/^static __inline int16_t WebRtcSpl_NormU32(uint32_t a) {$/;"	f
WebRtcSpl_NormU32	webrtc/common_audio/signal_processing/include/spl_inl_armv7.h	/^static __inline int16_t WebRtcSpl_NormU32(uint32_t a) {$/;"	f
WebRtcSpl_NormU32	webrtc/common_audio/signal_processing/include/spl_inl_mips.h	/^static __inline int16_t WebRtcSpl_NormU32(uint32_t a) {$/;"	f
WebRtcSpl_NormW16	webrtc/common_audio/signal_processing/include/spl_inl.h	/^static __inline int16_t WebRtcSpl_NormW16(int16_t a) {$/;"	f
WebRtcSpl_NormW16	webrtc/common_audio/signal_processing/include/spl_inl_armv7.h	/^static __inline int16_t WebRtcSpl_NormW16(int16_t a) {$/;"	f
WebRtcSpl_NormW16	webrtc/common_audio/signal_processing/include/spl_inl_mips.h	/^static __inline int16_t WebRtcSpl_NormW16(int16_t a) {$/;"	f
WebRtcSpl_NormW32	webrtc/common_audio/signal_processing/include/spl_inl.h	/^static __inline int16_t WebRtcSpl_NormW32(int32_t a) {$/;"	f
WebRtcSpl_NormW32	webrtc/common_audio/signal_processing/include/spl_inl_armv7.h	/^static __inline int16_t WebRtcSpl_NormW32(int32_t a) {$/;"	f
WebRtcSpl_NormW32	webrtc/common_audio/signal_processing/include/spl_inl_mips.h	/^static __inline int16_t WebRtcSpl_NormW32(int32_t a) {$/;"	f
WebRtcSpl_RandN	webrtc/common_audio/signal_processing/randomization_functions.c	/^int16_t WebRtcSpl_RandN(uint32_t* seed) {$/;"	f
WebRtcSpl_RandU	webrtc/common_audio/signal_processing/randomization_functions.c	/^int16_t WebRtcSpl_RandU(uint32_t* seed) {$/;"	f
WebRtcSpl_RandUArray	webrtc/common_audio/signal_processing/randomization_functions.c	/^int16_t WebRtcSpl_RandUArray(int16_t* vector,$/;"	f
WebRtcSpl_RealForwardFFT	webrtc/common_audio/signal_processing/real_fft.c	/^int WebRtcSpl_RealForwardFFT(struct RealFFT* self,$/;"	f
WebRtcSpl_RealInverseFFT	webrtc/common_audio/signal_processing/real_fft.c	/^int WebRtcSpl_RealInverseFFT(struct RealFFT* self,$/;"	f
WebRtcSpl_ReflCoefToLpc	webrtc/common_audio/signal_processing/refl_coef_to_lpc.c	/^void WebRtcSpl_ReflCoefToLpc(const int16_t *k, int use_order, int16_t *a)$/;"	f
WebRtcSpl_ResampDotProduct	webrtc/common_audio/signal_processing/resample_fractional.c	/^static void WebRtcSpl_ResampDotProduct(const int32_t *in1, const int32_t *in2,$/;"	f	file:
WebRtcSpl_Resample16khzTo22khz	webrtc/common_audio/signal_processing/resample.c	/^void WebRtcSpl_Resample16khzTo22khz(const int16_t* in, int16_t* out,$/;"	f
WebRtcSpl_Resample16khzTo48khz	webrtc/common_audio/signal_processing/resample_48khz.c	/^void WebRtcSpl_Resample16khzTo48khz(const int16_t* in, int16_t* out,$/;"	f
WebRtcSpl_Resample22khzTo16khz	webrtc/common_audio/signal_processing/resample.c	/^void WebRtcSpl_Resample22khzTo16khz(const int16_t* in, int16_t* out,$/;"	f
WebRtcSpl_Resample22khzTo8khz	webrtc/common_audio/signal_processing/resample.c	/^void WebRtcSpl_Resample22khzTo8khz(const int16_t* in, int16_t* out,$/;"	f
WebRtcSpl_Resample32khzTo24khz	webrtc/common_audio/signal_processing/resample_fractional.c	/^void WebRtcSpl_Resample32khzTo24khz(const int32_t *In, int32_t *Out, size_t K)$/;"	f
WebRtcSpl_Resample44khzTo32khz	webrtc/common_audio/signal_processing/resample_fractional.c	/^void WebRtcSpl_Resample44khzTo32khz(const int32_t *In, int32_t *Out, size_t K)$/;"	f
WebRtcSpl_Resample48khzTo16khz	webrtc/common_audio/signal_processing/resample_48khz.c	/^void WebRtcSpl_Resample48khzTo16khz(const int16_t* in, int16_t* out,$/;"	f
WebRtcSpl_Resample48khzTo32khz	webrtc/common_audio/signal_processing/resample_fractional.c	/^void WebRtcSpl_Resample48khzTo32khz(const int32_t *In, int32_t *Out, size_t K)$/;"	f
WebRtcSpl_Resample48khzTo8khz	webrtc/common_audio/signal_processing/resample_48khz.c	/^void WebRtcSpl_Resample48khzTo8khz(const int16_t* in, int16_t* out,$/;"	f
WebRtcSpl_Resample8khzTo22khz	webrtc/common_audio/signal_processing/resample.c	/^void WebRtcSpl_Resample8khzTo22khz(const int16_t* in, int16_t* out,$/;"	f
WebRtcSpl_Resample8khzTo48khz	webrtc/common_audio/signal_processing/resample_48khz.c	/^void WebRtcSpl_Resample8khzTo48khz(const int16_t* in, int16_t* out,$/;"	f
WebRtcSpl_ResetResample16khzTo22khz	webrtc/common_audio/signal_processing/resample.c	/^void WebRtcSpl_ResetResample16khzTo22khz(WebRtcSpl_State16khzTo22khz* state)$/;"	f
WebRtcSpl_ResetResample16khzTo48khz	webrtc/common_audio/signal_processing/resample_48khz.c	/^void WebRtcSpl_ResetResample16khzTo48khz(WebRtcSpl_State16khzTo48khz* state)$/;"	f
WebRtcSpl_ResetResample22khzTo16khz	webrtc/common_audio/signal_processing/resample.c	/^void WebRtcSpl_ResetResample22khzTo16khz(WebRtcSpl_State22khzTo16khz* state)$/;"	f
WebRtcSpl_ResetResample22khzTo8khz	webrtc/common_audio/signal_processing/resample.c	/^void WebRtcSpl_ResetResample22khzTo8khz(WebRtcSpl_State22khzTo8khz* state)$/;"	f
WebRtcSpl_ResetResample48khzTo16khz	webrtc/common_audio/signal_processing/resample_48khz.c	/^void WebRtcSpl_ResetResample48khzTo16khz(WebRtcSpl_State48khzTo16khz* state)$/;"	f
WebRtcSpl_ResetResample48khzTo8khz	webrtc/common_audio/signal_processing/resample_48khz.c	/^void WebRtcSpl_ResetResample48khzTo8khz(WebRtcSpl_State48khzTo8khz* state)$/;"	f
WebRtcSpl_ResetResample8khzTo22khz	webrtc/common_audio/signal_processing/resample.c	/^void WebRtcSpl_ResetResample8khzTo22khz(WebRtcSpl_State8khzTo22khz* state)$/;"	f
WebRtcSpl_ResetResample8khzTo48khz	webrtc/common_audio/signal_processing/resample_48khz.c	/^void WebRtcSpl_ResetResample8khzTo48khz(WebRtcSpl_State8khzTo48khz* state)$/;"	f
WebRtcSpl_ReverseOrderMultArrayElements	webrtc/common_audio/signal_processing/ilbc_specific_functions.c	/^void WebRtcSpl_ReverseOrderMultArrayElements(int16_t *out, const int16_t *in,$/;"	f
WebRtcSpl_SatW32ToW16	webrtc/common_audio/signal_processing/include/spl_inl.h	/^static __inline int16_t WebRtcSpl_SatW32ToW16(int32_t value32) {$/;"	f
WebRtcSpl_SatW32ToW16	webrtc/common_audio/signal_processing/include/spl_inl_armv7.h	/^static __inline int16_t WebRtcSpl_SatW32ToW16(int32_t value32) {$/;"	f
WebRtcSpl_SatW32ToW16	webrtc/common_audio/signal_processing/include/spl_inl_mips.h	/^static __inline int16_t WebRtcSpl_SatW32ToW16(int32_t value32) {$/;"	f
WebRtcSpl_ScaleAndAddVectors	webrtc/common_audio/signal_processing/vector_scaling_operations.c	/^void WebRtcSpl_ScaleAndAddVectors(const int16_t *in1, int16_t gain1, int shift1,$/;"	f
WebRtcSpl_ScaleAndAddVectorsWithRound	webrtc/common_audio/signal_processing/spl_init.c	/^ScaleAndAddVectorsWithRound WebRtcSpl_ScaleAndAddVectorsWithRound;$/;"	v
WebRtcSpl_ScaleAndAddVectorsWithRoundC	webrtc/common_audio/signal_processing/vector_scaling_operations.c	/^int WebRtcSpl_ScaleAndAddVectorsWithRoundC(const int16_t* in_vector1,$/;"	f
WebRtcSpl_ScaleAndAddVectorsWithRound_mips	webrtc/common_audio/signal_processing/vector_scaling_operations_mips.c	/^int WebRtcSpl_ScaleAndAddVectorsWithRound_mips(const int16_t* in_vector1,$/;"	f
WebRtcSpl_ScaleVector	webrtc/common_audio/signal_processing/vector_scaling_operations.c	/^void WebRtcSpl_ScaleVector(const int16_t *in_vector, int16_t *out_vector,$/;"	f
WebRtcSpl_ScaleVectorWithSat	webrtc/common_audio/signal_processing/vector_scaling_operations.c	/^void WebRtcSpl_ScaleVectorWithSat(const int16_t *in_vector, int16_t *out_vector,$/;"	f
WebRtcSpl_Sqrt	webrtc/common_audio/signal_processing/spl_sqrt.c	/^int32_t WebRtcSpl_Sqrt(int32_t value)$/;"	f
WebRtcSpl_SqrtFloor	webrtc/common_audio/signal_processing/spl_sqrt_floor.c	/^int32_t WebRtcSpl_SqrtFloor(int32_t value)$/;"	f
WebRtcSpl_SqrtFloor	webrtc/common_audio/signal_processing/spl_sqrt_floor_mips.c	/^int32_t WebRtcSpl_SqrtFloor(int32_t value)$/;"	f
WebRtcSpl_SqrtLocal	webrtc/common_audio/signal_processing/spl_sqrt.c	/^int32_t WebRtcSpl_SqrtLocal(int32_t in)$/;"	f
WebRtcSpl_SqrtOfOneMinusXSquared	webrtc/common_audio/signal_processing/sqrt_of_one_minus_x_squared.c	/^void WebRtcSpl_SqrtOfOneMinusXSquared(int16_t *xQ15, size_t vector_length,$/;"	f
WebRtcSpl_State16khzTo22khz	webrtc/common_audio/signal_processing/include/signal_processing_library.h	/^} WebRtcSpl_State16khzTo22khz;$/;"	t	typeref:struct:__anon91
WebRtcSpl_State16khzTo48khz	webrtc/common_audio/signal_processing/include/signal_processing_library.h	/^} WebRtcSpl_State16khzTo48khz;$/;"	t	typeref:struct:__anon95
WebRtcSpl_State22khzTo16khz	webrtc/common_audio/signal_processing/include/signal_processing_library.h	/^} WebRtcSpl_State22khzTo16khz;$/;"	t	typeref:struct:__anon90
WebRtcSpl_State22khzTo8khz	webrtc/common_audio/signal_processing/include/signal_processing_library.h	/^} WebRtcSpl_State22khzTo8khz;$/;"	t	typeref:struct:__anon92
WebRtcSpl_State48khzTo16khz	webrtc/common_audio/signal_processing/include/signal_processing_library.h	/^} WebRtcSpl_State48khzTo16khz;$/;"	t	typeref:struct:__anon94
WebRtcSpl_State48khzTo8khz	webrtc/common_audio/signal_processing/include/signal_processing_library.h	/^} WebRtcSpl_State48khzTo8khz;$/;"	t	typeref:struct:__anon96
WebRtcSpl_State8khzTo22khz	webrtc/common_audio/signal_processing/include/signal_processing_library.h	/^} WebRtcSpl_State8khzTo22khz;$/;"	t	typeref:struct:__anon93
WebRtcSpl_State8khzTo48khz	webrtc/common_audio/signal_processing/include/signal_processing_library.h	/^} WebRtcSpl_State8khzTo48khz;$/;"	t	typeref:struct:__anon97
WebRtcSpl_SubSatW16	webrtc/common_audio/signal_processing/include/spl_inl.h	/^static __inline int16_t WebRtcSpl_SubSatW16(int16_t var1, int16_t var2) {$/;"	f
WebRtcSpl_SubSatW16	webrtc/common_audio/signal_processing/include/spl_inl_armv7.h	/^static __inline int16_t WebRtcSpl_SubSatW16(int16_t var1, int16_t var2) {$/;"	f
WebRtcSpl_SubSatW16	webrtc/common_audio/signal_processing/include/spl_inl_mips.h	/^static __inline int16_t WebRtcSpl_SubSatW16(int16_t var1, int16_t var2) {$/;"	f
WebRtcSpl_SubSatW32	webrtc/common_audio/signal_processing/include/spl_inl.h	/^static __inline int32_t WebRtcSpl_SubSatW32(int32_t a, int32_t b) {$/;"	f
WebRtcSpl_SubSatW32	webrtc/common_audio/signal_processing/include/spl_inl_armv7.h	/^static __inline int32_t WebRtcSpl_SubSatW32(int32_t l_var1, int32_t l_var2) {$/;"	f
WebRtcSpl_SubSatW32	webrtc/common_audio/signal_processing/include/spl_inl_mips.h	/^static __inline int32_t WebRtcSpl_SubSatW32(int32_t l_var1, int32_t l_var2) {$/;"	f
WebRtcSpl_SynthesisQMF	webrtc/common_audio/signal_processing/splitting_filter.c	/^void WebRtcSpl_SynthesisQMF(const int16_t* low_band, const int16_t* high_band,$/;"	f
WebRtcSpl_UpBy2IntToInt	webrtc/common_audio/signal_processing/resample_by_2_internal.c	/^void WebRtcSpl_UpBy2IntToInt(const int32_t *in, int32_t len, int32_t *out,$/;"	f
WebRtcSpl_UpBy2IntToShort	webrtc/common_audio/signal_processing/resample_by_2_internal.c	/^void WebRtcSpl_UpBy2IntToShort(const int32_t *in, int32_t len, int16_t *out,$/;"	f
WebRtcSpl_UpBy2ShortToInt	webrtc/common_audio/signal_processing/resample_by_2_internal.c	/^void WebRtcSpl_UpBy2ShortToInt(const int16_t *in, int32_t len, int32_t *out,$/;"	f
WebRtcSpl_UpsampleBy2	webrtc/common_audio/signal_processing/resample_by_2.c	/^void WebRtcSpl_UpsampleBy2(const int16_t* in, size_t len,$/;"	f
WebRtcSpl_VectorBitShiftW16	webrtc/common_audio/signal_processing/vector_scaling_operations.c	/^void WebRtcSpl_VectorBitShiftW16(int16_t *res, size_t length,$/;"	f
WebRtcSpl_VectorBitShiftW32	webrtc/common_audio/signal_processing/vector_scaling_operations.c	/^void WebRtcSpl_VectorBitShiftW32(int32_t *out_vector,$/;"	f
WebRtcSpl_VectorBitShiftW32ToW16	webrtc/common_audio/signal_processing/vector_scaling_operations.c	/^void WebRtcSpl_VectorBitShiftW32ToW16(int16_t* out, size_t length,$/;"	f
WebRtcSpl_ZerosArrayW16	webrtc/common_audio/signal_processing/copy_set_operations.c	/^void WebRtcSpl_ZerosArrayW16(int16_t *vector, size_t length)$/;"	f
WebRtcSpl_ZerosArrayW32	webrtc/common_audio/signal_processing/copy_set_operations.c	/^void WebRtcSpl_ZerosArrayW32(int32_t *vector, size_t length)$/;"	f
WebRtcSpl_kAllPassFilter1	webrtc/common_audio/signal_processing/splitting_filter.c	/^static const uint16_t WebRtcSpl_kAllPassFilter1[3] = {6418, 36982, 57261};$/;"	v	file:
WebRtcSpl_kAllPassFilter2	webrtc/common_audio/signal_processing/splitting_filter.c	/^static const uint16_t WebRtcSpl_kAllPassFilter2[3] = {21333, 49062, 63010};$/;"	v	file:
WebRtcVad_CalcVad16khz	webrtc/common_audio/vad/vad_core.c	/^int WebRtcVad_CalcVad16khz(VadInstT* inst, const int16_t* speech_frame,$/;"	f
WebRtcVad_CalcVad32khz	webrtc/common_audio/vad/vad_core.c	/^int WebRtcVad_CalcVad32khz(VadInstT* inst, const int16_t* speech_frame,$/;"	f
WebRtcVad_CalcVad48khz	webrtc/common_audio/vad/vad_core.c	/^int WebRtcVad_CalcVad48khz(VadInstT* inst, const int16_t* speech_frame,$/;"	f
WebRtcVad_CalcVad8khz	webrtc/common_audio/vad/vad_core.c	/^int WebRtcVad_CalcVad8khz(VadInstT* inst, const int16_t* speech_frame,$/;"	f
WebRtcVad_CalculateFeatures	webrtc/common_audio/vad/vad_filterbank.c	/^int16_t WebRtcVad_CalculateFeatures(VadInstT* self, const int16_t* data_in,$/;"	f
WebRtcVad_Create	webrtc/common_audio/vad/webrtc_vad.c	/^VadInst* WebRtcVad_Create() {$/;"	f
WebRtcVad_Downsampling	webrtc/common_audio/vad/vad_sp.c	/^void WebRtcVad_Downsampling(const int16_t* signal_in,$/;"	f
WebRtcVad_FindMinimum	webrtc/common_audio/vad/vad_sp.c	/^int16_t WebRtcVad_FindMinimum(VadInstT* self,$/;"	f
WebRtcVad_Free	webrtc/common_audio/vad/webrtc_vad.c	/^void WebRtcVad_Free(VadInst* handle) {$/;"	f
WebRtcVad_GaussianProbability	webrtc/common_audio/vad/vad_gmm.c	/^int32_t WebRtcVad_GaussianProbability(int16_t input,$/;"	f
WebRtcVad_Init	webrtc/common_audio/vad/webrtc_vad.c	/^int WebRtcVad_Init(VadInst* handle) {$/;"	f
WebRtcVad_InitCore	webrtc/common_audio/vad/vad_core.c	/^int WebRtcVad_InitCore(VadInstT* self) {$/;"	f
WebRtcVad_Process	webrtc/common_audio/vad/webrtc_vad.c	/^int WebRtcVad_Process(VadInst* handle, int fs, const int16_t* audio_frame,$/;"	f
WebRtcVad_ValidRateAndFrameLength	webrtc/common_audio/vad/webrtc_vad.c	/^int WebRtcVad_ValidRateAndFrameLength(int rate, size_t frame_length) {$/;"	f
WebRtcVad_set_mode	webrtc/common_audio/vad/webrtc_vad.c	/^int WebRtcVad_set_mode(VadInst* handle, int mode) {$/;"	f
WebRtcVad_set_mode_core	webrtc/common_audio/vad/vad_core.c	/^int WebRtcVad_set_mode_core(VadInstT* self, int mode) {$/;"	f
WebRtc_AddBinaryFarSpectrum	webrtc/modules/audio_processing/utility/delay_estimator.cc	/^void WebRtc_AddBinaryFarSpectrum(BinaryDelayEstimatorFarend* handle,$/;"	f
WebRtc_AddFarSpectrumFix	webrtc/modules/audio_processing/utility/delay_estimator_wrapper.cc	/^int WebRtc_AddFarSpectrumFix(void* handle,$/;"	f
WebRtc_AddFarSpectrumFloat	webrtc/modules/audio_processing/utility/delay_estimator_wrapper.cc	/^int WebRtc_AddFarSpectrumFloat(void* handle,$/;"	f
WebRtc_AllocateFarendBufferMemory	webrtc/modules/audio_processing/utility/delay_estimator.cc	/^int WebRtc_AllocateFarendBufferMemory(BinaryDelayEstimatorFarend* self,$/;"	f
WebRtc_AllocateHistoryBufferMemory	webrtc/modules/audio_processing/utility/delay_estimator.cc	/^int WebRtc_AllocateHistoryBufferMemory(BinaryDelayEstimator* self,$/;"	f
WebRtc_CPUInfo	webrtc/system_wrappers/include/cpu_features_wrapper.h	/^typedef int (*WebRtc_CPUInfo)(CPUFeature feature);$/;"	t
WebRtc_CreateBinaryDelayEstimator	webrtc/modules/audio_processing/utility/delay_estimator.cc	/^BinaryDelayEstimator* WebRtc_CreateBinaryDelayEstimator($/;"	f
WebRtc_CreateBinaryDelayEstimatorFarend	webrtc/modules/audio_processing/utility/delay_estimator.cc	/^BinaryDelayEstimatorFarend* WebRtc_CreateBinaryDelayEstimatorFarend($/;"	f
WebRtc_CreateBuffer	webrtc/common_audio/ring_buffer.c	/^RingBuffer* WebRtc_CreateBuffer(size_t element_count, size_t element_size) {$/;"	f
WebRtc_CreateDelayEstimator	webrtc/modules/audio_processing/utility/delay_estimator_wrapper.cc	/^void* WebRtc_CreateDelayEstimator(void* farend_handle, int max_lookahead) {$/;"	f
WebRtc_CreateDelayEstimatorFarend	webrtc/modules/audio_processing/utility/delay_estimator_wrapper.cc	/^void* WebRtc_CreateDelayEstimatorFarend(int spectrum_size, int history_size) {$/;"	f
WebRtc_DelayEstimatorProcessFix	webrtc/modules/audio_processing/utility/delay_estimator_wrapper.cc	/^int WebRtc_DelayEstimatorProcessFix(void* handle,$/;"	f
WebRtc_DelayEstimatorProcessFloat	webrtc/modules/audio_processing/utility/delay_estimator_wrapper.cc	/^int WebRtc_DelayEstimatorProcessFloat(void* handle,$/;"	f
WebRtc_FreeBinaryDelayEstimator	webrtc/modules/audio_processing/utility/delay_estimator.cc	/^void WebRtc_FreeBinaryDelayEstimator(BinaryDelayEstimator* self) {$/;"	f
WebRtc_FreeBinaryDelayEstimatorFarend	webrtc/modules/audio_processing/utility/delay_estimator.cc	/^void WebRtc_FreeBinaryDelayEstimatorFarend(BinaryDelayEstimatorFarend* self) {$/;"	f
WebRtc_FreeBuffer	webrtc/common_audio/ring_buffer.c	/^void WebRtc_FreeBuffer(void* handle) {$/;"	f
WebRtc_FreeDelayEstimator	webrtc/modules/audio_processing/utility/delay_estimator_wrapper.cc	/^void WebRtc_FreeDelayEstimator(void* handle) {$/;"	f
WebRtc_FreeDelayEstimatorFarend	webrtc/modules/audio_processing/utility/delay_estimator_wrapper.cc	/^void WebRtc_FreeDelayEstimatorFarend(void* handle) {$/;"	f
WebRtc_InitBinaryDelayEstimator	webrtc/modules/audio_processing/utility/delay_estimator.cc	/^void WebRtc_InitBinaryDelayEstimator(BinaryDelayEstimator* self) {$/;"	f
WebRtc_InitBinaryDelayEstimatorFarend	webrtc/modules/audio_processing/utility/delay_estimator.cc	/^void WebRtc_InitBinaryDelayEstimatorFarend(BinaryDelayEstimatorFarend* self) {$/;"	f
WebRtc_InitBuffer	webrtc/common_audio/ring_buffer.c	/^void WebRtc_InitBuffer(RingBuffer* self) {$/;"	f
WebRtc_InitDelayEstimator	webrtc/modules/audio_processing/utility/delay_estimator_wrapper.cc	/^int WebRtc_InitDelayEstimator(void* handle) {$/;"	f
WebRtc_InitDelayEstimatorFarend	webrtc/modules/audio_processing/utility/delay_estimator_wrapper.cc	/^int WebRtc_InitDelayEstimatorFarend(void* handle) {$/;"	f
WebRtc_MeanEstimatorFix	webrtc/modules/audio_processing/utility/delay_estimator.cc	/^void WebRtc_MeanEstimatorFix(int32_t new_value,$/;"	f
WebRtc_MoveReadPtr	webrtc/common_audio/ring_buffer.c	/^int WebRtc_MoveReadPtr(RingBuffer* self, int element_count) {$/;"	f
WebRtc_MulAccumW16	webrtc/common_audio/signal_processing/include/spl_inl.h	/^static __inline int32_t WebRtc_MulAccumW16(int16_t a, int16_t b, int32_t c) {$/;"	f
WebRtc_MulAccumW16	webrtc/common_audio/signal_processing/include/spl_inl_armv7.h	/^static __inline int32_t WebRtc_MulAccumW16(int16_t a, int16_t b, int32_t c) {$/;"	f
WebRtc_MulAccumW16	webrtc/common_audio/signal_processing/include/spl_inl_mips.h	/^static __inline int32_t WebRtc_MulAccumW16(int16_t a,$/;"	f
WebRtc_ProcessBinarySpectrum	webrtc/modules/audio_processing/utility/delay_estimator.cc	/^int WebRtc_ProcessBinarySpectrum(BinaryDelayEstimator* self,$/;"	f
WebRtc_ReadBuffer	webrtc/common_audio/ring_buffer.c	/^size_t WebRtc_ReadBuffer(RingBuffer* self,$/;"	f
WebRtc_SoftResetBinaryDelayEstimator	webrtc/modules/audio_processing/utility/delay_estimator.cc	/^int WebRtc_SoftResetBinaryDelayEstimator(BinaryDelayEstimator* self,$/;"	f
WebRtc_SoftResetBinaryDelayEstimatorFarend	webrtc/modules/audio_processing/utility/delay_estimator.cc	/^void WebRtc_SoftResetBinaryDelayEstimatorFarend($/;"	f
WebRtc_SoftResetDelayEstimator	webrtc/modules/audio_processing/utility/delay_estimator_wrapper.cc	/^int WebRtc_SoftResetDelayEstimator(void* handle, int delay_shift) {$/;"	f
WebRtc_SoftResetDelayEstimatorFarend	webrtc/modules/audio_processing/utility/delay_estimator_wrapper.cc	/^void WebRtc_SoftResetDelayEstimatorFarend(void* handle, int delay_shift) {$/;"	f
WebRtc_WriteBuffer	webrtc/common_audio/ring_buffer.c	/^size_t WebRtc_WriteBuffer(RingBuffer* self,$/;"	f
WebRtc_available_read	webrtc/common_audio/ring_buffer.c	/^size_t WebRtc_available_read(const RingBuffer* self) {$/;"	f
WebRtc_available_write	webrtc/common_audio/ring_buffer.c	/^size_t WebRtc_available_write(const RingBuffer* self) {$/;"	f
WebRtc_binary_last_delay	webrtc/modules/audio_processing/utility/delay_estimator.cc	/^int WebRtc_binary_last_delay(BinaryDelayEstimator* self) {$/;"	f
WebRtc_binary_last_delay_quality	webrtc/modules/audio_processing/utility/delay_estimator.cc	/^float WebRtc_binary_last_delay_quality(BinaryDelayEstimator* self) {$/;"	f
WebRtc_enable_robust_validation	webrtc/modules/audio_processing/utility/delay_estimator_wrapper.cc	/^int WebRtc_enable_robust_validation(void* handle, int enable) {$/;"	f
WebRtc_get_allowed_offset	webrtc/modules/audio_processing/utility/delay_estimator_wrapper.cc	/^int WebRtc_get_allowed_offset(const void* handle) {$/;"	f
WebRtc_history_size	webrtc/modules/audio_processing/utility/delay_estimator_wrapper.cc	/^int WebRtc_history_size(const void* handle) {$/;"	f
WebRtc_is_robust_validation_enabled	webrtc/modules/audio_processing/utility/delay_estimator_wrapper.cc	/^int WebRtc_is_robust_validation_enabled(const void* handle) {$/;"	f
WebRtc_last_delay	webrtc/modules/audio_processing/utility/delay_estimator_wrapper.cc	/^int WebRtc_last_delay(void* handle) {$/;"	f
WebRtc_last_delay_quality	webrtc/modules/audio_processing/utility/delay_estimator_wrapper.cc	/^float WebRtc_last_delay_quality(void* handle) {$/;"	f
WebRtc_lookahead	webrtc/modules/audio_processing/utility/delay_estimator_wrapper.cc	/^int WebRtc_lookahead(void* handle) {$/;"	f
WebRtc_rdft	webrtc/common_audio/fft4g.c	/^void WebRtc_rdft(size_t n, int isgn, float *a, size_t *ip, float *w)$/;"	f
WebRtc_set_allowed_offset	webrtc/modules/audio_processing/utility/delay_estimator_wrapper.cc	/^int WebRtc_set_allowed_offset(void* handle, int allowed_offset) {$/;"	f
WebRtc_set_history_size	webrtc/modules/audio_processing/utility/delay_estimator_wrapper.cc	/^int WebRtc_set_history_size(void* handle, int history_size) {$/;"	f
WebRtc_set_lookahead	webrtc/modules/audio_processing/utility/delay_estimator_wrapper.cc	/^int WebRtc_set_lookahead(void* handle, int lookahead) {$/;"	f
WeightFiltstr	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^} WeightFiltstr;$/;"	t	typeref:struct:__anon129
WeightedAverage	webrtc/common_audio/vad/vad_core.c	/^static int32_t WeightedAverage(int16_t* data, int16_t offset,$/;"	f	file:
Wghtstr	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  WeightFiltstr Wghtstr;$/;"	m	struct:__anon130
WhitelistContains	webrtc/base/natserver.cc	/^bool NATServer::TransEntry::WhitelistContains(const SocketAddress& ext_addr) {$/;"	f	class:rtc::NATServer::TransEntry
WhitelistInsert	webrtc/base/natserver.cc	/^void NATServer::TransEntry::WhitelistInsert(const SocketAddress& addr) {$/;"	f	class:rtc::NATServer::TransEntry
Win32Filesystem	webrtc/base/win32filesystem.h	/^class Win32Filesystem : public FilesystemInterface {$/;"	c	namespace:rtc
Win32Socket	webrtc/base/win32socketserver.cc	/^Win32Socket::Win32Socket()$/;"	f	class:rtc::Win32Socket
Win32Socket	webrtc/base/win32socketserver.h	/^class Win32Socket : public AsyncSocket {$/;"	c	namespace:rtc
Win32SocketServer	webrtc/base/win32socketserver.cc	/^Win32SocketServer::Win32SocketServer(MessageQueue* message_queue)$/;"	f	class:rtc::Win32SocketServer
Win32SocketServer	webrtc/base/win32socketserver.h	/^class Win32SocketServer : public SocketServer {$/;"	c	namespace:rtc
Win32SocketTest	webrtc/base/win32socketserver_unittest.cc	/^  Win32SocketTest() : server_(NULL), scope_(&server_) {}$/;"	f	class:rtc::Win32SocketTest
Win32SocketTest	webrtc/base/win32socketserver_unittest.cc	/^class Win32SocketTest : public SocketTest {$/;"	c	namespace:rtc	file:
Win32Test	webrtc/base/win32_unittest.cc	/^  Win32Test() {$/;"	f	class:rtc::Win32Test
Win32Test	webrtc/base/win32_unittest.cc	/^class Win32Test : public testing::Test {$/;"	c	namespace:rtc	file:
Win32Thread	webrtc/base/win32socketserver.h	/^  Win32Thread() : ss_(this), id_(0) {$/;"	f	class:rtc::Win32Thread
Win32Thread	webrtc/base/win32socketserver.h	/^class Win32Thread : public Thread {$/;"	c	namespace:rtc
Win32Window	webrtc/base/win32window.cc	/^Win32Window::Win32Window() : wnd_(NULL) {$/;"	f	class:rtc::Win32Window
Win32Window	webrtc/base/win32window.h	/^class Win32Window {$/;"	c	namespace:rtc
Win32WindowPicker	webrtc/base/win32windowpicker.cc	/^Win32WindowPicker::Win32WindowPicker() {$/;"	f	class:rtc::Win32WindowPicker
Win32WindowPicker	webrtc/base/win32windowpicker.h	/^class Win32WindowPicker : public WindowPicker {$/;"	c	namespace:rtc
Win32WindowPickerForTest	webrtc/base/win32windowpicker_unittest.cc	/^  Win32WindowPickerForTest() {$/;"	f	class:rtc::Win32WindowPickerForTest
Win32WindowPickerForTest	webrtc/base/win32windowpicker_unittest.cc	/^class Win32WindowPickerForTest : public Win32WindowPicker {$/;"	c	namespace:rtc	file:
WinHttpAutoDetectProxyForUrl	webrtc/base/proxydetect.cc	/^bool WinHttpAutoDetectProxyForUrl(const char* agent, const char* url,$/;"	f	namespace:rtc
WinPing	webrtc/base/winping.cc	/^WinPing::WinPing()$/;"	f	class:rtc::WinPing
WinPing	webrtc/base/winping.h	/^class WinPing {$/;"	c	namespace:rtc
Window	webrtc/base/window.h	/^typedef unsigned long Window;  \/\/ Avoid include <X11\/Xlib.h>.$/;"	t
Window	webrtc/base/x11windowpicker.h	/^typedef unsigned long Window;$/;"	t
WindowAndFFT	webrtc/modules/audio_processing/aecm/aecm_core_c.cc	/^static void WindowAndFFT(AecmCore* aecm,$/;"	f	file:
WindowAndFFT	webrtc/modules/audio_processing/aecm/aecm_core_mips.cc	/^static void WindowAndFFT(AecmCore* aecm,$/;"	f	file:
WindowData	webrtc/modules/audio_processing/aec/aec_core.cc	/^__inline static void WindowData(float* x_windowed, const float* x) {$/;"	f	namespace:webrtc
WindowDataNEON	webrtc/modules/audio_processing/aec/aec_core_neon.cc	/^static void WindowDataNEON(float* x_windowed, const float* x) {$/;"	f	namespace:webrtc
WindowDataSSE2	webrtc/modules/audio_processing/aec/aec_core_sse2.cc	/^static void WindowDataSSE2(float* x_windowed, const float* x) {$/;"	f	namespace:webrtc
WindowDescription	webrtc/base/windowpicker.h	/^  WindowDescription() : id_() {}$/;"	f	class:rtc::WindowDescription
WindowDescription	webrtc/base/windowpicker.h	/^  WindowDescription(const WindowId& id, const std::string& title)$/;"	f	class:rtc::WindowDescription
WindowDescription	webrtc/base/windowpicker.h	/^class WindowDescription {$/;"	c	namespace:rtc
WindowDescriptionList	webrtc/base/windowpicker.h	/^typedef std::vector<WindowDescription> WindowDescriptionList;$/;"	t	namespace:rtc
WindowEvent	webrtc/base/window.h	/^enum WindowEvent {$/;"	g	namespace:rtc
WindowGenerator	webrtc/common_audio/window_generator.h	/^class WindowGenerator {$/;"	c	namespace:webrtc
WindowId	webrtc/base/window.h	/^  WindowId() : id_(0) {}$/;"	f	class:rtc::WindowId
WindowId	webrtc/base/window.h	/^  WindowId(const WindowT& id) : id_(id) {}  \/\/ NOLINT$/;"	f	class:rtc::WindowId
WindowId	webrtc/base/window.h	/^class WindowId {$/;"	c	namespace:rtc
WindowPicker	webrtc/base/windowpicker.h	/^class WindowPicker {$/;"	c	namespace:rtc
WindowPickerFactory	webrtc/base/windowpickerfactory.h	/^class WindowPickerFactory {$/;"	c	namespace:rtc
WindowT	webrtc/base/window.h	/^  typedef Window WindowT;$/;"	t	class:rtc::WindowId
Windowing	webrtc/modules/audio_processing/ns/ns_core.c	/^static void Windowing(const float* window,$/;"	f	file:
WindowsCommandLineArguments	webrtc/base/flags.cc	/^WindowsCommandLineArguments::WindowsCommandLineArguments() {$/;"	f	class:rtc::WindowsCommandLineArguments
WindowsCommandLineArguments	webrtc/base/flags.h	/^class WindowsCommandLineArguments {$/;"	c	namespace:rtc
WindowsMajorVersions	webrtc/base/win32.h	/^enum WindowsMajorVersions {$/;"	g	namespace:rtc
WinsockInitializer	webrtc/base/win32socketinit.cc	/^  WinsockInitializer() {$/;"	f	class:rtc::WinsockInitializer
WinsockInitializer	webrtc/base/win32socketinit.cc	/^class WinsockInitializer {$/;"	c	namespace:rtc	file:
WndProc	webrtc/base/win32window.cc	/^LRESULT Win32Window::WndProc(HWND hwnd, UINT uMsg,$/;"	f	class:rtc::Win32Window
Worker	webrtc/base/signalthread.h	/^    explicit Worker(SignalThread* parent, bool use_socket_server)$/;"	f	class:rtc::SignalThread::Worker
Worker	webrtc/base/signalthread.h	/^  class Worker : public Thread {$/;"	c	class:rtc::SignalThread
WorkerThread	webrtc/base/task_queue.h	/^    WorkerThread(ThreadRunFunction func, void* obj, const char* thread_name)$/;"	f	class:rtc::TaskQueue::WorkerThread
WorkerThread	webrtc/base/task_queue.h	/^  class WorkerThread : public PlatformThread {$/;"	c	class:rtc::TaskQueue
Wrap	webrtc/common_audio/ring_buffer.h	/^enum Wrap { SAME_WRAP, DIFF_WRAP };$/;"	g
WrapCurrent	webrtc/base/thread.cc	/^bool Thread::WrapCurrent() {$/;"	f	class:rtc::Thread
WrapCurrent	webrtc/base/thread_unittest.cc	/^  bool WrapCurrent() {$/;"	f	class:CustomThread
WrapCurrentThread	webrtc/base/thread.cc	/^Thread *ThreadManager::WrapCurrentThread() {$/;"	f	class:rtc::ThreadManager
WrapCurrentWithThreadManager	webrtc/base/thread.cc	/^bool Thread::WrapCurrentWithThreadManager(ThreadManager* thread_manager,$/;"	f	class:rtc::Thread
WrapMessageData	webrtc/base/messagequeue.h	/^inline MessageData* WrapMessageData(const T& data) {$/;"	f	namespace:rtc
WrapSocket	webrtc/base/firewallsocketserver.cc	/^AsyncSocket* FirewallSocketServer::WrapSocket(AsyncSocket* sock, int type) {$/;"	f	class:rtc::FirewallSocketServer
WrapSocket	webrtc/base/physicalsocketserver.cc	/^AsyncSocket* PhysicalSocketServer::WrapSocket(SOCKET s) {$/;"	f	class:rtc::PhysicalSocketServer
WrapSocket	webrtc/base/proxyserver.cc	/^AsyncProxyServerSocket* SocksProxyServer::WrapSocket(AsyncSocket* socket) {$/;"	f	class:rtc::SocksProxyServer
WritableAfterPartialWrite	webrtc/base/physicalsocketserver_unittest.cc	/^void PhysicalSocketTest::WritableAfterPartialWrite(const IPAddress& loopback) {$/;"	f	class:rtc::PhysicalSocketTest
Write	webrtc/base/file_posix.cc	/^size_t File::Write(const uint8_t* data, size_t length) {$/;"	f	class:rtc::File
Write	webrtc/base/file_win.cc	/^size_t File::Write(const uint8_t* data, size_t length) {$/;"	f	class:rtc::File
Write	webrtc/base/filerotatingstream.cc	/^StreamResult FileRotatingStream::Write(const void* data,$/;"	f	class:rtc::FileRotatingStream
Write	webrtc/base/opensslstreamadapter.cc	/^StreamResult OpenSSLStreamAdapter::Write(const void* data, size_t data_len,$/;"	f	class:rtc::OpenSSLStreamAdapter
Write	webrtc/base/proxyserver.cc	/^void ProxyBinding::Write(AsyncSocket* socket, FifoBuffer* buffer) {$/;"	f	class:rtc::ProxyBinding
Write	webrtc/base/socketstream.cc	/^StreamResult SocketStream::Write(const void* data, size_t data_len,$/;"	f	class:rtc::SocketStream
Write	webrtc/base/sslstreamadapter_unittest.cc	/^rtc::StreamResult SSLDummyStreamBase::Write(const void* data, size_t data_len,$/;"	f	class:SSLDummyStreamBase
Write	webrtc/base/stream.cc	/^StreamResult FifoBuffer::Write(const void* buffer, size_t bytes,$/;"	f	class:rtc::FifoBuffer
Write	webrtc/base/stream.cc	/^StreamResult FileStream::Write(const void* data, size_t data_len,$/;"	f	class:rtc::FileStream
Write	webrtc/base/stream.cc	/^StreamResult LoggingAdapter::Write(const void* data, size_t data_len,$/;"	f	class:rtc::LoggingAdapter
Write	webrtc/base/stream.cc	/^StreamResult MemoryStreamBase::Write(const void* buffer, size_t bytes,$/;"	f	class:rtc::MemoryStreamBase
Write	webrtc/base/stream.cc	/^StreamResult NullStream::Write(const void* data, size_t data_len,$/;"	f	class:rtc::NullStream
Write	webrtc/base/stream.cc	/^StreamResult StreamAdapterInterface::Write(const void* data,$/;"	f	class:rtc::StreamAdapterInterface
Write	webrtc/base/stream.cc	/^StreamResult StreamTap::Write(const void* data, size_t data_len,$/;"	f	class:rtc::StreamTap
Write	webrtc/base/stream.cc	/^StreamResult StringStream::Write(const void* data, size_t data_len,$/;"	f	class:rtc::StringStream
Write	webrtc/base/stream_unittest.cc	/^  virtual StreamResult Write(const void* data, size_t data_len,$/;"	f	class:rtc::TestStream
Write	webrtc/base/testutils.h	/^  virtual StreamResult Write(const void* data, size_t data_len,$/;"	f	class:testing::StreamSource
Write	webrtc/base/transformadapter.cc	/^TransformAdapter::Write(const void * data, size_t data_len,$/;"	f	class:rtc::TransformAdapter
Write	webrtc/common_audio/audio_ring_buffer.cc	/^void AudioRingBuffer::Write(const float* const* data, size_t channels,$/;"	f	class:webrtc::AudioRingBuffer
Write	webrtc/modules/audio_processing/agc/agc_manager_direct.cc	/^  void Write(const int16_t* data, size_t length_samples) {$/;"	f	class:webrtc::DebugFile
Write	webrtc/modules/audio_processing/test/test_utils.cc	/^void ChannelBufferWavWriter::Write(const ChannelBuffer<float>& buffer) {$/;"	f	class:webrtc::ChannelBufferWavWriter
Write	webrtc/system_wrappers/source/file_impl.cc	/^bool FileWrapper::Write(const void* buf, size_t length) {$/;"	f	class:webrtc::FileWrapper
WriteAll	webrtc/base/stream.cc	/^StreamResult StreamInterface::WriteAll(const void* data, size_t data_len,$/;"	f	class:rtc::StreamInterface
WriteAndFlush	webrtc/base/filerotatingstream_unittest.cc	/^  void WriteAndFlush(const void* data, const size_t data_len) {$/;"	f	class:rtc::MAYBE_CallSessionFileRotatingStreamTest
WriteAndFlush	webrtc/base/filerotatingstream_unittest.cc	/^  void WriteAndFlush(const void* data, const size_t data_len) {$/;"	f	class:rtc::MAYBE_FileRotatingStreamTest
WriteAt	webrtc/base/file_posix.cc	/^size_t File::WriteAt(const uint8_t* data, size_t length, size_t offset) {$/;"	f	class:rtc::File
WriteAt	webrtc/base/file_win.cc	/^size_t File::WriteAt(const uint8_t* data, size_t length, size_t offset) {$/;"	f	class:rtc::File
WriteBack	webrtc/base/bufferqueue.cc	/^bool BufferQueue::WriteBack(const void* buffer, size_t bytes,$/;"	f	class:rtc::BufferQueue
WriteBits	webrtc/base/bitbuffer.cc	/^bool BitBufferWriter::WriteBits(uint64_t val, size_t bit_count) {$/;"	f	class:rtc::BitBufferWriter
WriteBytes	webrtc/base/bytebuffer.cc	/^void ByteBufferWriter::WriteBytes(const char* val, size_t len) {$/;"	f	class:rtc::ByteBufferWriter
WriteCacheHeaders	webrtc/base/httpclient.cc	/^HttpError HttpClient::WriteCacheHeaders(const std::string& id) {$/;"	f	class:rtc::HttpClient
WriteConfigMessage	webrtc/modules/audio_processing/audio_processing_impl.cc	/^int AudioProcessingImpl::WriteConfigMessage(bool forced) {$/;"	f	class:webrtc::AudioProcessingImpl
WriteData	webrtc/base/sslstreamadapter_unittest.cc	/^  rtc::StreamResult WriteData(const void* data, size_t data_len,$/;"	f	class:SSLDummyStreamBase
WriteData	webrtc/modules/audio_processing/test/unpack.cc	/^void WriteData(const void* data, size_t size, FILE* file,$/;"	f	namespace:webrtc
WriteDoubleBufferToFile	webrtc/modules/audio_processing/transient/file_utils.cc	/^size_t WriteDoubleBufferToFile(FileWrapper* file,$/;"	f	namespace:webrtc
WriteExponentialGolomb	webrtc/base/bitbuffer.cc	/^bool BitBufferWriter::WriteExponentialGolomb(uint32_t val) {$/;"	f	class:rtc::BitBufferWriter
WriteFloatBufferToFile	webrtc/modules/audio_processing/transient/file_utils.cc	/^size_t WriteFloatBufferToFile(FileWrapper* file,$/;"	f	namespace:webrtc
WriteFloatData	webrtc/modules/audio_processing/test/test_utils.cc	/^void WriteFloatData(const float* const* data,$/;"	f	namespace:webrtc
WriteFourCC	webrtc/common_audio/wav_header.cc	/^static inline void WriteFourCC(uint32_t* f, char a, char b, char c, char d) {$/;"	f	namespace:webrtc
WriteFramesAvailable	webrtc/common_audio/audio_ring_buffer.cc	/^size_t AudioRingBuffer::WriteFramesAvailable() const {$/;"	f	class:webrtc::AudioRingBuffer
WriteInitMessage	webrtc/modules/audio_processing/audio_processing_impl.cc	/^int AudioProcessingImpl::WriteInitMessage() {$/;"	f	class:webrtc::AudioProcessingImpl
WriteInt16BufferToFile	webrtc/modules/audio_processing/transient/file_utils.cc	/^size_t WriteInt16BufferToFile(FileWrapper* file,$/;"	f	namespace:webrtc
WriteIntData	webrtc/modules/audio_processing/test/test_utils.cc	/^void WriteIntData(const int16_t* data,$/;"	f	namespace:webrtc
WriteLE16	webrtc/common_audio/wav_header.cc	/^static inline void WriteLE16(uint16_t* f, uint16_t x) { *f = x; }$/;"	f	namespace:webrtc
WriteLE32	webrtc/common_audio/wav_header.cc	/^static inline void WriteLE32(uint32_t* f, uint32_t x) { *f = x; }$/;"	f	namespace:webrtc
WriteLockScoped	webrtc/system_wrappers/include/rw_lock_wrapper.h	/^class SCOPED_LOCKABLE WriteLockScoped {$/;"	c	namespace:webrtc
WriteMessageToDebugFile	webrtc/modules/audio_processing/audio_processing_impl.cc	/^int AudioProcessingImpl::WriteMessageToDebugFile($/;"	f	class:webrtc::AudioProcessingImpl
WriteOffset	webrtc/base/stream.cc	/^StreamResult FifoBuffer::WriteOffset(const void* buffer, size_t bytes,$/;"	f	class:rtc::FifoBuffer
WriteOffsetLocked	webrtc/base/stream.cc	/^StreamResult FifoBuffer::WriteOffsetLocked(const void* buffer,$/;"	f	class:rtc::FifoBuffer
WritePCM	webrtc/modules/audio_processing/transient/transient_suppression_test.cc	/^static void WritePCM(FILE* f,$/;"	f	namespace:webrtc
WritePartialByte	webrtc/base/bitbuffer.cc	/^uint8_t WritePartialByte(uint8_t source,$/;"	f	namespace:__anon6
WriteProtected	webrtc/base/thread_annotations_unittest.cc	/^  void WriteProtected() {$/;"	f	class:__anon68::ThreadSafe
WriteResource	webrtc/base/diskcache.cc	/^StreamInterface* DiskCache::WriteResource(const std::string& id, size_t index) {$/;"	f	class:rtc::DiskCache
WriteSamples	webrtc/common_audio/wav_file.cc	/^void WavWriter::WriteSamples(const float* samples, size_t num_samples) {$/;"	f	class:webrtc::WavWriter
WriteSamples	webrtc/common_audio/wav_file.cc	/^void WavWriter::WriteSamples(const int16_t* samples, size_t num_samples) {$/;"	f	class:webrtc::WavWriter
WriteSamples	webrtc/modules/audio_processing/test/test_utils.cc	/^void RawFile::WriteSamples(const float* samples, size_t num_samples) {$/;"	f	class:webrtc::RawFile
WriteSamples	webrtc/modules/audio_processing/test/test_utils.cc	/^void RawFile::WriteSamples(const int16_t* samples, size_t num_samples) {$/;"	f	class:webrtc::RawFile
WriteSignedExponentialGolomb	webrtc/base/bitbuffer.cc	/^bool BitBufferWriter::WriteSignedExponentialGolomb(int32_t val) {$/;"	f	class:rtc::BitBufferWriter
WriteStatsMessage	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^void WriteStatsMessage(const AudioProcessing::Statistic& output,$/;"	f	namespace:webrtc::__anon183
WriteString	webrtc/base/bytebuffer.cc	/^void ByteBufferWriter::WriteString(const std::string& val) {$/;"	f	class:rtc::ByteBufferWriter
WriteTask	webrtc/base/sharedexclusivelock_unittest.cc	/^  WriteTask(SharedExclusiveLock* shared_exclusive_lock, int* value, Event* done)$/;"	f	class:rtc::WriteTask
WriteTask	webrtc/base/sharedexclusivelock_unittest.cc	/^class WriteTask : public SharedExclusiveTask {$/;"	c	namespace:rtc	file:
WriteToFile	webrtc/system_wrappers/source/trace_impl.cc	/^void TraceImpl::WriteToFile(const char* msg, uint16_t length) {$/;"	f	class:webrtc::TraceImpl
WriteUInt16	webrtc/base/bitbuffer.cc	/^bool BitBufferWriter::WriteUInt16(uint16_t val) {$/;"	f	class:rtc::BitBufferWriter
WriteUInt16	webrtc/base/bytebuffer.cc	/^void ByteBufferWriter::WriteUInt16(uint16_t val) {$/;"	f	class:rtc::ByteBufferWriter
WriteUInt24	webrtc/base/bytebuffer.cc	/^void ByteBufferWriter::WriteUInt24(uint32_t val) {$/;"	f	class:rtc::ByteBufferWriter
WriteUInt32	webrtc/base/bitbuffer.cc	/^bool BitBufferWriter::WriteUInt32(uint32_t val) {$/;"	f	class:rtc::BitBufferWriter
WriteUInt32	webrtc/base/bytebuffer.cc	/^void ByteBufferWriter::WriteUInt32(uint32_t val) {$/;"	f	class:rtc::ByteBufferWriter
WriteUInt64	webrtc/base/bytebuffer.cc	/^void ByteBufferWriter::WriteUInt64(uint64_t val) {$/;"	f	class:rtc::ByteBufferWriter
WriteUInt8	webrtc/base/bitbuffer.cc	/^bool BitBufferWriter::WriteUInt8(uint8_t val) {$/;"	f	class:rtc::BitBufferWriter
WriteUInt8	webrtc/base/bytebuffer.cc	/^void ByteBufferWriter::WriteUInt8(uint8_t val) {$/;"	f	class:rtc::ByteBufferWriter
WriteUVarint	webrtc/base/bytebuffer.cc	/^void ByteBufferWriter::WriteUVarint(uint64_t val) {$/;"	f	class:rtc::ByteBufferWriter
WriteWavHeader	webrtc/common_audio/wav_header.cc	/^void WriteWavHeader(uint8_t* buf,$/;"	f	namespace:webrtc
X11WindowPicker	webrtc/base/x11windowpicker.cc	/^X11WindowPicker::X11WindowPicker() : enumerator_(new XWindowEnumerator()) {$/;"	f	class:rtc::X11WindowPicker
X11WindowPicker	webrtc/base/x11windowpicker.h	/^class X11WindowPicker : public WindowPicker {$/;"	c	namespace:rtc
X509_STORE_CTX	webrtc/base/openssladapter.h	/^typedef struct x509_store_ctx_st X509_STORE_CTX;$/;"	t	typeref:struct:x509_store_ctx_st
X509_STORE_CTX	webrtc/base/opensslstreamadapter.h	/^typedef struct x509_store_ctx_st X509_STORE_CTX;$/;"	t	typeref:struct:x509_store_ctx_st
XDisplay	webrtc/base/testutils.h	/^  XDisplay() : display_(XOpenDisplay(NULL)) { }$/;"	f	struct:testing::XDisplay
XDisplay	webrtc/base/testutils.h	/^struct XDisplay {$/;"	s	namespace:testing
XErrorSuppressor	webrtc/base/x11windowpicker.cc	/^  explicit XErrorSuppressor(Display* display)$/;"	f	class:rtc::XErrorSuppressor
XErrorSuppressor	webrtc/base/x11windowpicker.cc	/^class XErrorSuppressor {$/;"	c	namespace:rtc	file:
XML_UNSAFE	webrtc/base/stringencode.cc	/^const unsigned char XML_UNSAFE  = 0x2; \/\/ "&'<>$/;"	m	namespace:rtc	file:
XWindowEnumerator	webrtc/base/x11windowpicker.cc	/^  XWindowEnumerator()$/;"	f	class:rtc::XWindowEnumerator
XWindowEnumerator	webrtc/base/x11windowpicker.cc	/^class XWindowEnumerator {$/;"	c	namespace:rtc	file:
XWindowProperty	webrtc/base/x11windowpicker.cc	/^  XWindowProperty(Display* display, Window window, Atom property)$/;"	f	class:rtc::XWindowProperty
XWindowProperty	webrtc/base/x11windowpicker.cc	/^class XWindowProperty {$/;"	c	namespace:rtc	file:
Yes	webrtc/base/bind.h	/^  struct Yes { char dummy[1]; };$/;"	s	class:rtc::detail::IsRefCounted
YesType	webrtc/base/template_util.h	/^typedef char YesType;$/;"	t	namespace:rtc::internal
ZeroImag	webrtc/modules/audio_processing/beamformer/complex_matrix.h	/^  ComplexMatrix& ZeroImag() {$/;"	f	class:webrtc::ComplexMatrix
ZeroImag	webrtc/modules/audio_processing/beamformer/complex_matrix.h	/^  ComplexMatrix& ZeroImag(const ComplexMatrix& operand) {$/;"	f	class:webrtc::ComplexMatrix
ZeroOut	webrtc/common_audio/blocker.cc	/^void ZeroOut(float* const* buffer,$/;"	f	namespace:__anon77
ZeroSource	webrtc/common_audio/resampler/push_sinc_resampler_unittest.cc	/^class ZeroSource : public SincResamplerCallback {$/;"	c	namespace:webrtc	file:
_HTTPREQUEST_H_	webrtc/base/httprequest.h	/^#define _HTTPREQUEST_H_$/;"	d
_PROXYDETECT_H_	webrtc/base/proxydetect.h	/^#define _PROXYDETECT_H_$/;"	d
_SIGSLOT_HAS_POSIX_THREADS	webrtc/base/sigslot.h	/^#	define _SIGSLOT_HAS_POSIX_THREADS$/;"	d
_SIGSLOT_HAS_WIN32_THREADS	webrtc/base/sigslot.h	/^#	define _SIGSLOT_HAS_WIN32_THREADS$/;"	d
_SIGSLOT_SINGLE_THREADED	webrtc/base/sigslot.h	/^#	define _SIGSLOT_SINGLE_THREADED$/;"	d
_SendMessage	webrtc/base/thread.h	/^  _SendMessage() {}$/;"	f	struct:rtc::_SendMessage
_SendMessage	webrtc/base/thread.h	/^struct _SendMessage {$/;"	s	namespace:rtc
_TOKEN_MANDATORY_LABEL	webrtc/base/win32.h	/^typedef struct _TOKEN_MANDATORY_LABEL {$/;"	s
_TRY_FIREFOX	webrtc/base/proxydetect.cc	/^#define _TRY_FIREFOX /;"	d	file:
_TRY_IE_LAN_SETTINGS	webrtc/base/proxydetect.cc	/^#define _TRY_IE_LAN_SETTINGS /;"	d	file:
_TRY_JSPROXY	webrtc/base/proxydetect.cc	/^#define _TRY_JSPROXY /;"	d	file:
_TRY_WINHTTP	webrtc/base/proxydetect.cc	/^#define _TRY_WINHTTP /;"	d	file:
_TRY_WM_FINDPROXY	webrtc/base/proxydetect.cc	/^#define _TRY_WM_FINDPROXY /;"	d	file:
_URLENCODE_H_	webrtc/base/urlencode.h	/^#define _URLENCODE_H_ /;"	d
_USE_MATH_DEFINES	webrtc/common_audio/resampler/sinc_resampler.cc	/^#define _USE_MATH_DEFINES$/;"	d	file:
_USE_MATH_DEFINES	webrtc/common_audio/resampler/sinc_resampler_unittest.cc	/^#define _USE_MATH_DEFINES$/;"	d	file:
_USE_MATH_DEFINES	webrtc/common_audio/resampler/sinusoidal_linear_chirp_source.cc	/^#define _USE_MATH_DEFINES$/;"	d	file:
_USE_MATH_DEFINES	webrtc/common_audio/wav_file_unittest.cc	/^#define _USE_MATH_DEFINES$/;"	d	file:
_USE_MATH_DEFINES	webrtc/common_audio/window_generator.cc	/^#define _USE_MATH_DEFINES$/;"	d	file:
_USE_MATH_DEFINES	webrtc/modules/audio_processing/beamformer/array_util_unittest.cc	/^#define _USE_MATH_DEFINES$/;"	d	file:
_USE_MATH_DEFINES	webrtc/modules/audio_processing/beamformer/covariance_matrix_generator.cc	/^#define _USE_MATH_DEFINES$/;"	d	file:
_USE_MATH_DEFINES	webrtc/modules/audio_processing/beamformer/covariance_matrix_generator_unittest.cc	/^#define _USE_MATH_DEFINES$/;"	d	file:
_USE_MATH_DEFINES	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.cc	/^#define _USE_MATH_DEFINES$/;"	d	file:
_USE_MATH_DEFINES	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.h	/^#define _USE_MATH_DEFINES$/;"	d
_USE_MATH_DEFINES	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer_unittest.cc	/^#define _USE_MATH_DEFINES$/;"	d	file:
_USE_MATH_DEFINES	webrtc/modules/audio_processing/include/audio_processing.h	/^#define _USE_MATH_DEFINES$/;"	d
_USE_MATH_DEFINES	webrtc/modules/audio_processing/splitting_filter_unittest.cc	/^#define _USE_MATH_DEFINES$/;"	d	file:
_USE_MATH_DEFINES	webrtc/modules/audio_processing/three_band_filter_bank.cc	/^#define _USE_MATH_DEFINES$/;"	d	file:
_WEBRTC_BASE_CRYPTSTRING_H_	webrtc/base/cryptstring.h	/^#define _WEBRTC_BASE_CRYPTSTRING_H_$/;"	d
_WEBRTC_BASE_WIN32FILESYSTEM_H__	webrtc/base/win32filesystem.h	/^#define _WEBRTC_BASE_WIN32FILESYSTEM_H__$/;"	d
__FUNCTION__	webrtc/base/common.h	/^#define __FUNCTION__ /;"	d
__STDC_FORMAT_MACROS	webrtc/base/format_macros.h	/^#define __STDC_FORMAT_MACROS$/;"	d
__cpuid	webrtc/base/systeminfo.cc	/^static inline void __cpuid(int cpu_info[4], int info_type) {$/;"	f	namespace:rtc
__has_feature	webrtc/base/thread.cc	/^#define __has_feature(/;"	d	file:
_accDrift	webrtc/system_wrappers/include/timestamp_extrapolator.h	/^    const double        _accDrift;$/;"	m	class:webrtc::TimestampExtrapolator
_accMaxError	webrtc/system_wrappers/include/timestamp_extrapolator.h	/^    const double        _accMaxError;$/;"	m	class:webrtc::TimestampExtrapolator
_alarmThreshold	webrtc/system_wrappers/include/timestamp_extrapolator.h	/^    const double        _alarmThreshold;$/;"	m	class:webrtc::TimestampExtrapolator
_connection0	webrtc/base/sigslot.h	/^		_connection0()$/;"	f	class:sigslot::_connection0
_connection0	webrtc/base/sigslot.h	/^		_connection0(dest_type* pobject, void (dest_type::*pmemfun)())$/;"	f	class:sigslot::_connection0
_connection0	webrtc/base/sigslot.h	/^	class _connection0 : public _connection_base0<mt_policy>$/;"	c	namespace:sigslot
_connection1	webrtc/base/sigslot.h	/^		_connection1()$/;"	f	class:sigslot::_connection1
_connection1	webrtc/base/sigslot.h	/^		_connection1(dest_type* pobject, void (dest_type::*pmemfun)(arg1_type))$/;"	f	class:sigslot::_connection1
_connection1	webrtc/base/sigslot.h	/^	class _connection1 : public _connection_base1<arg1_type, mt_policy>$/;"	c	namespace:sigslot
_connection2	webrtc/base/sigslot.h	/^		_connection2()$/;"	f	class:sigslot::_connection2
_connection2	webrtc/base/sigslot.h	/^		_connection2(dest_type* pobject, void (dest_type::*pmemfun)(arg1_type,$/;"	f	class:sigslot::_connection2
_connection2	webrtc/base/sigslot.h	/^	class _connection2 : public _connection_base2<arg1_type, arg2_type, mt_policy>$/;"	c	namespace:sigslot
_connection3	webrtc/base/sigslot.h	/^		_connection3()$/;"	f	class:sigslot::_connection3
_connection3	webrtc/base/sigslot.h	/^		_connection3(dest_type* pobject, void (dest_type::*pmemfun)(arg1_type,$/;"	f	class:sigslot::_connection3
_connection3	webrtc/base/sigslot.h	/^	class _connection3 : public _connection_base3<arg1_type, arg2_type, arg3_type, mt_policy>$/;"	c	namespace:sigslot
_connection4	webrtc/base/sigslot.h	/^		_connection4()$/;"	f	class:sigslot::_connection4
_connection4	webrtc/base/sigslot.h	/^		_connection4(dest_type* pobject, void (dest_type::*pmemfun)(arg1_type,$/;"	f	class:sigslot::_connection4
_connection4	webrtc/base/sigslot.h	/^	class _connection4 : public _connection_base4<arg1_type, arg2_type,$/;"	c	namespace:sigslot
_connection5	webrtc/base/sigslot.h	/^		_connection5()$/;"	f	class:sigslot::_connection5
_connection5	webrtc/base/sigslot.h	/^		_connection5(dest_type* pobject, void (dest_type::*pmemfun)(arg1_type,$/;"	f	class:sigslot::_connection5
_connection5	webrtc/base/sigslot.h	/^	class _connection5 : public _connection_base5<arg1_type, arg2_type,$/;"	c	namespace:sigslot
_connection6	webrtc/base/sigslot.h	/^		_connection6()$/;"	f	class:sigslot::_connection6
_connection6	webrtc/base/sigslot.h	/^		_connection6(dest_type* pobject, void (dest_type::*pmemfun)(arg1_type,$/;"	f	class:sigslot::_connection6
_connection6	webrtc/base/sigslot.h	/^	class _connection6 : public _connection_base6<arg1_type, arg2_type,$/;"	c	namespace:sigslot
_connection7	webrtc/base/sigslot.h	/^		_connection7()$/;"	f	class:sigslot::_connection7
_connection7	webrtc/base/sigslot.h	/^		_connection7(dest_type* pobject, void (dest_type::*pmemfun)(arg1_type,$/;"	f	class:sigslot::_connection7
_connection7	webrtc/base/sigslot.h	/^	class _connection7 : public _connection_base7<arg1_type, arg2_type,$/;"	c	namespace:sigslot
_connection8	webrtc/base/sigslot.h	/^		_connection8()$/;"	f	class:sigslot::_connection8
_connection8	webrtc/base/sigslot.h	/^		_connection8(dest_type* pobject, void (dest_type::*pmemfun)(arg1_type,$/;"	f	class:sigslot::_connection8
_connection8	webrtc/base/sigslot.h	/^	class _connection8 : public _connection_base8<arg1_type, arg2_type,$/;"	c	namespace:sigslot
_connection_base0	webrtc/base/sigslot.h	/^	class _connection_base0$/;"	c	namespace:sigslot
_connection_base1	webrtc/base/sigslot.h	/^	class _connection_base1$/;"	c	namespace:sigslot
_connection_base2	webrtc/base/sigslot.h	/^	class _connection_base2$/;"	c	namespace:sigslot
_connection_base3	webrtc/base/sigslot.h	/^	class _connection_base3$/;"	c	namespace:sigslot
_connection_base4	webrtc/base/sigslot.h	/^	class _connection_base4$/;"	c	namespace:sigslot
_connection_base5	webrtc/base/sigslot.h	/^	class _connection_base5$/;"	c	namespace:sigslot
_connection_base6	webrtc/base/sigslot.h	/^	class _connection_base6$/;"	c	namespace:sigslot
_connection_base7	webrtc/base/sigslot.h	/^	class _connection_base7$/;"	c	namespace:sigslot
_connection_base8	webrtc/base/sigslot.h	/^	class _connection_base8$/;"	c	namespace:sigslot
_detectorAccumulatorNeg	webrtc/system_wrappers/include/timestamp_extrapolator.h	/^    double              _detectorAccumulatorNeg;$/;"	m	class:webrtc::TimestampExtrapolator
_detectorAccumulatorPos	webrtc/system_wrappers/include/timestamp_extrapolator.h	/^    double              _detectorAccumulatorPos;$/;"	m	class:webrtc::TimestampExtrapolator
_firstAfterReset	webrtc/system_wrappers/include/timestamp_extrapolator.h	/^    bool                  _firstAfterReset;$/;"	m	class:webrtc::TimestampExtrapolator
_firstTimestamp	webrtc/system_wrappers/include/timestamp_extrapolator.h	/^    uint32_t        _firstTimestamp;$/;"	m	class:webrtc::TimestampExtrapolator
_lambda	webrtc/system_wrappers/include/timestamp_extrapolator.h	/^    const double          _lambda;$/;"	m	class:webrtc::TimestampExtrapolator
_mm_add_ps_4x1	webrtc/modules/audio_processing/aec/aec_core_sse2.cc	/^__inline static void _mm_add_ps_4x1(__m128 sum, float* dst) {$/;"	f	namespace:webrtc
_mm_castps_si128	webrtc/modules/audio_processing/utility/ooura_fft_sse2.cc	/^static __inline __m128i _mm_castps_si128(__m128 a) {$/;"	f	namespace:webrtc::__anon241
_mm_castsi128_ps	webrtc/modules/audio_processing/utility/ooura_fft_sse2.cc	/^static __inline __m128 _mm_castsi128_ps(__m128i a) {$/;"	f	namespace:webrtc::__anon241
_pP	webrtc/system_wrappers/include/timestamp_extrapolator.h	/^    double                _pP[2][2];$/;"	m	class:webrtc::TimestampExtrapolator
_pP11	webrtc/system_wrappers/include/timestamp_extrapolator.h	/^    const double        _pP11;$/;"	m	class:webrtc::TimestampExtrapolator
_packetCount	webrtc/system_wrappers/include/timestamp_extrapolator.h	/^    uint32_t        _packetCount;$/;"	m	class:webrtc::TimestampExtrapolator
_prevMs	webrtc/system_wrappers/include/timestamp_extrapolator.h	/^    int64_t         _prevMs;$/;"	m	class:webrtc::TimestampExtrapolator
_prevUnwrappedTimestamp	webrtc/system_wrappers/include/timestamp_extrapolator.h	/^    int64_t         _prevUnwrappedTimestamp;$/;"	m	class:webrtc::TimestampExtrapolator
_prevWrapTimestamp	webrtc/system_wrappers/include/timestamp_extrapolator.h	/^    int64_t         _prevWrapTimestamp;$/;"	m	class:webrtc::TimestampExtrapolator
_rwLock	webrtc/system_wrappers/include/timestamp_extrapolator.h	/^    RWLockWrapper*        _rwLock;$/;"	m	class:webrtc::TimestampExtrapolator
_signal_base	webrtc/base/sigslot.h	/^	class _signal_base : public _signal_base_interface, public mt_policy$/;"	c	namespace:sigslot
_signal_base0	webrtc/base/sigslot.h	/^		_signal_base0()$/;"	f	class:sigslot::_signal_base0
_signal_base0	webrtc/base/sigslot.h	/^		_signal_base0(const _signal_base0& s)$/;"	f	class:sigslot::_signal_base0
_signal_base0	webrtc/base/sigslot.h	/^	class _signal_base0 : public _signal_base<mt_policy>$/;"	c	namespace:sigslot
_signal_base1	webrtc/base/sigslot.h	/^		_signal_base1()$/;"	f	class:sigslot::_signal_base1
_signal_base1	webrtc/base/sigslot.h	/^		_signal_base1(const _signal_base1<arg1_type, mt_policy>& s)$/;"	f	class:sigslot::_signal_base1
_signal_base1	webrtc/base/sigslot.h	/^	class _signal_base1 : public _signal_base<mt_policy>$/;"	c	namespace:sigslot
_signal_base2	webrtc/base/sigslot.h	/^		_signal_base2()$/;"	f	class:sigslot::_signal_base2
_signal_base2	webrtc/base/sigslot.h	/^		_signal_base2(const _signal_base2<arg1_type, arg2_type, mt_policy>& s)$/;"	f	class:sigslot::_signal_base2
_signal_base2	webrtc/base/sigslot.h	/^	class _signal_base2 : public _signal_base<mt_policy>$/;"	c	namespace:sigslot
_signal_base3	webrtc/base/sigslot.h	/^		_signal_base3()$/;"	f	class:sigslot::_signal_base3
_signal_base3	webrtc/base/sigslot.h	/^		_signal_base3(const _signal_base3<arg1_type, arg2_type, arg3_type, mt_policy>& s)$/;"	f	class:sigslot::_signal_base3
_signal_base3	webrtc/base/sigslot.h	/^	class _signal_base3 : public _signal_base<mt_policy>$/;"	c	namespace:sigslot
_signal_base4	webrtc/base/sigslot.h	/^		_signal_base4()$/;"	f	class:sigslot::_signal_base4
_signal_base4	webrtc/base/sigslot.h	/^		_signal_base4(const _signal_base4<arg1_type, arg2_type, arg3_type, arg4_type, mt_policy>& s)$/;"	f	class:sigslot::_signal_base4
_signal_base4	webrtc/base/sigslot.h	/^	class _signal_base4 : public _signal_base<mt_policy>$/;"	c	namespace:sigslot
_signal_base5	webrtc/base/sigslot.h	/^		_signal_base5()$/;"	f	class:sigslot::_signal_base5
_signal_base5	webrtc/base/sigslot.h	/^		_signal_base5(const _signal_base5<arg1_type, arg2_type, arg3_type, arg4_type,$/;"	f	class:sigslot::_signal_base5
_signal_base5	webrtc/base/sigslot.h	/^	class _signal_base5 : public _signal_base<mt_policy>$/;"	c	namespace:sigslot
_signal_base6	webrtc/base/sigslot.h	/^		_signal_base6()$/;"	f	class:sigslot::_signal_base6
_signal_base6	webrtc/base/sigslot.h	/^		_signal_base6(const _signal_base6<arg1_type, arg2_type, arg3_type, arg4_type,$/;"	f	class:sigslot::_signal_base6
_signal_base6	webrtc/base/sigslot.h	/^	class _signal_base6 : public _signal_base<mt_policy>$/;"	c	namespace:sigslot
_signal_base7	webrtc/base/sigslot.h	/^		_signal_base7()$/;"	f	class:sigslot::_signal_base7
_signal_base7	webrtc/base/sigslot.h	/^		_signal_base7(const _signal_base7<arg1_type, arg2_type, arg3_type, arg4_type,$/;"	f	class:sigslot::_signal_base7
_signal_base7	webrtc/base/sigslot.h	/^	class _signal_base7 : public _signal_base<mt_policy>$/;"	c	namespace:sigslot
_signal_base8	webrtc/base/sigslot.h	/^		_signal_base8()$/;"	f	class:sigslot::_signal_base8
_signal_base8	webrtc/base/sigslot.h	/^		_signal_base8(const _signal_base8<arg1_type, arg2_type, arg3_type, arg4_type,$/;"	f	class:sigslot::_signal_base8
_signal_base8	webrtc/base/sigslot.h	/^	class _signal_base8 : public _signal_base<mt_policy>$/;"	c	namespace:sigslot
_signal_base_interface	webrtc/base/sigslot.h	/^	class _signal_base_interface$/;"	c	namespace:sigslot
_startMs	webrtc/system_wrappers/include/timestamp_extrapolator.h	/^    int64_t         _startMs;$/;"	m	class:webrtc::TimestampExtrapolator
_startUpFilterDelayInPackets	webrtc/system_wrappers/include/timestamp_extrapolator.h	/^    const uint32_t  _startUpFilterDelayInPackets;$/;"	m	class:webrtc::TimestampExtrapolator
_stricmp	webrtc/base/stringutils.h	/^inline int _stricmp(const char* s1, const char* s2) {$/;"	f
_strnicmp	webrtc/base/stringutils.h	/^inline int _strnicmp(const char* s1, const char* s2, size_t n) {$/;"	f
_w	webrtc/system_wrappers/include/timestamp_extrapolator.h	/^    double                _w[2];$/;"	m	class:webrtc::TimestampExtrapolator
_wrapArounds	webrtc/system_wrappers/include/timestamp_extrapolator.h	/^    int32_t         _wrapArounds;$/;"	m	class:webrtc::TimestampExtrapolator
a	webrtc/base/callback_unittest.cc	/^  int a() { return 24; }$/;"	f	struct:rtc::__anon8::BindTester
a	webrtc/modules/audio_processing/level_controller/biquad_filter.h	/^    float a[2];$/;"	m	struct:webrtc::BiQuadFilter::BiQuadCoefficients
a	webrtc/modules/audio_processing/level_controller/biquad_filter.h	/^    float a[2];$/;"	m	struct:webrtc::BiQuadFilter::BiQuadState
aNlp	webrtc/modules/audio_processing/aec/aec_core.h	/^  Stats aNlp;$/;"	m	struct:webrtc::AecCore
aNlp	webrtc/modules/audio_processing/aec/echo_cancellation.h	/^  AecLevel aNlp;$/;"	m	struct:webrtc::__anon161
a_	webrtc/base/refcountedobject_unittest.cc	/^  std::unique_ptr<A> a_;$/;"	m	class:rtc::__anon50::RefClassWithMixedValues	file:
a_	webrtc/base/refcountedobject_unittest.cc	/^  std::unique_ptr<A> a_;$/;"	m	class:rtc::__anon50::RefClassWithRvalue	file:
a_coef	webrtc/modules/audio_coding/codecs/isac/main/source/filter_functions.c	/^static const double a_coef[2] = { 1.86864659625574, -0.88360000000000};$/;"	v	file:
a_nlp	webrtc/modules/audio_processing/include/audio_processing.h	/^    AudioProcessing::Statistic a_nlp;$/;"	m	struct:webrtc::EchoCancellation::Metrics
a_nlp	webrtc/modules/audio_processing/include/audio_processing.h	/^    Stat a_nlp;$/;"	m	struct:webrtc::AudioProcessing::AudioProcessingStatistics
abort	webrtc/base/httpbase.cc	/^HttpBase::abort(HttpError err) {$/;"	f	class:rtc::HttpBase
abort_count_	webrtc/base/taskrunner.h	/^  int abort_count_;$/;"	m	class:rtc::TaskRunner
aborted_	webrtc/base/task.h	/^  bool aborted_;$/;"	m	class:rtc::Task
absoluteSendTime	webrtc/common_types.h	/^  uint32_t absoluteSendTime;$/;"	m	struct:webrtc::RTPHeaderExtension
accelerometerSensor	webrtc/modules/audio_processing/test/android/apmtest/jni/main.c	/^    const ASensor* accelerometerSensor;$/;"	m	struct:engine	file:
accepted_	webrtc/base/nat_unittest.cc	/^  std::unique_ptr<AsyncSocket> accepted_;$/;"	m	class:NatTcpTest	file:
access_count_	webrtc/base/race_checker.h	/^  mutable volatile int access_count_ = 0;$/;"	m	class:rtc::RaceChecker
access_fun_and_var	webrtc/base/thread_checker_unittest.cc	/^  void access_fun_and_var() {$/;"	f	class:rtc::ThreadAnnotateTest
access_fun_annotate	webrtc/base/thread_checker_unittest.cc	/^  void access_fun_annotate() {$/;"	f	class:rtc::ThreadAnnotateTest
access_fun_no_annotate	webrtc/base/thread_checker_unittest.cc	/^  void access_fun_no_annotate() {$/;"	f	class:rtc::ThreadAnnotateTest
access_var_annotate_checker	webrtc/base/thread_checker_unittest.cc	/^  void access_var_annotate_checker() {$/;"	f	class:rtc::ThreadAnnotateTest
access_var_annotate_queue	webrtc/base/thread_checker_unittest.cc	/^  void access_var_annotate_queue() {$/;"	f	class:rtc::ThreadAnnotateTest
access_var_annotate_thread	webrtc/base/thread_checker_unittest.cc	/^  void access_var_annotate_thread() {$/;"	f	class:rtc::ThreadAnnotateTest
access_var_no_annotate	webrtc/base/thread_checker_unittest.cc	/^  void access_var_no_annotate() {$/;"	f	class:rtc::ThreadAnnotateTest
accessing_thread_	webrtc/base/race_checker.h	/^  mutable volatile PlatformThreadRef accessing_thread_;$/;"	m	class:rtc::RaceChecker
accessors	webrtc/base/diskcache.h	/^    mutable size_t accessors;$/;"	m	struct:rtc::DiskCache::Entry
accumulated_count_	webrtc/base/rate_statistics.h	/^  size_t accumulated_count_;$/;"	m	class:webrtc::RateStatistics
acquire	webrtc/base/linked_ptr.h	/^    template <class Y> void acquire(const linked_ptr<Y>& r) throw()$/;"	f	class:rtc::linked_ptr
acquire	webrtc/base/linked_ptr.h	/^    void acquire(const linked_ptr& r) throw()$/;"	f	class:rtc::linked_ptr
active	webrtc/base/network.h	/^  bool active() const { return active_; }$/;"	f	class:rtc::Network
activeSpeech	webrtc/modules/audio_processing/agc/legacy/analog_agc.h	/^  int16_t activeSpeech;           \/\/ Milliseconds of active speech$/;"	m	struct:__anon171
active_	webrtc/base/network.h	/^  bool active_ = true;$/;"	m	class:rtc::Network
active_	webrtc/base/socketpool.h	/^  ConnectedList active_;$/;"	m	class:rtc::StreamCache
activity	webrtc/modules/audio_processing/audio_buffer.cc	/^AudioFrame::VADActivity AudioBuffer::activity() const {$/;"	f	class:webrtc::AudioBuffer
activity_	webrtc/modules/audio_processing/audio_buffer.h	/^  AudioFrame::VADActivity activity_;$/;"	m	class:webrtc::AudioBuffer
activity_probability	webrtc/modules/audio_processing/agc/loudness_histogram_unittest.cc	/^  double activity_probability;$/;"	m	struct:webrtc::InputOutput	file:
activity_probability_	webrtc/modules/audio_processing/agc/loudness_histogram.h	/^  std::unique_ptr<int[]> activity_probability_;$/;"	m	class:webrtc::LoudnessHistogram
adaptiveQpMode	webrtc/common_types.h	/^  bool adaptiveQpMode;$/;"	m	struct:webrtc::VideoCodecVP9
adaptive_gain_controller_enabled_	webrtc/modules/audio_processing/audio_processing_impl.h	/^    bool adaptive_gain_controller_enabled_ = false;$/;"	m	class:webrtc::AudioProcessingImpl::ApmSubmoduleStates
addHeader	webrtc/base/httpcommon.h	/^  inline void addHeader(HttpHeader header, const std::string& value,$/;"	f	struct:rtc::HttpData
addHeader	webrtc/base/httpcommon.h	/^  inline void addHeader(const std::string& name, const std::string& value,$/;"	f	struct:rtc::HttpData
addedSamples	webrtc/common_types.h	/^  size_t addedSamples;$/;"	m	struct:webrtc::NetworkStatistics
addr	webrtc/base/testclient.h	/^    SocketAddress addr;$/;"	m	struct:rtc::TestClient::Packet
addr	webrtc/base/virtualsocketserver.cc	/^  SocketAddress addr;$/;"	m	struct:rtc::MessageAddress	file:
addr_	webrtc/base/nethelpers.h	/^  SocketAddress addr_;$/;"	m	class:rtc::AsyncResolver
addr_	webrtc/base/win32socketserver.h	/^  SocketAddress addr_;         \/\/ address that we connected to (see DoConnect)$/;"	m	class:rtc::Win32Socket
address	webrtc/base/asyncresolverinterface.h	/^  SocketAddress address() const {$/;"	f	class:rtc::AsyncResolverInterface
address	webrtc/base/httpcommon.h	/^  string address() const {$/;"	f	class:rtc::Url
address	webrtc/base/proxyinfo.h	/^  SocketAddress address;$/;"	m	struct:rtc::ProxyInfo
address	webrtc/base/testclient.h	/^  SocketAddress address() const { return socket_->GetLocalAddress(); }$/;"	f	class:rtc::TestClient
address	webrtc/base/testechoserver.h	/^  SocketAddress address() const { return server_socket_->GetLocalAddress(); }$/;"	f	class:rtc::TestEchoServer
address	webrtc/base/thread_unittest.cc	/^  SocketAddress address() const { return socket_->GetLocalAddress(); }$/;"	f	class:SocketClient
addresses	webrtc/base/nethelpers.h	/^  const std::vector<IPAddress>& addresses() const { return addresses_; }$/;"	f	class:rtc::AsyncResolver
addresses_	webrtc/base/nethelpers.h	/^  std::vector<IPAddress> addresses_;$/;"	m	class:rtc::AsyncResolver
advapi32_	webrtc/base/helpers.cc	/^  HINSTANCE advapi32_;$/;"	m	class:rtc::SecureRandomGenerator	file:
aec	webrtc/modules/audio_processing/aec/echo_cancellation.h	/^  AecCore* aec;$/;"	m	struct:webrtc::Aec
aec3_enabled	webrtc/modules/audio_processing/aec/aec_core.h	/^  int aec3_enabled;$/;"	m	struct:webrtc::AecCore
aec_core	webrtc/modules/audio_processing/echo_cancellation_impl.cc	/^struct AecCore* EchoCancellationImpl::aec_core() const {$/;"	f	class:webrtc::EchoCancellationImpl
aec_dump_input_filename	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^  rtc::Optional<std::string> aec_dump_input_filename;$/;"	m	struct:webrtc::test::SimulationSettings
aec_dump_output_filename	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^  rtc::Optional<std::string> aec_dump_output_filename;$/;"	m	struct:webrtc::test::SimulationSettings
aec_render_signal_queue_	webrtc/modules/audio_processing/audio_processing_impl.h	/^      aec_render_signal_queue_;$/;"	m	class:webrtc::AudioProcessingImpl
aec_suppression_level	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^  rtc::Optional<int> aec_suppression_level;$/;"	m	struct:webrtc::test::SimulationSettings
aec_system_delay_jumps	webrtc/modules/audio_processing/audio_processing_impl.h	/^    int aec_system_delay_jumps;$/;"	m	struct:webrtc::AudioProcessingImpl::ApmCaptureState
aec_type	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  AecType aec_type = AecType::BasicWebRtcAecSettingsWithDelayAgnosticAec;$/;"	m	struct:webrtc::__anon181::TestConfig	file:
aecmCore	webrtc/modules/audio_processing/aecm/echo_control_mobile.cc	/^    AecmCore* aecmCore;$/;"	m	struct:__anon165	file:
aecm_render_signal_queue_	webrtc/modules/audio_processing/audio_processing_impl.h	/^      aecm_render_signal_queue_;$/;"	m	class:webrtc::AudioProcessingImpl
aecm_routing_mode	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^  rtc::Optional<int> aecm_routing_mode;$/;"	m	struct:webrtc::test::SimulationSettings
afd_	webrtc/base/physicalsocketserver.cc	/^  int afd_[2];$/;"	m	class:rtc::EventDispatcher	file:
afd_	webrtc/base/physicalsocketserver.cc	/^  int afd_[2];$/;"	m	class:rtc::PosixSignalHandler	file:
agcLog	webrtc/modules/audio_processing/agc/legacy/analog_agc.h	/^  FILE* agcLog;$/;"	m	struct:__anon171
agcMode	webrtc/modules/audio_processing/agc/legacy/analog_agc.h	/^  int16_t agcMode;            \/\/ Hard coded mode (adaptAna\/adaptDig\/fixedDig)$/;"	m	struct:__anon171
agcMode	webrtc/modules/audio_processing/agc/legacy/digital_agc.h	/^  int16_t agcMode;$/;"	m	struct:__anon174
agc_	webrtc/modules/audio_processing/agc/agc_manager_direct.h	/^  std::unique_ptr<Agc> agc_;$/;"	m	class:webrtc::final
agc_	webrtc/modules/audio_processing/agc/agc_manager_direct_unittest.cc	/^  MockAgc* agc_;$/;"	m	class:webrtc::AgcManagerDirectTest	file:
agc_compression_gain	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^  rtc::Optional<int> agc_compression_gain;$/;"	m	struct:webrtc::test::SimulationSettings
agc_manager	webrtc/modules/audio_processing/audio_processing_impl.cc	/^  std::unique_ptr<AgcManagerDirect> agc_manager;$/;"	m	struct:webrtc::AudioProcessingImpl::ApmPrivateSubmodules	file:
agc_mode	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^  rtc::Optional<int> agc_mode;$/;"	m	struct:webrtc::test::SimulationSettings
agc_render_signal_queue_	webrtc/modules/audio_processing/audio_processing_impl.h	/^      agc_render_signal_queue_;$/;"	m	class:webrtc::AudioProcessingImpl
agc_startup_min_volume	webrtc/modules/audio_processing/audio_processing_impl.h	/^    int agc_startup_min_volume;$/;"	m	struct:webrtc::AudioProcessingImpl::ApmConstants
agc_target_level	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^  rtc::Optional<int> agc_target_level;$/;"	m	struct:webrtc::test::SimulationSettings
agent	webrtc/base/httpclient.h	/^  const std::string& agent() const { return agent_; }$/;"	f	class:rtc::HttpClient
agent_	webrtc/base/autodetectproxy.h	/^  std::string agent_;$/;"	m	class:rtc::AutoDetectProxy
agent_	webrtc/base/httpclient.h	/^  std::string agent_;$/;"	m	class:rtc::HttpClient
agent_	webrtc/base/socketadapters.h	/^  std::string agent_, user_, headers_;$/;"	m	class:rtc::AsyncHttpsProxySocket
agent_	webrtc/base/sslsocketfactory.h	/^  std::string agent_;$/;"	m	class:rtc::SslSocketFactory
aggrMode	webrtc/modules/audio_processing/ns/ns_core.h	/^  int aggrMode;$/;"	m	struct:NoiseSuppressionC_
aggrMode	webrtc/modules/audio_processing/ns/nsx_core.h	/^  int                     aggrMode;$/;"	m	struct:NoiseSuppressionFixedC_
aggressiveness_	webrtc/common_audio/vad/vad.cc	/^  Aggressiveness aggressiveness_;$/;"	m	class:webrtc::__anon101::final	file:
algorithm	webrtc/base/sslfingerprint.h	/^  std::string algorithm;$/;"	m	struct:rtc::SSLFingerprint
all_files_	webrtc/base/fileutils_mock.h	/^    const std::vector<File> all_files_;$/;"	m	class:rtc::FakeDirectoryIterator
all_files_	webrtc/base/fileutils_mock.h	/^    const std::vector<File> all_files_;$/;"	m	class:rtc::FakeFileSystem
all_values_	webrtc/base/criticalsection_unittest.cc	/^  std::set<int> all_values_;$/;"	m	class:rtc::__anon10::UniqueValueVerifier	file:
all_values_crit_	webrtc/base/criticalsection_unittest.cc	/^  CriticalSection all_values_crit_;$/;"	m	class:rtc::__anon10::AtomicOpRunner	file:
alloca	webrtc/base/stringutils.h	/^#define alloca /;"	d
allow	webrtc/base/firewallsocketserver.h	/^    bool allow;$/;"	m	struct:rtc::FirewallSocketServer::Rule
allowed_offset	webrtc/modules/audio_processing/utility/delay_estimator.h	/^  int allowed_offset;$/;"	m	struct:__anon228
alpha_	webrtc/base/exp_filter.h	/^  float alpha_;  \/\/ Filter factor base.$/;"	m	class:rtc::ExpFilter
alternative_local_addr_	webrtc/base/virtualsocketserver.h	/^  SocketAddress alternative_local_addr_;$/;"	m	class:rtc::VirtualSocket
anaLen	webrtc/modules/audio_processing/ns/ns_core.h	/^  size_t anaLen;$/;"	m	struct:NoiseSuppressionC_
anaLen	webrtc/modules/audio_processing/ns/nsx_core.h	/^  size_t                  anaLen;$/;"	m	struct:NoiseSuppressionFixedC_
anaLen2	webrtc/modules/audio_processing/ns/nsx_core.h	/^  size_t                  anaLen2;$/;"	m	struct:NoiseSuppressionFixedC_
analogTarget	webrtc/modules/audio_processing/agc/legacy/analog_agc.h	/^  int16_t analogTarget;  \/\/ Digital reference level in ENV scale$/;"	m	struct:__anon171
analogTargetLevel	webrtc/modules/audio_processing/agc/legacy/analog_agc.h	/^  int32_t analogTargetLevel;    \/\/ = RXX_BUFFER_LEN * 846805;       -22 dBfs$/;"	m	struct:__anon171
analog_level_maximum	webrtc/modules/audio_processing/gain_control_for_experimental_agc.cc	/^int GainControlForExperimentalAgc::analog_level_maximum() const {$/;"	f	class:webrtc::GainControlForExperimentalAgc
analog_level_maximum	webrtc/modules/audio_processing/gain_control_impl.cc	/^int GainControlImpl::analog_level_maximum() const {$/;"	f	class:webrtc::GainControlImpl
analog_level_minimum	webrtc/modules/audio_processing/gain_control_for_experimental_agc.cc	/^int GainControlForExperimentalAgc::analog_level_minimum() const {$/;"	f	class:webrtc::GainControlForExperimentalAgc
analog_level_minimum	webrtc/modules/audio_processing/gain_control_impl.cc	/^int GainControlImpl::analog_level_minimum() const {$/;"	f	class:webrtc::GainControlImpl
analysisBuffer	webrtc/modules/audio_processing/ns/nsx_core.h	/^  int16_t                 analysisBuffer[ANAL_BLOCKL_MAX];$/;"	m	struct:NoiseSuppressionFixedC_
analysisFBState1	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  int32_t               analysisFBState1[FB_STATE_SIZE_WORD32];$/;"	m	struct:__anon144
analysisFBState2	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  int32_t               analysisFBState2[FB_STATE_SIZE_WORD32];$/;"	m	struct:__anon144
analysis_filters_	webrtc/modules/audio_processing/three_band_filter_bank.h	/^  std::vector<std::unique_ptr<SparseFIRFilter>> analysis_filters_;$/;"	m	class:webrtc::final
analysis_length_	webrtc/modules/audio_processing/transient/transient_suppressor.h	/^  size_t analysis_length_;$/;"	m	class:webrtc::TransientSuppressor
analysis_state1	webrtc/modules/audio_processing/splitting_filter.h	/^  int analysis_state1[kStateSize];$/;"	m	struct:webrtc::TwoBandsStates
analysis_state2	webrtc/modules/audio_processing/splitting_filter.h	/^  int analysis_state2[kStateSize];$/;"	m	struct:webrtc::TwoBandsStates
analyzeBuf	webrtc/modules/audio_processing/ns/ns_core.h	/^  float analyzeBuf[ANAL_BLOCKL_MAX];$/;"	m	struct:NoiseSuppressionC_
android_main	webrtc/modules/audio_processing/test/android/apmtest/jni/main.c	/^void android_main(struct android_app* state) {$/;"	f
angle	webrtc/modules/audio_processing/test/android/apmtest/jni/main.c	/^    float angle;$/;"	m	struct:saved_state	file:
animating	webrtc/modules/audio_processing/test/android/apmtest/jni/main.c	/^    int animating;$/;"	m	struct:engine	file:
ap_	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^  std::unique_ptr<AudioProcessing> ap_;$/;"	m	class:webrtc::test::AudioProcessingSimulator
api_call_durations_	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^  std::vector<int64_t> api_call_durations_;$/;"	m	class:webrtc::__anon182::TimedThreadApiProcessor	file:
api_format	webrtc/modules/audio_processing/audio_processing_impl.h	/^    ProcessingConfig api_format;$/;"	m	struct:webrtc::AudioProcessingImpl::ApmFormatState
apm	WebRTCAudioProcessing_jni.h	/^	webrtc::AudioProcessing* apm;$/;"	m	struct:WebRTCAudioProcessing
apm	webrtc/modules/audio_processing/test/debug_dump_test.cc	/^  AudioProcessing* apm() const { return apm_.get(); }$/;"	f	class:webrtc::test::__anon223::DebugDumpGenerator
apm_	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  AudioProcessing* apm_ = nullptr;$/;"	m	class:webrtc::__anon181::StatsProcessor	file:
apm_	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  AudioProcessing* const apm_ = nullptr;$/;"	m	class:webrtc::__anon181::CaptureProcessor	file:
apm_	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  AudioProcessing* const apm_ = nullptr;$/;"	m	class:webrtc::__anon181::RenderProcessor	file:
apm_	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  std::unique_ptr<AudioProcessing> apm_;$/;"	m	class:webrtc::__anon181::AudioProcessingImplLockTest	file:
apm_	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^  AudioProcessing* apm_ = nullptr;$/;"	m	class:webrtc::__anon182::TimedThreadApiProcessor	file:
apm_	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^  std::unique_ptr<AudioProcessing> apm_;$/;"	m	class:webrtc::__anon182::CallSimulator	file:
apm_	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^  std::unique_ptr<AudioProcessing> apm_;$/;"	m	class:webrtc::__anon183::ApmTest	file:
apm_	webrtc/modules/audio_processing/test/debug_dump_replayer.h	/^  std::unique_ptr<AudioProcessing> apm_;$/;"	m	class:webrtc::test::DebugDumpReplayer
apm_	webrtc/modules/audio_processing/test/debug_dump_test.cc	/^  std::unique_ptr<AudioProcessing> apm_;$/;"	m	class:webrtc::test::__anon223::DebugDumpGenerator	file:
apmtest	webrtc/modules/audio_processing/test/apmtest.m	/^function apmtest(task, testname, filepath, casenumber, legacy)$/;"	f
app	webrtc/modules/audio_processing/test/android/apmtest/jni/main.c	/^    struct android_app* app;$/;"	m	struct:engine	typeref:struct:engine::android_app	file:
app_temp_path_	webrtc/base/unixfilesystem.cc	/^char* UnixFilesystem::app_temp_path_ = NULL;$/;"	m	class:rtc::UnixFilesystem	file:
app_temp_path_	webrtc/base/unixfilesystem.h	/^  static char* app_temp_path_;$/;"	m	class:rtc::UnixFilesystem
application_name_	webrtc/base/fileutils.h	/^  std::string application_name_;$/;"	m	class:rtc::FilesystemInterface
are_metrics_enabled	webrtc/modules/audio_processing/echo_cancellation_impl.cc	/^bool EchoCancellationImpl::are_metrics_enabled() const {$/;"	f	class:webrtc::EchoCancellationImpl
argc	webrtc/base/flags.h	/^  int argc() { return argc_; }$/;"	f	class:rtc::WindowsCommandLineArguments
argc_	webrtc/base/flags.h	/^  int argc_;$/;"	m	class:rtc::WindowsCommandLineArguments
args	webrtc/base/event_tracer.cc	/^    std::vector<TraceArg> args;$/;"	m	struct:rtc::tracing::__anon12::final::TraceEvent	file:
argv	webrtc/base/flags.h	/^  char **argv() { return argv_; }$/;"	f	class:rtc::WindowsCommandLineArguments
argv_	webrtc/base/flags.h	/^  char **argv_;$/;"	m	class:rtc::WindowsCommandLineArguments
arrOfCSRCs	webrtc/common_types.h	/^  uint32_t arrOfCSRCs[kRtpCsrcSize];$/;"	m	struct:webrtc::RTPHeader
arrOfEnergy	webrtc/modules/include/module_common_types.h	/^  uint8_t arrOfEnergy[kRtpCsrcSize];  \/\/ one energy byte (0-9) per channel$/;"	m	struct:webrtc::RTPAudioHeader
array_geometry	webrtc/modules/audio_processing/audio_processing_impl.h	/^    std::vector<Point> array_geometry;$/;"	m	struct:webrtc::AudioProcessingImpl::ApmCaptureState
array_geometry	webrtc/modules/audio_processing/include/audio_processing.h	/^  const std::vector<Point> array_geometry;$/;"	m	struct:webrtc::Beamforming
array_geometry_	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.h	/^  const std::vector<Point> array_geometry_;$/;"	m	class:webrtc::NonlinearBeamformer
array_normal_	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.h	/^  const rtc::Optional<Point> array_normal_;$/;"	m	class:webrtc::NonlinearBeamformer
arraysize	webrtc/base/arraysize.h	/^#define arraysize(/;"	d
arraysize	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer_unittest.cc	/^                  arraysize(kTestNonZeroVarLambdaTop),$/;"	m	namespace:webrtc::__anon203	file:
arraysize	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer_unittest.cc	/^static_assert(arraysize(kTestCenterFreqs) == arraysize(kTestFilterBank),$/;"	m	namespace:webrtc::__anon203	file:
as_bool	webrtc/base/event_tracer.cc	/^      bool as_bool;$/;"	m	union:rtc::tracing::__anon12::final::TraceArg::TraceArgValue	file:
as_bool	webrtc/base/trace_event.h	/^  bool as_bool;$/;"	m	union:webrtc::trace_event_internal::TraceValueUnion
as_double	webrtc/base/event_tracer.cc	/^      double as_double;$/;"	m	union:rtc::tracing::__anon12::final::TraceArg::TraceArgValue	file:
as_double	webrtc/base/trace_event.h	/^  double as_double;$/;"	m	union:webrtc::trace_event_internal::TraceValueUnion
as_int	webrtc/base/event_tracer.cc	/^      long long as_int;$/;"	m	union:rtc::tracing::__anon12::final::TraceArg::TraceArgValue	file:
as_int	webrtc/base/trace_event.h	/^  long long as_int;$/;"	m	union:webrtc::trace_event_internal::TraceValueUnion
as_pointer	webrtc/base/event_tracer.cc	/^      const void* as_pointer;$/;"	m	union:rtc::tracing::__anon12::final::TraceArg::TraceArgValue	file:
as_pointer	webrtc/base/trace_event.h	/^  const void* as_pointer;$/;"	m	union:webrtc::trace_event_internal::TraceValueUnion
as_string	webrtc/base/event_tracer.cc	/^      const char* as_string;$/;"	m	union:rtc::tracing::__anon12::final::TraceArg::TraceArgValue	file:
as_string	webrtc/base/trace_event.h	/^  const char* as_string;$/;"	m	union:webrtc::trace_event_internal::TraceValueUnion
as_uint	webrtc/base/event_tracer.cc	/^      unsigned long long as_uint;$/;"	m	union:rtc::tracing::__anon12::final::TraceArg::TraceArgValue	file:
as_uint	webrtc/base/trace_event.h	/^  unsigned long long as_uint;$/;"	m	union:webrtc::trace_event_internal::TraceValueUnion
asccmp	webrtc/base/stringutils.h	/^inline int asccmp(const char* s1, const char* s2) {$/;"	f	namespace:rtc
asccmp	webrtc/base/stringutils.h	/^inline int asccmp(const wchar_t* s1, const char* s2) {$/;"	f	namespace:rtc
asccpyn	webrtc/base/stringutils.cc	/^size_t asccpyn(wchar_t* buffer, size_t buflen,$/;"	f	namespace:rtc
asccpyn	webrtc/base/stringutils.h	/^inline size_t asccpyn(char* buffer, size_t buflen,$/;"	f	namespace:rtc
ascicmp	webrtc/base/stringutils.h	/^inline int ascicmp(const char* s1, const char* s2) {$/;"	f	namespace:rtc
ascicmp	webrtc/base/stringutils.h	/^inline int ascicmp(const wchar_t* s1, const char* s2) {$/;"	f	namespace:rtc
ascii_string_compare	webrtc/base/stringutils.cc	/^int ascii_string_compare(const wchar_t* s1, const char* s2, size_t n,$/;"	f	namespace:rtc
ascncmp	webrtc/base/stringutils.h	/^inline int ascncmp(const char* s1, const char* s2, size_t n) {$/;"	f	namespace:rtc
ascncmp	webrtc/base/stringutils.h	/^inline int ascncmp(const wchar_t* s1, const char* s2, size_t n) {$/;"	f	namespace:rtc
ascnicmp	webrtc/base/stringutils.h	/^inline int ascnicmp(const char* s1, const char* s2, size_t n) {$/;"	f	namespace:rtc
ascnicmp	webrtc/base/stringutils.h	/^inline int ascnicmp(const wchar_t* s1, const char* s2, size_t n) {$/;"	f	namespace:rtc
assign	webrtc/base/httpcommon.cc	/^  inline bool assign(const std::string& name) { return Parse(val, name); }$/;"	f	struct:rtc::Enum
async_	webrtc/base/virtualsocketserver.h	/^  bool async_;$/;"	m	class:rtc::VirtualSocket
attach	webrtc/base/httpbase.cc	/^HttpBase::attach(StreamInterface* stream) {$/;"	f	class:rtc::HttpBase
attached_	webrtc/base/sequenced_task_checker_impl.h	/^  mutable bool attached_;$/;"	m	class:rtc::SequencedTaskCheckerImpl
attempt_	webrtc/base/httpclient.h	/^  size_t retries_, attempt_, redirects_;$/;"	m	class:rtc::HttpClient
audioLevel	webrtc/common_types.h	/^  uint8_t audioLevel;$/;"	m	struct:webrtc::RTPHeaderExtension
audio_buffer_	webrtc/modules/audio_processing/vad/vad_audio_proc.h	/^  float audio_buffer_[kBufferLength];$/;"	m	class:webrtc::VadAudioProc
audio_content	webrtc/modules/audio_processing/agc/loudness_histogram_unittest.cc	/^  double audio_content;$/;"	m	struct:webrtc::InputOutput	file:
audio_content_q10_	webrtc/modules/audio_processing/agc/loudness_histogram.h	/^  int64_t audio_content_q10_;$/;"	m	class:webrtc::LoudnessHistogram
audio_processing_	webrtc/modules/audio_processing/vad/voice_activity_detector.h	/^  VadAudioProc audio_processing_;$/;"	m	class:webrtc::VoiceActivityDetector
audio_s16_	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer.h	/^  std::vector<int16_t> audio_s16_;$/;"	m	class:webrtc::IntelligibilityEnhancer
auth_method	webrtc/base/httpcommon.h	/^  std::string auth_method;$/;"	m	struct:rtc::HttpAuthContext
auto_detect_proxy_	webrtc/base/autodetectproxy_unittest.cc	/^  AutoDetectProxy *auto_detect_proxy_;$/;"	m	class:rtc::AutoDetectProxyTest	file:
autoconfig_url	webrtc/base/proxyinfo.h	/^  std::string autoconfig_url;$/;"	m	struct:rtc::ProxyInfo
autodetect	webrtc/base/proxyinfo.h	/^  bool autodetect;$/;"	m	struct:rtc::ProxyInfo
autodetect_proxy	webrtc/base/sslsocketfactory.h	/^  bool autodetect_proxy() const { return autodetect_proxy_; }$/;"	f	class:rtc::SslSocketFactory
autodetect_proxy_	webrtc/base/sslsocketfactory.h	/^  bool autodetect_proxy_, force_connect_;$/;"	m	class:rtc::SslSocketFactory
automaticResizeOn	webrtc/common_types.h	/^  bool automaticResizeOn;$/;"	m	struct:webrtc::VideoCodecVP8
automaticResizeOn	webrtc/common_types.h	/^  bool automaticResizeOn;$/;"	m	struct:webrtc::VideoCodecVP9
average	webrtc/modules/audio_processing/aec/aec_core.h	/^  float average;$/;"	m	struct:webrtc::Stats
average	webrtc/modules/audio_processing/aec/echo_cancellation.h	/^  int average;$/;"	m	struct:webrtc::__anon160
average	webrtc/modules/audio_processing/include/audio_processing.h	/^    float average() const { return average_; }$/;"	f	struct:webrtc::AudioProcessing::Stat
average	webrtc/modules/audio_processing/include/audio_processing.h	/^    int average = 0;  \/\/ Long-term average.$/;"	m	struct:webrtc::AudioProcessing::Statistic
average_	webrtc/modules/audio_processing/include/audio_processing.h	/^    float average_ = 0.0f;  \/\/ Long-term average.$/;"	m	struct:webrtc::AudioProcessing::Stat
averagelevel	webrtc/modules/audio_processing/aec/aec_core.h	/^  BlockMeanCalculator averagelevel;$/;"	m	struct:webrtc::PowerLevel
avgMagnPause	webrtc/modules/audio_processing/ns/nsx_core.h	/^  int32_t                 avgMagnPause[HALF_ANAL_BLOCKL];$/;"	m	struct:NoiseSuppressionFixedC_
awaitUninterruptibly	webrtc/base/java/src/org/webrtc/ThreadUtils.java	/^  public static boolean awaitUninterruptibly(CountDownLatch barrier, long timeoutMs) {$/;"	m	class:ThreadUtils
awaitUninterruptibly	webrtc/base/java/src/org/webrtc/ThreadUtils.java	/^  public static void awaitUninterruptibly(final CountDownLatch latch) {$/;"	m	class:ThreadUtils
away_radians_	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.h	/^  const float away_radians_;$/;"	m	class:webrtc::NonlinearBeamformer
azimuth	webrtc/modules/audio_processing/beamformer/array_util.h	/^  T azimuth() const { return s[0]; }$/;"	f	struct:webrtc::SphericalPoint
b	webrtc/base/callback_unittest.cc	/^  int b(int x) const { return x * x; }$/;"	f	struct:rtc::__anon8::BindTester
b	webrtc/base/flags.h	/^  bool b;$/;"	m	union:rtc::FlagValue
b	webrtc/modules/audio_processing/level_controller/biquad_filter.h	/^    float b[2];$/;"	m	struct:webrtc::BiQuadFilter::BiQuadState
b	webrtc/modules/audio_processing/level_controller/biquad_filter.h	/^    float b[3];$/;"	m	struct:webrtc::BiQuadFilter::BiQuadCoefficients
b_	webrtc/base/refcountedobject_unittest.cc	/^  int b_;$/;"	m	class:rtc::__anon50::RefClassWithMixedValues	file:
b_coef	webrtc/modules/audio_coding/codecs/isac/main/source/filter_functions.c	/^static const double b_coef[2] = {-1.99524591718270,  0.99600400000000};$/;"	v	file:
ba_	webrtc/modules/audio_processing/high_pass_filter_impl.cc	/^  const int16_t* const ba_ = nullptr;$/;"	m	class:webrtc::HighPassFilterImpl::BiquadFilter	file:
bands	webrtc/common_audio/channel_buffer.h	/^  T* const* bands(size_t channel) {$/;"	f	class:webrtc::ChannelBuffer
bands	webrtc/common_audio/channel_buffer.h	/^  const T* const* bands(size_t channel) const {$/;"	f	class:webrtc::ChannelBuffer
bands_	webrtc/common_audio/channel_buffer.h	/^  std::unique_ptr<T* []> bands_;$/;"	m	class:webrtc::ChannelBuffer
bandwidth	webrtc/base/virtualsocket_unittest.cc	/^  uint32_t bandwidth;$/;"	m	struct:Receiver	file:
bandwidth	webrtc/base/virtualsocketserver.h	/^  uint32_t bandwidth() const { return bandwidth_; }$/;"	f	class:rtc::VirtualSocketServer
bandwidthKHz	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  enum ISACBandwidth        bandwidthKHz;$/;"	m	struct:__anon144	typeref:enum:__anon144::ISACBandwidth
bandwidth_	webrtc/base/virtualsocketserver.h	/^  uint32_t bandwidth_;$/;"	m	class:rtc::VirtualSocketServer
bank_size_	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer.h	/^  const size_t bank_size_;     \/\/ Num ERB filters.$/;"	m	class:webrtc::IntelligibilityEnhancer
base	webrtc/base/httpbase_unittest.cc	/^  HttpBase base;$/;"	m	class:rtc::HttpBaseTest	file:
base	webrtc/base/sigslot.h	/^			arg5_type, arg6_type, arg7_type, arg8_type, mt_policy> base;$/;"	t	class:sigslot::signal8
base	webrtc/base/sigslot.h	/^			arg5_type, arg6_type, arg7_type, mt_policy> base;$/;"	t	class:sigslot::signal7
base	webrtc/base/sigslot.h	/^		typedef _signal_base0<mt_policy> base;$/;"	t	class:sigslot::signal0
base	webrtc/base/sigslot.h	/^		typedef _signal_base1<arg1_type, mt_policy> base;$/;"	t	class:sigslot::signal1
base	webrtc/base/sigslot.h	/^		typedef _signal_base2<arg1_type, arg2_type, mt_policy> base;$/;"	t	class:sigslot::signal2
base	webrtc/base/sigslot.h	/^		typedef _signal_base3<arg1_type, arg2_type, arg3_type, mt_policy> base;$/;"	t	class:sigslot::signal3
base	webrtc/base/sigslot.h	/^		typedef _signal_base4<arg1_type, arg2_type, arg3_type, arg4_type, mt_policy> base;$/;"	t	class:sigslot::signal4
base	webrtc/base/sigslot.h	/^		typedef _signal_base5<arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, mt_policy> base;$/;"	t	class:sigslot::signal5
base	webrtc/base/sigslot.h	/^		typedef _signal_base6<arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, mt_policy> base;$/;"	t	class:sigslot::signal6
base64_certificate	webrtc/base/sslidentity.h	/^  std::string base64_certificate;$/;"	m	struct:rtc::SSLCertificateStats
base64_tests	webrtc/base/base64_unittest.cc	/^} base64_tests[] = {$/;"	v	typeref:struct:__anon3	file:
base_	webrtc/base/httpbase.cc	/^  HttpBase* base_;$/;"	m	class:rtc::HttpBase::DocumentStream	file:
base_	webrtc/base/httpclient.h	/^  HttpBase base_;$/;"	m	class:rtc::HttpClient
base_	webrtc/base/httpserver.h	/^    HttpBase base_;$/;"	m	class:rtc::HttpServer::Connection
base_type	webrtc/base/sigslotrepeater.h	/^    typedef signal0<mt_policy> base_type;$/;"	t	class:sigslot::repeater0
base_type	webrtc/base/sigslotrepeater.h	/^    typedef signal1<arg1_type, mt_policy> base_type;$/;"	t	class:sigslot::repeater1
base_type	webrtc/base/sigslotrepeater.h	/^    typedef signal2<arg1_type, arg2_type, mt_policy> base_type;$/;"	t	class:sigslot::repeater2
base_type	webrtc/base/sigslotrepeater.h	/^    typedef signal3<arg1_type, arg2_type, arg3_type, mt_policy> base_type;$/;"	t	class:sigslot::repeater3
basename	webrtc/base/pathutils.cc	/^std::string Pathname::basename() const {$/;"	f	class:rtc::Pathname
basename_	webrtc/base/pathutils.h	/^  std::string folder_, basename_, extension_;$/;"	m	class:rtc::Pathname
beamformer	webrtc/modules/audio_processing/audio_processing_impl.cc	/^  std::unique_ptr<NonlinearBeamformer> beamformer;$/;"	m	struct:webrtc::AudioProcessingImpl::ApmPrivateSubmodules	file:
beamformer_enabled	webrtc/modules/audio_processing/audio_processing_impl.h	/^    bool beamformer_enabled;$/;"	m	struct:webrtc::AudioProcessingImpl::ApmCaptureNonLockedState
beamformer_enabled_	webrtc/modules/audio_processing/audio_processing_impl.h	/^    bool beamformer_enabled_ = false;$/;"	m	class:webrtc::AudioProcessingImpl::ApmSubmoduleStates
begin	webrtc/base/array_view.h	/^  T* begin() const { return data_; }$/;"	f	class:rtc::final
begin	webrtc/base/httpcommon.h	/^  inline const_iterator begin() const {$/;"	f	struct:rtc::HttpData
begin	webrtc/base/httpcommon.h	/^  inline const_iterator begin(HttpHeader header) const {$/;"	f	struct:rtc::HttpData
begin	webrtc/base/httpcommon.h	/^  inline const_iterator begin(const std::string& name) const {$/;"	f	struct:rtc::HttpData
begin	webrtc/base/httpcommon.h	/^  inline iterator begin() {$/;"	f	struct:rtc::HttpData
begin	webrtc/base/httpcommon.h	/^  inline iterator begin(HttpHeader header) {$/;"	f	struct:rtc::HttpData
begin	webrtc/base/httpcommon.h	/^  inline iterator begin(const std::string& name) {$/;"	f	struct:rtc::HttpData
beginningOfPartition	webrtc/modules/include/module_common_types.h	/^  bool beginningOfPartition;  \/\/ True if this packet is the first$/;"	m	struct:webrtc::RTPVideoHeaderVP8
beginning_of_frame	webrtc/modules/include/module_common_types.h	/^  bool beginning_of_frame;   \/\/ True if this packet is the first in a VP9 layer$/;"	m	struct:webrtc::RTPVideoHeaderVP9
binSizeLrt	webrtc/modules/audio_processing/ns/ns_core.h	/^  float binSizeLrt;$/;"	m	struct:NSParaExtract_
binSizeSpecDiff	webrtc/modules/audio_processing/ns/ns_core.h	/^  float binSizeSpecDiff;$/;"	m	struct:NSParaExtract_
binSizeSpecFlat	webrtc/modules/audio_processing/ns/ns_core.h	/^  float binSizeSpecFlat;$/;"	m	struct:NSParaExtract_
bin_count_q10_	webrtc/modules/audio_processing/agc/loudness_histogram.h	/^  int64_t bin_count_q10_[kHistSize];$/;"	m	class:webrtc::LoudnessHistogram
binary_	webrtc/modules/audio_processing/utility/delay_estimator_unittest.cc	/^  BinaryDelayEstimator* binary_;$/;"	m	class:__anon232::DelayEstimatorTest	file:
binary_far_history	webrtc/modules/audio_processing/utility/delay_estimator.h	/^  uint32_t* binary_far_history;$/;"	m	struct:__anon227
binary_farend	webrtc/modules/audio_processing/utility/delay_estimator_internal.h	/^  BinaryDelayEstimatorFarend* binary_farend;$/;"	m	struct:__anon230
binary_farend_	webrtc/modules/audio_processing/utility/delay_estimator_unittest.cc	/^  BinaryDelayEstimatorFarend* binary_farend_;$/;"	m	class:__anon232::DelayEstimatorTest	file:
binary_handle	webrtc/modules/audio_processing/utility/delay_estimator_internal.h	/^  BinaryDelayEstimator* binary_handle;$/;"	m	struct:__anon231
binary_mode_	webrtc/base/socketpool.h	/^  bool binary_mode_;$/;"	m	class:rtc::LoggingPoolAdapter
binary_mode_	webrtc/base/sslsocketfactory.h	/^  bool binary_mode_;$/;"	m	class:rtc::SslSocketFactory
binary_near_history	webrtc/modules/audio_processing/utility/delay_estimator.h	/^  uint32_t* binary_near_history;$/;"	m	struct:__anon228
binary_spectrum_	webrtc/modules/audio_processing/utility/delay_estimator_unittest.cc	/^  uint32_t binary_spectrum_[kSequenceLength + kHistorySize];$/;"	m	class:__anon232::DelayEstimatorTest	file:
bindings_	webrtc/base/proxyserver.h	/^  BindingList bindings_;$/;"	m	class:rtc::ProxyServer
bindings_	webrtc/base/virtualsocketserver.h	/^  AddressMap* bindings_;$/;"	m	class:rtc::VirtualSocketServer
biquad_state_	webrtc/modules/audio_processing/level_controller/biquad_filter.h	/^  BiQuadState biquad_state_;$/;"	m	class:webrtc::BiQuadFilter
bitStreamObj	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  Bitstr      bitStreamObj;$/;"	m	struct:__anon135
bit_cast	webrtc/modules/audio_processing/transient/file_utils.h	/^inline Dest bit_cast(const Source& source) {$/;"	f	namespace:webrtc
bit_counts	webrtc/modules/audio_processing/utility/delay_estimator.h	/^  int32_t* bit_counts;$/;"	m	struct:__anon228
bit_offset_	webrtc/base/bitbuffer.h	/^  size_t bit_offset_;$/;"	m	class:rtc::BitBuffer
bitexact_output_	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^  bool bitexact_output_ = true;$/;"	m	class:webrtc::test::AudioProcessingSimulator
bitrate_bps	webrtc/common_types.h	/^  uint32_t bitrate_bps;  \/\/ Bitrate in bits per second.$/;"	m	struct:webrtc::BitrateStatistics
bitrv2	webrtc/common_audio/fft4g.c	/^static void bitrv2(size_t n, size_t *ip, float *a)$/;"	f	file:
bitrv2_128	webrtc/modules/audio_processing/utility/ooura_fft.cc	/^void OouraFft::bitrv2_128(float* a) const {$/;"	f	class:webrtc::OouraFft
bitrv2_128_mips	webrtc/modules/audio_processing/utility/ooura_fft_mips.cc	/^void bitrv2_128_mips(float* a) {$/;"	f	namespace:webrtc
bits	webrtc/base/md5.h	/^  uint32_t bits[2];$/;"	m	struct:rtc::MD5Context
bitstr_obj	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  Bitstr                  bitstr_obj;$/;"	m	struct:__anon137
bitstr_obj	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  Bitstr              bitstr_obj;$/;"	m	struct:__anon136
bitstr_obj	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  Bitstr          bitstr_obj;$/;"	m	struct:__anon138
bitstr_obj	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  Bitstr          bitstr_obj;$/;"	m	struct:__anon139
blk	webrtc/base/sha1.cc	/^#define blk(/;"	d	file:
blk0	webrtc/base/sha1.cc	/^#define blk0(/;"	d	file:
blockInd	webrtc/modules/audio_processing/ns/ns_core.h	/^  int32_t blockInd;  \/\/ Frame index counter.$/;"	m	struct:NoiseSuppressionC_
blockIndex	webrtc/modules/audio_processing/ns/nsx_core.h	/^  int                     blockIndex;  \/\/ Frame index counter.$/;"	m	struct:NoiseSuppressionFixedC_
blockLen	webrtc/modules/audio_processing/ns/ns_core.h	/^  size_t blockLen;$/;"	m	struct:NoiseSuppressionC_
blockLen10ms	webrtc/modules/audio_processing/ns/nsx_core.h	/^  size_t                  blockLen10ms;$/;"	m	struct:NoiseSuppressionFixedC_
block_length_	webrtc/common_audio/lapped_transform.h	/^  const size_t block_length_;$/;"	m	class:webrtc::LappedTransform
block_length_	webrtc/modules/audio_processing/utility/block_mean_calculator.h	/^  const size_t block_length_;$/;"	m	class:webrtc::BlockMeanCalculator
block_num	webrtc/common_audio/lapped_transform_unittest.cc	/^  size_t block_num() {$/;"	f	class:__anon81::FftCheckerCallback
block_num	webrtc/common_audio/lapped_transform_unittest.cc	/^  size_t block_num() {$/;"	f	class:__anon81::NoopCallback
block_num_	webrtc/common_audio/lapped_transform_unittest.cc	/^  size_t block_num_;$/;"	m	class:__anon81::FftCheckerCallback	file:
block_num_	webrtc/common_audio/lapped_transform_unittest.cc	/^  size_t block_num_;$/;"	m	class:__anon81::NoopCallback	file:
block_processor_	webrtc/common_audio/lapped_transform.h	/^  Callback* const block_processor_;$/;"	m	class:webrtc::LappedTransform
block_size_	webrtc/common_audio/blocker.h	/^  const size_t block_size_;$/;"	m	class:webrtc::Blocker
block_size_	webrtc/common_audio/resampler/sinc_resampler.h	/^  size_t block_size_;$/;"	m	class:webrtc::SincResampler
blocked_	webrtc/base/task.h	/^  bool blocked_;$/;"	m	class:rtc::Task
blocker_	webrtc/common_audio/lapped_transform.h	/^  Blocker blocker_;$/;"	m	class:webrtc::LappedTransform
blocker_callback_	webrtc/common_audio/lapped_transform.h	/^  } blocker_callback_;$/;"	m	class:webrtc::LappedTransform	typeref:class:webrtc::LappedTransform::BlockThunk
blocking_calls_allowed_	webrtc/base/thread.h	/^  bool blocking_calls_allowed_;  \/\/ By default set to |true|.$/;"	m	class:rtc::Thread
bool_default	webrtc/base/flags.h	/^  bool bool_default() const {$/;"	f	class:rtc::Flag
bool_variable	webrtc/base/flags.h	/^  bool* bool_variable() const {$/;"	f	class:rtc::Flag
bottleneck	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  double                  bottleneck;$/;"	m	struct:__anon137
bottleneck	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  double              bottleneck;$/;"	m	struct:__anon136
bottleneck	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  int32_t               bottleneck;$/;"	m	struct:__anon144
bottleneck_idx	webrtc/modules/audio_coding/codecs/isac/bandwidth_info.h	/^  int16_t bottleneck_idx;$/;"	m	struct:__anon122
bound_	webrtc/base/virtualsocketserver.h	/^  bool bound_;$/;"	m	class:rtc::VirtualSocket
bucket_count	webrtc/system_wrappers/include/metrics_default.h	/^  const size_t bucket_count;$/;"	m	struct:webrtc::metrics::SampleInfo
bucket_count_	webrtc/base/ratetracker.h	/^  const size_t bucket_count_;$/;"	m	class:rtc::RateTracker
bucket_milliseconds_	webrtc/base/ratetracker.h	/^  const int64_t bucket_milliseconds_;$/;"	m	class:rtc::RateTracker
bucket_start_time_milliseconds_	webrtc/base/ratetracker.h	/^  int64_t bucket_start_time_milliseconds_;$/;"	m	class:rtc::RateTracker
buckets_	webrtc/base/rate_statistics.h	/^  std::unique_ptr<Bucket[]> buckets_;$/;"	m	class:webrtc::RateStatistics
buf	webrtc/base/md5.h	/^  uint32_t buf[4];$/;"	m	struct:rtc::MD5Context
buf	webrtc/base/testclient.h	/^    char*  buf;$/;"	m	struct:rtc::TestClient::Packet
bufFile	webrtc/modules/audio_processing/aecm/echo_control_mobile.cc	/^    FILE *bufFile;$/;"	m	struct:__anon165	file:
bufSizeStart	webrtc/modules/audio_processing/aec/echo_cancellation.h	/^  int bufSizeStart;$/;"	m	struct:webrtc::Aec
bufSizeStart	webrtc/modules/audio_processing/aecm/echo_control_mobile.cc	/^    short bufSizeStart;$/;"	m	struct:__anon165	file:
buf_	webrtc/base/asyncudpsocket.h	/^  char* buf_;$/;"	m	class:rtc::AsyncUDPSocket
buf_	webrtc/base/natsocketfactory.cc	/^  char* buf_;$/;"	m	class:rtc::NATSocket	file:
buf_	webrtc/common_audio/wav_header_unittest.cc	/^  const uint8_t* buf_;$/;"	m	class:webrtc::ReadableWavBuffer	file:
buf_exhausted_	webrtc/common_audio/wav_header_unittest.cc	/^  bool buf_exhausted_;$/;"	m	class:webrtc::ReadableWavBuffer	file:
buffer	webrtc/base/sha1.h	/^  uint8_t buffer[64];$/;"	m	struct:rtc::SHA1_CTX
buffer	webrtc/base/win32socketserver.cc	/^  char buffer[MAXGETHOSTSTRUCT];$/;"	m	struct:rtc::Win32Socket::DnsLookup	file:
buffer	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_filter.c	/^  double buffer[PITCH_INTBUFFSIZE + QLOOKAHEAD];$/;"	m	struct:__anon124	file:
buffer	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  double    buffer[PITCH_WLPCBUFLEN];$/;"	m	struct:__anon129
buffer	webrtc/modules/audio_processing/aec/aec_resampler.cc	/^  float buffer[kResamplerBufferSize];$/;"	m	struct:webrtc::__anon154	file:
buffer_	webrtc/base/copyonwritebuffer.h	/^  scoped_refptr<RefCountedObject<Buffer>> buffer_;$/;"	m	class:rtc::CopyOnWriteBuffer
buffer_	webrtc/base/httpbase.h	/^  char buffer_[kBufferSize];$/;"	m	class:rtc::HttpBase
buffer_	webrtc/base/socketadapters.h	/^  char * buffer_;$/;"	m	class:rtc::BufferedReadAdapter
buffer_	webrtc/base/stream.h	/^  char* buffer_;$/;"	m	class:rtc::MemoryStreamBase
buffer_	webrtc/base/transformadapter.h	/^  char buffer_[BUFFER_SIZE];$/;"	m	class:rtc::TransformAdapter
buffer_	webrtc/modules/audio_processing/aec/aec_core.h	/^  RingBuffer* buffer_;$/;"	m	class:webrtc::BlockBuffer
buffer_	webrtc/modules/audio_processing/echo_detector/circular_buffer.h	/^  std::vector<float> buffer_;$/;"	m	struct:webrtc::CircularBuffer
buffer_	webrtc/modules/audio_processing/intelligibility/intelligibility_utils.h	/^  std::vector<std::vector<float>> buffer_;$/;"	m	class:webrtc::intelligibility::DelayBuffer
buffer_	webrtc/modules/audio_processing/vad/standalone_vad.h	/^  int16_t buffer_[kMaxNum10msFrames * kLength10Ms];$/;"	m	class:webrtc::StandaloneVad
buffer_	webrtc/modules/audio_processing/vad/vad_circular_buffer.h	/^  std::unique_ptr<double[]> buffer_;$/;"	m	class:webrtc::VadCircularBuffer
buffer_alloc_	webrtc/base/stream.h	/^  char* buffer_alloc_;$/;"	m	class:rtc::MemoryStream
buffer_delay_	webrtc/modules/audio_processing/transient/transient_suppressor.h	/^  size_t buffer_delay_;$/;"	m	class:webrtc::TransientSuppressor
buffer_index	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  int                     buffer_index;$/;"	m	struct:__anon137
buffer_index	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  int                 buffer_index;$/;"	m	struct:__anon136
buffer_index_	webrtc/modules/audio_processing/agc/loudness_histogram.h	/^  int buffer_index_;$/;"	m	class:webrtc::LoudnessHistogram
buffer_is_full_	webrtc/modules/audio_processing/agc/loudness_histogram.h	/^  int buffer_is_full_;$/;"	m	class:webrtc::LoudnessHistogram
buffer_length_	webrtc/base/stream.h	/^  size_t buffer_length_;$/;"	m	class:rtc::MemoryStreamBase
buffer_primed_	webrtc/common_audio/resampler/sinc_resampler.h	/^  bool buffer_primed_;$/;"	m	class:webrtc::SincResampler
buffer_reader_	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^  std::unique_ptr<ChannelBufferWavReader> buffer_reader_;$/;"	m	class:webrtc::test::AudioProcessingSimulator
buffer_size_	webrtc/base/socketadapters.h	/^  size_t buffer_size_, data_len_;$/;"	m	class:rtc::BufferedReadAdapter
buffer_size_	webrtc/modules/audio_processing/vad/vad_circular_buffer.h	/^  int buffer_size_;$/;"	m	class:webrtc::VadCircularBuffer
buffer_writer_	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^  std::unique_ptr<ChannelBufferWavWriter> buffer_writer_;$/;"	m	class:webrtc::test::AudioProcessingSimulator
buffering_	webrtc/base/socketadapters.h	/^  bool buffering_;$/;"	m	class:rtc::BufferedReadAdapter
buffers_	webrtc/common_audio/audio_converter.cc	/^  std::vector<std::unique_ptr<ChannelBuffer<float>>> buffers_;$/;"	m	class:webrtc::CompositionConverter	file:
buffers_	webrtc/common_audio/audio_ring_buffer.h	/^  std::vector<RingBuffer*> buffers_;$/;"	m	class:webrtc::final
burstDensity	webrtc/modules/include/module_common_types.h	/^  uint8_t burstDensity;$/;"	m	struct:webrtc::RTCPVoIPMetric
burstDuration	webrtc/modules/include/module_common_types.h	/^  uint16_t burstDuration;$/;"	m	struct:webrtc::RTCPVoIPMetric
busy_	webrtc/base/task.h	/^  bool busy_;$/;"	m	class:rtc::Task
bwestimator_obj	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  BwEstimatorstr            bwestimator_obj;$/;"	m	struct:__anon144
bypass_list	webrtc/base/proxyinfo.h	/^  std::string bypass_list;$/;"	m	struct:rtc::ProxyInfo
byte_count_	webrtc/base/bitbuffer.h	/^  size_t byte_count_;$/;"	m	class:rtc::BitBuffer
byte_offset_	webrtc/base/bitbuffer.h	/^  size_t byte_offset_;$/;"	m	class:rtc::BitBuffer
byte_order_	webrtc/base/bytebuffer.h	/^  ByteOrder byte_order_;$/;"	m	class:rtc::ByteBuffer
bytes_	webrtc/base/bitbuffer.h	/^  const uint8_t* const bytes_;$/;"	m	class:rtc::BitBuffer
bytes_	webrtc/base/bytebuffer.h	/^  char* bytes_;$/;"	m	class:rtc::ByteBufferWriter
bytes_	webrtc/base/bytebuffer.h	/^  const char* bytes_;$/;"	m	class:rtc::ByteBufferReader
c	webrtc/modules/audio_processing/beamformer/array_util.h	/^  T c[3];$/;"	m	struct:webrtc::CartesianPoint
c_	webrtc/base/refcountedobject_unittest.cc	/^  std::string c_;$/;"	m	class:rtc::__anon50::RefClassWithMixedValues	file:
cache_	webrtc/base/diskcache.cc	/^  const DiskCache* cache_;$/;"	m	class:rtc::DiskCacheAdapter	file:
cache_	webrtc/base/diskcache.h	/^  DiskCache* cache_;$/;"	m	class:rtc::CacheLock
cache_	webrtc/base/httpclient.h	/^  DiskCache* cache_;$/;"	m	class:rtc::HttpClient
cache_enabled	webrtc/base/httpclient.h	/^  bool cache_enabled() const { return (NULL != cache_); }$/;"	f	class:rtc::HttpClient
cache_line_barrier_1_	webrtc/base/criticalsection_unittest.cc	/^  uint8_t cache_line_barrier_1_[64];$/;"	m	class:rtc::PerfTestData	file:
cache_line_barrier_2_	webrtc/base/criticalsection_unittest.cc	/^  uint8_t cache_line_barrier_2_[64];$/;"	m	class:rtc::PerfTestData	file:
cache_state_	webrtc/base/httpclient.h	/^  CacheState cache_state_;$/;"	m	class:rtc::HttpClient
cached_	webrtc/base/socketpool.h	/^  ConnectedList cached_;$/;"	m	class:rtc::StreamCache
calculate_frames	webrtc/modules/audio_processing/include/audio_processing.h	/^  static size_t calculate_frames(int sample_rate_hz) {$/;"	f	class:webrtc::StreamConfig
call_	webrtc/base/function_view.h	/^  RetT (*call_)(VoidUnion, ArgT...);$/;"	m	class:rtc::final
call_chain_	webrtc/modules/audio_processing/test/wav_based_simulator.h	/^  std::vector<SimulationEventType> call_chain_;$/;"	m	class:webrtc::test::final
call_count	webrtc/base/bind_unittest.cc	/^  mutable int call_count;$/;"	m	struct:rtc::__anon4::MethodBindTester	file:
callback_	webrtc/base/asyncinvoker-inl.h	/^  Callback0<void> callback_;$/;"	m	class:rtc::NotifyingAsyncClosureBase
callback_	webrtc/base/asyncinvoker-inl.h	/^  void (HostT::*callback_)(ReturnT);$/;"	m	class:rtc::NotifyingAsyncClosure
callback_	webrtc/base/rtccertificategenerator.cc	/^  const scoped_refptr<RTCCertificateGeneratorCallback> callback_;$/;"	m	class:rtc::__anon53::RTCCertificateGenerationTask	file:
callback_	webrtc/common_audio/blocker.h	/^  BlockerCallback* callback_;$/;"	m	class:webrtc::Blocker
callback_called_	webrtc/base/network_unittest.cc	/^  bool callback_called_;$/;"	m	class:rtc::NetworkTest	file:
callback_count	webrtc/base/sigslottester.h	/^  int callback_count() const { return callback_count_; }$/;"	f	class:rtc::SigslotTester0
callback_count	webrtc/base/sigslottester.h	/^  int callback_count() const { return callback_count_; }$/;"	f	class:rtc::SigslotTester1
callback_count	webrtc/base/sigslottester.h	/^  int callback_count() const { return callback_count_; }$/;"	f	class:rtc::SigslotTester2
callback_count	webrtc/base/sigslottester.h	/^  int callback_count() const { return callback_count_; }$/;"	f	class:rtc::SigslotTester3
callback_count	webrtc/base/sigslottester.h	/^  int callback_count() const { return callback_count_; }$/;"	f	class:rtc::SigslotTester4
callback_count	webrtc/base/sigslottester.h	/^  int callback_count() const { return callback_count_; }$/;"	f	class:rtc::SigslotTester5
callback_count_	webrtc/base/sigslottester.h	/^  int callback_count_;$/;"	m	class:rtc::SigslotTester0
callback_count_	webrtc/base/sigslottester.h	/^  int callback_count_;$/;"	m	class:rtc::SigslotTester1
callback_count_	webrtc/base/sigslottester.h	/^  int callback_count_;$/;"	m	class:rtc::SigslotTester2
callback_count_	webrtc/base/sigslottester.h	/^  int callback_count_;$/;"	m	class:rtc::SigslotTester3
callback_count_	webrtc/base/sigslottester.h	/^  int callback_count_;$/;"	m	class:rtc::SigslotTester4
callback_count_	webrtc/base/sigslottester.h	/^  int callback_count_;$/;"	m	class:rtc::SigslotTester5
callback_host_	webrtc/base/asyncinvoker-inl.h	/^  HostT* callback_host_;$/;"	m	class:rtc::NotifyingAsyncClosure
callback_posted_from_	webrtc/base/asyncinvoker-inl.h	/^  Location callback_posted_from_;$/;"	m	class:rtc::NotifyingAsyncClosureBase
called_release_	webrtc/base/signalthread_unittest.cc	/^  bool called_release_;$/;"	m	class:SignalThreadTest	file:
caller_thread_	webrtc/base/dbus.h	/^  Thread *caller_thread_;$/;"	m	class:rtc::DBusSigFilter
calling_thread_	webrtc/base/asyncinvoker-inl.h	/^  Thread* calling_thread_;$/;"	m	class:rtc::NotifyingAsyncClosureBase
calls_to_neteq	webrtc/common_types.h	/^  int calls_to_neteq;              \/\/ Number of calls to NetEq.$/;"	m	struct:webrtc::AudioDecodingCallStats
calls_to_silence_generator	webrtc/common_types.h	/^  int calls_to_silence_generator;  \/\/ Number of calls where silence generated,$/;"	m	struct:webrtc::AudioDecodingCallStats
cancellers_	webrtc/modules/audio_processing/echo_cancellation_impl.h	/^  std::vector<std::unique_ptr<Canceller>> cancellers_;$/;"	m	class:webrtc::EchoCancellationImpl
cancellers_	webrtc/modules/audio_processing/echo_control_mobile_impl.h	/^  std::vector<std::unique_ptr<Canceller>> cancellers_;$/;"	m	class:webrtc::EchoControlMobileImpl
candidate_hits	webrtc/modules/audio_processing/utility/delay_estimator.h	/^  int candidate_hits;$/;"	m	struct:__anon228
capacitorFast	webrtc/modules/audio_processing/agc/legacy/digital_agc.h	/^  int32_t capacitorFast;$/;"	m	struct:__anon174
capacitorSlow	webrtc/modules/audio_processing/agc/legacy/digital_agc.h	/^  int32_t capacitorSlow;$/;"	m	struct:__anon174
capacity	webrtc/base/buffer.h	/^  size_t capacity() const {$/;"	f	class:rtc::BufferT
capacity	webrtc/base/copyonwritebuffer.h	/^  size_t capacity() const {$/;"	f	class:rtc::CopyOnWriteBuffer
capacity_	webrtc/base/buffer.h	/^  size_t capacity_;$/;"	m	class:rtc::BufferT
capacity_	webrtc/base/bufferqueue.h	/^  size_t capacity_;$/;"	m	class:rtc::BufferQueue
capacity_	webrtc/base/cryptstring.h	/^  size_t capacity_;$/;"	m	class:rtc::FormatCryptString
capture	webrtc/modules/audio_processing/audio_processing_impl.h	/^    ApmDebugDumpThreadState capture;$/;"	m	struct:webrtc::AudioProcessingImpl::ApmDebugDumpState
capture1_	webrtc/base/sigslottester.h	/^  C1* capture1_;$/;"	m	class:rtc::SigslotTester1
capture1_	webrtc/base/sigslottester.h	/^  C1* capture1_;$/;"	m	class:rtc::SigslotTester2
capture1_	webrtc/base/sigslottester.h	/^  C1* capture1_;$/;"	m	class:rtc::SigslotTester3
capture1_	webrtc/base/sigslottester.h	/^  C1* capture1_;$/;"	m	class:rtc::SigslotTester4
capture1_	webrtc/base/sigslottester.h	/^  C1* capture1_;$/;"	m	class:rtc::SigslotTester5
capture2_	webrtc/base/sigslottester.h	/^  C2* capture2_;$/;"	m	class:rtc::SigslotTester2
capture2_	webrtc/base/sigslottester.h	/^  C2* capture2_;$/;"	m	class:rtc::SigslotTester3
capture2_	webrtc/base/sigslottester.h	/^  C2* capture2_;$/;"	m	class:rtc::SigslotTester4
capture2_	webrtc/base/sigslottester.h	/^  C2* capture2_;$/;"	m	class:rtc::SigslotTester5
capture3_	webrtc/base/sigslottester.h	/^  C3* capture3_;$/;"	m	class:rtc::SigslotTester3
capture3_	webrtc/base/sigslottester.h	/^  C3* capture3_;$/;"	m	class:rtc::SigslotTester4
capture3_	webrtc/base/sigslottester.h	/^  C3* capture3_;$/;"	m	class:rtc::SigslotTester5
capture4_	webrtc/base/sigslottester.h	/^  C4* capture4_;$/;"	m	class:rtc::SigslotTester4
capture4_	webrtc/base/sigslottester.h	/^  C4* capture4_;$/;"	m	class:rtc::SigslotTester5
capture5_	webrtc/base/sigslottester.h	/^  C5* capture5_;$/;"	m	class:rtc::SigslotTester5
capture_api_function	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  CaptureApiImpl capture_api_function = CaptureApiImpl::ProcessStreamImpl2;$/;"	m	struct:webrtc::__anon181::TestConfig	file:
capture_audio	webrtc/modules/audio_processing/audio_processing_impl.h	/^    std::unique_ptr<AudioBuffer> capture_audio;$/;"	m	struct:webrtc::AudioProcessingImpl::ApmCaptureState
capture_call_checker_	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^  LockedFlag capture_call_checker_;$/;"	m	class:webrtc::__anon182::CallSimulator	file:
capture_call_checker_	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^  LockedFlag* capture_call_checker_ = nullptr;$/;"	m	class:webrtc::__anon182::TimedThreadApiProcessor	file:
capture_call_event_	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  rtc::Event capture_call_event_;$/;"	m	class:webrtc::__anon181::AudioProcessingImplLockTest	file:
capture_call_event_	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  rtc::Event* const capture_call_event_ = nullptr;$/;"	m	class:webrtc::__anon181::CaptureProcessor::rtc	file:
capture_call_event_	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  rtc::Event* const capture_call_event_ = nullptr;$/;"	m	class:webrtc::__anon181::RenderProcessor::rtc	file:
capture_count_	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^  int capture_count_ = 0;$/;"	m	class:webrtc::__anon182::FrameCounters	file:
capture_filter_bank_	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer.h	/^  std::vector<std::vector<float>> capture_filter_bank_;$/;"	m	class:webrtc::IntelligibilityEnhancer
capture_input	webrtc/modules/audio_processing/level_controller/level_controller_complexity_unittest.cc	/^  std::vector<float*> capture_input;$/;"	m	struct:webrtc::__anon209::SimulatorBuffers	file:
capture_input_buffer	webrtc/modules/audio_processing/level_controller/level_controller_complexity_unittest.cc	/^  std::unique_ptr<AudioBuffer> capture_input_buffer;$/;"	m	struct:webrtc::__anon209::SimulatorBuffers	file:
capture_input_config	webrtc/modules/audio_processing/level_controller/level_controller_complexity_unittest.cc	/^  StreamConfig capture_input_config;$/;"	m	struct:webrtc::__anon209::SimulatorBuffers	file:
capture_input_samples	webrtc/modules/audio_processing/level_controller/level_controller_complexity_unittest.cc	/^  std::vector<float> capture_input_samples;$/;"	m	struct:webrtc::__anon209::SimulatorBuffers	file:
capture_level_	webrtc/modules/audio_processing/gain_control_impl.cc	/^  rtc::Optional<int> capture_level_;$/;"	m	class:webrtc::GainControlImpl::GainController	file:
capture_muted	webrtc/modules/audio_processing/agc/agc_manager_direct.h	/^  bool capture_muted() { return capture_muted_; }$/;"	f	class:webrtc::final
capture_muted_	webrtc/modules/audio_processing/agc/agc_manager_direct.h	/^  bool capture_muted_;$/;"	m	class:webrtc::final
capture_nonlocked_	webrtc/modules/audio_processing/audio_processing_impl.h	/^  } capture_nonlocked_;$/;"	m	class:webrtc::AudioProcessingImpl	typeref:struct:webrtc::AudioProcessingImpl::ApmCaptureNonLockedState
capture_output	webrtc/modules/audio_processing/level_controller/level_controller_complexity_unittest.cc	/^  std::vector<float*> capture_output;$/;"	m	struct:webrtc::__anon209::SimulatorBuffers	file:
capture_output_buffer	webrtc/modules/audio_processing/level_controller/level_controller_complexity_unittest.cc	/^  std::unique_ptr<AudioBuffer> capture_output_buffer;$/;"	m	struct:webrtc::__anon209::SimulatorBuffers	file:
capture_output_config	webrtc/modules/audio_processing/level_controller/level_controller_complexity_unittest.cc	/^  StreamConfig capture_output_config;$/;"	m	struct:webrtc::__anon209::SimulatorBuffers	file:
capture_output_samples	webrtc/modules/audio_processing/level_controller/level_controller_complexity_unittest.cc	/^  std::vector<float> capture_output_samples;$/;"	m	struct:webrtc::__anon209::SimulatorBuffers	file:
capture_processing_format	webrtc/modules/audio_processing/audio_processing_impl.h	/^    StreamConfig capture_processing_format;$/;"	m	struct:webrtc::AudioProcessingImpl::ApmCaptureNonLockedState
capture_processing_format	webrtc/modules/audio_processing/audio_processing_impl.h	/^    StreamConfig capture_processing_format;$/;"	m	struct:webrtc::AudioProcessingImpl::ApmCaptureState
capture_statistics_	webrtc/modules/audio_processing/residual_echo_detector.h	/^  MeanVarianceEstimator capture_statistics_;$/;"	m	class:webrtc::ResidualEchoDetector
capture_thread_	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  rtc::PlatformThread capture_thread_;$/;"	m	class:webrtc::__anon181::AudioProcessingImplLockTest	file:
capture_thread_	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^  std::unique_ptr<rtc::PlatformThread> capture_thread_;$/;"	m	class:webrtc::__anon182::CallSimulator	file:
capture_thread_state_	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  CaptureProcessor capture_thread_state_;$/;"	m	class:webrtc::__anon181::AudioProcessingImplLockTest	file:
capture_thread_state_	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^  std::unique_ptr<TimedThreadApiProcessor> capture_thread_state_;$/;"	m	class:webrtc::__anon182::CallSimulator	file:
category_enabled	webrtc/base/event_tracer.cc	/^    const unsigned char* category_enabled;$/;"	m	struct:rtc::tracing::__anon12::final::TraceEvent	file:
category_enabled	webrtc/base/trace_event.h	/^    const unsigned char* category_enabled;$/;"	m	struct:webrtc::trace_event_internal::TraceEndOnScopeClose::Data
cbegin	webrtc/base/array_view.h	/^  const T* cbegin() const { return data_; }$/;"	f	class:rtc::final
cdata	webrtc/base/copyonwritebuffer.h	/^  const T* cdata() const {$/;"	f	class:rtc::CopyOnWriteBuffer
cend	webrtc/base/array_view.h	/^  const T* cend() const { return data_ + size_; }$/;"	f	class:rtc::final
center_freqs_	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer.h	/^  std::vector<float> center_freqs_;$/;"	m	class:webrtc::IntelligibilityEnhancer
cert_	webrtc/base/fakesslidentity.h	/^  FakeSSLCertificate cert_;$/;"	m	class:rtc::FakeSSLIdentity
certificate	webrtc/base/fakesslidentity.h	/^  virtual const FakeSSLCertificate& certificate() const { return cert_; }$/;"	f	class:rtc::FakeSSLIdentity
certificate	webrtc/base/opensslidentity.cc	/^const OpenSSLCertificate& OpenSSLIdentity::certificate() const {$/;"	f	class:rtc::OpenSSLIdentity
certificate	webrtc/base/rtccertificate.h	/^  const std::string& certificate() const { return certificate_; }$/;"	f	class:rtc::RTCCertificatePEM
certificate	webrtc/base/rtccertificategenerator_unittest.cc	/^  RTCCertificate* certificate() const { return certificate_.get(); }$/;"	f	class:rtc::RTCCertificateGeneratorFixture
certificate_	webrtc/base/opensslidentity.h	/^  std::unique_ptr<OpenSSLCertificate> certificate_;$/;"	m	class:rtc::OpenSSLIdentity
certificate_	webrtc/base/rtccertificate.h	/^  std::string certificate_;$/;"	m	class:rtc::RTCCertificatePEM
certificate_	webrtc/base/rtccertificategenerator.cc	/^  scoped_refptr<RTCCertificate> certificate_;$/;"	m	class:rtc::__anon53::RTCCertificateGenerationTask	file:
certificate_	webrtc/base/rtccertificategenerator_unittest.cc	/^  scoped_refptr<RTCCertificate> certificate_;$/;"	m	class:rtc::RTCCertificateGeneratorFixture	file:
certs_	webrtc/base/fakesslidentity.h	/^  std::vector<FakeSSLCertificate> certs_;$/;"	m	class:rtc::FakeSSLCertificate
certs_	webrtc/base/sslidentity.h	/^  std::vector<SSLCertificate*> certs_;$/;"	m	class:rtc::SSLCertChain
cft1st	webrtc/common_audio/fft4g.c	/^static void cft1st(size_t n, float *a, float *w)$/;"	f	file:
cft1st_128	webrtc/modules/audio_processing/utility/ooura_fft.cc	/^void OouraFft::cft1st_128(float* a) const {$/;"	f	class:webrtc::OouraFft
cft1st_128_C	webrtc/modules/audio_processing/utility/ooura_fft.cc	/^static void cft1st_128_C(float* a) {$/;"	f	namespace:webrtc::__anon240
cft1st_128_SSE2	webrtc/modules/audio_processing/utility/ooura_fft_sse2.cc	/^void cft1st_128_SSE2(float* a) {$/;"	f	namespace:webrtc
cft1st_128_mips	webrtc/modules/audio_processing/utility/ooura_fft_mips.cc	/^void cft1st_128_mips(float* a) {$/;"	f	namespace:webrtc
cft1st_128_neon	webrtc/modules/audio_processing/utility/ooura_fft_neon.cc	/^void cft1st_128_neon(float* a) {$/;"	f	namespace:webrtc
cftbsub	webrtc/common_audio/fft4g.c	/^static void cftbsub(size_t n, float *a, float *w)$/;"	f	file:
cftbsub_128	webrtc/modules/audio_processing/utility/ooura_fft.cc	/^void OouraFft::cftbsub_128(float* a) const {$/;"	f	class:webrtc::OouraFft
cftbsub_128_mips	webrtc/modules/audio_processing/utility/ooura_fft_mips.cc	/^void cftbsub_128_mips(float* a) {$/;"	f	namespace:webrtc
cftfsub	webrtc/common_audio/fft4g.c	/^static void cftfsub(size_t n, float *a, float *w)$/;"	f	file:
cftfsub_128	webrtc/modules/audio_processing/utility/ooura_fft.cc	/^void OouraFft::cftfsub_128(float* a) const {$/;"	f	class:webrtc::OouraFft
cftfsub_128_mips	webrtc/modules/audio_processing/utility/ooura_fft_mips.cc	/^void cftfsub_128_mips(float* a) {$/;"	f	namespace:webrtc
cftmdl	webrtc/common_audio/fft4g.c	/^static void cftmdl(size_t n, size_t l, float *a, float *w)$/;"	f	file:
cftmdl_128	webrtc/modules/audio_processing/utility/ooura_fft.cc	/^void OouraFft::cftmdl_128(float* a) const {$/;"	f	class:webrtc::OouraFft
cftmdl_128_C	webrtc/modules/audio_processing/utility/ooura_fft.cc	/^static void cftmdl_128_C(float* a) {$/;"	f	namespace:webrtc::__anon240
cftmdl_128_SSE2	webrtc/modules/audio_processing/utility/ooura_fft_sse2.cc	/^void cftmdl_128_SSE2(float* a) {$/;"	f	namespace:webrtc
cftmdl_128_mips	webrtc/modules/audio_processing/utility/ooura_fft_mips.cc	/^void cftmdl_128_mips(float* a) {$/;"	f	namespace:webrtc
cftmdl_128_neon	webrtc/modules/audio_processing/utility/ooura_fft_neon.cc	/^void cftmdl_128_neon(float* a) {$/;"	f	namespace:webrtc
cftmdl_wk1r	webrtc/modules/audio_processing/utility/ooura_fft_tables_neon_sse2.h	/^ALIGN16_BEG const float ALIGN16_END cftmdl_wk1r[4] = {$/;"	m	namespace:webrtc
changeHeader	webrtc/base/httpcommon.cc	/^HttpData::changeHeader(const std::string& name, const std::string& value,$/;"	f	class:rtc::HttpData
changeHeader	webrtc/base/httpcommon.h	/^  inline void changeHeader(HttpHeader header, const std::string& value,$/;"	f	struct:rtc::HttpData
changeToSlowMode	webrtc/modules/audio_processing/agc/legacy/analog_agc.h	/^  int16_t changeToSlowMode;  \/\/ Change to slow mode after some time at target$/;"	m	struct:__anon171
change_to_WB	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  int change_to_WB;$/;"	m	struct:__anon131
channel	webrtc/modules/include/module_common_types.h	/^  size_t channel;                     \/\/ number of channels 2 = stereo$/;"	m	struct:webrtc::RTPAudioHeader
channelAdapt16	webrtc/modules/audio_processing/aecm/aecm_core.h	/^    int16_t *channelAdapt16;$/;"	m	struct:__anon164
channelAdapt16_buf	webrtc/modules/audio_processing/aecm/aecm_core.h	/^    int16_t channelAdapt16_buf[PART_LEN1 + 8];$/;"	m	struct:__anon164
channelAdapt32	webrtc/modules/audio_processing/aecm/aecm_core.h	/^    int32_t *channelAdapt32;$/;"	m	struct:__anon164
channelAdapt32_buf	webrtc/modules/audio_processing/aecm/aecm_core.h	/^    int32_t channelAdapt32_buf[PART_LEN1 + 8];$/;"	m	struct:__anon164
channelStored	webrtc/modules/audio_processing/aecm/aecm_core.h	/^    int16_t *channelStored;$/;"	m	struct:__anon164
channelStored_buf	webrtc/modules/audio_processing/aecm/aecm_core.h	/^    int16_t channelStored_buf[PART_LEN1 + 8];$/;"	m	struct:__anon164
channels	webrtc/common_audio/channel_buffer.h	/^  T* const* channels() { return channels(0); }$/;"	f	class:webrtc::ChannelBuffer
channels	webrtc/common_audio/channel_buffer.h	/^  T* const* channels(size_t band) {$/;"	f	class:webrtc::ChannelBuffer
channels	webrtc/common_audio/channel_buffer.h	/^  const T* const* channels() const { return channels(0); }$/;"	f	class:webrtc::ChannelBuffer
channels	webrtc/common_audio/channel_buffer.h	/^  const T* const* channels(size_t band) const {$/;"	f	class:webrtc::ChannelBuffer
channels	webrtc/common_types.h	/^  size_t channels;$/;"	m	struct:webrtc::CodecInst
channels	webrtc/modules/audio_processing/audio_buffer.cc	/^int16_t* const* AudioBuffer::channels() {$/;"	f	class:webrtc::AudioBuffer
channels_	webrtc/common_audio/channel_buffer.h	/^  std::unique_ptr<T* []> channels_;$/;"	m	class:webrtc::ChannelBuffer
channels_const	webrtc/modules/audio_processing/audio_buffer.cc	/^const int16_t* const* AudioBuffer::channels_const() const {$/;"	f	class:webrtc::AudioBuffer
channels_const_f	webrtc/modules/audio_processing/audio_buffer.cc	/^const float* const* AudioBuffer::channels_const_f() const {$/;"	f	class:webrtc::AudioBuffer
channels_f	webrtc/modules/audio_processing/audio_buffer.cc	/^float* const* AudioBuffer::channels_f() {$/;"	f	class:webrtc::AudioBuffer
checkBufSizeCtr	webrtc/modules/audio_processing/aec/echo_cancellation.h	/^  short checkBufSizeCtr;$/;"	m	struct:webrtc::Aec
checkBufSizeCtr	webrtc/modules/audio_processing/aecm/echo_control_mobile.cc	/^    short checkBufSizeCtr;$/;"	m	struct:__anon165	file:
checkBuffSize	webrtc/modules/audio_processing/aec/echo_cancellation.h	/^  int checkBuffSize;$/;"	m	struct:webrtc::Aec
checkBuffSize	webrtc/modules/audio_processing/aecm/echo_control_mobile.cc	/^    int checkBuffSize;$/;"	m	struct:__anon165	file:
checkIsOnMainThread	webrtc/base/java/src/org/webrtc/ThreadUtils.java	/^  public static void checkIsOnMainThread() {$/;"	m	class:ThreadUtils
checkIsOnValidThread	webrtc/base/java/src/org/webrtc/ThreadUtils.java	/^    public void checkIsOnValidThread() {$/;"	m	class:ThreadUtils.ThreadChecker
check_passed	webrtc/base/task_unittest.cc	/^  void check_passed() {$/;"	f	class:rtc::TaskTest
check_read_size_	webrtc/common_audio/wav_header_unittest.cc	/^  const bool check_read_size_;$/;"	m	class:webrtc::ReadableWavBuffer	file:
check_volume_on_next_process_	webrtc/modules/audio_processing/agc/agc_manager_direct.h	/^  bool check_volume_on_next_process_;$/;"	m	class:webrtc::final
checked_cast	webrtc/base/safe_conversions.h	/^inline Dst checked_cast(Src value) {$/;"	f	namespace:rtc
checked_out_	webrtc/base/socketpool.h	/^  bool checked_out_;  \/\/ Whether the stream is currently checked out$/;"	m	class:rtc::ReuseSocketPool
checker_	webrtc/base/sequenced_task_checker_unittest.cc	/^  SequencedTaskChecker checker_;$/;"	m	class:rtc::TestAnnotations	file:
checker_	webrtc/base/sequenced_task_checker_unittest.cc	/^  bool test_var_ GUARDED_BY(&checker_);$/;"	m	class:rtc::TestAnnotations	file:
checker_	webrtc/base/thread_checker_unittest.cc	/^  rtc::ThreadChecker checker_;$/;"	m	class:rtc::ThreadAnnotateTest	file:
checker_	webrtc/base/weak_ptr.h	/^    SequencedTaskChecker checker_;$/;"	m	class:rtc::internal::WeakReference::Flag
checker_	webrtc/base/weak_ptr.h	/^  SequencedTaskChecker checker_;$/;"	m	class:rtc::internal::WeakReferenceOwner
child_error_	webrtc/base/taskparent.h	/^  bool child_error_;$/;"	m	class:rtc::TaskParent
children_	webrtc/base/taskparent.h	/^  std::unique_ptr<ChildSet> children_;$/;"	m	class:rtc::TaskParent
chunk_data_	webrtc/base/httpbase.h	/^  bool ignore_data_, chunk_data_;$/;"	m	class:rtc::HttpBase
chunk_length	webrtc/common_audio/lapped_transform.h	/^  size_t chunk_length() const { return chunk_length_; }$/;"	f	class:webrtc::LappedTransform
chunk_length_	webrtc/common_audio/lapped_transform.h	/^  const size_t chunk_length_;$/;"	m	class:webrtc::LappedTransform
chunk_length_	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.h	/^  size_t chunk_length_;$/;"	m	class:webrtc::NonlinearBeamformer
chunk_length_	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer.h	/^  const size_t chunk_length_;  \/\/ Chunk size in samples.$/;"	m	class:webrtc::IntelligibilityEnhancer
chunk_size_	webrtc/common_audio/blocker.h	/^  const size_t chunk_size_;$/;"	m	class:webrtc::Blocker
chunk_size_ms_dummy	webrtc/modules/audio_processing/transient/transient_suppression_test.cc	/^static const bool chunk_size_ms_dummy =$/;"	v	file:
chunked	webrtc/base/httpbase_unittest.cc	/^    bool chunked;$/;"	m	struct:rtc::HttpBaseTest::Event	file:
chunked_	webrtc/base/httpbase.h	/^  bool chunked_;$/;"	m	class:rtc::HttpParser
chunks_at_startup_left_to_delete_	webrtc/modules/audio_processing/transient/transient_detector.h	/^  int chunks_at_startup_left_to_delete_;$/;"	m	class:webrtc::TransientDetector
chunks_since_keypress_	webrtc/modules/audio_processing/transient/transient_suppressor.h	/^  int chunks_since_keypress_;$/;"	m	class:webrtc::TransientSuppressor
chunks_since_voice_	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer.h	/^  size_t chunks_since_voice_;$/;"	m	class:webrtc::IntelligibilityEnhancer
chunks_since_voice_change_	webrtc/modules/audio_processing/transient/transient_suppressor.h	/^  int chunks_since_voice_change_;$/;"	m	class:webrtc::TransientSuppressor
chunkwise_rms	webrtc/modules/audio_processing/vad/voice_activity_detector.h	/^  const std::vector<double>& chunkwise_rms() const { return chunkwise_rms_; }$/;"	f	class:webrtc::VoiceActivityDetector
chunkwise_rms_	webrtc/modules/audio_processing/vad/voice_activity_detector.h	/^  std::vector<double> chunkwise_rms_;$/;"	m	class:webrtc::VoiceActivityDetector
chunkwise_voice_probabilities	webrtc/modules/audio_processing/vad/voice_activity_detector.h	/^  const std::vector<double>& chunkwise_voice_probabilities() const {$/;"	f	class:webrtc::VoiceActivityDetector
chunkwise_voice_probabilities_	webrtc/modules/audio_processing/vad/voice_activity_detector.h	/^  std::vector<double> chunkwise_voice_probabilities_;$/;"	m	class:webrtc::VoiceActivityDetector
cipher	webrtc/base/opensslstreamadapter.cc	/^  uint16_t cipher;$/;"	m	struct:rtc::cipher_list	file:
cipher_list	webrtc/base/opensslstreamadapter.cc	/^struct cipher_list {$/;"	s	namespace:rtc	file:
cipher_str	webrtc/base/opensslstreamadapter.cc	/^  const char* cipher_str;$/;"	m	struct:rtc::cipher_list	file:
circular_buffer_	webrtc/modules/audio_processing/vad/pitch_based_vad.h	/^  std::unique_ptr<VadCircularBuffer> circular_buffer_;$/;"	m	class:webrtc::PitchBasedVad
clamp	webrtc/modules/audio_coding/codecs/isac/main/source/bandwidth_estimator.c	/^static int32_t clamp(int32_t val, int32_t min, int32_t max) {$/;"	f	file:
cleanup_	webrtc/base/task_queue.h	/^  Cleanup cleanup_;$/;"	m	class:rtc::ClosureTaskWithCleanup
clear	webrtc/base/httpcommon.cc	/^HttpData::clear(bool release_document) {$/;"	f	class:rtc::HttpData
clear	webrtc/base/httpcommon.cc	/^HttpRequestData::clear(bool release_document) {$/;"	f	class:rtc::HttpRequestData
clear	webrtc/base/httpcommon.cc	/^HttpResponseData::clear(bool release_document) {$/;"	f	class:rtc::HttpResponseData
clear	webrtc/base/httpcommon.h	/^  void clear() {$/;"	f	class:rtc::Url
clear	webrtc/base/pathutils.cc	/^void Pathname::clear() {$/;"	f	class:rtc::Pathname
clear	webrtc/base/testutils.h	/^  void clear() {$/;"	f	class:testing::SocketTestServer
clearHeader	webrtc/base/httpcommon.cc	/^HttpData::iterator HttpData::clearHeader(iterator header) {$/;"	f	class:rtc::HttpData
clearHeader	webrtc/base/httpcommon.cc	/^size_t HttpData::clearHeader(const std::string& name) {$/;"	f	class:rtc::HttpData
clearHeader	webrtc/base/httpcommon.h	/^  inline void clearHeader(HttpHeader header) {$/;"	f	struct:rtc::HttpData
clear_buffer_	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer_unittest.cc	/^  AudioBuffer clear_buffer_;$/;"	m	class:webrtc::IntelligibilityEnhancerTest	file:
clear_data_	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer_unittest.cc	/^  std::vector<float> clear_data_;$/;"	m	class:webrtc::IntelligibilityEnhancerTest	file:
clear_power_estimator_	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer.h	/^  intelligibility::PowerEstimator<std::complex<float>> clear_power_estimator_;$/;"	m	class:webrtc::IntelligibilityEnhancer
clear_timeout_change	webrtc/base/task_unittest.cc	/^  void clear_timeout_change() {$/;"	f	class:rtc::MyTaskRunner
client	webrtc/base/testutils.h	/^  SocketTestClient* client(size_t index) const { return clients_[index]; }$/;"	f	class:testing::SocketTestServer
client_	webrtc/base/httprequest.h	/^  HttpClient client_;$/;"	m	class:rtc::HttpRequest
client_	webrtc/base/nat_unittest.cc	/^  std::unique_ptr<AsyncSocket> client_;$/;"	m	class:NatTcpTest	file:
client_	webrtc/base/ssladapter_unittest.cc	/^  std::unique_ptr<SSLAdapterTestDummyClient> client_;$/;"	m	class:SSLAdapterTestBase	file:
client_auth_enabled	webrtc/base/sslstreamadapter.h	/^  bool client_auth_enabled() const { return client_auth_enabled_; }$/;"	f	class:rtc::SSLStreamAdapter
client_auth_enabled_	webrtc/base/sslstreamadapter.h	/^  bool client_auth_enabled_;$/;"	m	class:rtc::SSLStreamAdapter
client_buffer_	webrtc/base/sslstreamadapter_unittest.cc	/^  BufferQueueStream client_buffer_;$/;"	m	class:SSLStreamAdapterTestDTLS	file:
client_buffer_	webrtc/base/sslstreamadapter_unittest.cc	/^  rtc::FifoBuffer client_buffer_;$/;"	m	class:SSLStreamAdapterTestTLS	file:
client_cert_pem_	webrtc/base/sslstreamadapter_unittest.cc	/^  std::string client_cert_pem_;$/;"	m	class:SSLStreamAdapterTestBase	file:
client_identity_	webrtc/base/sslstreamadapter_unittest.cc	/^  rtc::SSLIdentity *client_identity_;  \/\/ freed by client_ssl_ destructor$/;"	m	class:SSLStreamAdapterTestBase	file:
client_key_type_	webrtc/base/sslstreamadapter_unittest.cc	/^  rtc::KeyParams client_key_type_;$/;"	m	class:SSLStreamAdapterTestBase	file:
client_private_key_pem_	webrtc/base/sslstreamadapter_unittest.cc	/^  std::string client_private_key_pem_;$/;"	m	class:SSLStreamAdapterTestBase	file:
client_sockets_	webrtc/base/testechoserver.h	/^  ClientList client_sockets_;$/;"	m	class:rtc::TestEchoServer
client_ssl_	webrtc/base/sslstreamadapter_unittest.cc	/^  std::unique_ptr<rtc::SSLStreamAdapter> client_ssl_;$/;"	m	class:SSLStreamAdapterTestBase	file:
client_stream_	webrtc/base/sslstreamadapter_unittest.cc	/^  SSLDummyStreamBase *client_stream_;  \/\/ freed by client_ssl_ destructor$/;"	m	class:SSLStreamAdapterTestBase	file:
clients_	webrtc/base/natsocketfactory.h	/^    std::set<SocketAddress> clients_;$/;"	m	class:rtc::NATSocketServer::Translator
clients_	webrtc/base/testutils.h	/^  std::vector<SocketTestClient*> clients_;$/;"	m	class:testing::SocketTestServer
clip_bias_us_	webrtc/base/timestampaligner.h	/^  int64_t clip_bias_us_;$/;"	m	class:rtc::TimestampAligner
clockDriftPPM	webrtc/common_types.h	/^  int32_t clockDriftPPM;$/;"	m	struct:webrtc::NetworkStatistics
clock_	webrtc/base/rate_limiter.h	/^  Clock* const clock_;$/;"	m	class:webrtc::RateLimiter
clock_	webrtc/base/rate_limiter_unittest.cc	/^  SimulatedClock clock_;$/;"	m	class:webrtc::RateLimitTest	file:
clock_	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^  webrtc::Clock* clock_;$/;"	m	class:webrtc::__anon182::TimedThreadApiProcessor	file:
clock_	webrtc/modules/audio_processing/level_controller/level_controller_complexity_unittest.cc	/^  webrtc::Clock* clock_;$/;"	m	class:webrtc::__anon209::SubmodulePerformanceTimer	file:
clone	webrtc/base/sigslot.h	/^			arg5_type, arg6_type, arg7_type, arg8_type, mt_policy>* clone()$/;"	f	class:sigslot::_connection8
clone	webrtc/base/sigslot.h	/^			arg5_type, arg6_type, arg7_type, mt_policy>* clone()$/;"	f	class:sigslot::_connection7
clone	webrtc/base/sigslot.h	/^			arg5_type, arg6_type, mt_policy>* clone()$/;"	f	class:sigslot::_connection6
clone	webrtc/base/sigslot.h	/^			arg5_type, mt_policy>* clone()$/;"	f	class:sigslot::_connection5
clone	webrtc/base/sigslot.h	/^		virtual _connection_base0<mt_policy>* clone()$/;"	f	class:sigslot::_connection0
clone	webrtc/base/sigslot.h	/^		virtual _connection_base1<arg1_type, mt_policy>* clone()$/;"	f	class:sigslot::_connection1
clone	webrtc/base/sigslot.h	/^		virtual _connection_base2<arg1_type, arg2_type, mt_policy>* clone()$/;"	f	class:sigslot::_connection2
clone	webrtc/base/sigslot.h	/^		virtual _connection_base3<arg1_type, arg2_type, arg3_type, mt_policy>* clone()$/;"	f	class:sigslot::_connection3
clone	webrtc/base/sigslot.h	/^		virtual _connection_base4<arg1_type, arg2_type, arg3_type, arg4_type, mt_policy>* clone()$/;"	f	class:sigslot::_connection4
close_	webrtc/base/httpserver.h	/^    bool signalling_, close_;$/;"	m	class:rtc::HttpServer::Connection
close_	webrtc/base/winping.h	/^    PIcmpCloseHandle close_;$/;"	m	class:rtc::WinPing
close_error_	webrtc/base/win32socketserver.h	/^  int close_error_;$/;"	m	class:rtc::Win32Socket
closesocket	webrtc/base/socket.h	/^#define closesocket(/;"	d
closing_	webrtc/base/httpserver.h	/^  bool closing_;$/;"	m	class:rtc::HttpServer
closing_	webrtc/base/win32socketserver.h	/^  bool closing_;$/;"	m	class:rtc::Win32Socket
closure_	webrtc/base/task_queue.h	/^  Closure closure_;$/;"	m	class:rtc::ClosureTask
cmsDelay_	webrtc/base/messagequeue.h	/^  int64_t cmsDelay_;  \/\/ for debugging$/;"	m	class:rtc::DelayedMessage
cnScaleHband	webrtc/modules/audio_processing/aec/aec_core.cc	/^static const float cnScaleHband = 0.4f;  \/\/ scale for comfort noise in H band.$/;"	m	namespace:webrtc	file:
cn_scale_Hband	webrtc/modules/audio_processing/aec/aec_core.h	/^  float cn_scale_Hband;  \/\/ scale for comfort noise in H band$/;"	m	struct:webrtc::AecCore
cngMode	webrtc/modules/audio_processing/aecm/aecm_core.h	/^    int16_t cngMode;$/;"	m	struct:__anon164
cngMode	webrtc/modules/audio_processing/aecm/echo_control_mobile.h	/^    int16_t cngMode;            \/\/ AECM_FALSE, AECM_TRUE (default)$/;"	m	struct:__anon167
cntThresUpdate	webrtc/modules/audio_processing/ns/nsx_core.h	/^  int                     cntThresUpdate;$/;"	m	struct:NoiseSuppressionFixedC_
codec	webrtc/modules/include/module_common_types.h	/^  RtpVideoCodecTypes codec;$/;"	m	struct:webrtc::RTPVideoHeader
codecHeader	webrtc/modules/include/module_common_types.h	/^  RTPVideoTypeHeader codecHeader;$/;"	m	struct:webrtc::RTPVideoHeader
codecSpecific	webrtc/common_types.h	/^  VideoCodecUnion codecSpecific;$/;"	m	class:webrtc::VideoCodec
codecType	webrtc/common_types.h	/^  VideoCodecType codecType;$/;"	m	class:webrtc::VideoCodec
codingMode	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  int16_t               codingMode;$/;"	m	struct:__anon144
coefTable	webrtc/modules/audio_processing/aecm/aecm_core_mips.cc	/^static int16_t coefTable[] = {$/;"	v	file:
coefTable_7	webrtc/common_audio/signal_processing/complex_bit_reverse_mips.c	/^static int16_t coefTable_7[] = {$/;"	v	file:
coefTable_8	webrtc/common_audio/signal_processing/complex_bit_reverse_mips.c	/^static int16_t coefTable_8[] = {$/;"	v	file:
coefTable_ifft	webrtc/modules/audio_processing/aecm/aecm_core_mips.cc	/^static int16_t coefTable_ifft[] = {$/;"	v	file:
coefficients_	webrtc/common_audio/fir_filter.cc	/^  std::unique_ptr<float[]> coefficients_;$/;"	m	class:webrtc::FIRFilterC	file:
coefficients_	webrtc/common_audio/fir_filter_neon.h	/^  std::unique_ptr<float[], AlignedFreeDeleter> coefficients_;$/;"	m	class:webrtc::FIRFilterNEON
coefficients_	webrtc/common_audio/fir_filter_sse.h	/^  std::unique_ptr<float[], AlignedFreeDeleter> coefficients_;$/;"	m	class:webrtc::FIRFilterSSE2
coefficients_	webrtc/modules/audio_processing/level_controller/biquad_filter.h	/^  BiQuadCoefficients coefficients_;$/;"	m	class:webrtc::BiQuadFilter
coefficients_length_	webrtc/common_audio/fir_filter.cc	/^  size_t coefficients_length_;$/;"	m	class:webrtc::FIRFilterC	file:
coefficients_length_	webrtc/common_audio/fir_filter_neon.h	/^  size_t coefficients_length_;$/;"	m	class:webrtc::FIRFilterNEON
coefficients_length_	webrtc/common_audio/fir_filter_sse.h	/^  size_t coefficients_length_;$/;"	m	class:webrtc::FIRFilterSSE2
coherence_state	webrtc/modules/audio_processing/aec/aec_core.h	/^  CoherenceState coherence_state;$/;"	m	struct:webrtc::AecCore
collection	webrtc/base/scopedptrcollection.h	/^  const VectorT& collection() const { return collection_; }$/;"	f	class:rtc::ScopedPtrCollection
collection_	webrtc/base/scopedptrcollection.h	/^  VectorT collection_;$/;"	m	class:rtc::ScopedPtrCollection
collection_	webrtc/base/scopedptrcollection_unittest.cc	/^  std::unique_ptr<ScopedPtrCollection<InstanceCounter> > collection_;$/;"	m	class:rtc::ScopedPtrCollectionTest	file:
cols	webrtc/system_wrappers/include/aligned_array.h	/^  size_t cols() const {$/;"	f	class:webrtc::AlignedArray
cols_	webrtc/system_wrappers/include/aligned_array.h	/^  size_t cols_;$/;"	m	class:webrtc::AlignedArray
comment	webrtc/base/flags.h	/^  const char* comment() const  { return comment_; }$/;"	f	class:rtc::Flag
comment_	webrtc/base/flags.h	/^  const char* comment_;$/;"	m	class:rtc::Flag
common_name	webrtc/base/sslidentity.h	/^  std::string common_name;$/;"	m	struct:rtc::SSLIdentityParams
compare_delay	webrtc/modules/audio_processing/utility/delay_estimator.h	/^  int compare_delay;$/;"	m	struct:__anon228
complete	webrtc/base/httpbase.cc	/^HttpParser::complete(HttpError error) {$/;"	f	class:rtc::HttpParser
complete_	webrtc/base/httprequest.h	/^  bool complete_;$/;"	m	class:rtc::HttpMonitor
complex_analysis_length_	webrtc/modules/audio_processing/transient/transient_suppressor.h	/^  size_t complex_analysis_length_;$/;"	m	class:webrtc::TransientSuppressor
complex_f	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.h	/^  typedef complex<float> complex_f;$/;"	t	class:webrtc::NonlinearBeamformer
complex_length_	webrtc/common_audio/real_fourier_ooura.h	/^  const size_t complex_length_;$/;"	m	class:webrtc::RealFourierOoura
complex_t	webrtc/modules/audio_processing/aec/aec_core.h	/^typedef float complex_t[2];$/;"	t	namespace:webrtc
complexity	webrtc/common_types.h	/^  VideoCodecComplexity complexity;$/;"	m	struct:webrtc::VideoCodecVP8
complexity	webrtc/common_types.h	/^  VideoCodecComplexity complexity;$/;"	m	struct:webrtc::VideoCodecVP9
compressionGaindB	webrtc/modules/audio_processing/agc/legacy/analog_agc.h	/^  int16_t compressionGaindB;  \/\/ Fixed gain level in dB$/;"	m	struct:__anon171
compressionGaindB	webrtc/modules/audio_processing/agc/legacy/gain_control.h	/^  int16_t compressionGaindB;  \/\/ default 9 dB$/;"	m	struct:__anon177
compression_	webrtc/modules/audio_processing/agc/agc_manager_direct.h	/^  int compression_;$/;"	m	class:webrtc::final
compression_accumulator_	webrtc/modules/audio_processing/agc/agc_manager_direct.h	/^  float compression_accumulator_;$/;"	m	class:webrtc::final
compression_gain_db	webrtc/modules/audio_processing/gain_control_for_experimental_agc.cc	/^int GainControlForExperimentalAgc::compression_gain_db() const {$/;"	f	class:webrtc::GainControlForExperimentalAgc
compression_gain_db	webrtc/modules/audio_processing/gain_control_impl.cc	/^int GainControlImpl::compression_gain_db() const {$/;"	f	class:webrtc::GainControlImpl
concatStackTraces	webrtc/base/java/src/org/webrtc/ThreadUtils.java	/^  private static StackTraceElement[] concatStackTraces($/;"	m	class:ThreadUtils	file:
config_	webrtc/modules/audio_processing/audio_processing_impl.h	/^  AudioProcessing::Config config_;$/;"	m	class:webrtc::AudioProcessingImpl
config_	webrtc/modules/audio_processing/level_controller/level_controller.h	/^  AudioProcessing::Config::LevelController config_;$/;"	m	class:webrtc::LevelController
connect	webrtc/base/httpclient.cc	/^void HttpClient::connect() {$/;"	f	class:rtc::HttpClient
connect	webrtc/base/sigslot.h	/^			void connect(desttype* pclass, void (desttype::*pmemfun)())$/;"	f	class:sigslot::signal0
connect	webrtc/base/sigslot.h	/^			void connect(desttype* pclass, void (desttype::*pmemfun)(arg1_type))$/;"	f	class:sigslot::signal1
connect	webrtc/base/sigslot.h	/^			void connect(desttype* pclass, void (desttype::*pmemfun)(arg1_type,$/;"	f	class:sigslot::signal2
connect	webrtc/base/sigslot.h	/^			void connect(desttype* pclass, void (desttype::*pmemfun)(arg1_type,$/;"	f	class:sigslot::signal3
connect	webrtc/base/sigslot.h	/^			void connect(desttype* pclass, void (desttype::*pmemfun)(arg1_type,$/;"	f	class:sigslot::signal4
connect	webrtc/base/sigslot.h	/^			void connect(desttype* pclass, void (desttype::*pmemfun)(arg1_type,$/;"	f	class:sigslot::signal5
connect	webrtc/base/sigslot.h	/^			void connect(desttype* pclass, void (desttype::*pmemfun)(arg1_type,$/;"	f	class:sigslot::signal6
connect	webrtc/base/sigslot.h	/^			void connect(desttype* pclass, void (desttype::*pmemfun)(arg1_type,$/;"	f	class:sigslot::signal7
connect	webrtc/base/sigslot.h	/^			void connect(desttype* pclass, void (desttype::*pmemfun)(arg1_type,$/;"	f	class:sigslot::signal8
connect_time_	webrtc/base/win32socketserver.h	/^  uint32_t connect_time_;$/;"	m	class:rtc::Win32Socket
connected	webrtc/base/networkroute.h	/^  bool connected;$/;"	m	struct:rtc::NetworkRoute
connected	webrtc/base/sigslot.h	/^			bool connected(has_slots_interface* pclass)$/;"	f	class:sigslot::_signal_base0
connected	webrtc/base/sigslot.h	/^			bool connected(has_slots_interface* pclass)$/;"	f	class:sigslot::_signal_base1
connected	webrtc/base/sigslot.h	/^			bool connected(has_slots_interface* pclass)$/;"	f	class:sigslot::_signal_base2
connected	webrtc/base/sigslot.h	/^			bool connected(has_slots_interface* pclass)$/;"	f	class:sigslot::_signal_base3
connected	webrtc/base/sigslot.h	/^			bool connected(has_slots_interface* pclass)$/;"	f	class:sigslot::_signal_base4
connected	webrtc/base/sigslot.h	/^			bool connected(has_slots_interface* pclass)$/;"	f	class:sigslot::_signal_base5
connected	webrtc/base/sigslot.h	/^			bool connected(has_slots_interface* pclass)$/;"	f	class:sigslot::_signal_base6
connected	webrtc/base/sigslot.h	/^			bool connected(has_slots_interface* pclass)$/;"	f	class:sigslot::_signal_base7
connected	webrtc/base/sigslot.h	/^			bool connected(has_slots_interface* pclass)$/;"	f	class:sigslot::_signal_base8
connected_	webrtc/base/nat_unittest.cc	/^  bool connected_;$/;"	m	class:NatTcpTest	file:
connected_	webrtc/base/natsocketfactory.cc	/^  bool connected_;$/;"	m	class:rtc::NATSocket	file:
connected_	webrtc/base/proxyserver.h	/^  bool connected_;$/;"	m	class:rtc::ProxyBinding
connection_	webrtc/base/dbus.cc	/^  DBusGConnection *connection_;$/;"	m	class:rtc::DBusMonitor::DBusMonitoringThread	file:
connection_closed	webrtc/base/httpserver_unittest.cc	/^    bool server_closed, connection_closed;$/;"	m	struct:rtc::__anon20::HttpServerMonitor	file:
connection_id	webrtc/base/httpserver.h	/^  int connection_id() const { return connection_id_; }$/;"	f	struct:rtc::HttpServerTransaction
connection_id_	webrtc/base/httpserver.h	/^    int connection_id_;$/;"	m	class:rtc::HttpServer::Connection
connection_id_	webrtc/base/httpserver.h	/^  int connection_id_;$/;"	m	struct:rtc::HttpServerTransaction
connections_	webrtc/base/httpserver.h	/^  ConnectionMap connections_;$/;"	m	class:rtc::HttpServer
connections_	webrtc/base/virtualsocketserver.h	/^  ConnectionMap* connections_;$/;"	m	class:rtc::VirtualSocketServer
connections_list	webrtc/base/sigslot.h	/^			arg4_type, arg5_type, arg6_type, arg7_type, mt_policy> *>  connections_list;$/;"	t	class:sigslot::_signal_base7
connections_list	webrtc/base/sigslot.h	/^			arg4_type, arg5_type, arg6_type, mt_policy> *>  connections_list;$/;"	t	class:sigslot::_signal_base6
connections_list	webrtc/base/sigslot.h	/^			arg4_type, arg5_type, mt_policy> *>  connections_list;$/;"	t	class:sigslot::_signal_base5
connections_list	webrtc/base/sigslot.h	/^			arg4_type, mt_policy> *>  connections_list;$/;"	t	class:sigslot::_signal_base4
connections_list	webrtc/base/sigslot.h	/^			connections_list;$/;"	t	class:sigslot::_signal_base2
connections_list	webrtc/base/sigslot.h	/^			connections_list;$/;"	t	class:sigslot::_signal_base3
connections_list	webrtc/base/sigslot.h	/^			connections_list;$/;"	t	class:sigslot::_signal_base8
connections_list	webrtc/base/sigslot.h	/^		typedef std::list<_connection_base0<mt_policy> *>  connections_list;$/;"	t	class:sigslot::_signal_base0
connections_list	webrtc/base/sigslot.h	/^		typedef std::list<_connection_base1<arg1_type, mt_policy> *>  connections_list;$/;"	t	class:sigslot::_signal_base1
connections_list	webrtc/base/sigslot.h	/^		typedef typename base::connections_list connections_list;$/;"	t	class:sigslot::signal0
connections_list	webrtc/base/sigslot.h	/^		typedef typename base::connections_list connections_list;$/;"	t	class:sigslot::signal1
connections_list	webrtc/base/sigslot.h	/^		typedef typename base::connections_list connections_list;$/;"	t	class:sigslot::signal2
connections_list	webrtc/base/sigslot.h	/^		typedef typename base::connections_list connections_list;$/;"	t	class:sigslot::signal3
connections_list	webrtc/base/sigslot.h	/^		typedef typename base::connections_list connections_list;$/;"	t	class:sigslot::signal4
connections_list	webrtc/base/sigslot.h	/^		typedef typename base::connections_list connections_list;$/;"	t	class:sigslot::signal5
connections_list	webrtc/base/sigslot.h	/^		typedef typename base::connections_list connections_list;$/;"	t	class:sigslot::signal6
connections_list	webrtc/base/sigslot.h	/^		typedef typename base::connections_list connections_list;$/;"	t	class:sigslot::signal7
connections_list	webrtc/base/sigslot.h	/^		typedef typename base::connections_list connections_list;$/;"	t	class:sigslot::signal8
consecLatency	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  float                        consecLatency;$/;"	m	struct:__anon131
consistent_classification_counter_	webrtc/modules/audio_processing/level_controller/signal_classifier.h	/^  int consistent_classification_counter_;$/;"	m	class:webrtc::SignalClassifier
const_iterator	webrtc/base/httpcommon.h	/^  typedef HeaderMap::const_iterator const_iterator;$/;"	t	struct:rtc::HttpData
const_iterator	webrtc/base/sigslot.h	/^		typedef sender_set::const_iterator const_iterator;$/;"	t	class:sigslot::has_slots
constants_	webrtc/modules/audio_processing/audio_processing_impl.h	/^  } constants_;$/;"	m	class:webrtc::AudioProcessingImpl	typeref:struct:webrtc::AudioProcessingImpl::ApmConstants
consumed_	webrtc/base/virtualsocketserver.cc	/^  size_t size_, consumed_;$/;"	m	class:rtc::Packet	file:
container	webrtc/base/messagequeue.h	/^    container_type& container() { return c; }$/;"	f	class:rtc::MessageQueue::PriorityQueue
container_	webrtc/system_wrappers/include/stl_util.h	/^  T* container_;$/;"	m	class:webrtc::STLElementDeleter
container_	webrtc/system_wrappers/include/stl_util.h	/^  T* container_;$/;"	m	class:webrtc::STLValueDeleter
content_length_	webrtc/base/socketadapters.h	/^  size_t content_length_;$/;"	m	class:rtc::AsyncHttpsProxySocket
content_type	webrtc/config.h	/^  ContentType content_type;$/;"	m	class:webrtc::VideoEncoderConfig
context	webrtc/modules/audio_processing/test/android/apmtest/jni/main.c	/^    EGLContext context;$/;"	m	struct:engine	file:
context_	webrtc/base/dbus.cc	/^  GMainContext *context_;$/;"	m	class:rtc::DBusMonitor::DBusMonitoringThread	file:
context_	webrtc/base/httpclient.h	/^  std::unique_ptr<HttpAuthContext> context_;$/;"	m	class:rtc::HttpClient
context_	webrtc/base/socketadapters.h	/^  HttpAuthContext * context_;$/;"	m	class:rtc::AsyncHttpsProxySocket
context_	webrtc/base/task_queue.h	/^  QueueContext* const context_;$/;"	m	class:rtc::TaskQueue
converters_	webrtc/common_audio/audio_converter.cc	/^  std::vector<std::unique_ptr<AudioConverter>> converters_;$/;"	m	class:webrtc::CompositionConverter	file:
convolve_proc_	webrtc/common_audio/resampler/sinc_resampler.h	/^  ConvolveProc convolve_proc_;$/;"	m	class:webrtc::SincResampler
copy	webrtc/base/httpcommon.cc	/^HttpData::copy(const HttpData& src) {$/;"	f	class:rtc::HttpData
copy	webrtc/base/httpcommon.cc	/^HttpRequestData::copy(const HttpRequestData& src) {$/;"	f	class:rtc::HttpRequestData
copy	webrtc/base/httpcommon.cc	/^HttpResponseData::copy(const HttpResponseData& src) {$/;"	f	class:rtc::HttpResponseData
cost	webrtc/modules/audio_processing/config_unittest.cc	/^  virtual int cost(int x) const {$/;"	f	struct:webrtc::__anon191::Algo1_CostFunction
cost	webrtc/modules/audio_processing/config_unittest.cc	/^  virtual int cost(int x) const {$/;"	f	struct:webrtc::__anon191::SqrCost
cost_per_typing_	webrtc/modules/audio_processing/typing_detection.h	/^  int cost_per_typing_;$/;"	m	class:webrtc::TypingDetection
costab1	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  double costab1[FRAMESAMPLES_HALF];$/;"	m	struct:__anon143
costab2	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  double costab2[FRAMESAMPLES_QUARTER];$/;"	m	struct:__anon143
count	webrtc/base/rollingaccumulator.h	/^  size_t count() const {$/;"	f	class:rtc::RollingAccumulator
count	webrtc/base/sha1.h	/^  uint32_t count[2];  \/\/ Bit count of input.$/;"	m	struct:rtc::SHA1_CTX
count	webrtc/base/thread_unittest.cc	/^  int count;$/;"	m	class:TestGenerator	file:
count	webrtc/base/virtualsocket_unittest.cc	/^  size_t count;$/;"	m	struct:Receiver	file:
count	webrtc/base/virtualsocket_unittest.cc	/^  uint32_t count;$/;"	m	struct:Sender	file:
count_	webrtc/base/callback_unittest.cc	/^  mutable int count_;$/;"	m	class:rtc::__anon8::RefCountedBindTester	file:
count_	webrtc/base/rollingaccumulator.h	/^  size_t count_;$/;"	m	class:rtc::RollingAccumulator
count_	webrtc/base/sslstreamadapter_unittest.cc	/^  int count_;$/;"	m	class:SSLStreamAdapterTestDTLS	file:
count_	webrtc/modules/audio_processing/aec/aec_core.h	/^  size_t count_;$/;"	m	class:webrtc::DivergentFilterFraction
count_	webrtc/modules/audio_processing/utility/block_mean_calculator.h	/^  size_t count_;$/;"	m	class:webrtc::BlockMeanCalculator
count_tot_updates_rec	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  int32_t    count_tot_updates_rec;$/;"	m	struct:__anon131
counter	webrtc/modules/audio_processing/aec/aec_core.h	/^  size_t counter;$/;"	m	struct:webrtc::Stats
counter	webrtc/modules/audio_processing/aec/echo_cancellation.h	/^  short counter;$/;"	m	struct:webrtc::Aec
counter	webrtc/modules/audio_processing/aecm/echo_control_mobile.cc	/^    short counter;$/;"	m	struct:__anon165	file:
counter	webrtc/modules/audio_processing/agc/legacy/digital_agc.h	/^  int16_t counter;$/;"	m	struct:__anon173
counter	webrtc/modules/audio_processing/ns/ns_core.h	/^  int counter[SIMULT];$/;"	m	struct:NoiseSuppressionC_
counter_since_last_detection_update_	webrtc/modules/audio_processing/typing_detection.h	/^  int counter_since_last_detection_update_;$/;"	m	class:webrtc::TypingDetection
covar_inverse	webrtc/modules/audio_processing/vad/gmm.h	/^  const double* covar_inverse;$/;"	m	struct:webrtc::GmmParameters
covariance_	webrtc/modules/audio_processing/echo_detector/normalized_covariance_estimator.h	/^  float covariance_ = 0.f;$/;"	m	class:webrtc::NormalizedCovarianceEstimator
covariances_	webrtc/modules/audio_processing/residual_echo_detector.h	/^  std::vector<NormalizedCovarianceEstimator> covariances_;$/;"	m	class:webrtc::ResidualEchoDetector
cplx_buffer_	webrtc/common_audio/real_fourier_unittest.cc	/^  const RealFourier::fft_cplx_scoper cplx_buffer_;$/;"	m	class:webrtc::RealFourierTest	file:
cplx_length_	webrtc/common_audio/lapped_transform.h	/^  const size_t cplx_length_;$/;"	m	class:webrtc::LappedTransform
cplx_post_	webrtc/common_audio/lapped_transform.h	/^  AlignedArray<std::complex<float> > cplx_post_;$/;"	m	class:webrtc::LappedTransform
cplx_pre_	webrtc/common_audio/lapped_transform.h	/^  AlignedArray<std::complex<float> > cplx_pre_;$/;"	m	class:webrtc::LappedTransform
create6_	webrtc/base/winping.h	/^    PIcmp6CreateFile create6_;$/;"	m	class:rtc::WinPing
create_	webrtc/base/winping.h	/^    PIcmpCreateFile create_;$/;"	m	class:rtc::WinPing
cred	webrtc/base/httpcommon.cc	/^  CredHandle cred;$/;"	m	struct:rtc::NegotiateAuthContext	file:
crit_	webrtc/base/asyncinvoker-inl.h	/^  CriticalSection crit_;$/;"	m	class:rtc::NotifyingAsyncClosureBase
crit_	webrtc/base/asyncinvoker.h	/^  CriticalSection crit_;$/;"	m	class:rtc::GuardedAsyncInvoker
crit_	webrtc/base/bufferqueue.h	/^  CriticalSection crit_;$/;"	m	class:rtc::BufferQueue
crit_	webrtc/base/criticalsection.h	/^  mutable CRITICAL_SECTION crit_;$/;"	m	class:rtc::CriticalSection
crit_	webrtc/base/event_tracer.cc	/^  rtc::CriticalSection crit_;$/;"	m	class:rtc::tracing::__anon12::final	file:
crit_	webrtc/base/firewallsocketserver.h	/^  CriticalSection crit_;$/;"	m	class:rtc::FirewallManager
crit_	webrtc/base/firewallsocketserver.h	/^  CriticalSection crit_;$/;"	m	class:rtc::FirewallSocketServer
crit_	webrtc/base/messagequeue.h	/^  CriticalSection crit_;$/;"	m	class:rtc::MessageQueue
crit_	webrtc/base/messagequeue.h	/^  CriticalSection crit_;$/;"	m	class:rtc::MessageQueueManager
crit_	webrtc/base/natserver.h	/^    CriticalSection crit_;$/;"	m	struct:rtc::NATServer::TransEntry
crit_	webrtc/base/physicalsocketserver.cc	/^  CriticalSection crit_;$/;"	m	class:rtc::EventDispatcher	file:
crit_	webrtc/base/physicalsocketserver.h	/^  CriticalSection crit_;$/;"	m	class:rtc::PhysicalSocket
crit_	webrtc/base/physicalsocketserver.h	/^  CriticalSection crit_;$/;"	m	class:rtc::PhysicalSocketServer
crit_	webrtc/base/stream.h	/^  CriticalSection crit_;$/;"	m	class:rtc::FifoBuffer
crit_	webrtc/base/testclient.h	/^  CriticalSection crit_;$/;"	m	class:rtc::TestClient
crit_	webrtc/base/virtualsocketserver.h	/^  CriticalSection crit_;$/;"	m	class:rtc::VirtualSocket
crit_	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  int capture_count GUARDED_BY(crit_) = 0;$/;"	m	class:webrtc::__anon181::FrameCounters	file:
crit_	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  int render_count GUARDED_BY(crit_) = 0;$/;"	m	class:webrtc::__anon181::FrameCounters	file:
crit_	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  rtc::CriticalSection crit_;$/;"	m	class:webrtc::__anon181::FrameCounters	file:
crit_	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  rtc::CriticalSection crit_;$/;"	m	class:webrtc::__anon181::RandomGenerator	file:
crit_	webrtc/modules/audio_processing/high_pass_filter_impl.h	/^  bool enabled_ GUARDED_BY(crit_) = false;$/;"	m	class:webrtc::HighPassFilterImpl
crit_	webrtc/modules/audio_processing/high_pass_filter_impl.h	/^  rtc::CriticalSection* const crit_ = nullptr;$/;"	m	class:webrtc::HighPassFilterImpl::rtc
crit_	webrtc/modules/audio_processing/level_estimator_impl.h	/^  bool enabled_ GUARDED_BY(crit_) = false;$/;"	m	class:webrtc::LevelEstimatorImpl
crit_	webrtc/modules/audio_processing/level_estimator_impl.h	/^  rtc::CriticalSection* const crit_ = nullptr;$/;"	m	class:webrtc::LevelEstimatorImpl::rtc
crit_	webrtc/modules/audio_processing/noise_suppression_impl.h	/^  Level level_ GUARDED_BY(crit_) = kModerate;$/;"	m	class:webrtc::NoiseSuppressionImpl
crit_	webrtc/modules/audio_processing/noise_suppression_impl.h	/^  bool enabled_ GUARDED_BY(crit_) = false;$/;"	m	class:webrtc::NoiseSuppressionImpl
crit_	webrtc/modules/audio_processing/noise_suppression_impl.h	/^  int sample_rate_hz_ GUARDED_BY(crit_) = 0;$/;"	m	class:webrtc::NoiseSuppressionImpl
crit_	webrtc/modules/audio_processing/noise_suppression_impl.h	/^  rtc::CriticalSection* const crit_;$/;"	m	class:webrtc::NoiseSuppressionImpl::rtc
crit_	webrtc/modules/audio_processing/noise_suppression_impl.h	/^  size_t channels_ GUARDED_BY(crit_) = 0;$/;"	m	class:webrtc::NoiseSuppressionImpl
crit_	webrtc/modules/audio_processing/voice_detection_impl.h	/^  Likelihood likelihood_ GUARDED_BY(crit_) = kLowLikelihood;$/;"	m	class:webrtc::VoiceDetectionImpl
crit_	webrtc/modules/audio_processing/voice_detection_impl.h	/^  bool enabled_ GUARDED_BY(crit_) = false;$/;"	m	class:webrtc::VoiceDetectionImpl
crit_	webrtc/modules/audio_processing/voice_detection_impl.h	/^  bool stream_has_voice_ GUARDED_BY(crit_) = false;$/;"	m	class:webrtc::VoiceDetectionImpl
crit_	webrtc/modules/audio_processing/voice_detection_impl.h	/^  bool using_external_vad_ GUARDED_BY(crit_) = false;$/;"	m	class:webrtc::VoiceDetectionImpl
crit_	webrtc/modules/audio_processing/voice_detection_impl.h	/^  int frame_size_ms_ GUARDED_BY(crit_) = 10;$/;"	m	class:webrtc::VoiceDetectionImpl
crit_	webrtc/modules/audio_processing/voice_detection_impl.h	/^  int sample_rate_hz_ GUARDED_BY(crit_) = 0;$/;"	m	class:webrtc::VoiceDetectionImpl
crit_	webrtc/modules/audio_processing/voice_detection_impl.h	/^  rtc::CriticalSection* const crit_;$/;"	m	class:webrtc::VoiceDetectionImpl::rtc
crit_	webrtc/modules/audio_processing/voice_detection_impl.h	/^  size_t frame_size_samples_ GUARDED_BY(crit_) = 0;$/;"	m	class:webrtc::VoiceDetectionImpl
crit_	webrtc/system_wrappers/source/metrics_default.cc	/^  rtc::CriticalSection crit_;$/;"	m	class:webrtc::metrics::__anon251::RtcHistogram	file:
crit_	webrtc/system_wrappers/source/metrics_default.cc	/^  rtc::CriticalSection crit_;$/;"	m	class:webrtc::metrics::__anon251::RtcHistogramMap	file:
crit_	webrtc/system_wrappers/source/trace_impl.h	/^  rtc::CriticalSection crit_;$/;"	m	class:webrtc::TraceImpl
crit_capture_	webrtc/modules/audio_processing/audio_processing_impl.h	/^      GUARDED_BY(crit_capture_) = 0;$/;"	m	class:webrtc::AudioProcessingImpl
crit_capture_	webrtc/modules/audio_processing/audio_processing_impl.h	/^  rtc::CriticalSection crit_capture_;$/;"	m	class:webrtc::AudioProcessingImpl
crit_capture_	webrtc/modules/audio_processing/echo_cancellation_impl.h	/^  bool refined_adaptive_filter_enabled_ GUARDED_BY(crit_capture_) = false;$/;"	m	class:webrtc::EchoCancellationImpl
crit_capture_	webrtc/modules/audio_processing/echo_cancellation_impl.h	/^  rtc::CriticalSection* const crit_capture_;$/;"	m	class:webrtc::EchoCancellationImpl::rtc
crit_capture_	webrtc/modules/audio_processing/echo_control_mobile_impl.h	/^  rtc::CriticalSection* const crit_capture_;$/;"	m	class:webrtc::EchoControlMobileImpl::rtc
crit_capture_	webrtc/modules/audio_processing/gain_control_for_experimental_agc.h	/^  rtc::CriticalSection* crit_capture_;$/;"	m	class:webrtc::GainControlForExperimentalAgc
crit_capture_	webrtc/modules/audio_processing/gain_control_impl.h	/^  rtc::CriticalSection* const crit_capture_;$/;"	m	class:webrtc::GainControlImpl::rtc
crit_debug_	webrtc/modules/audio_processing/audio_processing_impl.h	/^  rtc::CriticalSection crit_debug_;$/;"	m	class:webrtc::AudioProcessingImpl
crit_queue_	webrtc/base/swap_queue.h	/^  rtc::CriticalSection crit_queue_;$/;"	m	class:webrtc::SwapQueue
crit_queue_	webrtc/base/swap_queue.h	/^  size_t next_read_index_ GUARDED_BY(crit_queue_) = 0;$/;"	m	class:webrtc::SwapQueue
crit_queue_	webrtc/base/swap_queue.h	/^  size_t next_write_index_ GUARDED_BY(crit_queue_) = 0;$/;"	m	class:webrtc::SwapQueue
crit_queue_	webrtc/base/swap_queue.h	/^  size_t num_elements_ GUARDED_BY(crit_queue_) = 0;$/;"	m	class:webrtc::SwapQueue
crit_sect_	webrtc/system_wrappers/source/trace_posix.h	/^  CriticalSectionWrapper& crit_sect_;$/;"	m	class:webrtc::TracePosix
critsect_	webrtc/base/onetimeevent.h	/^  rtc::CriticalSection critsect_;$/;"	m	class:webrtc::OneTimeEvent
cs_	webrtc/base/criticalsection.h	/^  const CriticalSection* const cs_;$/;"	m	class:rtc::CritScope
cs_	webrtc/base/criticalsection.h	/^  const CriticalSection* const cs_;$/;"	m	class:rtc::TryCritScope
cs_	webrtc/base/criticalsection_unittest.cc	/^  CriticalSection cs_;$/;"	m	class:rtc::__anon10::CriticalSectionLock	file:
cs_	webrtc/base/messagequeue.cc	/^  const CriticalSection* const cs_;$/;"	m	class:rtc::__anon32::DebugNonReentrantCritScope	file:
cs_	webrtc/base/signalthread.h	/^  CriticalSection cs_;$/;"	m	class:rtc::SignalThread
cs_	webrtc/base/stream.h	/^    CriticalSection cs_;$/;"	m	class:rtc::StreamReference::StreamRefCount
cs_	webrtc/base/thread_unittest.cc	/^  CriticalSection cs_;$/;"	m	class:AtomicBool	file:
cs_	webrtc/base/win32socketserver.h	/^  CriticalSection cs_;$/;"	m	class:rtc::Win32SocketServer
cs_exclusive_	webrtc/base/sharedexclusivelock.h	/^  rtc::CriticalSection cs_exclusive_;$/;"	m	class:rtc::SharedExclusiveLock
cs_shared_	webrtc/base/sharedexclusivelock.h	/^  rtc::CriticalSection cs_shared_;$/;"	m	class:rtc::SharedExclusiveLock
ctx	webrtc/base/httpcommon.cc	/^  CtxtHandle ctx;$/;"	m	struct:rtc::NegotiateAuthContext	file:
ctx_	webrtc/base/md5digest.h	/^  MD5Context ctx_;$/;"	m	class:rtc::Md5Digest
ctx_	webrtc/base/openssldigest.h	/^  EVP_MD_CTX ctx_;$/;"	m	class:rtc::OpenSSLDigest
ctx_	webrtc/base/sha1digest.h	/^  SHA1_CTX ctx_;$/;"	m	class:rtc::Sha1Digest
ctx_sev_	webrtc/base/logging.h	/^  static LoggingSeverity min_sev_, dbg_sev_, ctx_sev_;$/;"	m	class:rtc::LogMessage
cumulative_lost	webrtc/common_types.h	/^  uint32_t cumulative_lost;$/;"	m	struct:webrtc::RtcpStatistics
curAvgMagnEnergy	webrtc/modules/audio_processing/ns/nsx_core.h	/^  uint32_t                curAvgMagnEnergy;$/;"	m	struct:NoiseSuppressionFixedC_
currentAccelerateRate	webrtc/common_types.h	/^  uint16_t currentAccelerateRate;$/;"	m	struct:webrtc::NetworkStatistics
currentBufferSize	webrtc/common_types.h	/^  uint16_t currentBufferSize;$/;"	m	struct:webrtc::NetworkStatistics
currentDelay	webrtc/modules/audio_processing/aecm/aecm_core.h	/^    uint16_t currentDelay;$/;"	m	struct:__anon164
currentDiscardRate	webrtc/common_types.h	/^  uint16_t currentDiscardRate;$/;"	m	struct:webrtc::NetworkStatistics
currentExpandRate	webrtc/common_types.h	/^  uint16_t currentExpandRate;$/;"	m	struct:webrtc::NetworkStatistics
currentPacketLossRate	webrtc/common_types.h	/^  uint16_t currentPacketLossRate;$/;"	m	struct:webrtc::NetworkStatistics
currentPreemptiveRate	webrtc/common_types.h	/^  uint16_t currentPreemptiveRate;$/;"	m	struct:webrtc::NetworkStatistics
currentSecondaryDecodedRate	webrtc/common_types.h	/^  uint16_t currentSecondaryDecodedRate;$/;"	m	struct:webrtc::NetworkStatistics
currentSpeechExpandRate	webrtc/common_types.h	/^  uint16_t currentSpeechExpandRate;$/;"	m	struct:webrtc::NetworkStatistics
currentVADValue	webrtc/modules/audio_processing/aecm/aecm_core.h	/^    int currentVADValue;$/;"	m	struct:__anon164
current_	webrtc/base/httpserver.h	/^    HttpServerTransaction* current_;$/;"	m	class:rtc::HttpServer::Connection
current_	webrtc/modules/audio_processing/intelligibility/intelligibility_utils.h	/^  std::vector<float> current_;$/;"	m	class:webrtc::intelligibility::GainApplier
current_bucket_	webrtc/base/ratetracker.h	/^  size_t current_bucket_;$/;"	m	class:rtc::RateTracker
current_bytes_written_	webrtc/base/filerotatingstream.h	/^  size_t current_bytes_written_;$/;"	m	class:rtc::FileRotatingStream
current_file_index_	webrtc/base/filerotatingstream.h	/^  size_t current_file_index_;$/;"	m	class:rtc::FileRotatingStream
current_framesamples	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  int16_t         current_framesamples;$/;"	m	struct:__anon136
current_index_	webrtc/common_audio/resampler/sinusoidal_linear_chirp_source.h	/^  size_t current_index_;$/;"	m	class:webrtc::SinusoidalLinearChirpSource
current_time_	webrtc/base/faketaskrunner.h	/^  int64_t current_time_;$/;"	m	class:rtc::FakeTaskRunner
current_window_size_ms_	webrtc/base/rate_statistics.h	/^  int64_t current_window_size_ms_;$/;"	m	class:webrtc::RateStatistics
curve	webrtc/base/sslidentity.h	/^    ECCurve curve;$/;"	m	union:rtc::KeyParams::__anon60
custom_assert_logger_	webrtc/base/common.cc	/^static AssertLogger custom_assert_logger_ = NULL;$/;"	m	namespace:rtc	file:
custom_verification_succeeded_	webrtc/base/openssladapter.h	/^  bool custom_verification_succeeded_;$/;"	m	class:rtc::OpenSSLAdapter
custom_verify_callback_	webrtc/base/openssladapter.cc	/^VerificationCallback OpenSSLAdapter::custom_verify_callback_ = NULL;$/;"	m	class:rtc::OpenSSLAdapter	file:
custom_verify_callback_	webrtc/base/openssladapter.h	/^  static VerificationCallback custom_verify_callback_;$/;"	m	class:rtc::OpenSSLAdapter
cyphertext	webrtc/base/base64_unittest.cc	/^  const char* cyphertext;$/;"	m	struct:__anon3	file:
d	webrtc/base/firewallsocketserver.h	/^    FirewallDirection d;$/;"	m	struct:rtc::FirewallSocketServer::Rule
d	webrtc/base/java/src/org/webrtc/Logging.java	/^  public static void d(String tag, String message) {$/;"	m	class:Logging
dBufClean	webrtc/modules/audio_processing/aecm/aecm_core.h	/^    int16_t *dBufClean;$/;"	m	struct:__anon164
dBufClean_buf	webrtc/modules/audio_processing/aecm/aecm_core.h	/^    int16_t dBufClean_buf[PART_LEN2 + 16];  \/\/ nearend$/;"	m	struct:__anon164
dBufNoisy	webrtc/modules/audio_processing/aecm/aecm_core.h	/^    int16_t *dBufNoisy;$/;"	m	struct:__anon164
dBufNoisy_buf	webrtc/modules/audio_processing/aecm/aecm_core.h	/^    int16_t dBufNoisy_buf[PART_LEN2 + 16];  \/\/ nearend$/;"	m	struct:__anon164
dInitMinPow	webrtc/modules/audio_processing/aec/aec_core.h	/^  float dInitMinPow[PART_LEN1];$/;"	m	struct:webrtc::AecCore
dMinPow	webrtc/modules/audio_processing/aec/aec_core.h	/^  float dMinPow[PART_LEN1];$/;"	m	struct:webrtc::AecCore
dPow	webrtc/modules/audio_processing/aec/aec_core.h	/^  float dPow[PART_LEN1];$/;"	m	struct:webrtc::AecCore
damage_	webrtc/base/sslstreamadapter_unittest.cc	/^  bool damage_;$/;"	m	class:SSLStreamAdapterTestBase	file:
damper_state	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_filter.c	/^  double damper_state[PITCH_DAMPORDER];$/;"	m	struct:__anon124	file:
damper_state_dg	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_filter.c	/^  double damper_state_dg[4][PITCH_DAMPORDER];$/;"	m	struct:__anon124	file:
data	webrtc/base/array_view.h	/^  T* data() const { return data_; }$/;"	f	class:rtc::final
data	webrtc/base/buffer.h	/^  U* data() {$/;"	f	class:rtc::BufferT
data	webrtc/base/buffer.h	/^  const U* data() const {$/;"	f	class:rtc::BufferT
data	webrtc/base/copyonwritebuffer.h	/^  T* data() {$/;"	f	class:rtc::CopyOnWriteBuffer
data	webrtc/base/copyonwritebuffer.h	/^  const T* data() const {$/;"	f	class:rtc::CopyOnWriteBuffer
data	webrtc/base/httpbase_unittest.cc	/^  HttpResponseData data;$/;"	m	class:rtc::HttpBaseTest	file:
data	webrtc/base/messagequeue.h	/^  T& data() { return data_; }$/;"	f	class:rtc::TypedMessageData
data	webrtc/base/messagequeue.h	/^  const T& data() const { return data_; }$/;"	f	class:rtc::TypedMessageData
data	webrtc/base/messagequeue.h	/^  const scoped_refptr<T>& data() const { return data_; }$/;"	f	class:rtc::ScopedRefMessageData
data	webrtc/base/messagequeue.h	/^  const std::unique_ptr<T>& data() const { return data_; }$/;"	f	class:rtc::ScopedMessageData
data	webrtc/base/messagequeue.h	/^  scoped_refptr<T>& data() { return data_; }$/;"	f	class:rtc::ScopedRefMessageData
data	webrtc/base/messagequeue.h	/^  std::unique_ptr<T>& data() { return data_; }$/;"	f	class:rtc::ScopedMessageData
data	webrtc/base/trace_event.h	/^     unsigned long long data() const { return data_; }$/;"	f	class:webrtc::trace_event_internal::TraceID::ForceMangle
data	webrtc/base/trace_event.h	/^  unsigned long long data() const { return data_; }$/;"	f	class:webrtc::trace_event_internal::TraceID
data	webrtc/base/type_traits.h	/^  int* data;$/;"	m	struct:rtc::test_has_data_and_size::Test2
data	webrtc/base/virtualsocketserver.cc	/^  const char* data() const { return data_ + consumed_; }$/;"	f	class:rtc::Packet
data	webrtc/base/x11windowpicker.cc	/^  PropertyType* data() {$/;"	f	class:rtc::XWindowProperty
data	webrtc/base/x11windowpicker.cc	/^  const PropertyType* data() const {$/;"	f	class:rtc::XWindowProperty
data	webrtc/common_audio/ring_buffer.h	/^  char* data;$/;"	m	struct:RingBuffer
data	webrtc/common_audio/wav_header.cc	/^  } data;$/;"	m	struct:webrtc::__anon112::WavHeader	typeref:struct:webrtc::__anon112::WavHeader::__anon114	file:
data	webrtc/modules/audio_processing/audio_buffer.cc	/^ChannelBuffer<int16_t>* AudioBuffer::data() {$/;"	f	class:webrtc::AudioBuffer
data	webrtc/modules/audio_processing/audio_buffer.cc	/^const ChannelBuffer<int16_t>* AudioBuffer::data() const {$/;"	f	class:webrtc::AudioBuffer
data	webrtc/modules/audio_processing/beamformer/matrix.h	/^  T* data() { return &data_[0]; }$/;"	f	class:webrtc::Matrix
data	webrtc/modules/audio_processing/beamformer/matrix.h	/^  const T* data() const { return &data_[0]; }$/;"	f	class:webrtc::Matrix
data	webrtc/modules/audio_processing/transient/wpd_node.h	/^  const float* data() const { return data_.get(); }$/;"	f	class:webrtc::WPDNode
dataBuf	webrtc/modules/audio_processing/ns/ns_core.h	/^  float dataBuf[ANAL_BLOCKL_MAX];$/;"	m	struct:NoiseSuppressionC_
dataBufHB	webrtc/modules/audio_processing/ns/ns_core.h	/^  float dataBufHB[NUM_HIGH_BANDS_MAX][ANAL_BLOCKL_MAX];$/;"	m	struct:NoiseSuppressionC_
dataBufHBFX	webrtc/modules/audio_processing/ns/nsx_core.h	/^  int16_t                 dataBufHBFX[NUM_HIGH_BANDS_MAX][ANAL_BLOCKL_MAX];$/;"	m	struct:NoiseSuppressionFixedC_
data_	webrtc/base/array_view.h	/^  T* data_;$/;"	m	class:rtc::final
data_	webrtc/base/buffer.h	/^  std::unique_ptr<T[]> data_;$/;"	m	class:rtc::BufferT
data_	webrtc/base/criticalsection_unittest.cc	/^  PerfTestData* data_ = nullptr;$/;"	m	class:rtc::PerfTestThread	file:
data_	webrtc/base/fakesslidentity.h	/^  std::string data_;$/;"	m	class:rtc::FakeSSLCertificate
data_	webrtc/base/fileutils.h	/^  WIN32_FIND_DATA data_;$/;"	m	class:rtc::DirectoryIterator
data_	webrtc/base/httpbase.h	/^  HttpData* data_;$/;"	m	class:rtc::HttpBase
data_	webrtc/base/messagequeue.h	/^  T data_;$/;"	m	class:rtc::TypedMessageData
data_	webrtc/base/messagequeue.h	/^  T* data_;$/;"	m	class:rtc::DisposeData
data_	webrtc/base/messagequeue.h	/^  scoped_refptr<T> data_;$/;"	m	class:rtc::ScopedRefMessageData
data_	webrtc/base/messagequeue.h	/^  std::unique_ptr<T> data_;$/;"	m	class:rtc::ScopedMessageData
data_	webrtc/base/ssladapter_unittest.cc	/^  std::string data_;$/;"	m	class:SSLAdapterTestDummyClient	file:
data_	webrtc/base/ssladapter_unittest.cc	/^  std::string data_;$/;"	m	class:SSLAdapterTestDummyServer	file:
data_	webrtc/base/stringencode_unittest.cc	/^  char data_[10];$/;"	m	class:rtc::HexEncodeTest	file:
data_	webrtc/base/trace_event.h	/^     unsigned long long data_;$/;"	m	class:webrtc::trace_event_internal::TraceID::ForceMangle
data_	webrtc/base/trace_event.h	/^  Data data_;$/;"	m	class:webrtc::trace_event_internal::TraceEndOnScopeClose
data_	webrtc/base/trace_event.h	/^  unsigned long long data_;$/;"	m	class:webrtc::trace_event_internal::TraceID
data_	webrtc/base/virtualsocketserver.cc	/^  char* data_;$/;"	m	class:rtc::Packet	file:
data_	webrtc/base/winping.h	/^    char* data_;$/;"	m	class:rtc::WinPing
data_	webrtc/base/x11windowpicker.cc	/^  unsigned char* data_;$/;"	m	class:rtc::XWindowProperty	file:
data_	webrtc/common_audio/channel_buffer.h	/^  std::unique_ptr<T[]> data_;$/;"	m	class:webrtc::ChannelBuffer
data_	webrtc/modules/audio_processing/audio_buffer.h	/^  std::unique_ptr<IFChannelBuffer> data_;$/;"	m	class:webrtc::AudioBuffer
data_	webrtc/modules/audio_processing/beamformer/matrix.h	/^  std::vector<T> data_;$/;"	m	class:webrtc::Matrix
data_	webrtc/modules/audio_processing/transient/wpd_node.h	/^  std::unique_ptr<float[]> data_;$/;"	m	class:webrtc::WPDNode
data_	webrtc/modules/include/module_common_types.h	/^  int16_t data_[kMaxDataSizeSamples];$/;"	m	class:webrtc::AudioFrame
data_buffer_float	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  float                   data_buffer_float[MAX_FRAMESAMPLES +$/;"	m	struct:__anon137
data_buffer_float	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  float               data_buffer_float[FRAMESAMPLES_30ms];$/;"	m	struct:__anon136
data_dumper	webrtc/modules/audio_processing/aec/aec_core.h	/^  std::unique_ptr<ApmDataDumper> data_dumper;$/;"	m	struct:webrtc::AecCore
data_dumper	webrtc/modules/audio_processing/aec/echo_cancellation.h	/^  std::unique_ptr<ApmDataDumper> data_dumper;$/;"	m	struct:webrtc::Aec
data_dumper_	webrtc/modules/audio_processing/gain_control_for_experimental_agc.h	/^  std::unique_ptr<ApmDataDumper> data_dumper_;$/;"	m	class:webrtc::GainControlForExperimentalAgc
data_dumper_	webrtc/modules/audio_processing/gain_control_impl.h	/^  std::unique_ptr<ApmDataDumper> data_dumper_;$/;"	m	class:webrtc::GainControlImpl
data_dumper_	webrtc/modules/audio_processing/level_controller/down_sampler.h	/^  ApmDataDumper* data_dumper_;$/;"	m	class:webrtc::DownSampler
data_dumper_	webrtc/modules/audio_processing/level_controller/gain_applier.h	/^  ApmDataDumper* const data_dumper_;$/;"	m	class:webrtc::GainApplier
data_dumper_	webrtc/modules/audio_processing/level_controller/level_controller.h	/^  std::unique_ptr<ApmDataDumper> data_dumper_;$/;"	m	class:webrtc::LevelController
data_dumper_	webrtc/modules/audio_processing/level_controller/noise_spectrum_estimator.h	/^  ApmDataDumper* data_dumper_;$/;"	m	class:webrtc::NoiseSpectrumEstimator
data_dumper_	webrtc/modules/audio_processing/level_controller/signal_classifier.h	/^  ApmDataDumper* const data_dumper_;$/;"	m	class:webrtc::SignalClassifier
data_f	webrtc/modules/audio_processing/audio_buffer.cc	/^ChannelBuffer<float>* AudioBuffer::data_f() {$/;"	f	class:webrtc::AudioBuffer
data_f	webrtc/modules/audio_processing/audio_buffer.cc	/^const ChannelBuffer<float>* AudioBuffer::data_f() const {$/;"	f	class:webrtc::AudioBuffer
data_in_	webrtc/common_audio/resampler/resampler_unittest.cc	/^  int16_t data_in_[kDataSize];$/;"	m	class:webrtc::__anon86::ResamplerTest	file:
data_len_	webrtc/base/socketadapters.h	/^  size_t buffer_size_, data_len_;$/;"	m	class:rtc::BufferedReadAdapter
data_length_	webrtc/base/stream.h	/^  size_t data_length_;$/;"	m	class:rtc::MemoryStreamBase
data_length_	webrtc/modules/audio_processing/transient/transient_suppressor.h	/^  size_t data_length_;$/;"	m	class:webrtc::TransientSuppressor
data_length_	webrtc/modules/audio_processing/transient/wpd_tree.h	/^  size_t data_length_;$/;"	m	class:webrtc::WPDTree
data_out_	webrtc/common_audio/resampler/resampler_unittest.cc	/^  int16_t data_out_[kDataSize];$/;"	m	class:webrtc::__anon86::ResamplerTest	file:
data_size	webrtc/base/httpbase_unittest.cc	/^    size_t data_size;$/;"	m	struct:rtc::HttpBaseTest::Event	file:
data_size_	webrtc/base/httpbase.h	/^  size_t data_size_;$/;"	m	class:rtc::HttpParser
dbg_addr_	webrtc/base/physicalsocketserver.h	/^  std::string dbg_addr_;$/;"	m	class:rtc::PhysicalSocket
dbg_sev_	webrtc/base/logging.cc	/^LoggingSeverity LogMessage::dbg_sev_ = LS_INFO;$/;"	m	class:rtc::LogMessage	file:
dbg_sev_	webrtc/base/logging.cc	/^LoggingSeverity LogMessage::dbg_sev_ = LS_NONE;$/;"	m	class:rtc::LogMessage	file:
dbg_sev_	webrtc/base/logging.h	/^  static LoggingSeverity min_sev_, dbg_sev_, ctx_sev_;$/;"	m	class:rtc::LogMessage
dc_forgetting_factor_	webrtc/modules/audio_processing/level_controller/level_controller.h	/^  float dc_forgetting_factor_;$/;"	m	class:webrtc::LevelController
dc_level_	webrtc/modules/audio_processing/level_controller/level_controller.h	/^  float dc_level_[2];$/;"	m	class:webrtc::LevelController
dct_modulation_	webrtc/modules/audio_processing/three_band_filter_bank.h	/^  std::vector<std::vector<float>> dct_modulation_;$/;"	m	class:webrtc::final
debug_dump_	webrtc/modules/audio_processing/audio_processing_impl.h	/^  ApmDebugDumpState debug_dump_;$/;"	m	class:webrtc::AudioProcessingImpl
debug_dump_replayer_	webrtc/modules/audio_processing/test/debug_dump_test.cc	/^  DebugDumpReplayer debug_dump_replayer_;$/;"	m	class:webrtc::test::DebugDumpTest	file:
debug_file	webrtc/modules/audio_processing/audio_processing_impl.h	/^    std::unique_ptr<FileWrapper> debug_file;$/;"	m	struct:webrtc::AudioProcessingImpl::ApmDebugDumpState
debug_file_	webrtc/modules/audio_processing/test/debug_dump_replayer.h	/^  FILE* debug_file_;$/;"	m	class:webrtc::test::DebugDumpReplayer
dec_buffer	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  double         dec_buffer[PITCH_CORR_LEN2 + PITCH_CORR_STEP2 +$/;"	m	struct:__anon130
dec_res_	webrtc/base/stringencode_unittest.cc	/^  size_t dec_res_;$/;"	m	class:rtc::HexEncodeTest	file:
decay_	webrtc/modules/audio_processing/intelligibility/intelligibility_utils.h	/^  const float decay_;$/;"	m	class:webrtc::intelligibility::PowerEstimator
decimator_state	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  double        decimator_state[2*ALLPASSSECTIONS+1];$/;"	m	struct:__anon130
decode	webrtc/base/stringencode.cc	/^size_t decode(char * buffer, size_t buflen,$/;"	f	namespace:rtc
decoded_	webrtc/base/stringencode_unittest.cc	/^  char decoded_[11];$/;"	m	class:rtc::HexEncodeTest	file:
decoded_cng	webrtc/common_types.h	/^  int decoded_cng;  \/\/ Number of calls where comfort noise generated due to DTX.$/;"	m	struct:webrtc::AudioDecodingCallStats
decoded_muted_output	webrtc/common_types.h	/^  int decoded_muted_output;  \/\/ Number of calls returning a muted state output.$/;"	m	struct:webrtc::AudioDecodingCallStats
decoded_normal	webrtc/common_types.h	/^  int decoded_normal;  \/\/ Number of calls where audio RTP packet decoded.$/;"	m	struct:webrtc::AudioDecodingCallStats
decoded_plc	webrtc/common_types.h	/^  int decoded_plc;     \/\/ Number of calls resulted in PLC.$/;"	m	struct:webrtc::AudioDecodingCallStats
decoded_plc_cng	webrtc/common_types.h	/^  int decoded_plc_cng;  \/\/ Number of calls resulted where PLC faded to CNG.$/;"	m	struct:webrtc::AudioDecodingCallStats
decoderSamplingRateKHz	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  enum IsacSamplingRate decoderSamplingRateKHz;$/;"	m	struct:__anon144	typeref:enum:__anon144::IsacSamplingRate
def_	webrtc/base/proxydetect.cc	/^  mutable std::string def_;$/;"	m	struct:StringMap	file:
defaultConfig	webrtc/modules/audio_processing/agc/legacy/analog_agc.h	/^  WebRtcAgcConfig defaultConfig;$/;"	m	struct:__anon171
default_	webrtc/base/flags.h	/^  FlagValue default_;$/;"	m	class:rtc::Flag
default_filesystem	webrtc/base/fileutils.h	/^  static FilesystemInterface *default_filesystem() {$/;"	f	class:rtc::Filesystem
default_filesystem_	webrtc/base/fileutils.cc	/^FilesystemInterface* Filesystem::default_filesystem_ = NULL;$/;"	m	class:rtc::Filesystem	file:
default_filesystem_	webrtc/base/fileutils.h	/^  static FilesystemInterface* default_filesystem_;$/;"	m	class:rtc::Filesystem
default_local_address_provider	webrtc/base/network.h	/^  const DefaultLocalAddressProvider* default_local_address_provider() {$/;"	f	class:rtc::Network
default_local_address_provider_	webrtc/base/network.h	/^  const DefaultLocalAddressProvider* default_local_address_provider_ = nullptr;$/;"	m	class:rtc::Network
default_local_ipv4_address_	webrtc/base/fakenetwork.h	/^  IPAddress default_local_ipv4_address_;$/;"	m	class:rtc::FakeNetworkManager
default_local_ipv4_address_	webrtc/base/network.h	/^  IPAddress default_local_ipv4_address_;$/;"	m	class:rtc::NetworkManagerBase
default_local_ipv6_address_	webrtc/base/fakenetwork.h	/^  IPAddress default_local_ipv6_address_;$/;"	m	class:rtc::FakeNetworkManager
default_local_ipv6_address_	webrtc/base/network.h	/^  IPAddress default_local_ipv6_address_;$/;"	m	class:rtc::NetworkManagerBase
default_route_v4_	webrtc/base/virtualsocketserver.h	/^  IPAddress default_route_v4_;$/;"	m	class:rtc::VirtualSocketServer
default_route_v6_	webrtc/base/virtualsocketserver.h	/^  IPAddress default_route_v6_;$/;"	m	class:rtc::VirtualSocketServer
default_size_	webrtc/base/bufferqueue.h	/^  size_t default_size_;$/;"	m	class:rtc::BufferQueue
default_value	webrtc/modules/audio_processing/include/config.h	/^  static const T& default_value() {$/;"	f	class:webrtc::Config
defer_error_	webrtc/base/socketadapters.h	/^  int defer_error_;$/;"	m	class:rtc::AsyncHttpsProxySocket
delayChange	webrtc/modules/audio_processing/aecm/echo_control_mobile.cc	/^    int delayChange;$/;"	m	struct:__anon165	file:
delayCtr	webrtc/modules/audio_processing/aec/echo_cancellation.h	/^  int delayCtr;$/;"	m	struct:webrtc::Aec
delayEstCtr	webrtc/modules/audio_processing/aec/aec_core.h	/^  int delayEstCtr;$/;"	m	struct:webrtc::AecCore
delayFile	webrtc/modules/audio_processing/aecm/echo_control_mobile.cc	/^    FILE *delayFile;$/;"	m	struct:__anon165	file:
delayIdx	webrtc/modules/audio_processing/aec/aec_core.h	/^  int delayIdx;$/;"	m	struct:webrtc::AecCore
delay_	webrtc/base/sslstreamadapter_unittest.cc	/^  int delay_;$/;"	m	class:SSLStreamAdapterTestBase	file:
delay_agnostic_enabled	webrtc/modules/audio_processing/aec/aec_core.h	/^  int delay_agnostic_enabled;$/;"	m	struct:webrtc::AecCore
delay_by_ip_	webrtc/base/virtualsocketserver.h	/^  std::map<rtc::IPAddress, int> delay_by_ip_;$/;"	m	class:rtc::VirtualSocketServer
delay_correction_count	webrtc/modules/audio_processing/aec/aec_core.h	/^  int delay_correction_count;$/;"	m	struct:webrtc::AecCore
delay_crit_	webrtc/base/virtualsocketserver.h	/^  CriticalSection delay_crit_;$/;"	m	class:rtc::VirtualSocketServer
delay_dist_	webrtc/base/virtualsocketserver.h	/^  std::unique_ptr<Function> delay_dist_;$/;"	m	class:rtc::VirtualSocketServer
delay_estimator	webrtc/modules/audio_processing/aec/aec_core.h	/^  void* delay_estimator;$/;"	m	struct:webrtc::AecCore
delay_estimator	webrtc/modules/audio_processing/aecm/aecm_core.h	/^    void* delay_estimator;$/;"	m	struct:__anon164
delay_estimator_farend	webrtc/modules/audio_processing/aec/aec_core.h	/^  void* delay_estimator_farend;$/;"	m	struct:webrtc::AecCore
delay_estimator_farend	webrtc/modules/audio_processing/aecm/aecm_core.h	/^    void* delay_estimator_farend;$/;"	m	struct:__anon164
delay_histogram	webrtc/modules/audio_processing/aec/aec_core.h	/^  int delay_histogram[kHistorySizeBlocks];$/;"	m	struct:webrtc::AecCore
delay_logging	webrtc/modules/audio_processing/aec/echo_cancellation.h	/^  int delay_logging;    \/\/ default kAecFalse$/;"	m	struct:webrtc::__anon159
delay_logging_enabled	webrtc/modules/audio_processing/aec/aec_core.h	/^  int delay_logging_enabled;$/;"	m	struct:webrtc::AecCore
delay_mean	webrtc/base/virtualsocketserver.h	/^  uint32_t delay_mean() const { return delay_mean_; }$/;"	f	class:rtc::VirtualSocketServer
delay_mean_	webrtc/base/virtualsocketserver.h	/^  uint32_t delay_mean_;$/;"	m	class:rtc::VirtualSocketServer
delay_median	webrtc/modules/audio_processing/aec/aec_core.h	/^  int delay_median;$/;"	m	struct:webrtc::AecCore
delay_median	webrtc/modules/audio_processing/include/audio_processing.h	/^    int delay_median = 0;$/;"	m	struct:webrtc::AudioProcessing::AudioProcessingStatistics
delay_metrics_delivered	webrtc/modules/audio_processing/aec/aec_core.h	/^  int delay_metrics_delivered;$/;"	m	struct:webrtc::AecCore
delay_offset_ms	webrtc/modules/audio_processing/audio_processing_impl.cc	/^int AudioProcessingImpl::delay_offset_ms() const {$/;"	f	class:webrtc::AudioProcessingImpl
delay_offset_ms	webrtc/modules/audio_processing/audio_processing_impl.h	/^    int delay_offset_ms;$/;"	m	struct:webrtc::AudioProcessingImpl::ApmCaptureState
delay_quality_threshold	webrtc/modules/audio_processing/aec/aec_core.h	/^  float delay_quality_threshold;$/;"	m	struct:webrtc::AecCore
delay_samples	webrtc/base/virtualsocketserver.h	/^  uint32_t delay_samples() const { return delay_samples_; }$/;"	f	class:rtc::VirtualSocketServer
delay_samples_	webrtc/base/virtualsocketserver.h	/^  uint32_t delay_samples_;$/;"	m	class:rtc::VirtualSocketServer
delay_samples_	webrtc/common_audio/resampler/sinusoidal_linear_chirp_source.h	/^  double delay_samples_;$/;"	m	class:webrtc::SinusoidalLinearChirpSource
delay_standard_deviation	webrtc/modules/audio_processing/include/audio_processing.h	/^    int delay_standard_deviation = 0;$/;"	m	struct:webrtc::AudioProcessing::AudioProcessingStatistics
delay_std	webrtc/modules/audio_processing/aec/aec_core.h	/^  int delay_std;$/;"	m	struct:webrtc::AecCore
delay_stddev	webrtc/base/virtualsocketserver.h	/^  uint32_t delay_stddev() const { return delay_stddev_; }$/;"	f	class:rtc::VirtualSocketServer
delay_stddev_	webrtc/base/virtualsocketserver.h	/^  uint32_t delay_stddev_;$/;"	m	class:rtc::VirtualSocketServer
delay_sum_masks_	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.h	/^  ComplexMatrixF delay_sum_masks_[kNumFreqBins];$/;"	m	class:webrtc::NonlinearBeamformer
deleted	webrtc/base/messagequeue_unittest.cc	/^  bool* deleted;$/;"	m	struct:DeletedLockChecker	file:
deleted_	webrtc/base/messagequeue_unittest.cc	/^  bool* deleted_;$/;"	m	class:DeletedMessageHandler	file:
deleting_task_	webrtc/base/taskrunner.h	/^  Task* deleting_task_;$/;"	m	class:rtc::TaskRunner
delta_	webrtc/base/timedelta.h	/^  int64_t delta_;$/;"	m	class:rtc::TimeDelta
delta_frames	webrtc/common_types.h	/^  int delta_frames;$/;"	m	struct:webrtc::FrameCounts
denoiseBound	webrtc/modules/audio_processing/ns/ns_core.h	/^  float denoiseBound;$/;"	m	struct:NoiseSuppressionC_
denoiseBound	webrtc/modules/audio_processing/ns/nsx_core.h	/^  uint16_t                denoiseBound; \/* Q14 *\/$/;"	m	struct:NoiseSuppressionFixedC_
denoisingOn	webrtc/common_types.h	/^  bool denoisingOn;$/;"	m	struct:webrtc::VideoCodecVP8
denoisingOn	webrtc/common_types.h	/^  bool denoisingOn;$/;"	m	struct:webrtc::VideoCodecVP9
denominator_coefficients_	webrtc/modules/audio_processing/vad/pole_zero_filter.h	/^  float denominator_coefficients_[kMaxFilterOrder + 1];$/;"	m	class:webrtc::PoleZeroFilter
density	webrtc/modules/audio_processing/ns/ns_core.h	/^  float density[SIMULT * HALF_ANAL_BLOCKL];$/;"	m	struct:NoiseSuppressionC_
ders	webrtc/base/sslidentity_unittest.cc	/^  std::vector<std::string> ders;$/;"	m	struct:IdentityAndInfo	file:
description	webrtc/base/network.h	/^  const std::string& description() const { return description_; }$/;"	f	class:rtc::Network
description_	webrtc/base/network.h	/^  std::string description_;$/;"	m	class:rtc::Network
dest_	webrtc/base/socketadapters.h	/^  SocketAddress proxy_, dest_;$/;"	m	class:rtc::AsyncHttpsProxySocket
dest_	webrtc/base/socketadapters.h	/^  SocketAddress proxy_, dest_;$/;"	m	class:rtc::AsyncSocksProxySocket
dest_	webrtc/base/socketaddresspair.h	/^  SocketAddress dest_;$/;"	m	class:rtc::SocketAddressPair
destination	webrtc/base/socketaddresspair.h	/^  const SocketAddress& destination() const { return dest_; }$/;"	f	class:rtc::SocketAddressPair
destination_frames_	webrtc/common_audio/resampler/push_sinc_resampler.h	/^  const size_t destination_frames_;$/;"	m	class:webrtc::PushSincResampler
destroyed	webrtc/base/win32window_unittest.cc	/^  bool destroyed() const { return destroyed_; }$/;"	f	class:TestWindow
destroyed_	webrtc/base/win32window_unittest.cc	/^  bool destroyed_;$/;"	m	class:TestWindow	file:
destroying_	webrtc/base/asyncinvoker.h	/^  bool destroying_;$/;"	m	class:rtc::AsyncInvoker
detach	webrtc/base/httpbase.cc	/^HttpBase::detach() {$/;"	f	class:rtc::HttpBase
detachThread	webrtc/base/java/src/org/webrtc/ThreadUtils.java	/^    public void detachThread() {$/;"	m	class:ThreadUtils.ThreadChecker
detail	webrtc/base/bind.h	/^namespace detail {$/;"	n	namespace:rtc
detect_	webrtc/base/sslsocketfactory.cc	/^  AutoDetectProxy* detect_;$/;"	m	class:rtc::ProxySocketAdapter	file:
detection_buffer_	webrtc/modules/audio_processing/transient/transient_suppressor.h	/^  std::unique_ptr<float[]> detection_buffer_;$/;"	m	class:webrtc::TransientSuppressor
detection_enabled_	webrtc/modules/audio_processing/transient/transient_suppressor.h	/^  bool detection_enabled_;$/;"	m	class:webrtc::TransientSuppressor
detection_length_	webrtc/modules/audio_processing/transient/transient_suppressor.h	/^  size_t detection_length_;$/;"	m	class:webrtc::TransientSuppressor
detection_to_report_	webrtc/modules/audio_processing/typing_detection.h	/^  bool detection_to_report_;$/;"	m	class:webrtc::TypingDetection
detector_	webrtc/modules/audio_processing/transient/transient_suppressor.h	/^  std::unique_ptr<TransientDetector> detector_;$/;"	m	class:webrtc::TransientSuppressor
detector_smoothed_	webrtc/modules/audio_processing/transient/transient_suppressor.h	/^  float detector_smoothed_;$/;"	m	class:webrtc::TransientSuppressor
deviceSampleRateHz	webrtc/modules/audio_processing/aec/aec_resampler.cc	/^  int deviceSampleRateHz;$/;"	m	struct:webrtc::__anon154	file:
dfaCleanQDomain	webrtc/modules/audio_processing/aecm/aecm_core.h	/^    int16_t dfaCleanQDomain;$/;"	m	struct:__anon164
dfaCleanQDomainOld	webrtc/modules/audio_processing/aecm/aecm_core.h	/^    int16_t dfaCleanQDomainOld;$/;"	m	struct:__anon164
dfaNoisyQDomain	webrtc/modules/audio_processing/aecm/aecm_core.h	/^    int16_t dfaNoisyQDomain;$/;"	m	struct:__anon164
dfaNoisyQDomainOld	webrtc/modules/audio_processing/aecm/aecm_core.h	/^    int16_t dfaNoisyQDomainOld;$/;"	m	struct:__anon164
dfile	webrtc/modules/audio_processing/aecm/aecm_core.cc	/^FILE *dfile;$/;"	v
digest	webrtc/base/sslfingerprint.h	/^  rtc::CopyOnWriteBuffer digest;$/;"	m	struct:rtc::SSLFingerprint
digest_algorithm_	webrtc/base/fakesslidentity.h	/^  std::string digest_algorithm_;$/;"	m	class:rtc::FakeSSLCertificate
digitalAgc	webrtc/modules/audio_processing/agc/legacy/analog_agc.h	/^  DigitalAgc digitalAgc;$/;"	m	struct:__anon171
digitalCompressionGaindB	webrtc/common_types.h	/^  unsigned short digitalCompressionGaindB;$/;"	m	struct:webrtc::AgcConfig
dimension	webrtc/modules/audio_processing/vad/gmm.h	/^  int dimension;$/;"	m	struct:webrtc::GmmParameters
dir_	webrtc/base/fileutils.h	/^  DIR *dir_;$/;"	m	class:rtc::DirectoryIterator
dir_path_	webrtc/base/filerotatingstream.h	/^  const std::string dir_path_;$/;"	m	class:rtc::FileRotatingStream
dir_path_	webrtc/base/filerotatingstream_unittest.cc	/^  std::string dir_path_;$/;"	m	class:rtc::MAYBE_CallSessionFileRotatingStreamTest	file:
dir_path_	webrtc/base/filerotatingstream_unittest.cc	/^  std::string dir_path_;$/;"	m	class:rtc::MAYBE_FileRotatingStreamTest	file:
direction_read_	webrtc/base/transformadapter.h	/^  bool direction_read_;$/;"	m	class:rtc::TransformAdapter
directory_	webrtc/base/fileutils.h	/^  std::string directory_;$/;"	m	class:rtc::DirectoryIterator
dirent_	webrtc/base/fileutils.h	/^  struct dirent *dirent_;$/;"	m	class:rtc::DirectoryIterator	typeref:struct:rtc::DirectoryIterator::dirent
disable_buffering_	webrtc/base/filerotatingstream.h	/^  bool disable_buffering_;$/;"	m	class:rtc::FileRotatingStream
discardRate	webrtc/modules/include/module_common_types.h	/^  uint8_t discardRate;$/;"	m	struct:webrtc::RTCPVoIPMetric
discard_all_settings_in_aecdump	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^  bool discard_all_settings_in_aecdump = true;$/;"	m	struct:webrtc::test::SimulationSettings
disconnect	webrtc/base/sigslot.h	/^		void disconnect(has_slots_interface* pclass)$/;"	f	class:sigslot::_signal_base0
disconnect	webrtc/base/sigslot.h	/^		void disconnect(has_slots_interface* pclass)$/;"	f	class:sigslot::_signal_base1
disconnect	webrtc/base/sigslot.h	/^		void disconnect(has_slots_interface* pclass)$/;"	f	class:sigslot::_signal_base2
disconnect	webrtc/base/sigslot.h	/^		void disconnect(has_slots_interface* pclass)$/;"	f	class:sigslot::_signal_base3
disconnect	webrtc/base/sigslot.h	/^		void disconnect(has_slots_interface* pclass)$/;"	f	class:sigslot::_signal_base4
disconnect	webrtc/base/sigslot.h	/^		void disconnect(has_slots_interface* pclass)$/;"	f	class:sigslot::_signal_base5
disconnect	webrtc/base/sigslot.h	/^		void disconnect(has_slots_interface* pclass)$/;"	f	class:sigslot::_signal_base6
disconnect	webrtc/base/sigslot.h	/^		void disconnect(has_slots_interface* pclass)$/;"	f	class:sigslot::_signal_base7
disconnect	webrtc/base/sigslot.h	/^		void disconnect(has_slots_interface* pclass)$/;"	f	class:sigslot::_signal_base8
disconnect_all	webrtc/base/sigslot.h	/^		void disconnect_all()$/;"	f	class:sigslot::_signal_base0
disconnect_all	webrtc/base/sigslot.h	/^		void disconnect_all()$/;"	f	class:sigslot::_signal_base1
disconnect_all	webrtc/base/sigslot.h	/^		void disconnect_all()$/;"	f	class:sigslot::_signal_base2
disconnect_all	webrtc/base/sigslot.h	/^		void disconnect_all()$/;"	f	class:sigslot::_signal_base3
disconnect_all	webrtc/base/sigslot.h	/^		void disconnect_all()$/;"	f	class:sigslot::_signal_base4
disconnect_all	webrtc/base/sigslot.h	/^		void disconnect_all()$/;"	f	class:sigslot::_signal_base5
disconnect_all	webrtc/base/sigslot.h	/^		void disconnect_all()$/;"	f	class:sigslot::_signal_base6
disconnect_all	webrtc/base/sigslot.h	/^		void disconnect_all()$/;"	f	class:sigslot::_signal_base7
disconnect_all	webrtc/base/sigslot.h	/^		void disconnect_all()$/;"	f	class:sigslot::_signal_base8
disconnect_all	webrtc/base/sigslot.h	/^		void disconnect_all()$/;"	f	class:sigslot::has_slots
dispatchers_	webrtc/base/physicalsocketserver.h	/^  DispatcherList dispatchers_;$/;"	m	class:rtc::PhysicalSocketServer
display	webrtc/modules/audio_processing/test/android/apmtest/jni/main.c	/^    EGLDisplay display;$/;"	m	struct:engine	file:
display_	webrtc/base/testutils.h	/^  Display* display_;$/;"	m	struct:testing::XDisplay
display_	webrtc/base/x11windowpicker.cc	/^  Display* display_;$/;"	m	class:rtc::XErrorSuppressor	file:
display_	webrtc/base/x11windowpicker.cc	/^  Display* display_;$/;"	m	class:rtc::XWindowEnumerator	file:
distance	webrtc/modules/audio_processing/beamformer/array_util.h	/^  T distance() const { return s[2]; }$/;"	f	struct:webrtc::SphericalPoint
divergeState	webrtc/modules/audio_processing/aec/aec_core.h	/^  short divergeState;$/;"	m	struct:webrtc::AecCore
divergent_filter_fraction	webrtc/modules/audio_processing/aec/aec_core.h	/^  DivergentFilterFraction divergent_filter_fraction;$/;"	m	struct:webrtc::AecCore
divergent_filter_fraction	webrtc/modules/audio_processing/aec/echo_cancellation.h	/^  float divergent_filter_fraction;$/;"	m	struct:webrtc::__anon161
divergent_filter_fraction	webrtc/modules/audio_processing/include/audio_processing.h	/^    float divergent_filter_fraction = 0.0f;$/;"	m	struct:webrtc::AudioProcessing::AudioProcessingStatistics
divergent_filter_fraction	webrtc/modules/audio_processing/include/audio_processing.h	/^    float divergent_filter_fraction;$/;"	m	struct:webrtc::EchoCancellation::Metrics
dlen_	webrtc/base/winping.h	/^    uint32_t dlen_;$/;"	m	class:rtc::WinPing
dll_	webrtc/base/winping.h	/^    HMODULE dll_;$/;"	m	class:rtc::WinPing
dll_name	webrtc/base/latebindingsymboltable.h	/^    const char *dll_name;$/;"	m	struct:rtc::LateBindingSymbolTable::TableInfo
dns_	webrtc/base/win32socketserver.h	/^  DnsLookup * dns_;$/;"	m	class:rtc::Win32Socket
do_complete	webrtc/base/httpbase.cc	/^HttpBase::do_complete(HttpError err) {$/;"	f	class:rtc::HttpBase
do_get_address	webrtc/base/httpcommon-inl.h	/^void Url<CTYPE>::do_get_address(string* val) const {$/;"	f	class:rtc::Url
do_get_full_path	webrtc/base/httpcommon-inl.h	/^void Url<CTYPE>::do_get_full_path(string* val) const {$/;"	f	class:rtc::Url
do_get_url	webrtc/base/httpcommon-inl.h	/^void Url<CTYPE>::do_get_url(string* val) const {$/;"	f	class:rtc::Url
do_main	webrtc/modules/audio_processing/test/unpack.cc	/^int do_main(int argc, char* argv[]) {$/;"	f	namespace:webrtc
do_set_address	webrtc/base/httpcommon-inl.h	/^void Url<CTYPE>::do_set_address(const CTYPE* val, size_t len) {$/;"	f	class:rtc::Url
do_set_full_path	webrtc/base/httpcommon-inl.h	/^void Url<CTYPE>::do_set_full_path(const CTYPE* val, size_t len) {$/;"	f	class:rtc::Url
do_set_url	webrtc/base/httpcommon-inl.h	/^void Url<CTYPE>::do_set_url(const CTYPE* val, size_t len) {$/;"	f	class:rtc::Url
doc_stream_	webrtc/base/httpbase.h	/^  DocumentStream* doc_stream_;$/;"	m	class:rtc::HttpBase
document	webrtc/base/httpcommon.h	/^  std::unique_ptr<StreamInterface> document;$/;"	m	struct:rtc::HttpData
done	webrtc/base/httprequest.h	/^  bool done() const { return complete_; }$/;"	f	class:rtc::HttpMonitor
done	webrtc/base/virtualsocket_unittest.cc	/^  bool done;$/;"	m	struct:Receiver	file:
done	webrtc/base/virtualsocket_unittest.cc	/^  bool done;$/;"	m	struct:Sender	file:
done_	webrtc/base/autodetectproxy_unittest.cc	/^  bool done_;$/;"	m	class:rtc::AutoDetectProxyTest	file:
done_	webrtc/base/sharedexclusivelock_unittest.cc	/^  Event* done_;$/;"	m	class:rtc::SharedExclusiveTask	file:
done_	webrtc/base/task.h	/^  bool done_;$/;"	m	class:rtc::Task
done_	webrtc/base/thread_unittest.cc	/^  bool done_;$/;"	m	class:ComThreadTest	file:
done_event_	webrtc/base/criticalsection_unittest.cc	/^  Event done_event_;$/;"	m	class:rtc::__anon10::RunnerBase	file:
done_time	webrtc/base/virtualsocketserver.h	/^    int64_t done_time;$/;"	m	struct:rtc::VirtualSocket::NetworkEntry
downState	webrtc/modules/audio_processing/agc/legacy/digital_agc.h	/^  int32_t downState[8];$/;"	m	struct:__anon173
down_sampler_	webrtc/modules/audio_processing/level_controller/signal_classifier.h	/^  DownSampler down_sampler_;$/;"	m	class:webrtc::SignalClassifier
down_sampling_factor_	webrtc/modules/audio_processing/level_controller/down_sampler.h	/^  int down_sampling_factor_;$/;"	m	class:webrtc::DownSampler
downsampling_filter_states	webrtc/common_audio/vad/vad_core.h	/^    int32_t downsampling_filter_states[4];$/;"	m	struct:VadInstT_
drop_prob_	webrtc/base/virtualsocketserver.h	/^  double drop_prob_;$/;"	m	class:rtc::VirtualSocketServer
drop_probability	webrtc/base/virtualsocketserver.h	/^  double drop_probability() { return drop_prob_; }$/;"	f	class:rtc::VirtualSocketServer
dscp	webrtc/base/asyncpacketsocket.h	/^  DiffServCodePoint dscp;$/;"	m	struct:rtc::PacketOptions
dst	webrtc/base/firewallsocketserver.h	/^    SocketAddress dst;$/;"	m	struct:rtc::FirewallSocketServer::Rule
dst_channels	webrtc/common_audio/audio_converter.h	/^  size_t dst_channels() const { return dst_channels_; }$/;"	f	class:webrtc::AudioConverter
dst_channels_	webrtc/common_audio/audio_converter.h	/^  const size_t dst_channels_;$/;"	m	class:webrtc::AudioConverter
dst_frames	webrtc/common_audio/audio_converter.h	/^  size_t dst_frames() const { return dst_frames_; }$/;"	f	class:webrtc::AudioConverter
dst_frames_	webrtc/common_audio/audio_converter.h	/^  const size_t dst_frames_;$/;"	m	class:webrtc::AudioConverter
dst_left_	webrtc/common_audio/resampler/include/push_resampler.h	/^  std::unique_ptr<T[]> dst_left_;$/;"	m	class:webrtc::PushResampler
dst_right_	webrtc/common_audio/resampler/include/push_resampler.h	/^  std::unique_ptr<T[]> dst_right_;$/;"	m	class:webrtc::PushResampler
dst_sample_rate_hz_	webrtc/common_audio/resampler/include/push_resampler.h	/^  int dst_sample_rate_hz_;$/;"	m	class:webrtc::PushResampler
dtls_	webrtc/base/sslstreamadapter_unittest.cc	/^  bool dtls_;$/;"	m	class:SSLStreamAdapterTestBase	file:
dummy	webrtc/base/bind.h	/^  struct No { char dummy[2]; };$/;"	m	struct:rtc::detail::IsRefCounted::No
dummy	webrtc/base/bind.h	/^  struct Yes { char dummy[1]; };$/;"	m	struct:rtc::detail::IsRefCounted::Yes
dummy	webrtc/base/bind_unittest.cc	/^struct A { int dummy; };$/;"	m	struct:rtc::__anon4::A	file:
dummy	webrtc/base/bind_unittest.cc	/^struct B: public RefCountInterface { int dummy; };$/;"	m	struct:rtc::__anon4::B	file:
dummy	webrtc/base/template_util.h	/^  YesType dummy[2];$/;"	m	struct:rtc::internal::NoType
dummy	webrtc/base/virtualsocket_unittest.cc	/^  char dummy[4096];$/;"	m	struct:Sender	file:
dump_file_name	webrtc/modules/audio_processing/test/debug_dump_test.cc	/^  std::string dump_file_name() const { return dump_file_name_; }$/;"	f	class:webrtc::test::__anon223::DebugDumpGenerator
dump_file_name_	webrtc/modules/audio_processing/test/debug_dump_test.cc	/^  const std::string dump_file_name_;$/;"	m	class:webrtc::test::__anon223::DebugDumpGenerator	file:
dump_input_file_	webrtc/modules/audio_processing/test/aec_dump_based_simulator.h	/^  FILE* dump_input_file_;$/;"	m	class:webrtc::test::final
duplicate	webrtc/base/sigslot.h	/^			arg5_type, arg6_type, arg7_type, arg8_type, mt_policy>* duplicate(has_slots_interface* pnewdest)$/;"	f	class:sigslot::_connection8
duplicate	webrtc/base/sigslot.h	/^			arg5_type, arg6_type, arg7_type, mt_policy>* duplicate(has_slots_interface* pnewdest)$/;"	f	class:sigslot::_connection7
duplicate	webrtc/base/sigslot.h	/^			arg5_type, arg6_type, mt_policy>* duplicate(has_slots_interface* pnewdest)$/;"	f	class:sigslot::_connection6
duplicate	webrtc/base/sigslot.h	/^			arg5_type, mt_policy>* duplicate(has_slots_interface* pnewdest)$/;"	f	class:sigslot::_connection5
duplicate	webrtc/base/sigslot.h	/^		virtual _connection_base0<mt_policy>* duplicate(has_slots_interface* pnewdest)$/;"	f	class:sigslot::_connection0
duplicate	webrtc/base/sigslot.h	/^		virtual _connection_base1<arg1_type, mt_policy>* duplicate(has_slots_interface* pnewdest)$/;"	f	class:sigslot::_connection1
duplicate	webrtc/base/sigslot.h	/^		virtual _connection_base2<arg1_type, arg2_type, mt_policy>* duplicate(has_slots_interface* pnewdest)$/;"	f	class:sigslot::_connection2
duplicate	webrtc/base/sigslot.h	/^		virtual _connection_base3<arg1_type, arg2_type, arg3_type, mt_policy>* duplicate(has_slots_interface* pnewdest)$/;"	f	class:sigslot::_connection3
duplicate	webrtc/base/sigslot.h	/^		virtual _connection_base4<arg1_type, arg2_type, arg3_type, arg4_type, mt_policy>* duplicate(has_slots_interface* pnewdest)$/;"	f	class:sigslot::_connection4
dwAccessType	webrtc/base/proxydetect.cc	/^  DWORD  dwAccessType;      \/\/ see WINHTTP_ACCESS_* types below$/;"	m	struct:__anon44	file:
dwAutoDetectFlags	webrtc/base/proxydetect.cc	/^  DWORD   dwAutoDetectFlags;$/;"	m	struct:__anon45	file:
dwFlags	webrtc/base/proxydetect.cc	/^  DWORD   dwFlags;$/;"	m	struct:__anon45	file:
dwReserved	webrtc/base/proxydetect.cc	/^  DWORD   dwReserved;$/;"	m	struct:__anon45	file:
dyn_create_function	webrtc/base/openssladapter.cc	/^static CRYPTO_dynlock_value* dyn_create_function(const char* file, int line) {$/;"	f	namespace:rtc
dyn_destroy_function	webrtc/base/openssladapter.cc	/^static void dyn_destroy_function(CRYPTO_dynlock_value* l,$/;"	f	namespace:rtc
dyn_lock_function	webrtc/base/openssladapter.cc	/^static void dyn_lock_function(int mode, CRYPTO_dynlock_value* l,$/;"	f	namespace:rtc
e	webrtc/base/java/src/org/webrtc/Logging.java	/^  public static void e(String tag, String message) {$/;"	m	class:Logging
e	webrtc/base/java/src/org/webrtc/Logging.java	/^  public static void e(String tag, String message, Throwable e) {$/;"	m	class:Logging
eBuf	webrtc/modules/audio_processing/aec/aec_core.h	/^  float eBuf[PART_LEN2];  \/\/ error$/;"	m	struct:webrtc::AecCore
ec_curve	webrtc/base/sslidentity.cc	/^ECCurve KeyParams::ec_curve() const {$/;"	f	class:rtc::KeyParams
echoAdaptLogEnergy	webrtc/modules/audio_processing/aecm/aecm_core.h	/^    int16_t echoAdaptLogEnergy[MAX_BUF_LEN];$/;"	m	struct:__anon164
echoFilt	webrtc/modules/audio_processing/aecm/aecm_core.h	/^    int32_t echoFilt[PART_LEN1];$/;"	m	struct:__anon164
echoMode	webrtc/modules/audio_processing/aecm/echo_control_mobile.cc	/^    int16_t echoMode;$/;"	m	struct:__anon165	file:
echoMode	webrtc/modules/audio_processing/aecm/echo_control_mobile.h	/^    int16_t echoMode;           \/\/ 0, 1, 2, 3 (default), 4$/;"	m	struct:__anon167
echoState	webrtc/modules/audio_processing/aec/aec_core.h	/^  short stNearState, echoState;$/;"	m	struct:webrtc::AecCore
echoStoredLogEnergy	webrtc/modules/audio_processing/aecm/aecm_core.h	/^    int16_t echoStoredLogEnergy[MAX_BUF_LEN];$/;"	m	struct:__anon164
echo_cancellation	webrtc/modules/audio_processing/audio_processing_impl.cc	/^  std::unique_ptr<EchoCancellationImpl> echo_cancellation;$/;"	m	struct:webrtc::AudioProcessingImpl::ApmPublicSubmodules	file:
echo_cancellation	webrtc/modules/audio_processing/audio_processing_impl.cc	/^EchoCancellation* AudioProcessingImpl::echo_cancellation() const {$/;"	f	class:webrtc::AudioProcessingImpl
echo_cancellation	webrtc/modules/audio_processing/include/mock_audio_processing.h	/^  virtual MockEchoCancellation* echo_cancellation() const {$/;"	f	class:webrtc::test::MockAudioProcessing
echo_cancellation_	webrtc/modules/audio_processing/include/mock_audio_processing.h	/^  std::unique_ptr<MockEchoCancellation> echo_cancellation_;$/;"	m	class:webrtc::test::MockAudioProcessing
echo_canceller_enabled_	webrtc/modules/audio_processing/audio_processing_impl.h	/^    bool echo_canceller_enabled_ = false;$/;"	m	class:webrtc::AudioProcessingImpl::ApmSubmoduleStates
echo_control_mobile	webrtc/modules/audio_processing/audio_processing_impl.cc	/^  std::unique_ptr<EchoControlMobileImpl> echo_control_mobile;$/;"	m	struct:webrtc::AudioProcessingImpl::ApmPublicSubmodules	file:
echo_control_mobile	webrtc/modules/audio_processing/audio_processing_impl.cc	/^EchoControlMobile* AudioProcessingImpl::echo_control_mobile() const {$/;"	f	class:webrtc::AudioProcessingImpl
echo_control_mobile	webrtc/modules/audio_processing/include/mock_audio_processing.h	/^  virtual MockEchoControlMobile* echo_control_mobile() const {$/;"	f	class:webrtc::test::MockAudioProcessing
echo_control_mobile_	webrtc/modules/audio_processing/include/mock_audio_processing.h	/^  std::unique_ptr<MockEchoControlMobile> echo_control_mobile_;$/;"	m	class:webrtc::test::MockAudioProcessing
echo_frame	WebRTCAudioProcessing_jni.h	/^	webrtc::AudioFrame *echo_frame;$/;"	m	struct:WebRTCAudioProcessing
echo_likelihood	webrtc/modules/audio_processing/residual_echo_detector.h	/^  float echo_likelihood() const { return echo_likelihood_; }$/;"	f	class:webrtc::ResidualEchoDetector
echo_likelihood_	webrtc/modules/audio_processing/residual_echo_detector.h	/^  float echo_likelihood_ = 0.f;$/;"	m	class:webrtc::ResidualEchoDetector
echo_path_size_bytes	webrtc/modules/audio_processing/echo_control_mobile_impl.cc	/^size_t EchoControlMobile::echo_path_size_bytes() {$/;"	f	class:webrtc::EchoControlMobile
echo_return_loss	webrtc/modules/audio_processing/include/audio_processing.h	/^    AudioProcessing::Statistic echo_return_loss;$/;"	m	struct:webrtc::EchoCancellation::Metrics
echo_return_loss	webrtc/modules/audio_processing/include/audio_processing.h	/^    Stat echo_return_loss;$/;"	m	struct:webrtc::AudioProcessing::AudioProcessingStatistics
echo_return_loss_enhancement	webrtc/modules/audio_processing/include/audio_processing.h	/^    AudioProcessing::Statistic echo_return_loss_enhancement;$/;"	m	struct:webrtc::EchoCancellation::Metrics
echo_return_loss_enhancement	webrtc/modules/audio_processing/include/audio_processing.h	/^    Stat echo_return_loss_enhancement;$/;"	m	struct:webrtc::AudioProcessing::AudioProcessingStatistics
eig_m_	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.h	/^  ComplexMatrixF eig_m_;$/;"	m	class:webrtc::NonlinearBeamformer
elapsed_time_ms_	webrtc/modules/include/module_common_types.h	/^  int64_t elapsed_time_ms_;$/;"	m	class:webrtc::AudioFrame
element_count	webrtc/common_audio/ring_buffer.h	/^  size_t element_count;$/;"	m	struct:RingBuffer
element_size	webrtc/common_audio/ring_buffer.h	/^  size_t element_size;$/;"	m	struct:RingBuffer
element_type	webrtc/base/linked_ptr.h	/^    typedef X element_type;$/;"	t	class:rtc::linked_ptr
elements	webrtc/modules/audio_processing/beamformer/matrix.h	/^  T* const* elements() { return &elements_[0]; }$/;"	f	class:webrtc::Matrix
elements	webrtc/modules/audio_processing/beamformer/matrix.h	/^  const T* const* elements() const { return &elements_[0]; }$/;"	f	class:webrtc::Matrix
elements_	webrtc/modules/audio_processing/beamformer/matrix.h	/^  std::vector<T*> elements_;$/;"	m	class:webrtc::Matrix
elevation	webrtc/modules/audio_processing/beamformer/array_util.h	/^  T elevation() const { return s[1]; }$/;"	f	struct:webrtc::SphericalPoint
emit	webrtc/base/sigslot.h	/^		virtual void emit()$/;"	f	class:sigslot::_connection0
emit	webrtc/base/sigslot.h	/^		virtual void emit(arg1_type a1)$/;"	f	class:sigslot::_connection1
emit	webrtc/base/sigslot.h	/^		virtual void emit(arg1_type a1, arg2_type a2)$/;"	f	class:sigslot::_connection2
emit	webrtc/base/sigslot.h	/^		virtual void emit(arg1_type a1, arg2_type a2, arg3_type a3)$/;"	f	class:sigslot::_connection3
emit	webrtc/base/sigslot.h	/^		virtual void emit(arg1_type a1, arg2_type a2, arg3_type a3, arg4_type a4,$/;"	f	class:sigslot::_connection5
emit	webrtc/base/sigslot.h	/^		virtual void emit(arg1_type a1, arg2_type a2, arg3_type a3, arg4_type a4,$/;"	f	class:sigslot::_connection6
emit	webrtc/base/sigslot.h	/^		virtual void emit(arg1_type a1, arg2_type a2, arg3_type a3, arg4_type a4,$/;"	f	class:sigslot::_connection7
emit	webrtc/base/sigslot.h	/^		virtual void emit(arg1_type a1, arg2_type a2, arg3_type a3, arg4_type a4,$/;"	f	class:sigslot::_connection8
emit	webrtc/base/sigslot.h	/^		virtual void emit(arg1_type a1, arg2_type a2, arg3_type a3,$/;"	f	class:sigslot::_connection4
emit	webrtc/base/sigslot.h	/^		void emit()$/;"	f	class:sigslot::signal0
emit	webrtc/base/sigslot.h	/^		void emit(arg1_type a1)$/;"	f	class:sigslot::signal1
emit	webrtc/base/sigslot.h	/^		void emit(arg1_type a1, arg2_type a2)$/;"	f	class:sigslot::signal2
emit	webrtc/base/sigslot.h	/^		void emit(arg1_type a1, arg2_type a2, arg3_type a3)$/;"	f	class:sigslot::signal3
emit	webrtc/base/sigslot.h	/^		void emit(arg1_type a1, arg2_type a2, arg3_type a3, arg4_type a4)$/;"	f	class:sigslot::signal4
emit	webrtc/base/sigslot.h	/^		void emit(arg1_type a1, arg2_type a2, arg3_type a3, arg4_type a4,$/;"	f	class:sigslot::signal5
emit	webrtc/base/sigslot.h	/^		void emit(arg1_type a1, arg2_type a2, arg3_type a3, arg4_type a4,$/;"	f	class:sigslot::signal6
emit	webrtc/base/sigslot.h	/^		void emit(arg1_type a1, arg2_type a2, arg3_type a3, arg4_type a4,$/;"	f	class:sigslot::signal7
emit	webrtc/base/sigslot.h	/^		void emit(arg1_type a1, arg2_type a2, arg3_type a3, arg4_type a4,$/;"	f	class:sigslot::signal8
emplace	webrtc/base/optional.h	/^  void emplace(Args&&... args) {$/;"	f	class:rtc::final
empty	webrtc/base/array_view.h	/^  bool empty() const { return size_ == 0; }$/;"	f	class:rtc::final
empty	webrtc/base/buffer.h	/^  bool empty() const {$/;"	f	class:rtc::BufferT
empty	webrtc/base/callback.h	/^  bool empty() const { return !helper_; }$/;"	f	class:rtc::Callback0
empty	webrtc/base/callback.h	/^  bool empty() const { return !helper_; }$/;"	f	class:rtc::Callback1
empty	webrtc/base/callback.h	/^  bool empty() const { return !helper_; }$/;"	f	class:rtc::Callback2
empty	webrtc/base/callback.h	/^  bool empty() const { return !helper_; }$/;"	f	class:rtc::Callback3
empty	webrtc/base/callback.h	/^  bool empty() const { return !helper_; }$/;"	f	class:rtc::Callback4
empty	webrtc/base/callback.h	/^  bool empty() const { return !helper_; }$/;"	f	class:rtc::Callback5
empty	webrtc/base/messagequeue.h	/^  bool empty() const { return size() == 0u; }$/;"	f	class:rtc::MessageQueue
empty	webrtc/base/pathutils.cc	/^bool Pathname::empty() const {$/;"	f	class:rtc::Pathname
empty_	webrtc/base/optional.h	/^    char empty_;$/;"	m	union:rtc::final::__anon40
empty_str	webrtc/base/stringutils.h	/^  inline static const char* empty_str() { return ""; }$/;"	f	struct:rtc::Traits
empty_str	webrtc/base/stringutils.h	/^  inline static const wchar_t* empty_str() { return L""; }$/;"	f	struct:rtc::Traits
enableLogThreads	webrtc/base/java/src/org/webrtc/Logging.java	/^  public static void enableLogThreads() {$/;"	m	class:Logging
enableLogTimeStamps	webrtc/base/java/src/org/webrtc/Logging.java	/^  public static void enableLogTimeStamps() {$/;"	m	class:Logging
enableLogToDebugOutput	webrtc/base/java/src/org/webrtc/Logging.java	/^  public static synchronized void enableLogToDebugOutput(Severity severity) {$/;"	m	class:Logging
enableTracing	webrtc/base/java/src/org/webrtc/Logging.java	/^  public static synchronized void enableTracing(String path, EnumSet<TraceLevel> levels) {$/;"	m	class:Logging
enable_comfort_noise	webrtc/modules/audio_processing/echo_control_mobile_impl.cc	/^int EchoControlMobileImpl::enable_comfort_noise(bool enable) {$/;"	f	class:webrtc::EchoControlMobileImpl
enable_delay_logging	webrtc/modules/audio_processing/echo_cancellation_impl.cc	/^int EchoCancellationImpl::enable_delay_logging(bool enable) {$/;"	f	class:webrtc::EchoCancellationImpl
enable_drift_compensation	webrtc/modules/audio_processing/echo_cancellation_impl.cc	/^int EchoCancellationImpl::enable_drift_compensation(bool enable) {$/;"	f	class:webrtc::EchoCancellationImpl
enable_gcm_crypto_suites	webrtc/base/sslstreamadapter.h	/^  bool enable_gcm_crypto_suites = false;$/;"	m	struct:rtc::CryptoOptions
enable_limiter	webrtc/modules/audio_processing/gain_control_for_experimental_agc.cc	/^int GainControlForExperimentalAgc::enable_limiter(bool enable) {$/;"	f	class:webrtc::GainControlForExperimentalAgc
enable_limiter	webrtc/modules/audio_processing/gain_control_impl.cc	/^int GainControlImpl::enable_limiter(bool enable) {$/;"	f	class:webrtc::GainControlImpl
enable_metrics	webrtc/modules/audio_processing/echo_cancellation_impl.cc	/^int EchoCancellationImpl::enable_metrics(bool enable) {$/;"	f	class:webrtc::EchoCancellationImpl
enabled	webrtc/modules/audio_processing/include/audio_processing.h	/^      bool enabled = false;$/;"	m	struct:webrtc::AudioProcessing::Config::LevelController
enabled	webrtc/modules/audio_processing/include/audio_processing.h	/^      bool enabled = false;$/;"	m	struct:webrtc::AudioProcessing::Config::ResidualEchoDetector
enabled	webrtc/modules/audio_processing/include/audio_processing.h	/^  bool enabled;$/;"	m	struct:webrtc::DelayAgnostic
enabled	webrtc/modules/audio_processing/include/audio_processing.h	/^  bool enabled;$/;"	m	struct:webrtc::EchoCanceller3
enabled	webrtc/modules/audio_processing/include/audio_processing.h	/^  bool enabled;$/;"	m	struct:webrtc::ExperimentalAgc
enabled	webrtc/modules/audio_processing/include/audio_processing.h	/^  bool enabled;$/;"	m	struct:webrtc::ExperimentalNs
enabled	webrtc/modules/audio_processing/include/audio_processing.h	/^  bool enabled;$/;"	m	struct:webrtc::ExtendedFilter
enabled	webrtc/modules/audio_processing/include/audio_processing.h	/^  bool enabled;$/;"	m	struct:webrtc::Intelligibility
enabled	webrtc/modules/audio_processing/include/audio_processing.h	/^  bool enabled;$/;"	m	struct:webrtc::RefinedAdaptiveFilter
enabled	webrtc/modules/audio_processing/include/audio_processing.h	/^  const bool enabled;$/;"	m	struct:webrtc::Beamforming
enabled_	webrtc/modules/audio_processing/echo_cancellation_impl.h	/^  bool enabled_ = false;$/;"	m	class:webrtc::EchoCancellationImpl
enabled_	webrtc/modules/audio_processing/echo_control_mobile_impl.h	/^  bool enabled_ = false;$/;"	m	class:webrtc::EchoControlMobileImpl
enabled_	webrtc/modules/audio_processing/gain_control_impl.h	/^  bool enabled_ = false;$/;"	m	class:webrtc::GainControlImpl
enabled_events_	webrtc/base/physicalsocketserver.h	/^  uint8_t enabled_events_;$/;"	m	class:rtc::PhysicalSocket
enc_res_	webrtc/base/stringencode_unittest.cc	/^  size_t enc_res_;$/;"	m	class:rtc::HexEncodeTest	file:
encode	webrtc/base/stringencode.cc	/^size_t encode(char * buffer, size_t buflen,$/;"	f	namespace:rtc
encoded_	webrtc/base/stringencode_unittest.cc	/^  char encoded_[31];$/;"	m	class:rtc::HexEncodeTest	file:
encoderSamplingRateKHz	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  enum IsacSamplingRate encoderSamplingRateKHz;$/;"	m	struct:__anon144	typeref:enum:__anon144::IsacSamplingRate
encoder_specific_settings	webrtc/config.h	/^  rtc::scoped_refptr<const EncoderSpecificSettings> encoder_specific_settings;$/;"	m	class:webrtc::VideoEncoderConfig
end	webrtc/base/array_view.h	/^  T* end() const { return data_ + size_; }$/;"	f	class:rtc::final
end	webrtc/base/httpcommon.h	/^  inline const_iterator end() const {$/;"	f	struct:rtc::HttpData
end	webrtc/base/httpcommon.h	/^  inline const_iterator end(HttpHeader header) const {$/;"	f	struct:rtc::HttpData
end	webrtc/base/httpcommon.h	/^  inline const_iterator end(const std::string& name) const {$/;"	f	struct:rtc::HttpData
end	webrtc/base/httpcommon.h	/^  inline iterator end() {$/;"	f	struct:rtc::HttpData
end	webrtc/base/httpcommon.h	/^  inline iterator end(HttpHeader header) {$/;"	f	struct:rtc::HttpData
end	webrtc/base/httpcommon.h	/^  inline iterator end(const std::string& name) {$/;"	f	struct:rtc::HttpData
endSystemDelay	webrtc/modules/include/module_common_types.h	/^  uint16_t endSystemDelay;$/;"	m	struct:webrtc::RTCPVoIPMetric
end_	webrtc/base/bytebuffer.h	/^  size_t end_;$/;"	m	class:rtc::ByteBufferReader
end_	webrtc/base/bytebuffer.h	/^  size_t end_;$/;"	m	class:rtc::ByteBufferWriter
end_of_frame	webrtc/modules/include/module_common_types.h	/^  bool end_of_frame;  \/\/ True if this packet is the last in a VP9 layer frame.$/;"	m	struct:webrtc::RTPVideoHeaderVP9
end_signal_	webrtc/base/rate_limiter_unittest.cc	/^  rtc::Event end_signal_;$/;"	m	class:webrtc::ThreadTask	file:
ends_with	webrtc/base/stringutils.cc	/^bool ends_with(const char *s1, const char *s2) {$/;"	f	namespace:rtc
energyIn	webrtc/modules/audio_processing/ns/nsx_core.h	/^  int32_t                 energyIn;$/;"	m	struct:NoiseSuppressionFixedC_
enforceFrameSize	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  int16_t         enforceFrameSize;$/;"	m	struct:__anon136
engine	webrtc/modules/audio_processing/test/android/apmtest/jni/main.c	/^struct engine {$/;"	s	file:
engine_draw_frame	webrtc/modules/audio_processing/test/android/apmtest/jni/main.c	/^static void engine_draw_frame(struct engine* engine) {$/;"	f	file:
engine_handle_cmd	webrtc/modules/audio_processing/test/android/apmtest/jni/main.c	/^static void engine_handle_cmd(struct android_app* app, int32_t cmd) {$/;"	f	file:
engine_handle_input	webrtc/modules/audio_processing/test/android/apmtest/jni/main.c	/^static int32_t engine_handle_input(struct android_app* app, AInputEvent* event) {$/;"	f	file:
engine_init_display	webrtc/modules/audio_processing/test/android/apmtest/jni/main.c	/^static int engine_init_display(struct engine* engine) {$/;"	f	file:
engine_term_display	webrtc/modules/audio_processing/test/android/apmtest/jni/main.c	/^static void engine_term_display(struct engine* engine) {$/;"	f	file:
enh_	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer_unittest.cc	/^  std::unique_ptr<IntelligibilityEnhancer> enh_;$/;"	m	class:webrtc::IntelligibilityEnhancerTest	file:
enumeration_permission	webrtc/base/network.cc	/^NetworkManager::EnumerationPermission NetworkManager::enumeration_permission()$/;"	f	class:rtc::NetworkManager
enumeration_permission	webrtc/base/network.cc	/^NetworkManagerBase::enumeration_permission() const {$/;"	f	class:rtc::NetworkManagerBase
enumeration_permission_	webrtc/base/network.h	/^  EnumerationPermission enumeration_permission_;$/;"	m	class:rtc::NetworkManagerBase
enumerator_	webrtc/base/x11windowpicker.h	/^  std::unique_ptr<XWindowEnumerator> enumerator_;$/;"	m	class:rtc::X11WindowPicker
env	webrtc/modules/audio_processing/agc/legacy/analog_agc.h	/^  int32_t env[2][10];            \/\/ Envelope values of subframes$/;"	m	struct:__anon171
envSum	webrtc/modules/audio_processing/agc/legacy/analog_agc.h	/^  int16_t envSum;            \/\/ Filtered scaled envelope in subframes$/;"	m	struct:__anon171
equals	webrtc/base/java/src/org/webrtc/Size.java	/^  public boolean equals(Object other) {$/;"	m	class:Size
erl	webrtc/modules/audio_processing/aec/aec_core.h	/^  Stats erl;$/;"	m	struct:webrtc::AecCore
erl	webrtc/modules/audio_processing/aec/echo_cancellation.h	/^  AecLevel erl;$/;"	m	struct:webrtc::__anon161
erle	webrtc/modules/audio_processing/aec/aec_core.h	/^  Stats erle;$/;"	m	struct:webrtc::AecCore
erle	webrtc/modules/audio_processing/aec/echo_cancellation.h	/^  AecLevel erle;$/;"	m	struct:webrtc::__anon161
err	webrtc/base/httpbase_unittest.cc	/^    HttpError err;$/;"	m	struct:rtc::HttpBaseTest::Event	file:
err_	webrtc/base/win32socketinit.cc	/^  int err_;$/;"	m	class:rtc::WinsockInitializer	file:
error	webrtc/base/httprequest.h	/^  HttpErrorType error() const { return error_; }$/;"	f	class:rtc::HttpMonitor
error	webrtc/base/httprequest.h	/^  HttpErrorType error() { return error_; }$/;"	f	class:rtc::HttpRequest
error	webrtc/base/stream.h	/^  int events, error;$/;"	m	struct:rtc::StreamEventData
error	webrtc/base/win32socketinit.cc	/^  int error() {$/;"	f	class:rtc::WinsockInitializer
errorCode	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  int16_t               errorCode;$/;"	m	struct:__anon144
errorConcealmentOn	webrtc/common_types.h	/^  bool errorConcealmentOn;$/;"	m	struct:webrtc::VideoCodecVP8
error_	webrtc/base/httpbase.cc	/^  HttpError error_;$/;"	m	class:rtc::HttpBase::DocumentStream	file:
error_	webrtc/base/httprequest.h	/^  HttpErrorType error_;$/;"	m	class:rtc::HttpMonitor
error_	webrtc/base/httprequest.h	/^  HttpErrorType error_;$/;"	m	class:rtc::HttpRequest
error_	webrtc/base/nethelpers.h	/^  int error_;$/;"	m	class:rtc::AsyncResolver
error_	webrtc/base/task.h	/^  bool error_;$/;"	m	class:rtc::Task
error_	webrtc/base/transformadapter.h	/^  int error_;$/;"	m	class:rtc::TransformAdapter
error_	webrtc/base/virtualsocketserver.h	/^  int error_;$/;"	m	class:rtc::VirtualSocket
error_	webrtc/base/win32socketserver.h	/^  int error_;$/;"	m	class:rtc::Win32Socket
error_threshold	webrtc/modules/audio_processing/aec/aec_core.h	/^  float error_threshold;   \/\/ error threshold$/;"	m	struct:webrtc::AecCore
escape	webrtc/base/stringencode.cc	/^size_t escape(char * buffer, size_t buflen,$/;"	f	namespace:rtc
ev	webrtc/base/task_queue_libevent.cc	/^  event ev;$/;"	m	struct:rtc::__anon65::TimerEvent	file:
event	webrtc/base/httpbase_unittest.cc	/^    EventType event;$/;"	m	struct:rtc::HttpBaseTest::Event	file:
event_	webrtc/base/criticalsection_unittest.cc	/^  Event* const event_;$/;"	m	class:rtc::PerfTestData	file:
event_	webrtc/base/nullsocketserver.h	/^  Event event_;$/;"	m	class:rtc::NullSocketServer
event_	webrtc/base/thread_unittest.cc	/^  Event* event_;$/;"	m	class:SignalWhenDestroyedThread	file:
event_base_	webrtc/base/task_queue.h	/^  event_base* event_base_;$/;"	m	class:rtc::TaskQueue
event_cond_	webrtc/base/event.h	/^  pthread_cond_t event_cond_;$/;"	m	class:rtc::Event
event_handle_	webrtc/base/event.h	/^  HANDLE event_handle_;$/;"	m	class:rtc::Event
event_msg	webrtc/modules/audio_processing/audio_processing_impl.h	/^    std::unique_ptr<audioproc::Event> event_msg;  \/\/ Protobuf message.$/;"	m	struct:webrtc::AudioProcessingImpl::ApmDebugDumpThreadState
event_mutex_	webrtc/base/event.h	/^  pthread_mutex_t event_mutex_;$/;"	m	class:rtc::Event
event_status_	webrtc/base/event.h	/^  bool event_status_;$/;"	m	class:rtc::Event
event_str	webrtc/modules/audio_processing/audio_processing_impl.h	/^    std::string event_str;  \/\/ Memory for protobuf serialization.$/;"	m	struct:webrtc::AudioProcessingImpl::ApmDebugDumpThreadState
events	webrtc/base/httpbase_unittest.cc	/^  std::vector<Event> events;$/;"	m	class:rtc::HttpBaseTest	file:
events	webrtc/base/stream.h	/^  int events, error;$/;"	m	struct:rtc::StreamEventData
events_	webrtc/base/testutils.h	/^  EventMap events_;$/;"	m	class:testing::StreamSink
events_logged_	webrtc/base/event_tracer_unittest.cc	/^  int events_logged_;$/;"	m	class:__anon13::TestStatistics	file:
executeUninterruptibly	webrtc/base/java/src/org/webrtc/ThreadUtils.java	/^  public static void executeUninterruptibly(BlockingOperation operation) {$/;"	m	class:ThreadUtils
expect_close_	webrtc/base/socketadapters.h	/^  bool expect_close_;$/;"	m	class:rtc::AsyncHttpsProxySocket
expect_encode_from_texture	webrtc/common_types.h	/^  bool expect_encode_from_texture;$/;"	m	class:webrtc::VideoCodec
expect_true_	webrtc/base/sequenced_task_checker_unittest.cc	/^  const bool expect_true_;$/;"	m	class:rtc::__anon56::CallCalledSequentiallyOnThread	file:
expected_count_	webrtc/base/criticalsection_unittest.cc	/^  const int expected_count_;$/;"	m	class:rtc::PerfTestData	file:
expected_reverse_snr_	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^  double expected_reverse_snr_;$/;"	m	class:webrtc::__anon183::AudioProcessingTest	file:
expected_snr_	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^  double expected_snr_;$/;"	m	class:webrtc::__anon183::AudioProcessingTest	file:
expected_thread_	webrtc/base/thread_unittest.cc	/^  Thread* expected_thread_;$/;"	m	class:AsyncInvokeTest	file:
expected_thread_	webrtc/base/thread_unittest.cc	/^  Thread* expected_thread_;$/;"	m	class:GuardedAsyncInvokeTest	file:
expiration_time_	webrtc/base/fakesslidentity.h	/^  int64_t expiration_time_;$/;"	m	class:rtc::FakeSSLCertificate
expires_ms_	webrtc/base/rtccertificategenerator.cc	/^  const Optional<uint64_t> expires_ms_;$/;"	m	class:rtc::__anon53::RTCCertificateGenerationTask	file:
extRfactor	webrtc/modules/include/module_common_types.h	/^  uint8_t extRfactor;$/;"	m	struct:webrtc::RTCPVoIPMetric
ext_addr_	webrtc/base/nat_unittest.cc	/^  SocketAddress ext_addr_;$/;"	m	class:NatTcpTest	file:
ext_factory_	webrtc/base/proxyserver.h	/^  SocketFactory* ext_factory_;$/;"	m	class:rtc::ProxyServer
ext_ip_	webrtc/base/proxyserver.h	/^  SocketAddress ext_ip_;$/;"	m	class:rtc::ProxyServer
ext_map_	webrtc/base/natserver.h	/^  ExternalMap* ext_map_;$/;"	m	class:rtc::NATServer
ext_pss_	webrtc/base/nat_unittest.cc	/^  PhysicalSocketServer* ext_pss_;$/;"	m	class:NatTcpTest	file:
ext_socket_	webrtc/base/proxyserver.h	/^  std::unique_ptr<AsyncSocket> ext_socket_;$/;"	m	class:rtc::ProxyBinding
ext_thread_	webrtc/base/nat_unittest.cc	/^  std::unique_ptr<Thread> ext_thread_;$/;"	m	class:NatTcpTest	file:
ext_vss_	webrtc/base/nat_unittest.cc	/^  std::unique_ptr<TestVirtualSocketServer> ext_vss_;$/;"	m	class:NatTcpTest	file:
extended_filter_enabled	webrtc/modules/audio_processing/aec/aec_core.h	/^  int extended_filter_enabled;$/;"	m	struct:webrtc::AecCore
extended_max_sequence_number	webrtc/common_types.h	/^  uint32_t extended_max_sequence_number;$/;"	m	struct:webrtc::RtcpStatistics
extension	webrtc/base/pathutils.cc	/^std::string Pathname::extension() const {$/;"	f	class:rtc::Pathname
extension	webrtc/common_types.h	/^  RTPHeaderExtension extension;$/;"	m	struct:webrtc::RTPHeader
extension_	webrtc/base/pathutils.h	/^  std::string folder_, basename_, extension_;$/;"	m	class:rtc::Pathname
external_	webrtc/base/natserver.h	/^  SocketFactory* external_;$/;"	m	class:rtc::NATServer
external_bw_info	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  IsacBandwidthInfo external_bw_info;$/;"	m	struct:__anon131
external_ip_	webrtc/base/natserver.h	/^  SocketAddress external_ip_;$/;"	m	class:rtc::NATServer
extra_	webrtc/base/logging.h	/^  std::string extra_;$/;"	m	class:rtc::LogMessage
extreme_filter_divergence	webrtc/modules/audio_processing/aec/aec_core.h	/^  int extreme_filter_divergence;$/;"	m	struct:webrtc::AecCore
f	webrtc/base/callback_unittest.cc	/^void f() {}$/;"	f	namespace:rtc::__anon8
f	webrtc/base/flags.h	/^  double f;$/;"	m	union:rtc::FlagValue
f	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer_unittest.cc	/^const SphericalPointf TargetDirection2(static_cast<float>(M_PI) \/ 2.f,$/;"	m	namespace:webrtc::__anon190	file:
fAutoDetect	webrtc/base/proxydetect.cc	/^  BOOL    fAutoDetect;$/;"	m	struct:__anon46	file:
fAutoLogonIfChallenged	webrtc/base/proxydetect.cc	/^  BOOL    fAutoLogonIfChallenged;$/;"	m	struct:__anon45	file:
fDestroyed_	webrtc/base/messagequeue.h	/^  bool fDestroyed_;$/;"	m	class:rtc::MessageQueue
fInitialized_	webrtc/base/messagequeue.h	/^  bool fInitialized_;$/;"	m	class:rtc::MessageQueue
fPeekKeep_	webrtc/base/messagequeue.h	/^  bool fPeekKeep_;$/;"	m	class:rtc::MessageQueue
fSignaled_	webrtc/base/physicalsocketserver.cc	/^  bool fSignaled_;$/;"	m	class:rtc::EventDispatcher	file:
fWait_	webrtc/base/physicalsocketserver.h	/^  bool fWait_;$/;"	m	class:rtc::PhysicalSocketServer
f_	webrtc/base/function_view.h	/^  VoidUnion f_;$/;"	m	class:rtc::final
factor	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  int factor [NFACTOR];$/;"	m	struct:__anon133
factor	webrtc/modules/audio_processing/config_unittest.cc	/^  int factor;$/;"	m	struct:webrtc::__anon191::MyExperiment	file:
factor1ModelPars	webrtc/modules/audio_processing/ns/ns_core.h	/^  float factor1ModelPars;  \/\/ For LRT and spectral difference.$/;"	m	struct:NSParaExtract_
factor2ModelPars	webrtc/modules/audio_processing/ns/ns_core.h	/^  float factor2ModelPars;  \/\/ For spectral_flatness: used when noise is flatter$/;"	m	struct:NSParaExtract_
factor2Table	webrtc/modules/audio_processing/ns/nsx_core.h	/^  const int16_t*          factor2Table;$/;"	m	struct:NoiseSuppressionFixedC_
factory	webrtc/base/weak_ptr_unittest.cc	/^  WeakPtrFactory<Target> factory;$/;"	m	struct:rtc::__anon74::TargetWithFactory	file:
factory_	webrtc/base/natsocketfactory.h	/^  SocketFactory* factory_;$/;"	m	class:rtc::NATSocketFactory
factory_	webrtc/base/socketpool.h	/^  SocketFactory* factory_;$/;"	m	class:rtc::NewSocketPool
factory_	webrtc/base/socketpool.h	/^  SocketFactory* factory_;$/;"	m	class:rtc::ReuseSocketPool
factory_	webrtc/base/sslsocketfactory.cc	/^  SslSocketFactory* factory_;$/;"	m	class:rtc::ProxySocketAdapter	file:
factory_	webrtc/base/sslsocketfactory.h	/^  SocketFactory* factory_;$/;"	m	class:rtc::SslSocketFactory
fail_accept_	webrtc/base/physicalsocketserver_unittest.cc	/^  bool fail_accept_;$/;"	m	class:rtc::PhysicalSocketTest	file:
fail_redirect	webrtc/base/httprequest.h	/^  bool fail_redirect() const { return fail_redirect_; }$/;"	f	class:rtc::HttpRequest
fail_redirect_	webrtc/base/httprequest.h	/^  bool fail_redirect_;$/;"	m	class:rtc::HttpRequest
fallbackLogger	webrtc/base/java/src/org/webrtc/Logging.java	/^  private static final Logger fallbackLogger = Logger.getLogger("org.webrtc.Logging");$/;"	f	class:Logging	file:
false_type	webrtc/base/template_util.h	/^typedef integral_constant<bool, false> false_type;$/;"	t	namespace:rtc
family	webrtc/base/ipaddress.h	/^  int family() const { return family_; }$/;"	f	class:rtc::IPAddress
family	webrtc/base/socketaddress.h	/^  int family() const {return ip_.family(); }$/;"	f	class:rtc::SocketAddress
family_	webrtc/base/ipaddress.h	/^  int family_;$/;"	m	class:rtc::IPAddress
family_	webrtc/base/natsocketfactory.cc	/^  int family_;$/;"	m	class:rtc::NATSocket	file:
family_	webrtc/base/sslsocketfactory.cc	/^  int family_;$/;"	m	class:rtc::ProxySocketAdapter	file:
farBuf	webrtc/modules/audio_processing/aecm/aecm_core.h	/^    int16_t farBuf[FAR_BUF_LEN];$/;"	m	struct:__anon164
farBufReadPos	webrtc/modules/audio_processing/aec/aec_core.h	/^  int farBufWritePos, farBufReadPos;$/;"	m	struct:webrtc::AecCore
farBufReadPos	webrtc/modules/audio_processing/aecm/aecm_core.h	/^    int farBufReadPos;$/;"	m	struct:__anon164
farBufWritePos	webrtc/modules/audio_processing/aec/aec_core.h	/^  int farBufWritePos, farBufReadPos;$/;"	m	struct:webrtc::AecCore
farBufWritePos	webrtc/modules/audio_processing/aecm/aecm_core.h	/^    int farBufWritePos;$/;"	m	struct:__anon164
farEnergyMSE	webrtc/modules/audio_processing/aecm/aecm_core.h	/^    int16_t farEnergyMSE;$/;"	m	struct:__anon164
farEnergyMax	webrtc/modules/audio_processing/aecm/aecm_core.h	/^    int16_t farEnergyMax;$/;"	m	struct:__anon164
farEnergyMaxMin	webrtc/modules/audio_processing/aecm/aecm_core.h	/^    int16_t farEnergyMaxMin;$/;"	m	struct:__anon164
farEnergyMin	webrtc/modules/audio_processing/aecm/aecm_core.h	/^    int16_t farEnergyMin;$/;"	m	struct:__anon164
farEnergyVAD	webrtc/modules/audio_processing/aecm/aecm_core.h	/^    int16_t farEnergyVAD;$/;"	m	struct:__anon164
farFile	webrtc/modules/audio_processing/aecm/aecm_core.h	/^    FILE *farFile;$/;"	m	struct:__anon164
farFrameBuf	webrtc/modules/audio_processing/aecm/aecm_core.h	/^    RingBuffer* farFrameBuf;$/;"	m	struct:__anon164
farLogEnergy	webrtc/modules/audio_processing/aecm/aecm_core.h	/^    int16_t farLogEnergy;$/;"	m	struct:__anon164
far_	webrtc/modules/audio_processing/aec/system_delay_unittest.cc	/^  float far_[kSamplesPerChunk];$/;"	m	class:webrtc::__anon162::SystemDelayTest	file:
far_bit_counts	webrtc/modules/audio_processing/utility/delay_estimator.h	/^  int* far_bit_counts;$/;"	m	struct:__anon227
far_f_	webrtc/modules/audio_processing/utility/delay_estimator_unittest.cc	/^  float far_f_[kSpectrumSize];$/;"	m	class:__anon232::DelayEstimatorTest	file:
far_file_	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^  FILE* far_file_;$/;"	m	class:webrtc::__anon183::ApmTest	file:
far_history	webrtc/modules/audio_processing/aecm/aecm_core.h	/^    uint16_t far_history[PART_LEN1 * MAX_DELAY];$/;"	m	struct:__anon164
far_history_pos	webrtc/modules/audio_processing/aecm/aecm_core.h	/^    int far_history_pos;$/;"	m	struct:__anon164
far_pre_buf	webrtc/modules/audio_processing/aec/echo_cancellation.h	/^  RingBuffer* far_pre_buf;  \/\/ Time domain far-end pre-buffer.$/;"	m	struct:webrtc::Aec
far_q_domains	webrtc/modules/audio_processing/aecm/aecm_core.h	/^    int far_q_domains[MAX_DELAY];$/;"	m	struct:__anon164
far_spectrum_initialized	webrtc/modules/audio_processing/utility/delay_estimator_internal.h	/^  int far_spectrum_initialized;$/;"	m	struct:__anon230
far_u16_	webrtc/modules/audio_processing/utility/delay_estimator_unittest.cc	/^  uint16_t far_u16_[kSpectrumSize];$/;"	m	class:__anon232::DelayEstimatorTest	file:
farend	webrtc/modules/audio_processing/utility/delay_estimator.h	/^  BinaryDelayEstimatorFarend* farend;$/;"	m	struct:__anon228
farendBuf	webrtc/modules/audio_processing/aecm/echo_control_mobile.cc	/^    RingBuffer *farendBuf;$/;"	m	struct:__anon165	file:
farendOld	webrtc/modules/audio_processing/aecm/echo_control_mobile.cc	/^    short farendOld[2][FRAME_LEN];$/;"	m	struct:__anon165	file:
farend_block_buffer_	webrtc/modules/audio_processing/aec/aec_core.h	/^  BlockBuffer farend_block_buffer_;$/;"	m	struct:webrtc::AecCore
farend_handle_	webrtc/modules/audio_processing/utility/delay_estimator_unittest.cc	/^  void* farend_handle_;$/;"	m	class:__anon232::DelayEstimatorTest	file:
farend_self_	webrtc/modules/audio_processing/utility/delay_estimator_unittest.cc	/^  DelayEstimatorFarend* farend_self_;$/;"	m	class:__anon232::DelayEstimatorTest	file:
farend_started	webrtc/modules/audio_processing/aec/echo_cancellation.h	/^  int farend_started;$/;"	m	struct:webrtc::Aec
farlevel	webrtc/modules/audio_processing/aec/aec_core.h	/^  PowerLevel farlevel;$/;"	m	struct:webrtc::AecCore
fbuf	webrtc/common_audio/channel_buffer.cc	/^ChannelBuffer<float>* IFChannelBuffer::fbuf() {$/;"	f	class:webrtc::IFChannelBuffer
fbuf_	webrtc/common_audio/channel_buffer.h	/^  mutable ChannelBuffer<float> fbuf_;$/;"	m	class:webrtc::IFChannelBuffer
fbuf_const	webrtc/common_audio/channel_buffer.cc	/^const ChannelBuffer<float>* IFChannelBuffer::fbuf_const() const {$/;"	f	class:webrtc::IFChannelBuffer
fcount	webrtc/modules/audio_processing/agc/legacy/analog_agc.h	/^  int32_t fcount;$/;"	m	struct:__anon171
fd_	webrtc/base/physicalsocketserver.cc	/^  int fd_;$/;"	m	class:rtc::FileDispatcher	file:
fdiv_remainder	webrtc/base/random_unittest.cc	/^T fdiv_remainder(T x, T n) {$/;"	f	namespace:webrtc::__anon47
fdwalk	webrtc/base/linuxfdwalk.c	/^int fdwalk(void (*func)(void *, int), void *opaque) {$/;"	f
featureData	webrtc/modules/audio_processing/ns/ns_core.h	/^  float featureData[7];$/;"	m	struct:NoiseSuppressionC_
featureExtractionParams	webrtc/modules/audio_processing/ns/ns_core.h	/^  NSParaExtract featureExtractionParams;$/;"	m	struct:NoiseSuppressionC_
featureLogLrt	webrtc/modules/audio_processing/ns/nsx_core.h	/^  int32_t                 featureLogLrt;$/;"	m	struct:NoiseSuppressionFixedC_
featureSpecDiff	webrtc/modules/audio_processing/ns/nsx_core.h	/^  uint32_t                featureSpecDiff;$/;"	m	struct:NoiseSuppressionFixedC_
featureSpecFlat	webrtc/modules/audio_processing/ns/nsx_core.h	/^  uint32_t                featureSpecFlat;$/;"	m	struct:NoiseSuppressionFixedC_
features_	webrtc/modules/audio_processing/vad/voice_activity_detector.h	/^  AudioFeatures features_;$/;"	m	class:webrtc::VoiceActivityDetector
fec	webrtc/common_types.h	/^  RtpPacketCounter fec;            \/\/ Number of redundancy packets\/bytes.$/;"	m	struct:webrtc::StreamDataCounters
fec_mask_type	webrtc/modules/include/module_common_types.h	/^  FecMaskType fec_mask_type;$/;"	m	struct:webrtc::FecProtectionParams
fec_rate	webrtc/modules/include/module_common_types.h	/^  int fec_rate;$/;"	m	struct:webrtc::FecProtectionParams
feedbackModeOn	webrtc/common_types.h	/^  bool feedbackModeOn;$/;"	m	struct:webrtc::VideoCodecVP8
fft_	webrtc/common_audio/lapped_transform.h	/^  std::unique_ptr<RealFourier> fft_;$/;"	m	class:webrtc::LappedTransform
fft_buffer_	webrtc/modules/audio_processing/transient/transient_suppressor.h	/^  std::unique_ptr<float[]> fft_buffer_;$/;"	m	class:webrtc::TransientSuppressor
fft_cplx_scoper	webrtc/common_audio/real_fourier.h	/^      fft_cplx_scoper;$/;"	t	class:webrtc::RealFourier
fft_real_scoper	webrtc/common_audio/real_fourier.h	/^  typedef std::unique_ptr<float[], AlignedFreeDeleter> fft_real_scoper;$/;"	t	class:webrtc::RealFourier
fftstr_obj	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  FFTstr                  fftstr_obj;$/;"	m	struct:__anon137
fftstr_obj	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  FFTstr              fftstr_obj;$/;"	m	struct:__anon136
fftstr_obj	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  FFTstr          fftstr_obj;$/;"	m	struct:__anon138
fftstr_obj	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  FFTstr          fftstr_obj;$/;"	m	struct:__anon139
field_trial	webrtc/system_wrappers/include/field_trial.h	/^namespace field_trial {$/;"	n	namespace:webrtc
field_trial	webrtc/system_wrappers/include/field_trial_default.h	/^namespace field_trial {$/;"	n	namespace:webrtc
file	webrtc/base/flags.h	/^  const char* file() const  { return file_; }$/;"	f	class:rtc::Flag
file_	webrtc/base/file.h	/^  PlatformFile file_;$/;"	m	class:rtc::File
file_	webrtc/base/flags.h	/^  const char* file_;$/;"	m	class:rtc::Flag
file_	webrtc/base/stream.h	/^  FILE* file_;$/;"	m	class:rtc::FileStream
file_	webrtc/common_audio/wav_file.cc	/^  FILE* file_;$/;"	m	class:webrtc::ReadableWavFile	file:
file_	webrtc/modules/audio_processing/agc/agc_manager_direct.cc	/^  FILE* file_;$/;"	m	class:webrtc::DebugFile	file:
file_	webrtc/modules/audio_processing/test/test_utils.h	/^  std::unique_ptr<WavReader> file_;$/;"	m	class:webrtc::final
file_	webrtc/modules/audio_processing/test/test_utils.h	/^  std::unique_ptr<WavWriter> file_;$/;"	m	class:webrtc::final
file_	webrtc/system_wrappers/include/file_wrapper.h	/^  FILE* file_ = nullptr;$/;"	m	class:webrtc::FileWrapper
file_and_line	webrtc/base/location.h	/^  const char* file_and_line() const { return file_and_line_; }$/;"	f	class:rtc::Location
file_and_line_	webrtc/base/location.h	/^  const char* file_and_line_;$/;"	m	class:rtc::Location
file_handle_	webrtc/common_audio/wav_file.h	/^  FILE* file_handle_;  \/\/ Input file, owned by this class.$/;"	m	class:webrtc::final
file_handle_	webrtc/common_audio/wav_file.h	/^  FILE* file_handle_;  \/\/ Output file, owned by this class$/;"	m	class:webrtc::final
file_handle_	webrtc/modules/audio_processing/test/test_utils.h	/^  FILE* file_handle_;$/;"	m	class:webrtc::final
file_names_	webrtc/base/filerotatingstream.h	/^  std::vector<std::string> file_names_;$/;"	m	class:rtc::FileRotatingStream
file_postproc_	webrtc/modules/audio_processing/agc/agc_manager_direct.h	/^  std::unique_ptr<DebugFile> file_postproc_;$/;"	m	class:webrtc::final
file_prefix_	webrtc/base/filerotatingstream.h	/^  const std::string file_prefix_;$/;"	m	class:rtc::FileRotatingStream
file_preproc_	webrtc/modules/audio_processing/agc/agc_manager_direct.h	/^  std::unique_ptr<DebugFile> file_preproc_;$/;"	m	class:webrtc::final
file_stream_	webrtc/base/filerotatingstream.h	/^  std::unique_ptr<FileStream> file_stream_;$/;"	m	class:rtc::FileRotatingStream
filename	webrtc/base/pathutils.cc	/^std::string Pathname::filename() const {$/;"	f	class:rtc::Pathname
fileno	webrtc/base/stream.cc	/^#define fileno /;"	d	file:
filtDelay	webrtc/modules/audio_processing/aec/echo_cancellation.h	/^  short filtDelay;  \/\/ Filtered delay estimate.$/;"	m	struct:webrtc::Aec
filtDelay	webrtc/modules/audio_processing/aecm/echo_control_mobile.cc	/^    short filtDelay;$/;"	m	struct:__anon165	file:
filter	webrtc/base/dbus.h	/^  const std::string &filter() const { return filter_; }$/;"	f	class:rtc::DBusSigFilter
filterState	webrtc/modules/audio_processing/agc/legacy/analog_agc.h	/^  int32_t filterState[8];  \/\/ For downsampling wb to nb$/;"	m	struct:__anon171
filter_	webrtc/base/dbus.h	/^  const std::string filter_;$/;"	m	class:rtc::DBusSigFilter
filter_	webrtc/modules/audio_processing/transient/wpd_node.h	/^  std::unique_ptr<FIRFilter> filter_;$/;"	m	class:webrtc::WPDNode
filter_list_	webrtc/base/dbus.cc	/^  std::vector<DBusSigFilter *> *filter_list_;$/;"	m	class:rtc::DBusMonitor::DBusMonitoringThread	file:
filter_list_	webrtc/base/dbus.h	/^  std::vector<DBusSigFilter *> filter_list_;$/;"	m	class:rtc::DBusMonitor
filter_step_size	webrtc/modules/audio_processing/aec/aec_core.h	/^  float filter_step_size;  \/\/ stepsize$/;"	m	struct:webrtc::AecCore
filtered	webrtc/base/exp_filter.h	/^  float filtered() const { return filtered_; }$/;"	f	class:rtc::ExpFilter
filtered_	webrtc/base/exp_filter.h	/^  float filtered_;  \/\/ Current filter output.$/;"	m	class:rtc::ExpFilter
filtered_clear_pow_	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer.h	/^  std::vector<float> filtered_clear_pow_;$/;"	m	class:webrtc::IntelligibilityEnhancer
filtered_noise_pow_	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer.h	/^  std::vector<float> filtered_noise_pow_;$/;"	m	class:webrtc::IntelligibilityEnhancer
fim	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  int16_t fim[FRAMESAMPLES];$/;"	m	struct:__anon134
final	webrtc/base/array_view.h	/^class ArrayView final {$/;"	c	namespace:rtc
final	webrtc/base/event_tracer.cc	/^class EventLogger final {$/;"	c	namespace:rtc::tracing::__anon12	file:
final	webrtc/base/function_view.h	/^class FunctionView<RetT(ArgT...)> final {$/;"	c	namespace:rtc
final	webrtc/base/optional.h	/^class Optional final {$/;"	c	namespace:rtc
final	webrtc/common_audio/audio_ring_buffer.h	/^class AudioRingBuffer final {$/;"	c	namespace:webrtc
final	webrtc/common_audio/sparse_fir_filter.h	/^class SparseFIRFilter final {$/;"	c	namespace:webrtc
final	webrtc/common_audio/vad/vad.cc	/^class VadImpl final : public Vad {$/;"	c	namespace:webrtc::__anon101	file:
final	webrtc/common_audio/wav_file.h	/^class WavReader final : public WavFile {$/;"	c	namespace:webrtc
final	webrtc/common_audio/wav_file.h	/^class WavWriter final : public WavFile {$/;"	c	namespace:webrtc
final	webrtc/modules/audio_processing/agc/agc_manager_direct.h	/^class AgcManagerDirect final {$/;"	c	namespace:webrtc
final	webrtc/modules/audio_processing/test/aec_dump_based_simulator.h	/^class AecDumpBasedSimulator final : public AudioProcessingSimulator {$/;"	c	namespace:webrtc::test
final	webrtc/modules/audio_processing/test/test_utils.h	/^class ChannelBufferWavReader final {$/;"	c	namespace:webrtc
final	webrtc/modules/audio_processing/test/test_utils.h	/^class ChannelBufferWavWriter final {$/;"	c	namespace:webrtc
final	webrtc/modules/audio_processing/test/test_utils.h	/^class RawFile final {$/;"	c	namespace:webrtc
final	webrtc/modules/audio_processing/test/wav_based_simulator.h	/^class WavBasedSimulator final : public AudioProcessingSimulator {$/;"	c	namespace:webrtc::test
final	webrtc/modules/audio_processing/three_band_filter_bank.h	/^class ThreeBandFilterBank final {$/;"	c	namespace:webrtc
final_mask_	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.h	/^  float final_mask_[kNumFreqBins];$/;"	m	class:webrtc::NonlinearBeamformer
final_mask_	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.h	/^  float* final_mask_;$/;"	m	class:webrtc::PostFilterTransform
find_string	webrtc/base/httpcommon.cc	/^bool find_string(size_t& index, const std::string& needle,$/;"	f	namespace:rtc
fingerprint	webrtc/base/sslidentity.h	/^  std::string fingerprint;$/;"	m	struct:rtc::SSLCertificateStats
fingerprint_algorithm	webrtc/base/sslidentity.h	/^  std::string fingerprint_algorithm;$/;"	m	struct:rtc::SSLCertificateStats
fingerprints	webrtc/base/sslidentity_unittest.cc	/^  std::vector<std::string> fingerprints;$/;"	m	struct:IdentityAndInfo	file:
fir_packets	webrtc/common_types.h	/^  uint32_t fir_packets;           \/\/ Number of RTCP FIR packets.$/;"	m	struct:webrtc::RtcpPacketTypeCounter
firewall_	webrtc/base/httprequest.h	/^  FirewallManager * firewall_;$/;"	m	class:rtc::HttpRequest
firstCall	webrtc/modules/audio_processing/agc/legacy/analog_agc.h	/^  int16_t firstCall;         \/\/ First call to the process-function$/;"	m	struct:__anon171
firstVAD	webrtc/modules/audio_processing/aecm/aecm_core.h	/^    int firstVAD;  \/\/ Parameter to control poorly initialized channels$/;"	m	struct:__anon164
firstVal	webrtc/modules/audio_processing/aec/echo_cancellation.h	/^  short firstVal;$/;"	m	struct:webrtc::Aec
firstVal	webrtc/modules/audio_processing/aecm/echo_control_mobile.cc	/^    short firstVal;$/;"	m	struct:__anon165	file:
first_moments_	webrtc/modules/audio_processing/transient/transient_detector.h	/^  std::unique_ptr<float[]> first_moments_;$/;"	m	class:webrtc::TransientDetector
first_packet_	webrtc/base/sslstreamadapter_unittest.cc	/^  bool first_packet_;$/;"	m	class:SSLDummyStreamBase	file:
first_packet_time_ms	webrtc/common_types.h	/^  int64_t first_packet_time_ms;    \/\/ Time when first packet is sent\/received.$/;"	m	struct:webrtc::StreamDataCounters
first_packet_time_ms	webrtc/common_types.h	/^  int64_t first_packet_time_ms;   \/\/ Time when first packet is sent\/received.$/;"	m	struct:webrtc::RtcpPacketTypeCounter
first_pass_	webrtc/common_audio/resampler/push_sinc_resampler.h	/^  bool first_pass_;$/;"	m	class:webrtc::PushSincResampler
first_process_call_	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^  bool first_process_call_ = true;$/;"	m	class:webrtc::__anon182::TimedThreadApiProcessor	file:
first_process_call_	webrtc/modules/audio_processing/residual_echo_detector.h	/^  bool first_process_call_ = true;$/;"	m	class:webrtc::ResidualEchoDetector
first_queue_ctx	webrtc/base/task_queue_gcd.cc	/^  QueueContext* const first_queue_ctx;$/;"	m	struct:rtc::TaskQueue::PostTaskAndReplyContext	file:
first_render_call_	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  bool first_render_call_ = true;$/;"	m	class:webrtc::__anon181::RenderProcessor	file:
first_task	webrtc/base/task_queue_gcd.cc	/^  std::unique_ptr<QueuedTask> first_task;$/;"	m	struct:rtc::TaskQueue::PostTaskAndReplyContext	file:
first_update_	webrtc/modules/audio_processing/audio_processing_impl.h	/^    bool first_update_ = true;$/;"	m	class:webrtc::AudioProcessingImpl::ApmSubmoduleStates
first_update_	webrtc/modules/audio_processing/level_controller/noise_level_estimator.h	/^  bool first_update_;$/;"	m	class:webrtc::NoiseLevelEstimator
fixedDelay	webrtc/modules/audio_processing/aecm/aecm_core.h	/^    int16_t fixedDelay;$/;"	m	struct:__anon164
fixed_interface	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^  bool fixed_interface = false;$/;"	m	struct:webrtc::test::SimulationSettings
fixture_	webrtc/base/rtccertificategenerator_unittest.cc	/^  scoped_refptr<RTCCertificateGeneratorFixture> fixture_;$/;"	m	class:rtc::RTCCertificateGeneratorTest	file:
flag_	webrtc/base/thread_unittest.cc	/^  AtomicBool* flag_;$/;"	m	class:FunctorB	file:
flag_	webrtc/base/thread_unittest.cc	/^  bool flag_;$/;"	m	class:AtomicBool	file:
flag_	webrtc/base/weak_ptr.h	/^  mutable scoped_refptr<RefCountedObject<WeakReference::Flag>> flag_;$/;"	m	class:rtc::internal::WeakReferenceOwner
flag_	webrtc/base/weak_ptr.h	/^  scoped_refptr<const Flag> flag_;$/;"	m	class:rtc::internal::WeakReference
flag_	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^  int flag_ = 0;$/;"	m	class:webrtc::__anon182::LockedFlag	file:
flag_Hband_cn	webrtc/modules/audio_processing/aec/aec_core.h	/^  int flag_Hband_cn;     \/\/ for comfort noise$/;"	m	struct:webrtc::AecCore
flags_	webrtc/base/physicalsocketserver.cc	/^  int flags_;$/;"	m	class:rtc::FileDispatcher	file:
flexfec_payload_type	webrtc/config.h	/^  int flexfec_payload_type;$/;"	m	struct:webrtc::FlexfecConfig
flexfec_ssrc	webrtc/config.h	/^  uint32_t flexfec_ssrc;$/;"	m	struct:webrtc::FlexfecConfig
flexibleMode	webrtc/common_types.h	/^  bool flexibleMode;$/;"	m	struct:webrtc::VideoCodecVP9
flexible_mode	webrtc/modules/include/module_common_types.h	/^  bool flexible_mode;        \/\/ This frame is in flexible mode.$/;"	m	struct:webrtc::RTPVideoHeaderVP9
float_	webrtc/modules/audio_processing/utility/delay_estimator_internal.h	/^  float float_;$/;"	m	union:__anon229
float_buffer_	webrtc/common_audio/resampler/push_sinc_resampler.h	/^  std::unique_ptr<float[]> float_buffer_;$/;"	m	class:webrtc::PushSincResampler
float_cb_	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^  std::unique_ptr<ChannelBuffer<float> > float_cb_;$/;"	m	class:webrtc::__anon183::ApmTest	file:
float_default	webrtc/base/flags.h	/^  double float_default() const {$/;"	f	class:rtc::Flag
float_rand	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer_unittest.cc	/^float float_rand() {$/;"	f	namespace:webrtc::__anon203
float_variable	webrtc/base/flags.h	/^  double* float_variable() const {$/;"	f	class:rtc::Flag
flush_data	webrtc/base/httpbase.cc	/^HttpBase::flush_data() {$/;"	f	class:rtc::HttpBase
fmt	webrtc/common_audio/wav_header.cc	/^  FmtSubchunk fmt;$/;"	m	struct:webrtc::__anon112::WavHeader	file:
folder	webrtc/base/pathutils.cc	/^std::string Pathname::folder() const {$/;"	f	class:rtc::Pathname
folder_	webrtc/base/diskcache.h	/^  std::string folder_;$/;"	m	class:rtc::DiskCache
folder_	webrtc/base/pathutils.h	/^  std::string folder_, basename_, extension_;$/;"	m	class:rtc::Pathname
folder_delimiter	webrtc/base/pathutils.h	/^  char folder_delimiter() const { return folder_delimiter_; }$/;"	f	class:rtc::Pathname
folder_delimiter_	webrtc/base/pathutils.h	/^  char folder_delimiter_;$/;"	m	class:rtc::Pathname
folder_name	webrtc/base/pathutils.cc	/^std::string Pathname::folder_name() const {$/;"	f	class:rtc::Pathname
force_connect_	webrtc/base/socketadapters.h	/^  bool force_connect_;$/;"	m	class:rtc::AsyncHttpsProxySocket
force_connect_	webrtc/base/sslsocketfactory.h	/^  bool autodetect_proxy_, force_connect_;$/;"	m	class:rtc::SslSocketFactory
formatLeader	webrtc/base/httpcommon.cc	/^HttpRequestData::formatLeader(char* buffer, size_t size) const {$/;"	f	class:rtc::HttpRequestData
formatLeader	webrtc/base/httpcommon.cc	/^HttpResponseData::formatLeader(char* buffer, size_t size) const {$/;"	f	class:rtc::HttpResponseData
formats_	webrtc/modules/audio_processing/audio_processing_impl.h	/^  } formats_;$/;"	m	class:webrtc::AudioProcessingImpl	typeref:struct:webrtc::AudioProcessingImpl::ApmFormatState
fpt	webrtc/modules/audio_processing/agc/legacy/analog_agc.h	/^  FILE* fpt;$/;"	m	struct:__anon171
fraction_	webrtc/modules/audio_processing/aec/aec_core.h	/^  float fraction_;$/;"	m	class:webrtc::DivergentFilterFraction
fraction_lost	webrtc/common_types.h	/^  uint8_t fraction_lost;$/;"	m	struct:webrtc::RtcpStatistics
fraction_poor_delays	webrtc/modules/audio_processing/aec/aec_core.h	/^  float fraction_poor_delays;$/;"	m	struct:webrtc::AecCore
fraction_poor_delays	webrtc/modules/audio_processing/include/audio_processing.h	/^    float fraction_poor_delays = 0.0f;$/;"	m	struct:webrtc::AudioProcessing::AudioProcessingStatistics
fractions	webrtc/system_wrappers/include/ntp_time.h	/^  uint32_t fractions() const { return fractions_; }$/;"	f	class:webrtc::NtpTime
fractions_	webrtc/system_wrappers/include/ntp_time.h	/^  uint32_t fractions_;$/;"	m	class:webrtc::NtpTime
fragmentationLength	webrtc/modules/include/module_common_types.h	/^  size_t* fragmentationLength;       \/\/ Data size for each fragmentation$/;"	m	class:webrtc::RTPFragmentationHeader
fragmentationOffset	webrtc/modules/include/module_common_types.h	/^  size_t* fragmentationOffset;       \/\/ Offset of pointer to data for each$/;"	m	class:webrtc::RTPFragmentationHeader
fragmentationPlType	webrtc/modules/include/module_common_types.h	/^  uint8_t* fragmentationPlType;      \/\/ Payload type of each fragmentation$/;"	m	class:webrtc::RTPFragmentationHeader
fragmentationTimeDiff	webrtc/modules/include/module_common_types.h	/^  uint16_t* fragmentationTimeDiff;   \/\/ Timestamp difference relative "now" for$/;"	m	class:webrtc::RTPFragmentationHeader
fragmentationVectorSize	webrtc/modules/include/module_common_types.h	/^  uint16_t fragmentationVectorSize;  \/\/ Number of fragmentations$/;"	m	class:webrtc::RTPFragmentationHeader
frame	WebRTCAudioProcessing_jni.h	/^	webrtc::AudioFrame *frame;$/;"	m	struct:WebRTCAudioProcessing
frame	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  AudioFrame frame;$/;"	m	struct:webrtc::__anon181::AudioFrameData	file:
frameCounter	webrtc/modules/audio_processing/agc/legacy/digital_agc.h	/^  int frameCounter;$/;"	m	struct:__anon174
frameDroppingOn	webrtc/common_types.h	/^  bool frameDroppingOn;$/;"	m	struct:webrtc::VideoCodecH264
frameDroppingOn	webrtc/common_types.h	/^  bool frameDroppingOn;$/;"	m	struct:webrtc::VideoCodecVP8
frameDroppingOn	webrtc/common_types.h	/^  bool frameDroppingOn;$/;"	m	struct:webrtc::VideoCodecVP9
frameType	webrtc/modules/include/module_common_types.h	/^  FrameType frameType;$/;"	m	struct:webrtc::WebRtcRTPHeader
frame_	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^  AudioFrame* frame_;$/;"	m	class:webrtc::__anon183::ApmTest	file:
frame_count	webrtc/modules/audio_processing/aec/aec_core.h	/^  int frame_count;$/;"	m	struct:webrtc::AecCore
frame_counter	webrtc/common_audio/vad/vad_core.h	/^    int32_t frame_counter;$/;"	m	struct:VadInstT_
frame_counters_	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  FrameCounters frame_counters_;$/;"	m	class:webrtc::__anon181::AudioProcessingImplLockTest	file:
frame_counters_	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  FrameCounters* const frame_counters_ = nullptr;$/;"	m	class:webrtc::__anon181::CaptureProcessor	file:
frame_counters_	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  FrameCounters* const frame_counters_ = nullptr;$/;"	m	class:webrtc::__anon181::RenderProcessor	file:
frame_counters_	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^  FrameCounters frame_counters_;$/;"	m	class:webrtc::__anon182::CallSimulator	file:
frame_counters_	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^  FrameCounters* frame_counters_ = nullptr;$/;"	m	class:webrtc::__anon182::TimedThreadApiProcessor	file:
frame_data_	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  AudioFrameData frame_data_;$/;"	m	class:webrtc::__anon181::CaptureProcessor	file:
frame_data_	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  AudioFrameData frame_data_;$/;"	m	class:webrtc::__anon181::RenderProcessor	file:
frame_data_	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^  AudioFrameData frame_data_;$/;"	m	class:webrtc::__anon182::TimedThreadApiProcessor	file:
frame_extender_	webrtc/modules/audio_processing/level_controller/signal_classifier.h	/^  std::unique_ptr<FrameExtender> frame_extender_;$/;"	m	class:webrtc::SignalClassifier
frame_length_	webrtc/modules/audio_processing/level_controller/gain_selector.h	/^  size_t frame_length_;$/;"	m	class:webrtc::GainSelector
frame_length_	webrtc/modules/audio_processing/level_controller/level_controller.h	/^    float frame_length_;$/;"	m	class:webrtc::LevelController::Metrics
frame_nb	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  int                 frame_nb;$/;"	m	struct:__anon136
frame_offset_	webrtc/common_audio/blocker.h	/^  size_t frame_offset_;$/;"	m	class:webrtc::Blocker
frame_size_ms	webrtc/modules/audio_processing/voice_detection_impl.cc	/^int VoiceDetectionImpl::frame_size_ms() const {$/;"	f	class:webrtc::VoiceDetectionImpl
framelength	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  int16_t framelength;$/;"	m	struct:__anon134
framelevel	webrtc/modules/audio_processing/aec/aec_core.h	/^  BlockMeanCalculator framelevel;$/;"	m	struct:webrtc::PowerLevel
frames_seen_	webrtc/base/timestampaligner.h	/^  int frames_seen_;$/;"	m	class:rtc::TimestampAligner
frames_since_clipped_	webrtc/modules/audio_processing/agc/agc_manager_direct.h	/^  int frames_since_clipped_;$/;"	m	class:webrtc::final
frames_since_zero_buffer_size_	webrtc/modules/audio_processing/residual_echo_detector.h	/^  size_t frames_since_zero_buffer_size_ = 0;$/;"	m	class:webrtc::ResidualEchoDetector
fre	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  int16_t fre[FRAMESAMPLES];$/;"	m	struct:__anon134
free_transaction_	webrtc/base/httpclient.h	/^  bool free_transaction_;$/;"	m	class:rtc::HttpClient
freeifaddrs	webrtc/base/ifaddrs-android.cc	/^void freeifaddrs(struct ifaddrs* addrs) {$/;"	f	namespace:rtc
freqAvgIc	webrtc/modules/audio_processing/aec/aec_core.cc	/^static const int freqAvgIc = PART_LEN \/ 2;$/;"	m	namespace:webrtc	file:
freq_avg_ic	webrtc/modules/audio_processing/aec/aec_core.h	/^  int freq_avg_ic;       \/\/ initial bin for averaging nlp gain$/;"	m	struct:webrtc::AecCore
freqs_	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer.h	/^  const size_t freqs_;         \/\/ Num frequencies in frequency domain.$/;"	m	class:webrtc::IntelligibilityEnhancer
from	webrtc/base/virtualsocketserver.cc	/^  const SocketAddress& from() const { return from_; }$/;"	f	class:rtc::Packet
from_	webrtc/base/virtualsocketserver.cc	/^  SocketAddress from_;$/;"	m	class:rtc::Packet	file:
fs	webrtc/modules/audio_processing/agc/legacy/analog_agc.h	/^  uint32_t fs;                \/\/ Sampling frequency$/;"	m	struct:__anon171
fs	webrtc/modules/audio_processing/ns/ns_core.h	/^  uint32_t fs;$/;"	m	struct:NoiseSuppressionC_
fs	webrtc/modules/audio_processing/ns/nsx_core.h	/^  uint32_t                fs;$/;"	m	struct:NoiseSuppressionFixedC_
full_path	webrtc/base/httpcommon.h	/^  string full_path() const {$/;"	f	class:rtc::Url
fun_ptr	webrtc/base/function_view.h	/^    void (*fun_ptr)();$/;"	m	union:rtc::final::VoidUnion
function_name	webrtc/base/location.h	/^  const char* function_name() const { return function_name_; }$/;"	f	class:rtc::Location
function_name_	webrtc/base/location.h	/^  const char* function_name_;$/;"	m	class:rtc::Location
functor_	webrtc/base/asyncinvoker-inl.h	/^  FunctorT functor_;$/;"	m	class:rtc::FireAndForgetAsyncClosure
functor_	webrtc/base/asyncinvoker-inl.h	/^  FunctorT functor_;$/;"	m	class:rtc::NotifyingAsyncClosure
functor_	webrtc/base/bind.h	/^  FunctorT functor_;$/;"	m	class:rtc::Functor0
functor_	webrtc/base/bind.h	/^  FunctorT functor_;$/;"	m	class:rtc::Functor1
functor_	webrtc/base/bind.h	/^  FunctorT functor_;$/;"	m	class:rtc::Functor2
functor_	webrtc/base/bind.h	/^  FunctorT functor_;$/;"	m	class:rtc::Functor3
functor_	webrtc/base/bind.h	/^  FunctorT functor_;$/;"	m	class:rtc::Functor4
functor_	webrtc/base/bind.h	/^  FunctorT functor_;$/;"	m	class:rtc::Functor5
functor_	webrtc/base/bind.h	/^  FunctorT functor_;$/;"	m	class:rtc::Functor6
functor_	webrtc/base/bind.h	/^  FunctorT functor_;$/;"	m	class:rtc::Functor7
functor_	webrtc/base/bind.h	/^  FunctorT functor_;$/;"	m	class:rtc::Functor8
functor_	webrtc/base/bind.h	/^  FunctorT functor_;$/;"	m	class:rtc::Functor9
functor_	webrtc/base/callback.h	/^    T functor_;$/;"	m	struct:rtc::Callback0::HelperImpl
functor_	webrtc/base/callback.h	/^    T functor_;$/;"	m	struct:rtc::Callback1::HelperImpl
functor_	webrtc/base/callback.h	/^    T functor_;$/;"	m	struct:rtc::Callback2::HelperImpl
functor_	webrtc/base/callback.h	/^    T functor_;$/;"	m	struct:rtc::Callback3::HelperImpl
functor_	webrtc/base/callback.h	/^    T functor_;$/;"	m	struct:rtc::Callback4::HelperImpl
functor_	webrtc/base/callback.h	/^    T functor_;$/;"	m	struct:rtc::Callback5::HelperImpl
functor_	webrtc/base/messagehandler.h	/^  FunctorT functor_;$/;"	m	class:rtc::FunctorMessageHandler
fvalid_	webrtc/common_audio/channel_buffer.h	/^  mutable bool fvalid_;$/;"	m	class:webrtc::IFChannelBuffer
fwd_frame_	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^  AudioFrame fwd_frame_;$/;"	m	class:webrtc::test::AudioProcessingSimulator
g	webrtc/base/callback_unittest.cc	/^int g() { return 42; }$/;"	f	namespace:rtc::__anon8
gCommandLine	webrtc/base/base64_unittest.cc	/^static std::string gCommandLine;$/;"	v	file:
g_add_trace_event_ptr	webrtc/base/event_tracer.cc	/^AddTraceEventPtr g_add_trace_event_ptr = nullptr;$/;"	m	namespace:webrtc::__anon11	file:
g_clock	webrtc/base/timeutils.cc	/^ClockInterface* g_clock = nullptr;$/;"	m	namespace:rtc	file:
g_dbus_init_once	webrtc/base/dbus.cc	/^static pthread_once_t g_dbus_init_once = PTHREAD_ONCE_INIT;$/;"	m	namespace:rtc	file:
g_dbus_symbol	webrtc/base/dbus.cc	/^static LibDBusGlibSymbolTable *g_dbus_symbol = NULL;$/;"	m	namespace:rtc	file:
g_event_logger	webrtc/base/event_tracer.cc	/^static EventLogger* volatile g_event_logger = nullptr;$/;"	m	namespace:rtc::tracing::__anon12	file:
g_event_logging_active	webrtc/base/event_tracer.cc	/^static volatile int g_event_logging_active = 0;$/;"	m	namespace:rtc::tracing::__anon12	file:
g_get_category_enabled_ptr	webrtc/base/event_tracer.cc	/^GetCategoryEnabledPtr g_get_category_enabled_ptr = nullptr;$/;"	m	namespace:webrtc::__anon11	file:
g_log	webrtc/base/optional_unittest.cc	/^  static std::vector<std::string>* g_log;$/;"	m	class:rtc::__anon41::Logger	file:
g_log	webrtc/base/optional_unittest.cc	/^std::vector<std::string>* Logger::g_log = nullptr;$/;"	m	class:rtc::__anon41::Logger	file:
g_log_crit	webrtc/base/logging.cc	/^CriticalSection g_log_crit;$/;"	m	namespace:rtc::__anon27	file:
g_next_id	webrtc/base/optional_unittest.cc	/^  static int g_next_id;$/;"	m	class:rtc::__anon41::Logger	file:
g_next_id	webrtc/base/optional_unittest.cc	/^int Logger::g_next_id = 0;$/;"	m	class:rtc::__anon41::Logger	file:
g_queue_ptr_tls	webrtc/base/task_queue_posix.cc	/^pthread_key_t g_queue_ptr_tls = 0;$/;"	m	namespace:rtc::internal	file:
g_queue_ptr_tls	webrtc/base/task_queue_win.cc	/^DWORD g_queue_ptr_tls = 0;$/;"	m	namespace:rtc::__anon67	file:
g_rtc_histogram_called	webrtc/system_wrappers/source/metrics_default.cc	/^static volatile int g_rtc_histogram_called = 0;$/;"	m	namespace:webrtc::metrics::__anon251	file:
g_rtc_histogram_map	webrtc/system_wrappers/source/metrics_default.cc	/^static RtcHistogramMap* volatile g_rtc_histogram_map = nullptr;$/;"	m	namespace:webrtc::metrics::__anon251	file:
g_winsockinit	webrtc/base/win32socketinit.cc	/^WinsockInitializer g_winsockinit;$/;"	m	namespace:rtc	file:
gain	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_filter.c	/^  double gain;$/;"	m	struct:__anon124	file:
gain	webrtc/modules/audio_processing/agc/legacy/digital_agc.h	/^  int32_t gain;$/;"	m	struct:__anon174
gainMap	webrtc/modules/audio_processing/ns/nsx_core.h	/^  int                     gainMap;$/;"	m	struct:NoiseSuppressionFixedC_
gainTable	webrtc/modules/audio_processing/agc/legacy/digital_agc.h	/^  int32_t gainTable[32];$/;"	m	struct:__anon174
gainTableIdx	webrtc/modules/audio_processing/agc/legacy/analog_agc.h	/^  uint16_t gainTableIdx;  \/\/ Current position in virtual gain table$/;"	m	struct:__anon171
gain_	webrtc/modules/audio_processing/level_controller/gain_selector.h	/^  float gain_;$/;"	m	class:webrtc::GainSelector
gain_applier_	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer.h	/^  intelligibility::GainApplier gain_applier_;$/;"	m	class:webrtc::IntelligibilityEnhancer
gain_applier_	webrtc/modules/audio_processing/level_controller/level_controller.h	/^  GainApplier gain_applier_;$/;"	m	class:webrtc::LevelController
gain_control	webrtc/modules/audio_processing/audio_processing_impl.cc	/^  std::unique_ptr<GainControlImpl> gain_control;$/;"	m	struct:webrtc::AudioProcessingImpl::ApmPublicSubmodules	file:
gain_control	webrtc/modules/audio_processing/audio_processing_impl.cc	/^GainControl* AudioProcessingImpl::gain_control() const {$/;"	f	class:webrtc::AudioProcessingImpl
gain_control	webrtc/modules/audio_processing/include/mock_audio_processing.h	/^  virtual MockGainControl* gain_control() const {$/;"	f	class:webrtc::test::MockAudioProcessing
gain_control_	webrtc/modules/audio_processing/include/mock_audio_processing.h	/^  std::unique_ptr<MockGainControl> gain_control_;$/;"	m	class:webrtc::test::MockAudioProcessing
gain_control_for_experimental_agc	webrtc/modules/audio_processing/audio_processing_impl.cc	/^      gain_control_for_experimental_agc;$/;"	m	struct:webrtc::AudioProcessingImpl::ApmPublicSubmodules	file:
gain_controllers_	webrtc/modules/audio_processing/gain_control_impl.h	/^  std::vector<std::unique_ptr<GainController>> gain_controllers_;$/;"	m	class:webrtc::GainControlImpl
gain_increase_step_size_	webrtc/modules/audio_processing/level_controller/gain_applier.h	/^  float gain_increase_step_size_ = 0.f;$/;"	m	class:webrtc::GainApplier
gain_jumpstart_	webrtc/modules/audio_processing/level_controller/level_controller.h	/^  bool gain_jumpstart_ = false;$/;"	m	class:webrtc::LevelController
gain_mult	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_filter.c	/^  double gain_mult[4];$/;"	m	struct:__anon124	file:
gain_normal_decrease_step_size_	webrtc/modules/audio_processing/level_controller/gain_applier.h	/^  float gain_normal_decrease_step_size_ = 0.f;$/;"	m	class:webrtc::GainApplier
gain_saturated_decrease_step_size_	webrtc/modules/audio_processing/level_controller/gain_applier.h	/^  float gain_saturated_decrease_step_size_ = 0.f;$/;"	m	class:webrtc::GainApplier
gain_selector_	webrtc/modules/audio_processing/level_controller/level_controller.h	/^  GainSelector gain_selector_;$/;"	m	class:webrtc::LevelController
gain_sum_	webrtc/modules/audio_processing/level_controller/level_controller.h	/^    float gain_sum_;$/;"	m	class:webrtc::LevelController::Metrics
gainmap	webrtc/modules/audio_processing/ns/ns_core.h	/^  int gainmap;$/;"	m	struct:NoiseSuppressionC_
gains_eq_	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer.h	/^  std::vector<float> gains_eq_;  \/\/ Pre-filter modified gains.$/;"	m	class:webrtc::IntelligibilityEnhancer
gapDensity	webrtc/modules/include/module_common_types.h	/^  uint8_t gapDensity;$/;"	m	struct:webrtc::RTCPVoIPMetric
gapDuration	webrtc/modules/include/module_common_types.h	/^  uint16_t gapDuration;$/;"	m	struct:webrtc::RTCPVoIPMetric
gatePrevious	webrtc/modules/audio_processing/agc/legacy/digital_agc.h	/^  int16_t gatePrevious;$/;"	m	struct:__anon174
gcd	webrtc/common_audio/blocker.cc	/^size_t gcd(size_t a, size_t b) {$/;"	f	namespace:__anon77
gctrl_	webrtc/modules/audio_processing/agc/agc_manager_direct.h	/^  GainControl* gctrl_;$/;"	m	class:webrtc::final
gctrl_	webrtc/modules/audio_processing/agc/agc_manager_direct_unittest.cc	/^  test::MockGainControl gctrl_;$/;"	m	class:webrtc::AgcManagerDirectTest	file:
generate_async_completed_	webrtc/base/rtccertificategenerator_unittest.cc	/^  bool generate_async_completed_;$/;"	m	class:rtc::RTCCertificateGeneratorFixture	file:
generator	webrtc/base/rtccertificategenerator_unittest.cc	/^  RTCCertificateGenerator* generator() const { return generator_.get(); }$/;"	f	class:rtc::RTCCertificateGeneratorFixture
generator_	webrtc/base/rtccertificategenerator_unittest.cc	/^  std::unique_ptr<RTCCertificateGenerator> generator_;$/;"	m	class:rtc::RTCCertificateGeneratorFixture	file:
get	webrtc/base/linked_ptr.h	/^    X* get()        const throw()   {return itsPtr;}$/;"	f	class:rtc::linked_ptr
get	webrtc/base/scoped_ref_ptr.h	/^  T* get() const { return ptr_; }$/;"	f	class:rtc::scoped_refptr
get	webrtc/base/thread_unittest.cc	/^  bool get() const {$/;"	f	class:AtomicBool
get	webrtc/base/weak_ptr.h	/^  T* get() const { return ref_.is_valid() ? ptr_ : nullptr; }$/;"	f	class:rtc::WeakPtr
getAbsoluteUri	webrtc/base/httpcommon.cc	/^bool HttpRequestData::getAbsoluteUri(std::string* uri) const {$/;"	f	class:rtc::HttpRequestData
getRelativeUri	webrtc/base/httpcommon.cc	/^bool HttpRequestData::getRelativeUri(std::string* host,$/;"	f	class:rtc::HttpRequestData
getStackTraceString	webrtc/base/java/src/org/webrtc/Logging.java	/^  private static String getStackTraceString(Throwable e) {$/;"	m	class:Logging	file:
get_attribute	webrtc/base/httpcommon-inl.h	/^bool Url<CTYPE>::get_attribute(const string& name, string* value) const {$/;"	f	class:rtc::Url
get_capture_level	webrtc/modules/audio_processing/gain_control_impl.cc	/^  int get_capture_level() {$/;"	f	class:webrtc::GainControlImpl::GainController
get_critsec	webrtc/base/sigslot.h	/^		CRITICAL_SECTION* get_critsec()$/;"	f	class:sigslot::multi_threaded_global
get_flag	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^  bool get_flag() const {$/;"	f	class:webrtc::__anon182::LockedFlag
get_kernel_for_testing	webrtc/common_audio/resampler/sinc_resampler.h	/^  float* get_kernel_for_testing() { return kernel_storage_.get(); }$/;"	f	class:webrtc::SincResampler
get_mutex	webrtc/base/sigslot.h	/^		pthread_mutex_t* get_mutex()$/;"	f	class:sigslot::multi_threaded_global
get_num_process_stream_calls	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^  size_t get_num_process_stream_calls() { return num_process_stream_calls_; }$/;"	f	class:webrtc::test::AudioProcessingSimulator
get_num_reverse_process_stream_calls	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^  size_t get_num_reverse_process_stream_calls() {$/;"	f	class:webrtc::test::AudioProcessingSimulator
get_resampler_for_testing	webrtc/common_audio/resampler/push_sinc_resampler.h	/^  SincResampler* get_resampler_for_testing() { return resampler_.get(); }$/;"	f	class:webrtc::PushSincResampler
get_window_list_	webrtc/base/macwindowpicker.h	/^  void* get_window_list_;$/;"	m	class:rtc::MacWindowPicker
get_window_list_desc_	webrtc/base/macwindowpicker.h	/^  void* get_window_list_desc_;$/;"	m	class:rtc::MacWindowPicker
getdest	webrtc/base/sigslot.h	/^		virtual has_slots_interface* getdest() const$/;"	f	class:sigslot::_connection0
getdest	webrtc/base/sigslot.h	/^		virtual has_slots_interface* getdest() const$/;"	f	class:sigslot::_connection1
getdest	webrtc/base/sigslot.h	/^		virtual has_slots_interface* getdest() const$/;"	f	class:sigslot::_connection2
getdest	webrtc/base/sigslot.h	/^		virtual has_slots_interface* getdest() const$/;"	f	class:sigslot::_connection3
getdest	webrtc/base/sigslot.h	/^		virtual has_slots_interface* getdest() const$/;"	f	class:sigslot::_connection4
getdest	webrtc/base/sigslot.h	/^		virtual has_slots_interface* getdest() const$/;"	f	class:sigslot::_connection5
getdest	webrtc/base/sigslot.h	/^		virtual has_slots_interface* getdest() const$/;"	f	class:sigslot::_connection6
getdest	webrtc/base/sigslot.h	/^		virtual has_slots_interface* getdest() const$/;"	f	class:sigslot::_connection7
getdest	webrtc/base/sigslot.h	/^		virtual has_slots_interface* getdest() const$/;"	f	class:sigslot::_connection8
getifaddrs	webrtc/base/ifaddrs-android.cc	/^int getifaddrs(struct ifaddrs** result) {$/;"	f	namespace:rtc
gof	webrtc/modules/include/module_common_types.h	/^  GofInfoVP9 gof;$/;"	m	struct:webrtc::RTPVideoHeaderVP9
gof_idx	webrtc/modules/include/module_common_types.h	/^  uint8_t gof_idx;  \/\/ Index to predefined temporal frame info in SS data.$/;"	m	struct:webrtc::RTPVideoHeaderVP9
h	webrtc/base/callback_unittest.cc	/^int h(int x) { return x * x; }$/;"	f	namespace:rtc::__anon8
h264_extra_settings	webrtc/config.h	/^  rtc::Optional<VideoDecoderH264Settings> h264_extra_settings;$/;"	m	class:webrtc::DecoderSpecificSettings
hNlFbLocalMin	webrtc/modules/audio_processing/aec/aec_core.h	/^  float hNlFbMin, hNlFbLocalMin;$/;"	m	struct:webrtc::AecCore
hNlFbMin	webrtc/modules/audio_processing/aec/aec_core.h	/^  float hNlFbMin, hNlFbLocalMin;$/;"	m	struct:webrtc::AecCore
hNlMinCtr	webrtc/modules/audio_processing/aec/aec_core.h	/^  int hNlNewMin, hNlMinCtr;$/;"	m	struct:webrtc::AecCore
hNlNewMin	webrtc/modules/audio_processing/aec/aec_core.h	/^  int hNlNewMin, hNlMinCtr;$/;"	m	struct:webrtc::AecCore
hNlXdAvgMin	webrtc/modules/audio_processing/aec/aec_core.h	/^  float hNlXdAvgMin;$/;"	m	struct:webrtc::AecCore
hNs	webrtc/modules/audio_processing/aec/aec_core.h	/^  float hNs[PART_LEN1];$/;"	m	struct:webrtc::AecCore
h_key_	webrtc/base/win32regkey.h	/^  HKEY h_key_;$/;"	m	class:rtc::RegKey
handle	webrtc/base/win32socketserver.cc	/^  HANDLE handle;$/;"	m	struct:rtc::Win32Socket::DnsLookup	file:
handle	webrtc/base/win32socketserver.h	/^  HWND handle() { return wnd_.handle(); }$/;"	f	class:rtc::Win32SocketServer
handle	webrtc/base/win32window.h	/^  HWND handle() const { return wnd_; }$/;"	f	class:rtc::Win32Window
handle_	webrtc/base/fileutils.h	/^  HANDLE handle_;$/;"	m	class:rtc::DirectoryIterator
handle_	webrtc/base/latebindingsymboltable.h	/^  DllHandle handle_;$/;"	m	class:rtc::LateBindingSymbolTable
handle_	webrtc/common_audio/vad/vad.cc	/^  VadInst* handle_;$/;"	m	class:webrtc::__anon101::final	file:
handle_	webrtc/modules/audio_processing/aec/system_delay_unittest.cc	/^  void* handle_;$/;"	m	class:webrtc::__anon162::SystemDelayTest	file:
handle_	webrtc/modules/audio_processing/utility/delay_estimator_unittest.cc	/^  void* handle_;$/;"	m	class:__anon232::DelayEstimatorTest	file:
handlers_	webrtc/base/physicalsocketserver.cc	/^  HandlerMap handlers_;$/;"	m	class:rtc::PosixSignalDispatcher	file:
handshake_wait_	webrtc/base/ssladapter_unittest.cc	/^  int handshake_wait_;$/;"	m	class:SSLAdapterTestBase	file:
handshake_wait_	webrtc/base/sslstreamadapter_unittest.cc	/^  int handshake_wait_;$/;"	m	class:SSLStreamAdapterTestBase	file:
happened_	webrtc/base/onetimeevent.h	/^  bool happened_ = false;$/;"	m	class:webrtc::OneTimeEvent
happened_	webrtc/base/onetimeevent.h	/^  bool happened_ = false;$/;"	m	class:webrtc::ThreadUnsafeOneTimeEvent
happy_	webrtc/base/task_unittest.cc	/^  TaskInfo happy_[HAPPY_TASK_COUNT];$/;"	m	class:rtc::TaskTest	file:
harness	webrtc/base/signalthread_unittest.cc	/^    const SignalThreadTest* harness() { return harness_; }$/;"	f	class:SignalThreadTest::SlowSignalThread
harness_	webrtc/base/signalthread_unittest.cc	/^    SignalThreadTest* harness_;$/;"	m	class:SignalThreadTest::SlowSignalThread	file:
harness_	webrtc/base/signalthread_unittest.cc	/^  SignalThreadTest* harness_;$/;"	m	class:OwnerThread	file:
hasAbsoluteSendTime	webrtc/common_types.h	/^  bool hasAbsoluteSendTime;$/;"	m	struct:webrtc::RTPHeaderExtension
hasAudioLevel	webrtc/common_types.h	/^  bool hasAudioLevel;$/;"	m	struct:webrtc::RTPHeaderExtension
hasHeader	webrtc/base/httpcommon.cc	/^HttpData::hasHeader(const std::string& name, std::string* value) const {$/;"	f	class:rtc::HttpData
hasHeader	webrtc/base/httpcommon.h	/^  inline bool hasHeader(HttpHeader header, std::string* value) const {$/;"	f	struct:rtc::HttpData
hasTransmissionTimeOffset	webrtc/common_types.h	/^  bool hasTransmissionTimeOffset;$/;"	m	struct:webrtc::RTPHeaderExtension
hasTransportSequenceNumber	webrtc/common_types.h	/^  bool hasTransportSequenceNumber;$/;"	m	struct:webrtc::RTPHeaderExtension
hasVideoRotation	webrtc/common_types.h	/^  bool hasVideoRotation;$/;"	m	struct:webrtc::RTPHeaderExtension
has_composite_extension_	webrtc/base/x11windowpicker.cc	/^  bool has_composite_extension_;$/;"	m	class:rtc::XWindowEnumerator	file:
has_keyboard	webrtc/modules/audio_processing/include/audio_processing.h	/^  bool has_keyboard() const { return has_keyboard_; }$/;"	f	class:webrtc::StreamConfig
has_keyboard_	webrtc/modules/audio_processing/include/audio_processing.h	/^  bool has_keyboard_;$/;"	m	class:webrtc::StreamConfig
has_next_event_	webrtc/modules/audio_processing/test/debug_dump_replayer.h	/^  bool has_next_event_;$/;"	m	class:webrtc::test::DebugDumpReplayer
has_peer_certificate_digest	webrtc/base/opensslstreamadapter.h	/^  bool has_peer_certificate_digest() const {$/;"	f	class:rtc::OpenSSLStreamAdapter
has_render_extension_	webrtc/base/x11windowpicker.cc	/^  bool has_render_extension_;$/;"	m	class:rtc::XWindowEnumerator	file:
has_run	webrtc/base/signalthread_unittest.cc	/^  bool has_run() { return has_run_; }$/;"	f	class:OwnerThread
has_run_	webrtc/base/signalthread_unittest.cc	/^  bool has_run_;$/;"	m	class:OwnerThread	file:
has_slots	webrtc/base/sigslot.h	/^		has_slots()$/;"	f	class:sigslot::has_slots
has_slots	webrtc/base/sigslot.h	/^		has_slots(const has_slots& hs)$/;"	f	class:sigslot::has_slots
has_slots	webrtc/base/sigslot.h	/^	class has_slots : public has_slots_interface, public mt_policy$/;"	c	namespace:sigslot
has_slots_interface	webrtc/base/sigslot.h	/^		has_slots_interface()$/;"	f	class:sigslot::has_slots_interface
has_slots_interface	webrtc/base/sigslot.h	/^	class has_slots_interface$/;"	c	namespace:sigslot
has_value_	webrtc/base/optional.h	/^  bool has_value_;  \/\/ True iff value_ contains a live value.$/;"	m	class:rtc::final
hashCode	webrtc/base/java/src/org/webrtc/Size.java	/^  public int hashCode() {$/;"	m	class:Size
hdlg_	webrtc/base/win32socketserver.h	/^  HWND hdlg_;$/;"	m	class:rtc::Win32SocketServer
head_row_	webrtc/system_wrappers/include/aligned_array.h	/^  T** head_row_;$/;"	m	class:webrtc::AlignedArray
header	webrtc/base/ifaddrs-android.cc	/^  nlmsghdr header;$/;"	m	struct:__anon21::netlinkrequest	file:
header	webrtc/common_audio/wav_header.cc	/^    ChunkHeader header;$/;"	m	struct:webrtc::__anon112::WavHeader::__anon113	file:
header	webrtc/common_audio/wav_header.cc	/^    ChunkHeader header;$/;"	m	struct:webrtc::__anon112::WavHeader::__anon114	file:
header	webrtc/common_audio/wav_header.cc	/^  ChunkHeader header;$/;"	m	struct:webrtc::__anon112::FmtSubchunk	file:
header	webrtc/modules/include/module_common_types.h	/^  RTPHeader header;$/;"	m	struct:webrtc::WebRtcRTPHeader
headerLength	webrtc/common_types.h	/^  size_t headerLength;$/;"	m	struct:webrtc::RTPHeader
header_	webrtc/base/httpbase.h	/^  HttpData::const_iterator header_;$/;"	m	class:rtc::HttpBase
header_bytes	webrtc/common_types.h	/^  size_t header_bytes;   \/\/ Number of bytes used by RTP headers.$/;"	m	struct:webrtc::RtpPacketCounter
headers_	webrtc/base/httpcommon.h	/^  HeaderMap headers_;$/;"	m	struct:rtc::HttpData
headers_	webrtc/base/socketadapters.h	/^  std::string agent_, user_, headers_;$/;"	m	class:rtc::AsyncHttpsProxySocket
height	webrtc/base/java/src/org/webrtc/Size.java	/^  public int height;$/;"	f	class:Size
height	webrtc/common_types.h	/^  unsigned short height;$/;"	m	class:webrtc::VideoCodec
height	webrtc/common_types.h	/^  unsigned short height;$/;"	m	struct:webrtc::SimulcastStream
height	webrtc/config.h	/^  size_t height;$/;"	m	struct:webrtc::VideoStream
height	webrtc/modules/audio_processing/test/android/apmtest/jni/main.c	/^    int32_t height;$/;"	m	struct:engine	file:
height	webrtc/modules/include/module_common_types.h	/^  uint16_t height;$/;"	m	struct:webrtc::RTPVideoHeader
height	webrtc/modules/include/module_common_types.h	/^  uint16_t height[kMaxVp9NumberOfSpatialLayers];$/;"	m	struct:webrtc::RTPVideoHeaderVP9
helper_	webrtc/base/callback.h	/^  scoped_refptr<Helper> helper_;$/;"	m	class:rtc::Callback0
helper_	webrtc/base/callback.h	/^  scoped_refptr<Helper> helper_;$/;"	m	class:rtc::Callback1
helper_	webrtc/base/callback.h	/^  scoped_refptr<Helper> helper_;$/;"	m	class:rtc::Callback2
helper_	webrtc/base/callback.h	/^  scoped_refptr<Helper> helper_;$/;"	m	class:rtc::Callback3
helper_	webrtc/base/callback.h	/^  scoped_refptr<Helper> helper_;$/;"	m	class:rtc::Callback4
helper_	webrtc/base/callback.h	/^  scoped_refptr<Helper> helper_;$/;"	m	class:rtc::Callback5
hev_	webrtc/base/physicalsocketserver.cc	/^  WSAEVENT hev_;$/;"	m	class:rtc::EventDispatcher	file:
hex_decode	webrtc/base/stringencode.cc	/^bool hex_decode(char ch, unsigned char* val) {$/;"	f	namespace:rtc
hex_decode	webrtc/base/stringencode.cc	/^size_t hex_decode(char * cbuffer, size_t buflen,$/;"	f	namespace:rtc
hex_decode	webrtc/base/stringencode.cc	/^size_t hex_decode(char* buffer, size_t buflen, const std::string& source) {$/;"	f	namespace:rtc
hex_decode_with_delimiter	webrtc/base/stringencode.cc	/^size_t hex_decode_with_delimiter(char* buffer, size_t buflen,$/;"	f	namespace:rtc
hex_decode_with_delimiter	webrtc/base/stringencode.cc	/^size_t hex_decode_with_delimiter(char* cbuffer, size_t buflen,$/;"	f	namespace:rtc
hex_encode	webrtc/base/stringencode.cc	/^char hex_encode(unsigned char val) {$/;"	f	namespace:rtc
hex_encode	webrtc/base/stringencode.cc	/^size_t hex_encode(char* buffer, size_t buflen,$/;"	f	namespace:rtc
hex_encode	webrtc/base/stringencode.cc	/^std::string hex_encode(const char* source, size_t srclen) {$/;"	f	namespace:rtc
hex_encode	webrtc/base/stringencode.cc	/^std::string hex_encode(const std::string& str) {$/;"	f	namespace:rtc
hex_encode_with_delimiter	webrtc/base/stringencode.cc	/^size_t hex_encode_with_delimiter(char* buffer, size_t buflen,$/;"	f	namespace:rtc
hex_encode_with_delimiter	webrtc/base/stringencode.cc	/^std::string hex_encode_with_delimiter(const char* source, size_t srclen,$/;"	f	namespace:rtc
hex_mode_	webrtc/base/socketadapters.h	/^  bool hex_mode_;$/;"	m	class:rtc::LoggingSocketAdapter
hex_mode_	webrtc/base/stream.h	/^  bool hex_mode_;$/;"	m	class:rtc::LoggingAdapter
hiFiltGain	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  double       hiFiltGain[SUBFRAMES];$/;"	m	struct:__anon142
hicounter	webrtc/modules/audio_processing/aec/aec_core.h	/^  size_t hicounter;$/;"	m	struct:webrtc::Stats
highSkewCtr	webrtc/modules/audio_processing/aec/echo_cancellation.h	/^  int highSkewCtr;$/;"	m	struct:webrtc::Aec
high_bands_buffers_	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer.h	/^      high_bands_buffers_;$/;"	m	class:webrtc::IntelligibilityEnhancer
high_mean_end_bin_	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.h	/^  size_t high_mean_end_bin_;$/;"	m	class:webrtc::NonlinearBeamformer
high_mean_start_bin_	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.h	/^  size_t high_mean_start_bin_;$/;"	m	class:webrtc::NonlinearBeamformer
high_pass_filter	webrtc/modules/audio_processing/audio_processing_impl.cc	/^  std::unique_ptr<HighPassFilterImpl> high_pass_filter;$/;"	m	struct:webrtc::AudioProcessingImpl::ApmPublicSubmodules	file:
high_pass_filter	webrtc/modules/audio_processing/audio_processing_impl.cc	/^HighPassFilter* AudioProcessingImpl::high_pass_filter() const {$/;"	f	class:webrtc::AudioProcessingImpl
high_pass_filter	webrtc/modules/audio_processing/include/mock_audio_processing.h	/^  virtual MockHighPassFilter* high_pass_filter() const {$/;"	f	class:webrtc::test::MockAudioProcessing
high_pass_filter_	webrtc/modules/audio_processing/include/mock_audio_processing.h	/^  std::unique_ptr<MockHighPassFilter> high_pass_filter_;$/;"	m	class:webrtc::test::MockAudioProcessing
high_pass_filter_	webrtc/modules/audio_processing/vad/vad_audio_proc.h	/^  std::unique_ptr<PoleZeroFilter> high_pass_filter_;$/;"	m	class:webrtc::VadAudioProc
high_pass_filter_enabled_	webrtc/modules/audio_processing/audio_processing_impl.h	/^    bool high_pass_filter_enabled_ = false;$/;"	m	class:webrtc::AudioProcessingImpl::ApmSubmoduleStates
high_pass_postfilter_mask_	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.h	/^  float high_pass_postfilter_mask_;$/;"	m	class:webrtc::NonlinearBeamformer
highest_order_	webrtc/modules/audio_processing/vad/pole_zero_filter.h	/^  size_t highest_order_;$/;"	m	class:webrtc::PoleZeroFilter
highly_nonstationary_signal_hold_counter_	webrtc/modules/audio_processing/level_controller/gain_selector.h	/^  int highly_nonstationary_signal_hold_counter_;$/;"	m	class:webrtc::GainSelector
himean	webrtc/modules/audio_processing/aec/aec_core.h	/^  float himean;$/;"	m	struct:webrtc::Stats
histLrt	webrtc/modules/audio_processing/ns/ns_core.h	/^  int histLrt[HIST_PAR_EST];$/;"	m	struct:NoiseSuppressionC_
histLrt	webrtc/modules/audio_processing/ns/nsx_core.h	/^  int16_t                 histLrt[HIST_PAR_EST];$/;"	m	struct:NoiseSuppressionFixedC_
histSpecDiff	webrtc/modules/audio_processing/ns/ns_core.h	/^  int histSpecDiff[HIST_PAR_EST];$/;"	m	struct:NoiseSuppressionC_
histSpecDiff	webrtc/modules/audio_processing/ns/nsx_core.h	/^  int16_t                 histSpecDiff[HIST_PAR_EST];$/;"	m	struct:NoiseSuppressionFixedC_
histSpecFlat	webrtc/modules/audio_processing/ns/ns_core.h	/^  int histSpecFlat[HIST_PAR_EST];$/;"	m	struct:NoiseSuppressionC_
histSpecFlat	webrtc/modules/audio_processing/ns/nsx_core.h	/^  int16_t                 histSpecFlat[HIST_PAR_EST];$/;"	m	struct:NoiseSuppressionFixedC_
hist_	webrtc/modules/audio_processing/agc/loudness_histogram_unittest.cc	/^  std::unique_ptr<LoudnessHistogram> hist_;$/;"	m	class:webrtc::LoudnessHistogramTest	file:
hist_bin_index_	webrtc/modules/audio_processing/agc/loudness_histogram.h	/^  std::unique_ptr<int[]> hist_bin_index_;$/;"	m	class:webrtc::LoudnessHistogram
histogram	webrtc/modules/audio_processing/utility/delay_estimator.h	/^  float* histogram;$/;"	m	struct:__anon228
histogram_	webrtc/modules/audio_processing/agc/agc.h	/^  std::unique_ptr<LoudnessHistogram> histogram_;$/;"	m	class:webrtc::Agc
history_size	webrtc/modules/audio_processing/utility/delay_estimator.h	/^  int history_size;$/;"	m	struct:__anon227
history_size	webrtc/modules/audio_processing/utility/delay_estimator.h	/^  int history_size;$/;"	m	struct:__anon228
hisum	webrtc/modules/audio_processing/aec/aec_core.h	/^  float hisum;$/;"	m	struct:webrtc::Stats
hold_counter_	webrtc/modules/audio_processing/level_controller/peak_level_estimator.h	/^  int hold_counter_;$/;"	m	class:webrtc::PeakLevelEstimator
hold_target_blocks_	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.h	/^  size_t hold_target_blocks_;$/;"	m	class:webrtc::NonlinearBeamformer
host	webrtc/base/httpcommon.h	/^  const string& host() const { return host_; }$/;"	f	class:rtc::Url
host	webrtc/base/httprequest.h	/^  const std::string& host() { return host_; }$/;"	f	class:rtc::HttpRequest
host_	webrtc/base/httpcommon.h	/^  string host_, path_, query_;$/;"	m	class:rtc::Url
host_	webrtc/base/httprequest.h	/^  std::string host_;$/;"	m	class:rtc::HttpRequest
hostname	webrtc/base/socketaddress.h	/^  const std::string& hostname() const { return hostname_; }$/;"	f	class:rtc::SocketAddress
hostname_	webrtc/base/socketaddress.h	/^  std::string hostname_;$/;"	m	class:rtc::SocketAddress
hostname_	webrtc/base/sslsocketfactory.h	/^  std::string hostname_, logging_label_;$/;"	m	class:rtc::SslSocketFactory
hp_filter_state	webrtc/common_audio/vad/vad_core.h	/^    int16_t hp_filter_state[4];$/;"	m	struct:VadInstT_
hp_state	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  double        hp_state[2];$/;"	m	struct:__anon130
hping6_	webrtc/base/winping.h	/^    HANDLE hping6_;$/;"	m	class:rtc::WinPing
hping_	webrtc/base/winping.h	/^    HANDLE hping_;$/;"	m	class:rtc::WinPing
hsn_detect_rec	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  int hsn_detect_rec;$/;"	m	struct:__anon131
hsn_detect_snd	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  int hsn_detect_snd;$/;"	m	struct:__anon131
html_decode	webrtc/base/stringencode.cc	/^size_t html_decode(char * buffer, size_t buflen,$/;"	f	namespace:rtc
html_encode	webrtc/base/stringencode.cc	/^size_t html_encode(char * buffer, size_t buflen,$/;"	f	namespace:rtc
http_stream	webrtc/base/httpbase_unittest.cc	/^  StreamInterface* http_stream;$/;"	m	class:rtc::HttpBaseTest	file:
http_stream_	webrtc/base/httpbase.h	/^  StreamInterface* http_stream_;$/;"	m	class:rtc::HttpBase
https_	webrtc/base/proxy_unittest.cc	/^  std::unique_ptr<rtc::HttpListenServer> https_;$/;"	m	class:ProxyTest	file:
i	webrtc/base/callback_unittest.cc	/^void i(int& x) { x *= x; }  \/\/ NOLINT: Testing refs$/;"	f	namespace:rtc::__anon8
i	webrtc/base/flags.h	/^  int i;$/;"	m	union:rtc::FlagValue
ia6t_expire	webrtc/base/macifaddrs_converter.cc	/^  time_t ia6t_expire;    \/* valid lifetime expiration time *\/$/;"	m	struct:in6_addrlifetime	file:
ia6t_pltime	webrtc/base/macifaddrs_converter.cc	/^  u_int32_t ia6t_pltime; \/* prefix lifetime *\/$/;"	m	struct:in6_addrlifetime	file:
ia6t_preferred	webrtc/base/macifaddrs_converter.cc	/^  time_t ia6t_preferred; \/* preferred lifetime expiration time *\/$/;"	m	struct:in6_addrlifetime	file:
ia6t_vltime	webrtc/base/macifaddrs_converter.cc	/^  u_int32_t ia6t_vltime; \/* valid lifetime *\/$/;"	m	struct:in6_addrlifetime	file:
ibuf	webrtc/common_audio/channel_buffer.cc	/^ChannelBuffer<int16_t>* IFChannelBuffer::ibuf() {$/;"	f	class:webrtc::IFChannelBuffer
ibuf_	webrtc/common_audio/channel_buffer.h	/^  mutable ChannelBuffer<int16_t> ibuf_;$/;"	m	class:webrtc::IFChannelBuffer
ibuf_const	webrtc/common_audio/channel_buffer.cc	/^const ChannelBuffer<int16_t>* IFChannelBuffer::ibuf_const() const {$/;"	f	class:webrtc::IFChannelBuffer
icmp6_ifstat	webrtc/base/macifaddrs_converter.cc	/^struct icmp6_ifstat {$/;"	s	file:
icmp_echo_reply	webrtc/base/winping.cc	/^typedef struct icmp_echo_reply {$/;"	s	namespace:rtc	file:
icmpv6_echo_reply_lh	webrtc/base/winping.cc	/^typedef struct icmpv6_echo_reply_lh {$/;"	s	namespace:rtc	file:
id	webrtc/base/network.h	/^  uint16_t id() const { return id_; }$/;"	f	class:rtc::Network
id	webrtc/base/opensslstreamadapter.cc	/^  const int id;$/;"	m	struct:rtc::SrtpCipherMapEntry	file:
id	webrtc/base/window.h	/^  const DesktopT& id() const { return id_; }$/;"	f	class:rtc::DesktopId
id	webrtc/base/window.h	/^  const WindowT& id() const { return id_; }$/;"	f	class:rtc::WindowId
id	webrtc/base/windowpicker.h	/^  const DesktopId& id() const { return id_; }$/;"	f	class:rtc::DesktopDescription
id	webrtc/base/windowpicker.h	/^  const WindowId& id() const { return id_; }$/;"	f	class:rtc::WindowDescription
id	webrtc/config.h	/^  int id;$/;"	m	struct:webrtc::RtpExtension
id_	webrtc/base/diskcache.cc	/^  std::string id_;$/;"	m	class:rtc::DiskCacheAdapter	file:
id_	webrtc/base/diskcache.h	/^  std::string id_;$/;"	m	class:rtc::CacheLock
id_	webrtc/base/network.h	/^  uint16_t id_ = 0;$/;"	m	class:rtc::Network
id_	webrtc/base/optional_unittest.cc	/^  int id_;$/;"	m	class:rtc::__anon41::Logger	file:
id_	webrtc/base/physicalsocketserver.h	/^  int id_;$/;"	m	class:rtc::SocketDispatcher
id_	webrtc/base/win32socketserver.h	/^  DWORD id_;$/;"	m	class:rtc::Win32Thread
id_	webrtc/base/window.h	/^  DesktopT id_;$/;"	m	class:rtc::DesktopId
id_	webrtc/base/window.h	/^  WindowT id_;$/;"	m	class:rtc::WindowId
id_	webrtc/base/windowpicker.h	/^  DesktopId id_;$/;"	m	class:rtc::DesktopDescription
id_	webrtc/base/windowpicker.h	/^  WindowId id_;$/;"	m	class:rtc::WindowDescription
id_	webrtc/modules/include/module_common_types.h	/^  int id_;$/;"	m	class:webrtc::AudioFrame
id_function	webrtc/base/openssladapter.cc	/^static unsigned long id_function() {  \/\/ NOLINT$/;"	f	namespace:rtc
identifier	webrtc/modules/audio_processing/config_unittest.cc	/^  static const ConfigOptionID identifier = ConfigOptionID::kMyExperimentForTest;$/;"	m	struct:webrtc::__anon191::MyExperiment	file:
identifier	webrtc/modules/audio_processing/config_unittest.cc	/^  static const ConfigOptionID identifier =$/;"	m	struct:webrtc::__anon191::Algo1_CostFunction	file:
identifier	webrtc/modules/audio_processing/include/audio_processing.h	/^  static const ConfigOptionID identifier = ConfigOptionID::kBeamforming;$/;"	m	struct:webrtc::Beamforming
identifier	webrtc/modules/audio_processing/include/audio_processing.h	/^  static const ConfigOptionID identifier = ConfigOptionID::kDelayAgnostic;$/;"	m	struct:webrtc::DelayAgnostic
identifier	webrtc/modules/audio_processing/include/audio_processing.h	/^  static const ConfigOptionID identifier = ConfigOptionID::kEchoCanceller3;$/;"	m	struct:webrtc::EchoCanceller3
identifier	webrtc/modules/audio_processing/include/audio_processing.h	/^  static const ConfigOptionID identifier = ConfigOptionID::kExperimentalAgc;$/;"	m	struct:webrtc::ExperimentalAgc
identifier	webrtc/modules/audio_processing/include/audio_processing.h	/^  static const ConfigOptionID identifier = ConfigOptionID::kExperimentalNs;$/;"	m	struct:webrtc::ExperimentalNs
identifier	webrtc/modules/audio_processing/include/audio_processing.h	/^  static const ConfigOptionID identifier = ConfigOptionID::kExtendedFilter;$/;"	m	struct:webrtc::ExtendedFilter
identifier	webrtc/modules/audio_processing/include/audio_processing.h	/^  static const ConfigOptionID identifier = ConfigOptionID::kIntelligibility;$/;"	m	struct:webrtc::Intelligibility
identifier	webrtc/modules/audio_processing/include/audio_processing.h	/^  static const ConfigOptionID identifier =$/;"	m	struct:webrtc::RefinedAdaptiveFilter
identifier	webrtc/modules/audio_processing/include/config.h	/^  static ConfigOptionID identifier() {$/;"	f	class:webrtc::Config
identities_set_	webrtc/base/sslstreamadapter_unittest.cc	/^  bool identities_set_;$/;"	m	class:SSLStreamAdapterTestBase	file:
identity	webrtc/base/bind.h	/^template <class T> struct identity { typedef T type; };$/;"	s	namespace:rtc::detail
identity	webrtc/base/rtccertificate.h	/^  SSLIdentity* identity() const { return identity_.get(); }$/;"	f	class:rtc::RTCCertificate
identity	webrtc/base/sslidentity_unittest.cc	/^  std::unique_ptr<rtc::SSLIdentity> identity;$/;"	m	struct:IdentityAndInfo	file:
identity	webrtc/base/stringutils.h	/^inline wchar_t identity(wchar_t c) { return c; }$/;"	f	namespace:rtc
identity_	webrtc/base/opensslstreamadapter.h	/^  std::unique_ptr<OpenSSLIdentity> identity_;$/;"	m	class:rtc::OpenSSLStreamAdapter
identity_	webrtc/base/rtccertificate.h	/^  std::unique_ptr<SSLIdentity> identity_;$/;"	m	class:rtc::RTCCertificate
identity_ecdsa1_	webrtc/base/sslidentity_unittest.cc	/^  std::unique_ptr<SSLIdentity> identity_ecdsa1_;$/;"	m	class:SSLIdentityTest	file:
identity_ecdsa2_	webrtc/base/sslidentity_unittest.cc	/^  std::unique_ptr<SSLIdentity> identity_ecdsa2_;$/;"	m	class:SSLIdentityTest	file:
identity_rsa1_	webrtc/base/sslidentity_unittest.cc	/^  std::unique_ptr<SSLIdentity> identity_rsa1_;$/;"	m	class:SSLIdentityTest	file:
identity_rsa2_	webrtc/base/sslidentity_unittest.cc	/^  std::unique_ptr<SSLIdentity> identity_rsa2_;$/;"	m	class:SSLIdentityTest	file:
idle_source_	webrtc/base/dbus.cc	/^  GSource *idle_source_;$/;"	m	class:rtc::DBusMonitor::DBusMonitoringThread	file:
ifa_addr	webrtc/base/ifaddrs-android.h	/^  struct sockaddr* ifa_addr;$/;"	m	struct:ifaddrs	typeref:struct:ifaddrs::sockaddr
ifa_flags	webrtc/base/ifaddrs-android.h	/^  unsigned int ifa_flags;$/;"	m	struct:ifaddrs
ifa_name	webrtc/base/ifaddrs-android.h	/^  char* ifa_name;$/;"	m	struct:ifaddrs
ifa_netmask	webrtc/base/ifaddrs-android.h	/^  struct sockaddr* ifa_netmask;$/;"	m	struct:ifaddrs	typeref:struct:ifaddrs::sockaddr
ifa_next	webrtc/base/ifaddrs-android.h	/^  struct ifaddrs* ifa_next;$/;"	m	struct:ifaddrs	typeref:struct:ifaddrs::ifaddrs
ifaces_	webrtc/base/fakenetwork.h	/^  IfaceList ifaces_;$/;"	m	class:rtc::FakeNetworkManager
ifaddrs	webrtc/base/ifaddrs-android.h	/^struct ifaddrs {$/;"	s
ifr_ifru	webrtc/base/macifaddrs_converter.cc	/^  } ifr_ifru;$/;"	m	struct:in6_ifreq	typeref:union:in6_ifreq::__anon28	file:
ifr_name	webrtc/base/macifaddrs_converter.cc	/^  char ifr_name[IFNAMSIZ];$/;"	m	struct:in6_ifreq	file:
ifru_addr	webrtc/base/macifaddrs_converter.cc	/^    struct sockaddr_in6 ifru_addr;$/;"	m	union:in6_ifreq::__anon28	typeref:struct:in6_ifreq::__anon28::sockaddr_in6	file:
ifru_data	webrtc/base/macifaddrs_converter.cc	/^    caddr_t ifru_data;$/;"	m	union:in6_ifreq::__anon28	file:
ifru_dstaddr	webrtc/base/macifaddrs_converter.cc	/^    struct sockaddr_in6 ifru_dstaddr;$/;"	m	union:in6_ifreq::__anon28	typeref:struct:in6_ifreq::__anon28::sockaddr_in6	file:
ifru_flags	webrtc/base/macifaddrs_converter.cc	/^    int ifru_flags;$/;"	m	union:in6_ifreq::__anon28	file:
ifru_flags6	webrtc/base/macifaddrs_converter.cc	/^    int ifru_flags6;$/;"	m	union:in6_ifreq::__anon28	file:
ifru_icmp6stat	webrtc/base/macifaddrs_converter.cc	/^    struct icmp6_ifstat ifru_icmp6stat;$/;"	m	union:in6_ifreq::__anon28	typeref:struct:in6_ifreq::__anon28::icmp6_ifstat	file:
ifru_intval	webrtc/base/macifaddrs_converter.cc	/^    int ifru_intval;$/;"	m	union:in6_ifreq::__anon28	file:
ifru_lifetime	webrtc/base/macifaddrs_converter.cc	/^    struct in6_addrlifetime ifru_lifetime;$/;"	m	union:in6_ifreq::__anon28	typeref:struct:in6_ifreq::__anon28::in6_addrlifetime	file:
ifru_metric	webrtc/base/macifaddrs_converter.cc	/^    int ifru_metric;$/;"	m	union:in6_ifreq::__anon28	file:
ifru_scope_id	webrtc/base/macifaddrs_converter.cc	/^    u_int32_t ifru_scope_id[SCOPE6_ID_MAX];$/;"	m	union:in6_ifreq::__anon28	file:
ifru_stat	webrtc/base/macifaddrs_converter.cc	/^    struct in6_ifstat ifru_stat;$/;"	m	union:in6_ifreq::__anon28	typeref:struct:in6_ifreq::__anon28::in6_ifstat	file:
ifs6_in_addrerr	webrtc/base/macifaddrs_converter.cc	/^  u_quad_t ifs6_in_addrerr;      \/* # of datagrams with invalid dst *\/$/;"	m	struct:in6_ifstat	file:
ifs6_in_adminprohib	webrtc/base/macifaddrs_converter.cc	/^  u_quad_t ifs6_in_adminprohib;$/;"	m	struct:icmp6_ifstat	file:
ifs6_in_deliver	webrtc/base/macifaddrs_converter.cc	/^  u_quad_t ifs6_in_deliver;      \/* # of datagrams delivered to ULP *\/$/;"	m	struct:in6_ifstat	file:
ifs6_in_discard	webrtc/base/macifaddrs_converter.cc	/^  u_quad_t ifs6_in_discard;      \/* # of discarded datagrams *\/$/;"	m	struct:in6_ifstat	file:
ifs6_in_dstunreach	webrtc/base/macifaddrs_converter.cc	/^  u_quad_t ifs6_in_dstunreach;$/;"	m	struct:icmp6_ifstat	file:
ifs6_in_echo	webrtc/base/macifaddrs_converter.cc	/^  u_quad_t ifs6_in_echo;$/;"	m	struct:icmp6_ifstat	file:
ifs6_in_echoreply	webrtc/base/macifaddrs_converter.cc	/^  u_quad_t ifs6_in_echoreply;$/;"	m	struct:icmp6_ifstat	file:
ifs6_in_error	webrtc/base/macifaddrs_converter.cc	/^  u_quad_t ifs6_in_error;$/;"	m	struct:icmp6_ifstat	file:
ifs6_in_hdrerr	webrtc/base/macifaddrs_converter.cc	/^  u_quad_t ifs6_in_hdrerr;       \/* # of datagrams with invalid hdr *\/$/;"	m	struct:in6_ifstat	file:
ifs6_in_mcast	webrtc/base/macifaddrs_converter.cc	/^  u_quad_t ifs6_in_mcast;        \/* # of inbound multicast datagrams *\/$/;"	m	struct:in6_ifstat	file:
ifs6_in_mlddone	webrtc/base/macifaddrs_converter.cc	/^  u_quad_t ifs6_in_mlddone;$/;"	m	struct:icmp6_ifstat	file:
ifs6_in_mldquery	webrtc/base/macifaddrs_converter.cc	/^  u_quad_t ifs6_in_mldquery;$/;"	m	struct:icmp6_ifstat	file:
ifs6_in_mldreport	webrtc/base/macifaddrs_converter.cc	/^  u_quad_t ifs6_in_mldreport;$/;"	m	struct:icmp6_ifstat	file:
ifs6_in_msg	webrtc/base/macifaddrs_converter.cc	/^  u_quad_t ifs6_in_msg;$/;"	m	struct:icmp6_ifstat	file:
ifs6_in_neighboradvert	webrtc/base/macifaddrs_converter.cc	/^  u_quad_t ifs6_in_neighboradvert;$/;"	m	struct:icmp6_ifstat	file:
ifs6_in_neighborsolicit	webrtc/base/macifaddrs_converter.cc	/^  u_quad_t ifs6_in_neighborsolicit;$/;"	m	struct:icmp6_ifstat	file:
ifs6_in_noroute	webrtc/base/macifaddrs_converter.cc	/^  u_quad_t ifs6_in_noroute;      \/* # of datagrams with no route *\/$/;"	m	struct:in6_ifstat	file:
ifs6_in_paramprob	webrtc/base/macifaddrs_converter.cc	/^  u_quad_t ifs6_in_paramprob;$/;"	m	struct:icmp6_ifstat	file:
ifs6_in_pkttoobig	webrtc/base/macifaddrs_converter.cc	/^  u_quad_t ifs6_in_pkttoobig;$/;"	m	struct:icmp6_ifstat	file:
ifs6_in_protounknown	webrtc/base/macifaddrs_converter.cc	/^  u_quad_t ifs6_in_protounknown; \/* # of datagrams with unknown proto *\/$/;"	m	struct:in6_ifstat	file:
ifs6_in_receive	webrtc/base/macifaddrs_converter.cc	/^  u_quad_t ifs6_in_receive;      \/* # of total input datagram *\/$/;"	m	struct:in6_ifstat	file:
ifs6_in_redirect	webrtc/base/macifaddrs_converter.cc	/^  u_quad_t ifs6_in_redirect;$/;"	m	struct:icmp6_ifstat	file:
ifs6_in_routeradvert	webrtc/base/macifaddrs_converter.cc	/^  u_quad_t ifs6_in_routeradvert;$/;"	m	struct:icmp6_ifstat	file:
ifs6_in_routersolicit	webrtc/base/macifaddrs_converter.cc	/^  u_quad_t ifs6_in_routersolicit;$/;"	m	struct:icmp6_ifstat	file:
ifs6_in_timeexceed	webrtc/base/macifaddrs_converter.cc	/^  u_quad_t ifs6_in_timeexceed;$/;"	m	struct:icmp6_ifstat	file:
ifs6_in_toobig	webrtc/base/macifaddrs_converter.cc	/^  u_quad_t ifs6_in_toobig;       \/* # of datagrams exceeded MTU *\/$/;"	m	struct:in6_ifstat	file:
ifs6_in_truncated	webrtc/base/macifaddrs_converter.cc	/^  u_quad_t ifs6_in_truncated;    \/* # of truncated datagrams *\/$/;"	m	struct:in6_ifstat	file:
ifs6_out_adminprohib	webrtc/base/macifaddrs_converter.cc	/^  u_quad_t ifs6_out_adminprohib;$/;"	m	struct:icmp6_ifstat	file:
ifs6_out_discard	webrtc/base/macifaddrs_converter.cc	/^  u_quad_t ifs6_out_discard;     \/* # of discarded datagrams *\/$/;"	m	struct:in6_ifstat	file:
ifs6_out_dstunreach	webrtc/base/macifaddrs_converter.cc	/^  u_quad_t ifs6_out_dstunreach;$/;"	m	struct:icmp6_ifstat	file:
ifs6_out_echo	webrtc/base/macifaddrs_converter.cc	/^  u_quad_t ifs6_out_echo;$/;"	m	struct:icmp6_ifstat	file:
ifs6_out_echoreply	webrtc/base/macifaddrs_converter.cc	/^  u_quad_t ifs6_out_echoreply;$/;"	m	struct:icmp6_ifstat	file:
ifs6_out_error	webrtc/base/macifaddrs_converter.cc	/^  u_quad_t ifs6_out_error;$/;"	m	struct:icmp6_ifstat	file:
ifs6_out_forward	webrtc/base/macifaddrs_converter.cc	/^  u_quad_t ifs6_out_forward;     \/* # of datagrams forwarded *\/$/;"	m	struct:in6_ifstat	file:
ifs6_out_fragcreat	webrtc/base/macifaddrs_converter.cc	/^  u_quad_t ifs6_out_fragcreat;   \/* # of fragment datagrams *\/$/;"	m	struct:in6_ifstat	file:
ifs6_out_fragfail	webrtc/base/macifaddrs_converter.cc	/^  u_quad_t ifs6_out_fragfail;    \/* # of datagrams failed on fragment *\/$/;"	m	struct:in6_ifstat	file:
ifs6_out_fragok	webrtc/base/macifaddrs_converter.cc	/^  u_quad_t ifs6_out_fragok;      \/* # of datagrams fragmented *\/$/;"	m	struct:in6_ifstat	file:
ifs6_out_mcast	webrtc/base/macifaddrs_converter.cc	/^  u_quad_t ifs6_out_mcast;       \/* # of outbound multicast datagrams *\/$/;"	m	struct:in6_ifstat	file:
ifs6_out_mlddone	webrtc/base/macifaddrs_converter.cc	/^  u_quad_t ifs6_out_mlddone;$/;"	m	struct:icmp6_ifstat	file:
ifs6_out_mldquery	webrtc/base/macifaddrs_converter.cc	/^  u_quad_t ifs6_out_mldquery;$/;"	m	struct:icmp6_ifstat	file:
ifs6_out_mldreport	webrtc/base/macifaddrs_converter.cc	/^  u_quad_t ifs6_out_mldreport;$/;"	m	struct:icmp6_ifstat	file:
ifs6_out_msg	webrtc/base/macifaddrs_converter.cc	/^  u_quad_t ifs6_out_msg;$/;"	m	struct:icmp6_ifstat	file:
ifs6_out_neighboradvert	webrtc/base/macifaddrs_converter.cc	/^  u_quad_t ifs6_out_neighboradvert;$/;"	m	struct:icmp6_ifstat	file:
ifs6_out_neighborsolicit	webrtc/base/macifaddrs_converter.cc	/^  u_quad_t ifs6_out_neighborsolicit;$/;"	m	struct:icmp6_ifstat	file:
ifs6_out_paramprob	webrtc/base/macifaddrs_converter.cc	/^  u_quad_t ifs6_out_paramprob;$/;"	m	struct:icmp6_ifstat	file:
ifs6_out_pkttoobig	webrtc/base/macifaddrs_converter.cc	/^  u_quad_t ifs6_out_pkttoobig;$/;"	m	struct:icmp6_ifstat	file:
ifs6_out_redirect	webrtc/base/macifaddrs_converter.cc	/^  u_quad_t ifs6_out_redirect;$/;"	m	struct:icmp6_ifstat	file:
ifs6_out_request	webrtc/base/macifaddrs_converter.cc	/^  u_quad_t ifs6_out_request;     \/* # of outgoing datagrams from ULP *\/$/;"	m	struct:in6_ifstat	file:
ifs6_out_routeradvert	webrtc/base/macifaddrs_converter.cc	/^  u_quad_t ifs6_out_routeradvert;$/;"	m	struct:icmp6_ifstat	file:
ifs6_out_routersolicit	webrtc/base/macifaddrs_converter.cc	/^  u_quad_t ifs6_out_routersolicit;$/;"	m	struct:icmp6_ifstat	file:
ifs6_out_timeexceed	webrtc/base/macifaddrs_converter.cc	/^  u_quad_t ifs6_out_timeexceed;$/;"	m	struct:icmp6_ifstat	file:
ifs6_reass_fail	webrtc/base/macifaddrs_converter.cc	/^  u_quad_t ifs6_reass_fail;      \/* # of reass failures *\/$/;"	m	struct:in6_ifstat	file:
ifs6_reass_ok	webrtc/base/macifaddrs_converter.cc	/^  u_quad_t ifs6_reass_ok;        \/* # of reassembled packets *\/$/;"	m	struct:in6_ifstat	file:
ifs6_reass_reqd	webrtc/base/macifaddrs_converter.cc	/^  u_quad_t ifs6_reass_reqd;      \/* # of incoming fragmented packets *\/$/;"	m	struct:in6_ifstat	file:
ignore_bad_cert	webrtc/base/ssladapter.h	/^  bool ignore_bad_cert() const { return ignore_bad_cert_; }$/;"	f	class:rtc::SSLAdapter
ignore_bad_cert	webrtc/base/sslsocketfactory.h	/^  bool ignore_bad_cert() const { return ignore_bad_cert_; }$/;"	f	class:rtc::SslSocketFactory
ignore_bad_cert	webrtc/base/sslstreamadapter.h	/^  bool ignore_bad_cert() const { return ignore_bad_cert_; }$/;"	f	class:rtc::SSLStreamAdapter
ignore_bad_cert_	webrtc/base/ssladapter.h	/^  bool ignore_bad_cert_;$/;"	m	class:rtc::SSLAdapter
ignore_bad_cert_	webrtc/base/sslsocketfactory.h	/^  bool ignore_bad_cert_;$/;"	m	class:rtc::SslSocketFactory
ignore_bad_cert_	webrtc/base/sslstreamadapter.h	/^  bool ignore_bad_cert_;$/;"	m	class:rtc::SSLStreamAdapter
ignore_data	webrtc/base/httpbase.h	/^  bool ignore_data() const { return ignore_data_; }$/;"	f	class:rtc::HttpBase
ignore_data_	webrtc/base/httpbase.h	/^  bool ignore_data_, chunk_data_;$/;"	m	class:rtc::HttpBase
ignore_non_default_routes_	webrtc/base/network.h	/^  bool ignore_non_default_routes_;$/;"	m	class:rtc::BasicNetworkManager
ignored	webrtc/base/network.h	/^  bool ignored() const { return ignored_; }$/;"	f	class:rtc::Network
ignored_	webrtc/base/network.h	/^  bool ignored_;$/;"	m	class:rtc::Network
il	webrtc/base/base64.cc	/^static const unsigned char il = 0xFF;  \/\/ Illegal base64 character$/;"	m	namespace:rtc	file:
iless	webrtc/base/httpcommon.h	/^struct iless {$/;"	s	namespace:rtc
imag	webrtc/modules/audio_processing/aecm/aecm_core.h	/^    int16_t imag;$/;"	m	struct:__anon163
imag	webrtc/modules/audio_processing/ns/nsx_core.h	/^  int16_t                 imag[ANAL_BLOCKL_MAX];$/;"	m	struct:NoiseSuppressionFixedC_
imagFFT	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  int16_t imagFFT[FRAMESAMPLES_HALF];$/;"	m	struct:__anon135
impl	webrtc/base/keep_ref_until_done.h	/^namespace impl {$/;"	n	namespace:rtc
impl_	webrtc/base/cryptstring.h	/^  std::unique_ptr<const CryptStringImpl> impl_;$/;"	m	class:rtc::CryptString
in	webrtc/base/md5.h	/^  uint32_t in[16];$/;"	m	struct:rtc::MD5Context
in6_addrlifetime	webrtc/base/macifaddrs_converter.cc	/^struct in6_addrlifetime {$/;"	s	file:
in6_ifreq	webrtc/base/macifaddrs_converter.cc	/^struct in6_ifreq {$/;"	s	file:
in6_ifstat	webrtc/base/macifaddrs_converter.cc	/^struct in6_ifstat {$/;"	s	file:
inActive	webrtc/modules/audio_processing/agc/legacy/analog_agc.h	/^  int16_t inActive;          \/\/ Inactive time in milliseconds$/;"	m	struct:__anon171
inQueue	webrtc/modules/audio_processing/agc/legacy/analog_agc.h	/^  int16_t inQueue;                \/\/ 10 ms batch indicator$/;"	m	struct:__anon171
inSamples	webrtc/modules/audio_processing/aec/aec_core.h	/^  int inSamples, outSamples;$/;"	m	struct:webrtc::AecCore
inWaitLatePkts	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  int16_t                  inWaitLatePkts;$/;"	m	struct:__anon131
in_	webrtc/base/sslstreamadapter_unittest.cc	/^  rtc::StreamInterface* in_;$/;"	m	class:SSLDummyStreamBase	file:
in_buf_	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^  std::unique_ptr<ChannelBuffer<float>> in_buf_;$/;"	m	class:webrtc::test::AudioProcessingSimulator
in_buffer_	webrtc/base/proxyserver.h	/^  FifoBuffer in_buffer_;$/;"	m	class:rtc::ProxyBinding
in_buffer_	webrtc/common_audio/resampler/include/resampler.h	/^    int16_t* in_buffer_;$/;"	m	class:webrtc::Resampler
in_buffer_	webrtc/modules/audio_processing/three_band_filter_bank.h	/^  std::vector<float> in_buffer_;$/;"	m	class:webrtc::final
in_buffer_	webrtc/modules/audio_processing/transient/transient_suppressor.h	/^  std::unique_ptr<float[]> in_buffer_;$/;"	m	class:webrtc::TransientSuppressor
in_buffer_size_	webrtc/common_audio/resampler/include/resampler.h	/^    size_t in_buffer_size_;$/;"	m	class:webrtc::Resampler
in_buffer_size_max_	webrtc/common_audio/resampler/include/resampler.h	/^    size_t in_buffer_size_max_;$/;"	m	class:webrtc::Resampler
in_config_	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^  StreamConfig in_config_;$/;"	m	class:webrtc::test::AudioProcessingSimulator
in_sample_rate_hz	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  uint16_t in_sample_rate_hz;$/;"	m	struct:__anon144
in_use	webrtc/modules/audio_coding/codecs/isac/bandwidth_info.h	/^  int in_use;$/;"	m	struct:__anon122
in_wait_period	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  int in_wait_period;$/;"	m	struct:__anon131
inactive_histogram_	webrtc/modules/audio_processing/agc/agc.h	/^  std::unique_ptr<LoudnessHistogram> inactive_histogram_;$/;"	m	class:webrtc::Agc
inbuf	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  double        inbuf[QLOOKAHEAD];$/;"	m	struct:__anon130
inbuf_	webrtc/base/asynctcpsocket.h	/^  Buffer inbuf_;$/;"	m	class:rtc::AsyncTCPSocketBase
index	webrtc/base/window.h	/^  int index() const { return index_; }$/;"	f	class:rtc::DesktopId
index	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_filter.c	/^  int index;$/;"	m	struct:__anon124	file:
indexLPCShape	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  int         indexLPCShape[UB_LPC_ORDER * UB16_LPC_VEC_PER_FRAME];$/;"	m	struct:__anon135
index_	webrtc/base/diskcache.cc	/^  size_t index_;$/;"	m	class:rtc::DiskCacheAdapter	file:
index_	webrtc/base/window.h	/^  int index_;$/;"	m	class:rtc::DesktopId
index_	webrtc/modules/audio_processing/vad/standalone_vad.h	/^  size_t index_;$/;"	m	class:webrtc::StandaloneVad
index_	webrtc/modules/audio_processing/vad/vad_circular_buffer.h	/^  int index_;$/;"	m	class:webrtc::VadCircularBuffer
index_7	webrtc/common_audio/signal_processing/complex_bit_reverse.c	/^static const int16_t index_7[112] = {$/;"	v	file:
index_7	webrtc/common_audio/signal_processing/complex_bit_reverse_arm.S	/^index_7:  @ Indexes for stages == 7.$/;"	l
index_8	webrtc/common_audio/signal_processing/complex_bit_reverse.c	/^static const int16_t index_8[240] = {$/;"	v	file:
index_8	webrtc/common_audio/signal_processing/complex_bit_reverse_arm.S	/^index_8:  @ Indexes for stages == 8.$/;"	l
index_vector	webrtc/common_audio/vad/vad_core.h	/^    int16_t index_vector[16 * kNumChannels];$/;"	m	struct:VadInstT_
individual	webrtc/common_audio/vad/vad_core.h	/^    int16_t individual[3];$/;"	m	struct:VadInstT_
inet_ntop	webrtc/base/nethelpers.cc	/^const char* inet_ntop(int af, const void *src, char* dst, socklen_t size) {$/;"	f	namespace:rtc
inet_ntop_v4	webrtc/base/win32.cc	/^const char* inet_ntop_v4(const void* src, char* dst, socklen_t size) {$/;"	f	namespace:rtc
inet_ntop_v6	webrtc/base/win32.cc	/^const char* inet_ntop_v6(const void* src, char* dst, socklen_t size) {$/;"	f	namespace:rtc
inet_pton	webrtc/base/nethelpers.cc	/^int inet_pton(int af, const char* src, void *dst) {$/;"	f	namespace:rtc
inet_pton_v4	webrtc/base/win32.cc	/^int inet_pton_v4(const char* src, void* dst) {$/;"	f	namespace:rtc
inet_pton_v6	webrtc/base/win32.cc	/^int inet_pton_v6(const char* src, void* dst) {$/;"	f	namespace:rtc
info_	webrtc/base/latebindingsymboltable.h	/^  const TableInfo *info_;$/;"	m	class:rtc::LateBindingSymbolTable
initCheck	webrtc/modules/audio_processing/aec/echo_cancellation.cc	/^static const int initCheck = 42;$/;"	m	namespace:webrtc	file:
initFlag	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  int16_t               initFlag;$/;"	m	struct:__anon144
initFlag	webrtc/modules/audio_processing/aec/echo_cancellation.h	/^  short initFlag;  \/\/ indicates if AEC has been initialized$/;"	m	struct:webrtc::Aec
initFlag	webrtc/modules/audio_processing/aecm/echo_control_mobile.cc	/^    short initFlag; \/\/ indicates if AEC has been initialized$/;"	m	struct:__anon165	file:
initFlag	webrtc/modules/audio_processing/agc/legacy/analog_agc.h	/^  int16_t initFlag;$/;"	m	struct:__anon171
initFlag	webrtc/modules/audio_processing/ns/ns_core.h	/^  int initFlag;$/;"	m	struct:NoiseSuppressionC_
initFlag	webrtc/modules/audio_processing/ns/nsx_core.h	/^  int                     initFlag;$/;"	m	struct:NoiseSuppressionFixedC_
initMagnEst	webrtc/modules/audio_processing/ns/ns_core.h	/^  float initMagnEst[HALF_ANAL_BLOCKL];  \/\/ Initial magnitude spectrum estimate.$/;"	m	struct:NoiseSuppressionC_
initMagnEst	webrtc/modules/audio_processing/ns/nsx_core.h	/^  uint32_t                initMagnEst[HALF_ANAL_BLOCKL];$/;"	m	struct:NoiseSuppressionFixedC_
init_flag	webrtc/common_audio/vad/vad_core.h	/^    int init_flag;$/;"	m	struct:VadInstT_
initial_avg_noise	webrtc/common_types.h	/^  double initial_avg_noise;$/;"	m	struct:webrtc::OverUseDetectorOptions
initial_delay	webrtc/common_audio/blocker.h	/^  size_t initial_delay() const { return initial_delay_; }$/;"	f	class:webrtc::Blocker
initial_delay	webrtc/common_audio/lapped_transform.h	/^  size_t initial_delay() const { return blocker_.initial_delay(); }$/;"	f	class:webrtc::LappedTransform
initial_delay_	webrtc/common_audio/blocker.h	/^  const size_t initial_delay_;$/;"	m	class:webrtc::Blocker
initial_delay_	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer_unittest.cc	/^  size_t initial_delay_;$/;"	m	class:webrtc::IntelligibilityEnhancerTest	file:
initial_e	webrtc/common_types.h	/^  double initial_e[2][2];$/;"	m	struct:webrtc::OverUseDetectorOptions
initial_offset	webrtc/common_types.h	/^  double initial_offset;$/;"	m	struct:webrtc::OverUseDetectorOptions
initial_peak_level_dbfs	webrtc/modules/audio_processing/include/audio_processing.h	/^      float initial_peak_level_dbfs = -6.0206f;$/;"	m	struct:webrtc::AudioProcessing::Config::LevelController
initial_process_noise	webrtc/common_types.h	/^  double initial_process_noise[2];$/;"	m	struct:webrtc::OverUseDetectorOptions
initial_sample_rate_hz	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  int initial_sample_rate_hz = 16000;$/;"	m	struct:webrtc::__anon181::TestConfig	file:
initial_slope	webrtc/common_types.h	/^  double initial_slope;$/;"	m	struct:webrtc::OverUseDetectorOptions
initial_var_noise	webrtc/common_types.h	/^  double initial_var_noise;$/;"	m	struct:webrtc::OverUseDetectorOptions
initialization_frames_left_	webrtc/modules/audio_processing/level_controller/signal_classifier.h	/^  int initialization_frames_left_;$/;"	m	class:webrtc::SignalClassifier
initialization_phase_	webrtc/modules/audio_processing/level_controller/peak_level_estimator.h	/^  bool initialization_phase_;$/;"	m	class:webrtc::PeakLevelEstimator
initialization_time_milliseconds_	webrtc/base/ratetracker.h	/^  int64_t initialization_time_milliseconds_;$/;"	m	class:rtc::RateTracker
innerClose	WebRTCAudioProcessing_jni.cc	/^static int innerClose(long long nProcessor)$/;"	f	file:
input_	webrtc/modules/audio_processing/test/debug_dump_replayer.h	/^  std::unique_ptr<ChannelBuffer<float>> input_;$/;"	m	class:webrtc::test::DebugDumpReplayer
input_	webrtc/modules/audio_processing/test/debug_dump_test.cc	/^  std::unique_ptr<ChannelBuffer<float>> input_;$/;"	m	class:webrtc::test::__anon223::DebugDumpGenerator	file:
input_audio_	webrtc/modules/audio_processing/test/debug_dump_test.cc	/^  ResampleInputAudioFile input_audio_;$/;"	m	class:webrtc::test::__anon223::DebugDumpGenerator	file:
input_block_	webrtc/common_audio/blocker.h	/^  ChannelBuffer<float> input_block_;$/;"	m	class:webrtc::Blocker
input_buffer_	webrtc/common_audio/blocker.h	/^  AudioRingBuffer input_buffer_;$/;"	m	class:webrtc::Blocker
input_buffer_	webrtc/common_audio/resampler/sinc_resampler.h	/^  std::unique_ptr<float[], AlignedFreeDeleter> input_buffer_;$/;"	m	class:webrtc::SincResampler
input_buffer_	webrtc/modules/audio_processing/audio_buffer.h	/^  std::unique_ptr<IFChannelBuffer> input_buffer_;$/;"	m	class:webrtc::AudioBuffer
input_buffer_size_	webrtc/common_audio/resampler/sinc_resampler.h	/^  const size_t input_buffer_size_;$/;"	m	class:webrtc::SincResampler
input_channel_layout	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  AudioProcessing::ChannelLayout input_channel_layout =$/;"	m	struct:webrtc::__anon181::AudioFrameData	file:
input_config_	webrtc/modules/audio_processing/test/debug_dump_replayer.h	/^  StreamConfig input_config_;$/;"	m	class:webrtc::test::DebugDumpReplayer
input_config_	webrtc/modules/audio_processing/test/debug_dump_test.cc	/^  StreamConfig input_config_;$/;"	m	class:webrtc::test::__anon223::DebugDumpGenerator	file:
input_file_channels_	webrtc/modules/audio_processing/test/debug_dump_test.cc	/^  const int input_file_channels_;$/;"	m	class:webrtc::test::__anon223::DebugDumpGenerator	file:
input_file_name_	webrtc/modules/audio_processing/test/debug_dump_test.cc	/^  const std::string input_file_name_;$/;"	m	class:webrtc::test::__anon223::DebugDumpGenerator	file:
input_filename	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^  rtc::Optional<std::string> input_filename;$/;"	m	struct:webrtc::test::SimulationSettings
input_frame	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  std::vector<float*> input_frame;$/;"	m	struct:webrtc::__anon181::AudioFrameData	file:
input_frame	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^  std::vector<float*> input_frame;$/;"	m	struct:webrtc::__anon182::AudioFrameData	file:
input_framechannels	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  std::vector<float> input_framechannels;$/;"	m	struct:webrtc::__anon181::AudioFrameData	file:
input_framechannels	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^  std::vector<float> input_framechannels;$/;"	m	struct:webrtc::__anon182::AudioFrameData	file:
input_level_	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^  const float input_level_;$/;"	m	class:webrtc::__anon182::TimedThreadApiProcessor	file:
input_num_frames_	webrtc/modules/audio_processing/audio_buffer.h	/^  const size_t input_num_frames_;$/;"	m	class:webrtc::AudioBuffer
input_number_of_channels	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  int input_number_of_channels = -1;$/;"	m	struct:webrtc::__anon181::AudioFrameData	file:
input_rate_	webrtc/common_audio/resampler/push_sinc_resampler_unittest.cc	/^  int input_rate_;$/;"	m	class:webrtc::PushSincResamplerTest	file:
input_rate_	webrtc/common_audio/resampler/sinc_resampler_unittest.cc	/^  int input_rate_;$/;"	m	class:webrtc::SincResamplerTest	file:
input_rate_	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^  int input_rate_;$/;"	m	class:webrtc::__anon183::AudioProcessingTest	file:
input_resamplers_	webrtc/modules/audio_processing/audio_buffer.h	/^  std::vector<std::unique_ptr<PushSincResampler>> input_resamplers_;$/;"	m	class:webrtc::AudioBuffer
input_sample_rate_hz	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  int input_sample_rate_hz = 16000;$/;"	m	struct:webrtc::__anon181::AudioFrameData	file:
input_samples_per_channel	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  int input_samples_per_channel = -1;$/;"	m	struct:webrtc::__anon181::AudioFrameData	file:
input_stream	webrtc/modules/audio_processing/include/audio_processing.h	/^  StreamConfig& input_stream() { return streams[StreamName::kInputStream]; }$/;"	f	class:webrtc::ProcessingConfig
input_stream	webrtc/modules/audio_processing/include/audio_processing.h	/^  const StreamConfig& input_stream() const {$/;"	f	class:webrtc::ProcessingConfig
input_stream_config	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  StreamConfig input_stream_config;$/;"	m	struct:webrtc::__anon181::AudioFrameData	file:
input_stream_config	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^  StreamConfig input_stream_config;$/;"	m	struct:webrtc::__anon182::AudioFrameData	file:
instLB	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  ISACLBStruct              instLB;$/;"	m	struct:__anon144
instUB	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  ISACUBStruct              instUB;$/;"	m	struct:__anon144
instance_	webrtc/base/messagequeue.h	/^  static MessageQueueManager* instance_;$/;"	m	class:rtc::MessageQueueManager
instance_	webrtc/base/win32window.cc	/^HINSTANCE Win32Window::instance_ = NULL;$/;"	m	class:rtc::Win32Window	file:
instance_	webrtc/base/win32window.h	/^  static HINSTANCE instance_;$/;"	m	class:rtc::Win32Window
instance_count	webrtc/modules/audio_processing/aec/echo_cancellation.cc	/^int Aec::instance_count = 0;$/;"	m	class:webrtc::Aec	file:
instance_count	webrtc/modules/audio_processing/aec/echo_cancellation.h	/^  static int instance_count;$/;"	m	struct:webrtc::Aec
instance_count_	webrtc/modules/audio_processing/level_controller/level_controller.cc	/^int LevelController::instance_count_ = 0;$/;"	m	class:webrtc::LevelController	file:
instance_count_	webrtc/modules/audio_processing/level_controller/level_controller.h	/^  static int instance_count_;$/;"	m	class:webrtc::LevelController
instance_counter_	webrtc/modules/audio_processing/gain_control_for_experimental_agc.cc	/^int GainControlForExperimentalAgc::instance_counter_ = 0;$/;"	m	class:webrtc::GainControlForExperimentalAgc	file:
instance_counter_	webrtc/modules/audio_processing/gain_control_for_experimental_agc.h	/^  static int instance_counter_;$/;"	m	class:webrtc::GainControlForExperimentalAgc
instance_counter_	webrtc/modules/audio_processing/gain_control_impl.cc	/^int GainControlImpl::instance_counter_ = 0;$/;"	m	class:webrtc::GainControlImpl	file:
instance_counter_	webrtc/modules/audio_processing/gain_control_impl.h	/^  static int instance_counter_;$/;"	m	class:webrtc::GainControlImpl
instance_index_	webrtc/modules/audio_processing/logging/apm_data_dumper.h	/^  const int instance_index_;$/;"	m	class:webrtc::ApmDataDumper
instant	webrtc/modules/audio_processing/aec/aec_core.h	/^  float instant;$/;"	m	struct:webrtc::Stats
instant	webrtc/modules/audio_processing/aec/echo_cancellation.h	/^  int instant;$/;"	m	struct:webrtc::__anon160
instant	webrtc/modules/audio_processing/include/audio_processing.h	/^    float instant() const { return instant_; }$/;"	f	struct:webrtc::AudioProcessing::Stat
instant	webrtc/modules/audio_processing/include/audio_processing.h	/^    int instant = 0;  \/\/ Instantaneous value.$/;"	m	struct:webrtc::AudioProcessing::Statistic
instant_	webrtc/modules/audio_processing/include/audio_processing.h	/^    float instant_ = 0.0f;  \/\/ Instantaneous value.$/;"	m	struct:webrtc::AudioProcessing::Stat
instream_	webrtc/base/linux.h	/^  std::unique_ptr<StreamInterface> instream_;$/;"	m	class:rtc::ConfigParser
int32_	webrtc/modules/audio_processing/utility/delay_estimator_internal.h	/^  int32_t int32_;$/;"	m	union:__anon229
int_addr_	webrtc/base/nat_unittest.cc	/^  SocketAddress int_addr_;$/;"	m	class:NatTcpTest	file:
int_default	webrtc/base/flags.h	/^  int int_default() const {$/;"	f	class:rtc::Flag
int_map_	webrtc/base/natserver.h	/^  InternalMap* int_map_;$/;"	m	class:rtc::NATServer
int_pss_	webrtc/base/nat_unittest.cc	/^  PhysicalSocketServer* int_pss_;$/;"	m	class:NatTcpTest	file:
int_socket_	webrtc/base/proxyserver.h	/^  std::unique_ptr<AsyncProxyServerSocket> int_socket_;$/;"	m	class:rtc::ProxyBinding
int_thread_	webrtc/base/nat_unittest.cc	/^  std::unique_ptr<Thread> int_thread_;$/;"	m	class:NatTcpTest	file:
int_value_	webrtc/base/thread_unittest.cc	/^  int int_value_;$/;"	m	class:AsyncInvokeTest	file:
int_value_	webrtc/base/thread_unittest.cc	/^  int int_value_;$/;"	m	class:GuardedAsyncInvokeTest	file:
int_variable	webrtc/base/flags.h	/^  int* int_variable() const {$/;"	f	class:rtc::Flag
int_vss_	webrtc/base/nat_unittest.cc	/^  std::unique_ptr<TestVirtualSocketServer> int_vss_;$/;"	m	class:NatTcpTest	file:
integral_constant	webrtc/base/template_util.h	/^struct integral_constant {$/;"	s	namespace:rtc
intelligibility	webrtc/modules/audio_processing/intelligibility/intelligibility_utils.cc	/^namespace intelligibility {$/;"	n	namespace:webrtc	file:
intelligibility	webrtc/modules/audio_processing/intelligibility/intelligibility_utils.h	/^namespace intelligibility {$/;"	n	namespace:webrtc
intelligibility	webrtc/modules/audio_processing/intelligibility/intelligibility_utils_unittest.cc	/^namespace intelligibility {$/;"	n	namespace:webrtc	file:
intelligibility_enabled	webrtc/modules/audio_processing/audio_processing_impl.h	/^    bool intelligibility_enabled;$/;"	m	struct:webrtc::AudioProcessingImpl::ApmCaptureNonLockedState
intelligibility_enhancer	webrtc/modules/audio_processing/audio_processing_impl.cc	/^  std::unique_ptr<IntelligibilityEnhancer> intelligibility_enhancer;$/;"	m	struct:webrtc::AudioProcessingImpl::ApmPublicSubmodules	file:
intelligibility_enhancer_enabled_	webrtc/modules/audio_processing/audio_processing_impl.h	/^    bool intelligibility_enhancer_enabled_ = false;$/;"	m	class:webrtc::AudioProcessingImpl::ApmSubmoduleStates
inter_layer_predicted	webrtc/modules/include/module_common_types.h	/^  bool inter_layer_predicted;  \/\/ Frame is dependent on directly lower spatial$/;"	m	struct:webrtc::RTPVideoHeaderVP9
inter_pic_predicted	webrtc/modules/include/module_common_types.h	/^  bool inter_pic_predicted;  \/\/ This layer frame is dependent on previously$/;"	m	struct:webrtc::RTPVideoHeaderVP9
interf_angles_radians_	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.h	/^  std::vector<float> interf_angles_radians_;$/;"	m	class:webrtc::NonlinearBeamformer
interf_cov_mats_	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.h	/^  std::vector<std::unique_ptr<ComplexMatrixF>> interf_cov_mats_[kNumFreqBins];$/;"	m	class:webrtc::NonlinearBeamformer
interface_lock	WebRTCAudioProcessing_jni.h	/^	pthread_mutex_t interface_lock;$/;"	m	struct:WebRTCAudioProcessing
interface_used_	webrtc/modules/audio_processing/test/aec_dump_based_simulator.h	/^  InterfaceType interface_used_ = InterfaceType::kNotSpecified;$/;"	m	class:webrtc::test::final
interference_blocks_count_	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.h	/^  size_t interference_blocks_count_;$/;"	m	class:webrtc::NonlinearBeamformer
interleaved_	webrtc/modules/audio_processing/test/test_utils.h	/^  std::vector<float> interleaved_;$/;"	m	class:webrtc::final
internal	webrtc/base/buffer.h	/^namespace internal {$/;"	n	namespace:rtc
internal	webrtc/base/race_checker.cc	/^namespace internal {$/;"	n	namespace:rtc	file:
internal	webrtc/base/race_checker.h	/^namespace internal {$/;"	n	namespace:rtc
internal	webrtc/base/safe_conversions_impl.h	/^namespace internal {$/;"	n	namespace:rtc
internal	webrtc/base/sequenced_task_checker.h	/^namespace internal {$/;"	n	namespace:rtc
internal	webrtc/base/sequenced_task_checker_impl.cc	/^namespace internal {$/;"	n	namespace:rtc	file:
internal	webrtc/base/swap_queue.h	/^namespace internal {$/;"	n	namespace:webrtc
internal	webrtc/base/task_queue_posix.cc	/^namespace internal {$/;"	n	namespace:rtc	file:
internal	webrtc/base/task_queue_posix.h	/^namespace internal {$/;"	n	namespace:rtc
internal	webrtc/base/template_util.h	/^namespace internal {$/;"	n	namespace:rtc
internal	webrtc/base/thread_checker.h	/^namespace internal {$/;"	n	namespace:rtc
internal	webrtc/base/weak_ptr.cc	/^namespace internal {$/;"	n	namespace:rtc	file:
internal	webrtc/base/weak_ptr.h	/^namespace internal {$/;"	n	namespace:rtc
internal_factory	webrtc/base/natsocketfactory.h	/^    SocketFactory* internal_factory() { return internal_factory_.get(); }$/;"	f	class:rtc::NATSocketServer::Translator
internal_factory_	webrtc/base/natsocketfactory.h	/^    std::unique_ptr<SocketFactory> internal_factory_;$/;"	m	class:rtc::NATSocketServer::Translator
internal_name	webrtc/base/opensslstreamadapter.cc	/^  const char* internal_name;$/;"	m	struct:rtc::SrtpCipherMapEntry	file:
internal_tcp_address	webrtc/base/natserver.h	/^  SocketAddress internal_tcp_address() const {$/;"	f	class:rtc::NATServer
internal_tcp_address	webrtc/base/natsocketfactory.h	/^    SocketAddress internal_tcp_address() const {$/;"	f	class:rtc::NATSocketServer::Translator
internal_udp_address	webrtc/base/natserver.h	/^  SocketAddress internal_udp_address() const {$/;"	f	class:rtc::NATServer
internal_udp_address	webrtc/base/natsocketfactory.h	/^    SocketAddress internal_udp_address() const {$/;"	f	class:rtc::NATSocketServer::Translator
interpol_coeff	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_filter.c	/^  const double *interpol_coeff;$/;"	m	struct:__anon124	file:
invisible_window	webrtc/base/win32windowpicker_unittest.cc	/^  Win32Window* invisible_window() {$/;"	f	class:rtc::Win32WindowPickerForTest
invisible_window_	webrtc/base/win32windowpicker_unittest.cc	/^  Win32Window invisible_window_;$/;"	m	class:rtc::Win32WindowPickerForTest	file:
invokeAtFrontUninterruptibly	webrtc/base/java/src/org/webrtc/ThreadUtils.java	/^  public static <V> V invokeAtFrontUninterruptibly($/;"	m	class:ThreadUtils
invokeAtFrontUninterruptibly	webrtc/base/java/src/org/webrtc/ThreadUtils.java	/^  public static void invokeAtFrontUninterruptibly(final Handler handler, final Runnable runner) {$/;"	m	class:ThreadUtils
invoke_started_	webrtc/base/thread_unittest.cc	/^  Event invoke_started_;$/;"	m	class:AsyncInvokeTest	file:
invoke_started_	webrtc/base/thread_unittest.cc	/^  Event invoke_started_;$/;"	m	class:GuardedAsyncInvokeTest	file:
invoker_	webrtc/base/asyncinvoker-inl.h	/^  AsyncInvoker* invoker_;$/;"	m	class:rtc::NotifyingAsyncClosureBase
invoker_	webrtc/base/thread_unittest.cc	/^  std::unique_ptr<GuardedAsyncInvoker>* invoker_;$/;"	m	struct:CreateInvoker	file:
io_sample_rate_ratio_	webrtc/common_audio/resampler/sinc_resampler.h	/^  double io_sample_rate_ratio_;$/;"	m	class:webrtc::SincResampler
ioctl_socket_	webrtc/base/macifaddrs_converter.cc	/^  int ioctl_socket_;$/;"	m	class:rtc::__anon29::IPv6AttributesGetter	file:
ip	webrtc/base/network.h	/^  IPAddress ip() const { return GetBestIP(); }$/;"	f	class:rtc::Network
ip	webrtc/base/socketaddress.cc	/^uint32_t SocketAddress::ip() const {$/;"	f	class:rtc::SocketAddress
ip	webrtc/modules/audio_processing/ns/ns_core.h	/^  size_t ip[IP_LENGTH];$/;"	m	struct:NoiseSuppressionC_
ip4	webrtc/base/ipaddress.h	/^    in_addr ip4;$/;"	m	union:rtc::IPAddress::__anon22
ip6	webrtc/base/ipaddress.h	/^    in6_addr ip6;$/;"	m	union:rtc::IPAddress::__anon22
ip_	webrtc/base/socketaddress.h	/^  IPAddress ip_;$/;"	m	class:rtc::SocketAddress
ip_	webrtc/modules/audio_processing/transient/transient_suppressor.h	/^  std::unique_ptr<size_t[]> ip_;$/;"	m	class:webrtc::TransientSuppressor
ip_	webrtc/modules/audio_processing/vad/vad_audio_proc.h	/^  size_t ip_[kIpLength];$/;"	m	class:webrtc::VadAudioProc
ip_attribute_getter_	webrtc/base/macifaddrs_converter.cc	/^  std::unique_ptr<IPv6AttributesGetter> ip_attribute_getter_;$/;"	m	class:rtc::__anon29::MacIfAddrsConverter	file:
ip_option_information	webrtc/base/winping.h	/^typedef struct ip_option_information {$/;"	s	namespace:rtc
ipaddr	webrtc/base/socketaddress.cc	/^const IPAddress& SocketAddress::ipaddr() const {$/;"	f	class:rtc::SocketAddress
ips	webrtc/base/network.cc	/^  std::vector<InterfaceAddress> ips;$/;"	m	struct:rtc::__anon34::__anon35	file:
ips_	webrtc/base/network.h	/^  std::vector<InterfaceAddress> ips_;$/;"	m	class:rtc::Network
ipv4_address	webrtc/base/ipaddress.cc	/^in_addr IPAddress::ipv4_address() const {$/;"	f	class:rtc::IPAddress
ipv4_any_address_network_	webrtc/base/network.h	/^  std::unique_ptr<rtc::Network> ipv4_any_address_network_;$/;"	m	class:rtc::NetworkManagerBase
ipv4_network_count	webrtc/base/network.h	/^    int ipv4_network_count;$/;"	m	struct:rtc::NetworkManager::Stats
ipv6_address	webrtc/base/ipaddress.cc	/^in6_addr IPAddress::ipv6_address() const {$/;"	f	class:rtc::IPAddress
ipv6_any_address_network_	webrtc/base/network.h	/^  std::unique_ptr<rtc::Network> ipv6_any_address_network_;$/;"	m	class:rtc::NetworkManagerBase
ipv6_enabled	webrtc/base/network.h	/^  bool ipv6_enabled() const { return ipv6_enabled_; }$/;"	f	class:rtc::NetworkManagerBase
ipv6_enabled_	webrtc/base/network.h	/^  bool ipv6_enabled_;$/;"	m	class:rtc::NetworkManagerBase
ipv6_flags	webrtc/base/ipaddress.h	/^  int ipv6_flags() const { return ipv6_flags_; }$/;"	f	class:rtc::InterfaceAddress
ipv6_flags_	webrtc/base/ipaddress.h	/^  int ipv6_flags_;$/;"	m	class:rtc::InterfaceAddress
ipv6_network_count	webrtc/base/network.h	/^    int ipv6_network_count;$/;"	m	struct:rtc::NetworkManager::Stats
isCNG	webrtc/modules/include/module_common_types.h	/^  bool isCNG;                         \/\/ is this CNG$/;"	m	struct:webrtc::RTPAudioHeader
isConnected	webrtc/base/httpbase.cc	/^HttpBase::isConnected() const {$/;"	f	class:rtc::HttpBase
isFirstPacket	webrtc/modules/include/module_common_types.h	/^  bool isFirstPacket;    \/\/ first packet in frame$/;"	m	struct:webrtc::RTPVideoHeader
is_active	webrtc/base/task_queue_gcd.cc	/^  bool is_active;$/;"	m	struct:rtc::TaskQueue::QueueContext	file:
is_active	webrtc/base/task_queue_libevent.cc	/^  bool is_active;$/;"	m	struct:rtc::TaskQueue::QueueContext	file:
is_active_	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer.h	/^  bool is_active_;$/;"	m	class:webrtc::IntelligibilityEnhancer
is_aec3_enabled	webrtc/modules/audio_processing/echo_cancellation_impl.cc	/^bool EchoCancellationImpl::is_aec3_enabled() const {$/;"	f	class:webrtc::EchoCancellationImpl
is_array	webrtc/base/template_util.h	/^template<class T, size_t n> struct is_array<T[n]> : public true_type {};$/;"	s	namespace:rtc
is_array	webrtc/base/template_util.h	/^template<class T> struct is_array<T[]> : public true_type {};$/;"	s	namespace:rtc
is_array	webrtc/base/template_util.h	/^template<class> struct is_array : public false_type {};$/;"	s	namespace:rtc
is_class	webrtc/base/template_util.h	/^struct is_class$/;"	s	namespace:rtc
is_comfort_noise_enabled	webrtc/modules/audio_processing/echo_control_mobile_impl.cc	/^bool EchoControlMobileImpl::is_comfort_noise_enabled() const {$/;"	f	class:webrtc::EchoControlMobileImpl
is_convertible	webrtc/base/template_util.h	/^struct is_convertible$/;"	s	namespace:rtc
is_delay_agnostic_enabled	webrtc/modules/audio_processing/echo_cancellation_impl.cc	/^bool EchoCancellationImpl::is_delay_agnostic_enabled() const {$/;"	f	class:webrtc::EchoCancellationImpl
is_delay_logging_enabled	webrtc/modules/audio_processing/echo_cancellation_impl.cc	/^bool EchoCancellationImpl::is_delay_logging_enabled() const {$/;"	f	class:webrtc::EchoCancellationImpl
is_drift_compensation_enabled	webrtc/modules/audio_processing/echo_cancellation_impl.cc	/^bool EchoCancellationImpl::is_drift_compensation_enabled() const {$/;"	f	class:webrtc::EchoCancellationImpl
is_echo_cancel	WebRTCAudioProcessing_jni.h	/^	bool is_echo_cancel;$/;"	m	struct:WebRTCAudioProcessing
is_empty	webrtc/base/sigslot.h	/^		bool is_empty()$/;"	f	class:sigslot::_signal_base0
is_empty	webrtc/base/sigslot.h	/^		bool is_empty()$/;"	f	class:sigslot::_signal_base1
is_empty	webrtc/base/sigslot.h	/^		bool is_empty()$/;"	f	class:sigslot::_signal_base2
is_empty	webrtc/base/sigslot.h	/^		bool is_empty()$/;"	f	class:sigslot::_signal_base3
is_empty	webrtc/base/sigslot.h	/^		bool is_empty()$/;"	f	class:sigslot::_signal_base4
is_empty	webrtc/base/sigslot.h	/^		bool is_empty()$/;"	f	class:sigslot::_signal_base5
is_empty	webrtc/base/sigslot.h	/^		bool is_empty()$/;"	f	class:sigslot::_signal_base6
is_empty	webrtc/base/sigslot.h	/^		bool is_empty()$/;"	f	class:sigslot::_signal_base7
is_empty	webrtc/base/sigslot.h	/^		bool is_empty()$/;"	f	class:sigslot::_signal_base8
is_enabled	webrtc/modules/audio_processing/echo_cancellation_impl.cc	/^bool EchoCancellationImpl::is_enabled() const {$/;"	f	class:webrtc::EchoCancellationImpl
is_enabled	webrtc/modules/audio_processing/echo_control_mobile_impl.cc	/^bool EchoControlMobileImpl::is_enabled() const {$/;"	f	class:webrtc::EchoControlMobileImpl
is_enabled	webrtc/modules/audio_processing/gain_control_for_experimental_agc.cc	/^bool GainControlForExperimentalAgc::is_enabled() const {$/;"	f	class:webrtc::GainControlForExperimentalAgc
is_enabled	webrtc/modules/audio_processing/gain_control_impl.cc	/^bool GainControlImpl::is_enabled() const {$/;"	f	class:webrtc::GainControlImpl
is_enabled	webrtc/modules/audio_processing/high_pass_filter_impl.cc	/^bool HighPassFilterImpl::is_enabled() const {$/;"	f	class:webrtc::HighPassFilterImpl
is_enabled	webrtc/modules/audio_processing/level_estimator_impl.cc	/^bool LevelEstimatorImpl::is_enabled() const {$/;"	f	class:webrtc::LevelEstimatorImpl
is_enabled	webrtc/modules/audio_processing/noise_suppression_impl.cc	/^bool NoiseSuppressionImpl::is_enabled() const {$/;"	f	class:webrtc::NoiseSuppressionImpl
is_enabled	webrtc/modules/audio_processing/voice_detection_impl.cc	/^bool VoiceDetectionImpl::is_enabled() const {$/;"	f	class:webrtc::VoiceDetectionImpl
is_extended_filter_enabled	webrtc/modules/audio_processing/echo_cancellation_impl.cc	/^bool EchoCancellationImpl::is_extended_filter_enabled() const {$/;"	f	class:webrtc::EchoCancellationImpl
is_full	webrtc/modules/audio_processing/vad/vad_circular_buffer.h	/^  bool is_full() const { return is_full_; }$/;"	f	class:webrtc::VadCircularBuffer
is_full_	webrtc/modules/audio_processing/vad/vad_circular_buffer.h	/^  bool is_full_;$/;"	m	class:webrtc::VadCircularBuffer
is_limiter_enabled	webrtc/modules/audio_processing/gain_control_for_experimental_agc.cc	/^bool GainControlForExperimentalAgc::is_limiter_enabled() const {$/;"	f	class:webrtc::GainControlForExperimentalAgc
is_limiter_enabled	webrtc/modules/audio_processing/gain_control_impl.cc	/^bool GainControlImpl::is_limiter_enabled() const {$/;"	f	class:webrtc::GainControlImpl
is_manual_reset_	webrtc/base/event.h	/^  const bool is_manual_reset_;$/;"	m	class:rtc::Event
is_non_const_reference	webrtc/base/template_util.h	/^template <class T> struct is_non_const_reference : false_type {};$/;"	s	namespace:rtc
is_non_const_reference	webrtc/base/template_util.h	/^template <class T> struct is_non_const_reference<T&> : true_type {};$/;"	s	namespace:rtc
is_non_const_reference	webrtc/base/template_util.h	/^template <class T> struct is_non_const_reference<const T&> : false_type {};$/;"	s	namespace:rtc
is_ok_to_delete	webrtc/base/taskrunner.h	/^  bool is_ok_to_delete(Task* task) {$/;"	f	class:rtc::TaskRunner
is_open	webrtc/system_wrappers/include/file_wrapper.h	/^  bool is_open() const { return file_ != nullptr; }$/;"	f	class:webrtc::FileWrapper
is_pointer	webrtc/base/template_util.h	/^template <class T> struct is_pointer : false_type {};$/;"	s	namespace:rtc
is_pointer	webrtc/base/template_util.h	/^template <class T> struct is_pointer<T*> : true_type {};$/;"	s	namespace:rtc
is_refined_adaptive_filter_enabled	webrtc/modules/audio_processing/echo_cancellation_impl.cc	/^bool EchoCancellationImpl::is_refined_adaptive_filter_enabled() const {$/;"	f	class:webrtc::EchoCancellationImpl
is_same	webrtc/base/template_util.h	/^template <class T, class U> struct is_same : public false_type {};$/;"	s	namespace:rtc
is_same	webrtc/base/template_util.h	/^template <class T> struct is_same<T, T> : true_type {};$/;"	s	namespace:rtc
is_speech_	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer.h	/^  bool is_speech_;$/;"	m	class:webrtc::IntelligibilityEnhancer
is_target_present	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.cc	/^bool NonlinearBeamformer::is_target_present() { return is_target_present_; }$/;"	f	class:webrtc::NonlinearBeamformer
is_target_present_	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.h	/^  bool is_target_present_;$/;"	m	class:webrtc::NonlinearBeamformer
is_valid	webrtc/base/weak_ptr.cc	/^bool WeakReference::is_valid() const {$/;"	f	class:rtc::internal::WeakReference
is_valid_	webrtc/base/weak_ptr.h	/^    bool is_valid_;$/;"	m	class:rtc::internal::WeakReference::Flag
is_valid_end_of_input	webrtc/base/httpbase.cc	/^HttpParser::is_valid_end_of_input() const {$/;"	f	class:rtc::HttpParser
is_void	webrtc/base/template_util.h	/^template <> struct is_void<void> : true_type {};$/;"	s	namespace:rtc
is_void	webrtc/base/template_util.h	/^template <class T> struct is_void : false_type {};$/;"	s	namespace:rtc
is_zero	webrtc/base/timedelta.h	/^  bool is_zero() const { return delta_ == 0; }$/;"	f	class:rtc::TimeDelta
isac12kHz	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^enum ISACBandwidth {isac8kHz = 8, isac12kHz = 12, isac16kHz = 16};$/;"	e	enum:ISACBandwidth
isac16kHz	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^enum ISACBandwidth {isac8kHz = 8, isac12kHz = 12, isac16kHz = 16};$/;"	e	enum:ISACBandwidth
isac8kHz	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^enum ISACBandwidth {isac8kHz = 8, isac12kHz = 12, isac16kHz = 16};$/;"	e	enum:ISACBandwidth
issuer	webrtc/base/sslidentity.h	/^  std::unique_ptr<SSLCertificateStats> issuer;$/;"	m	struct:rtc::SSLCertificateStats
istate	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  double    istate[PITCH_WLPCORDER];$/;"	m	struct:__anon129
iterator	webrtc/base/httpcommon.h	/^  typedef HeaderMap::iterator iterator;$/;"	t	struct:rtc::HttpData
iterators_	webrtc/base/physicalsocketserver.h	/^  IteratorList iterators_;$/;"	m	class:rtc::PhysicalSocketServer
itsNext	webrtc/base/linked_ptr.h	/^    mutable const linked_ptr*   itsNext;$/;"	m	class:rtc::linked_ptr
itsPrev	webrtc/base/linked_ptr.h	/^    mutable const linked_ptr*   itsPrev;$/;"	m	class:rtc::linked_ptr
itsPtr	webrtc/base/linked_ptr.h	/^    X*                          itsPtr;$/;"	m	class:rtc::linked_ptr
ivalid_	webrtc/common_audio/channel_buffer.h	/^  mutable bool ivalid_;$/;"	m	class:webrtc::IFChannelBuffer
jitter	webrtc/common_types.h	/^  uint32_t jitter;$/;"	m	struct:webrtc::RtcpStatistics
jitterPeaksFound	webrtc/common_types.h	/^  bool jitterPeaksFound;$/;"	m	struct:webrtc::NetworkStatistics
jitter_info	webrtc/modules/audio_coding/codecs/isac/bandwidth_info.h	/^  int16_t jitter_info;$/;"	m	struct:__anon122
joinUninterruptibly	webrtc/base/java/src/org/webrtc/ThreadUtils.java	/^  public static boolean joinUninterruptibly(final Thread thread, long timeoutMs) {$/;"	m	class:ThreadUtils
joinUninterruptibly	webrtc/base/java/src/org/webrtc/ThreadUtils.java	/^  public static void joinUninterruptibly(final Thread thread) {$/;"	m	class:ThreadUtils
k6BonePrefix	webrtc/base/ipaddress.cc	/^static const in6_addr k6BonePrefix = {{{0x3f, 0xfe, 0}}};$/;"	m	namespace:rtc	file:
k6To4Prefix	webrtc/base/ipaddress.cc	/^static const in6_addr k6To4Prefix = {{{0x20, 0x02, 0}}};$/;"	m	namespace:rtc	file:
kAboveClippedThreshold	webrtc/modules/audio_processing/agc/agc_manager_direct_unittest.cc	/^const float kAboveClippedThreshold = 0.2f;$/;"	m	namespace:webrtc::__anon170	file:
kAbsSendTimeDefaultId	webrtc/config.cc	/^const int RtpExtension::kAbsSendTimeDefaultId = 3;$/;"	m	class:webrtc::RtpExtension	file:
kAbsSendTimeDefaultId	webrtc/config.h	/^  static const int kAbsSendTimeDefaultId;$/;"	m	struct:webrtc::RtpExtension
kAbsSendTimeUri	webrtc/config.cc	/^const char* RtpExtension::kAbsSendTimeUri =$/;"	m	class:webrtc::RtpExtension	file:
kAbsSendTimeUri	webrtc/config.h	/^  static const char* kAbsSendTimeUri;$/;"	m	struct:webrtc::RtpExtension
kActive	webrtc/common_audio/vad/include/vad.h	/^  enum Activity { kPassive = 0, kActive = 1, kError = -1 };$/;"	e	enum:webrtc::Vad::Activity
kActivityThreshold	webrtc/modules/audio_processing/agc/agc.cc	/^const double kActivityThreshold = 0.3;$/;"	m	namespace:webrtc::__anon168	file:
kAdaptiveAnalog	webrtc/modules/audio_processing/include/audio_processing.h	/^    kAdaptiveAnalog,$/;"	e	enum:webrtc::GainControl::Mode
kAdaptiveDigital	webrtc/modules/audio_processing/include/audio_processing.h	/^    kAdaptiveDigital,$/;"	e	enum:webrtc::GainControl::Mode
kAddRef	webrtc/system_wrappers/include/static_instance.h	/^  kAddRef,$/;"	e	enum:webrtc::CountOperation
kAddRefNoCreate	webrtc/system_wrappers/include/static_instance.h	/^  kAddRefNoCreate$/;"	e	enum:webrtc::CountOperation
kAecFalse	webrtc/modules/audio_processing/aec/echo_cancellation.h	/^enum { kAecFalse = 0, kAecTrue };$/;"	e	enum:webrtc::__anon158
kAecNlpAggressive	webrtc/modules/audio_processing/aec/echo_cancellation.h	/^enum { kAecNlpConservative = 0, kAecNlpModerate, kAecNlpAggressive };$/;"	e	enum:webrtc::__anon157
kAecNlpConservative	webrtc/modules/audio_processing/aec/echo_cancellation.h	/^enum { kAecNlpConservative = 0, kAecNlpModerate, kAecNlpAggressive };$/;"	e	enum:webrtc::__anon157
kAecNlpModerate	webrtc/modules/audio_processing/aec/echo_cancellation.h	/^enum { kAecNlpConservative = 0, kAecNlpModerate, kAecNlpAggressive };$/;"	e	enum:webrtc::__anon157
kAecRefinedAdaptiveFilter	webrtc/modules/audio_processing/include/config.h	/^  kAecRefinedAdaptiveFilter,$/;"	m	class:webrtc::ConfigOptionID
kAecTrue	webrtc/modules/audio_processing/aec/echo_cancellation.h	/^enum { kAecFalse = 0, kAecTrue };$/;"	e	enum:webrtc::__anon158
kAecmEarpiece	webrtc/common_types.h	/^  kAecmEarpiece,         \/\/ most earpiece use$/;"	e	enum:webrtc::AecmModes
kAecmLoudEarpiece	webrtc/common_types.h	/^  kAecmLoudEarpiece,     \/\/ Loud earpiece or quiet speakerphone use$/;"	e	enum:webrtc::AecmModes
kAecmLoudSpeakerphone	webrtc/common_types.h	/^  kAecmLoudSpeakerphone  \/\/ Loud speakerphone$/;"	e	enum:webrtc::AecmModes
kAecmQuietEarpieceOrHeadset	webrtc/common_types.h	/^  kAecmQuietEarpieceOrHeadset = 0,$/;"	e	enum:webrtc::AecmModes
kAecmSpeakerphone	webrtc/common_types.h	/^  kAecmSpeakerphone,     \/\/ most speakerphone use (default)$/;"	e	enum:webrtc::AecmModes
kAgcAdaptiveAnalog	webrtc/common_types.h	/^  kAgcAdaptiveAnalog,$/;"	e	enum:webrtc::AgcModes
kAgcAdaptiveDigital	webrtc/common_types.h	/^  kAgcAdaptiveDigital,$/;"	e	enum:webrtc::AgcModes
kAgcDefault	webrtc/common_types.h	/^  kAgcDefault,        \/\/ platform default$/;"	e	enum:webrtc::AgcModes
kAgcFalse	webrtc/modules/audio_processing/agc/legacy/gain_control.h	/^enum { kAgcFalse = 0, kAgcTrue };$/;"	e	enum:__anon176
kAgcFixedDigital	webrtc/common_types.h	/^  kAgcFixedDigital$/;"	e	enum:webrtc::AgcModes
kAgcModeAdaptiveAnalog	webrtc/modules/audio_processing/agc/legacy/gain_control.h	/^  kAgcModeAdaptiveAnalog,$/;"	e	enum:__anon175
kAgcModeAdaptiveDigital	webrtc/modules/audio_processing/agc/legacy/gain_control.h	/^  kAgcModeAdaptiveDigital,$/;"	e	enum:__anon175
kAgcModeFixedDigital	webrtc/modules/audio_processing/agc/legacy/gain_control.h	/^  kAgcModeFixedDigital$/;"	e	enum:__anon175
kAgcModeUnchanged	webrtc/modules/audio_processing/agc/legacy/gain_control.h	/^  kAgcModeUnchanged,$/;"	e	enum:__anon175
kAgcStartupMinVolume	webrtc/modules/audio_processing/include/audio_processing.h	/^static const int kAgcStartupMinVolume = 0;$/;"	m	namespace:webrtc
kAgcStartupMinVolume	webrtc/modules/audio_processing/include/audio_processing.h	/^static const int kAgcStartupMinVolume = 85;$/;"	m	namespace:webrtc
kAgcTrue	webrtc/modules/audio_processing/agc/legacy/gain_control.h	/^enum { kAgcFalse = 0, kAgcTrue };$/;"	e	enum:__anon176
kAgcUnchanged	webrtc/common_types.h	/^  kAgcUnchanged = 0,  \/\/ previously set mode$/;"	e	enum:webrtc::AgcModes
kAlgo1CostFunctionForTest	webrtc/modules/audio_processing/include/config.h	/^  kAlgo1CostFunctionForTest,$/;"	m	class:webrtc::ConfigOptionID
kAlignment	webrtc/base/stream.h	/^  static const int kAlignment = 16;$/;"	m	class:rtc::MemoryStream
kAllPassCoefsQ13	webrtc/common_audio/vad/vad_sp.c	/^static const int16_t kAllPassCoefsQ13[2] = { 5243, 1392 };  \/\/ Q13.$/;"	v	file:
kAllPassCoefsQ15	webrtc/common_audio/vad/vad_filterbank.c	/^static const int16_t kAllPassCoefsQ15[2] = { 20972, 5571 };$/;"	v	file:
kAllSubmodulesTurnedOff	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^  kAllSubmodulesTurnedOff,$/;"	m	class:webrtc::__anon182::SettingsType	file:
kAlpha	webrtc/modules/audio_processing/echo_detector/mean_variance_estimator.cc	/^constexpr float kAlpha = 0.01f;$/;"	m	namespace:webrtc::__anon196	file:
kAlpha	webrtc/modules/audio_processing/echo_detector/normalized_covariance_estimator.cc	/^constexpr float kAlpha = 0.01f;$/;"	m	namespace:webrtc::__anon197	file:
kAlpha1	webrtc/modules/audio_processing/aecm/aecm_core_c.cc	/^static const uint16_t kAlpha1 = 32584;$/;"	v	file:
kAlpha2	webrtc/modules/audio_processing/aecm/aecm_core_c.cc	/^static const uint16_t kAlpha2 = 30879;$/;"	v	file:
kAlpha3	webrtc/modules/audio_processing/aecm/aecm_core_c.cc	/^static const uint16_t kAlpha3 = 26951;$/;"	v	file:
kAlphaLongTerm	webrtc/modules/audio_processing/agc/legacy/analog_agc.h	/^static const int16_t kAlphaLongTerm = 10;  \/\/ 1 >> 10 = 0.000977$/;"	v
kAlphaShortTerm	webrtc/modules/audio_processing/agc/legacy/analog_agc.h	/^static const int16_t kAlphaShortTerm = 6;  \/\/ 1 >> 6 = 0.0156$/;"	v
kArbitraryLargeFdNumber	webrtc/base/linuxfdwalk_unittest.cc	/^static const int kArbitraryLargeFdNumber = 424;$/;"	v	file:
kAudioFrameCN	webrtc/common_types.h	/^  kAudioFrameCN = 2,$/;"	e	enum:webrtc::FrameType
kAudioFrameSpeech	webrtc/common_types.h	/^  kAudioFrameSpeech = 1,$/;"	e	enum:webrtc::FrameType
kAudioLevelDefaultId	webrtc/config.cc	/^const int RtpExtension::kAudioLevelDefaultId = 1;$/;"	m	class:webrtc::RtpExtension	file:
kAudioLevelDefaultId	webrtc/config.h	/^  static const int kAudioLevelDefaultId;$/;"	m	struct:webrtc::RtpExtension
kAudioLevelUri	webrtc/config.cc	/^const char* RtpExtension::kAudioLevelUri =$/;"	m	class:webrtc::RtpExtension	file:
kAudioLevelUri	webrtc/config.h	/^  static const char* kAudioLevelUri;$/;"	m	struct:webrtc::RtpExtension
kAudioLinuxAlsa	webrtc/common_types.h	/^  kAudioLinuxAlsa = 3,$/;"	e	enum:webrtc::AudioLayers
kAudioLinuxPulse	webrtc/common_types.h	/^  kAudioLinuxPulse = 4$/;"	e	enum:webrtc::AudioLayers
kAudioPlatformDefault	webrtc/common_types.h	/^  kAudioPlatformDefault = 0,$/;"	e	enum:webrtc::AudioLayers
kAudioWindowsCore	webrtc/common_types.h	/^  kAudioWindowsCore = 2,$/;"	e	enum:webrtc::AudioLayers
kAudioWindowsWave	webrtc/common_types.h	/^  kAudioWindowsWave = 1,$/;"	e	enum:webrtc::AudioLayers
kAvgDecayTime	webrtc/modules/audio_processing/agc/legacy/digital_agc.c	/^static const int16_t kAvgDecayTime = 250;  \/\/ frames; < 3000$/;"	v	file:
kAvogadro	webrtc/modules/audio_processing/transient/file_utils_unittest.cc	/^static const double kAvogadro = 602214100000000000000000.0;$/;"	m	namespace:webrtc	file:
kAvogadroBytes	webrtc/modules/audio_processing/transient/file_utils_unittest.cc	/^static const uint8_t kAvogadroBytes[8] =$/;"	m	namespace:webrtc	file:
kAvogadroBytesf	webrtc/modules/audio_processing/transient/file_utils_unittest.cc	/^static const uint8_t kAvogadroBytesf[4] = {0x2F, 0x0C, 0xFF, 0x66};$/;"	m	namespace:webrtc	file:
kAwaySlope	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.cc	/^const float kAwaySlope = 0.008f;$/;"	m	namespace:webrtc::__anon188	file:
kBackEta	webrtc/common_audio/vad/vad_core.c	/^static const int16_t kBackEta = 154; \/\/ Q8$/;"	v	file:
kBadDataLengthError	WebRTCAudioProcessing_jni.h	/^	kBadDataLengthError = -8,$/;"	e	enum:Error
kBadDataLengthError	webrtc/modules/audio_processing/include/audio_processing.h	/^    kBadDataLengthError = -8,$/;"	e	enum:webrtc::AudioProcessing::Error
kBadNumberChannelsError	WebRTCAudioProcessing_jni.h	/^	kBadNumberChannelsError = -9,  $/;"	e	enum:Error
kBadNumberChannelsError	webrtc/modules/audio_processing/include/audio_processing.h	/^    kBadNumberChannelsError = -9,$/;"	e	enum:webrtc::AudioProcessing::Error
kBadParameterError	WebRTCAudioProcessing_jni.h	/^	kBadParameterError = -6,$/;"	e	enum:Error
kBadParameterError	webrtc/modules/audio_processing/include/audio_processing.h	/^    kBadParameterError = -6,$/;"	e	enum:webrtc::AudioProcessing::Error
kBadSampleRateError	WebRTCAudioProcessing_jni.h	/^	kBadSampleRateError = -7,$/;"	e	enum:Error
kBadSampleRateError	webrtc/modules/audio_processing/include/audio_processing.h	/^    kBadSampleRateError = -7,$/;"	e	enum:webrtc::AudioProcessing::Error
kBadStreamParameterWarning	WebRTCAudioProcessing_jni.h	/^	kBadStreamParameterWarning = -13,$/;"	e	enum:Error
kBadStreamParameterWarning	webrtc/modules/audio_processing/include/audio_processing.h	/^    kBadStreamParameterWarning = -13$/;"	e	enum:webrtc::AudioProcessing::Error
kBalance	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.cc	/^const float kBalance = 0.95f;$/;"	m	namespace:webrtc::__anon188	file:
kBand0To8kHz	webrtc/modules/audio_processing/audio_buffer.h	/^  kBand0To8kHz = 0,$/;"	e	enum:webrtc::Band
kBand16To24kHz	webrtc/modules/audio_processing/audio_buffer.h	/^  kBand16To24kHz = 2$/;"	e	enum:webrtc::Band
kBand8To16kHz	webrtc/modules/audio_processing/audio_buffer.h	/^  kBand8To16kHz = 1,$/;"	e	enum:webrtc::Band
kBandFirst	webrtc/modules/audio_processing/utility/delay_estimator_wrapper.cc	/^enum { kBandFirst = 12 };$/;"	e	enum:__anon238	file:
kBandLast	webrtc/modules/audio_processing/utility/delay_estimator_wrapper.cc	/^enum { kBandLast = 43 };$/;"	e	enum:__anon239	file:
kBase64	webrtc/base/helpers.cc	/^static const char kBase64[64] = {$/;"	m	namespace:rtc::__anon15	file:
kBaseKey	webrtc/base/win32regkey_unittest.cc	/^#define kBaseKey /;"	d	file:
kBeamforming	webrtc/modules/audio_processing/include/config.h	/^  kBeamforming,$/;"	m	class:webrtc::ConfigOptionID
kBeta1	webrtc/modules/audio_processing/aecm/aecm_core_c.cc	/^static const uint16_t kBeta1 = 4249;$/;"	v	file:
kBeta2	webrtc/modules/audio_processing/aecm/aecm_core_c.cc	/^static const uint16_t kBeta2 = 11072;$/;"	v	file:
kBeta3	webrtc/modules/audio_processing/aecm/aecm_core_c.cc	/^static const uint16_t kBeta3 = 18927;$/;"	v	file:
kBinaryVal	webrtc/base/win32regkey_unittest.cc	/^const char kBinaryVal[] = "Some binary data abcdefghi 1";$/;"	m	namespace:rtc	file:
kBinaryVal2	webrtc/base/win32regkey_unittest.cc	/^const char kBinaryVal2[] = "Some binary data abcdefghi 2";$/;"	m	namespace:rtc	file:
kBlockSize	webrtc/base/messagedigest.cc	/^static const size_t kBlockSize = 64;  \/\/ valid for SHA-256 and down$/;"	m	namespace:rtc	file:
kBlockSize	webrtc/base/sslstreamadapter_unittest.cc	/^static const int kBlockSize = 4096;$/;"	v	file:
kBlocks160w256	webrtc/modules/audio_processing/ns/windows_private.h	/^static const float kBlocks160w256[256] = {$/;"	v
kBlocks160w256x	webrtc/modules/audio_processing/ns/nsx_core.c	/^static const int16_t kBlocks160w256x[256] = {$/;"	v	file:
kBlocks240w512	webrtc/modules/audio_processing/ns/windows_private.h	/^static const float kBlocks240w512[512] = {$/;"	v
kBlocks320w512	webrtc/modules/audio_processing/ns/windows_private.h	/^static const float kBlocks320w512[512] = {$/;"	v
kBlocks480w1024	webrtc/modules/audio_processing/ns/windows_private.h	/^static const float kBlocks480w1024[1024] = {$/;"	v
kBlocks80w128	webrtc/modules/audio_processing/ns/windows_private.h	/^static const float kBlocks80w128[128] = {$/;"	v
kBlocks80w128x	webrtc/modules/audio_processing/ns/nsx_core.c	/^static const int16_t kBlocks80w128x[128] = {$/;"	v	file:
kBoilerplateLength	webrtc/system_wrappers/include/trace.h	/^  static const int kBoilerplateLength;$/;"	m	class:webrtc::Trace
kBoilerplateLength	webrtc/system_wrappers/source/trace_impl.cc	/^const int Trace::kBoilerplateLength = 71;$/;"	m	class:webrtc::Trace	file:
kBpsScale	webrtc/base/rate_statistics.h	/^  static constexpr float kBpsScale = 8000.0f;$/;"	m	class:webrtc::RateStatistics
kBucketIntervalMs	webrtc/base/ratetracker_unittest.cc	/^  const uint32_t kBucketIntervalMs = 100;$/;"	m	namespace:rtc::__anon49	file:
kBufSize	webrtc/base/asynctcpsocket.cc	/^static const size_t kBufSize = kMaxPacketSize + kPacketLenSize;$/;"	m	namespace:rtc	file:
kBufSizeSamp	webrtc/modules/audio_processing/aecm/echo_control_mobile.cc	/^static const size_t kBufSizeSamp = BUF_SIZE_FRAMES * FRAME_LEN; \/\/ buffer size (samples)$/;"	v	file:
kBufferCapacity	webrtc/base/sslstreamadapter_unittest.cc	/^static const int kBufferCapacity = 1;$/;"	v	file:
kBufferSize	webrtc/base/httpbase.h	/^  enum { kBufferSize = 32 * 1024 };$/;"	e	enum:rtc::HttpBase::__anon17
kBufferSize	webrtc/base/proxyserver.h	/^  static const int kBufferSize = 4096;$/;"	m	class:rtc::ProxyBinding
kBufferSize	webrtc/base/socketadapters.h	/^  static const int kBufferSize = 1024;$/;"	m	class:rtc::AsyncSocksProxyServerSocket
kBufferSizeBlocks	webrtc/modules/audio_processing/aec/aec_core.cc	/^static const size_t kBufferSizeBlocks = 250;  \/\/ 1 second of audio in 16 kHz.$/;"	m	namespace:webrtc	file:
kButtonClass	webrtc/base/win32windowpicker.cc	/^const char kButtonClass[] = "Button";$/;"	m	namespace:rtc::__anon75	file:
kBwCdf	webrtc/modules/audio_coding/codecs/isac/main/source/entropy_coding.c	/^static const uint16_t kBwCdf[25] = {$/;"	v	file:
kBwCdfPtr	webrtc/modules/audio_coding/codecs/isac/main/source/entropy_coding.c	/^static const uint16_t* kBwCdfPtr[1] = { kBwCdf };$/;"	v	file:
kBwInitIndex	webrtc/modules/audio_coding/codecs/isac/main/source/entropy_coding.c	/^static const uint16_t kBwInitIndex[1] = { 7 };$/;"	v	file:
kBytesPerSample	webrtc/common_audio/wav_file.cc	/^static const size_t kBytesPerSample = 2;$/;"	m	namespace:webrtc	file:
kCERT_PEM	webrtc/base/sslstreamadapter_unittest.cc	/^static const char kCERT_PEM[] =$/;"	v	file:
kCNG	webrtc/modules/include/module_common_types.h	/^    kCNG = 2,$/;"	e	enum:webrtc::AudioFrame::SpeechType
kCPUFeatureARMv7	webrtc/system_wrappers/include/cpu_features_wrapper.h	/^  kCPUFeatureARMv7       = (1 << 0),$/;"	e	enum:__anon247
kCPUFeatureLDREXSTREX	webrtc/system_wrappers/include/cpu_features_wrapper.h	/^  kCPUFeatureLDREXSTREX  = (1 << 3)$/;"	e	enum:__anon247
kCPUFeatureNEON	webrtc/system_wrappers/include/cpu_features_wrapper.h	/^  kCPUFeatureNEON        = (1 << 2),$/;"	e	enum:__anon247
kCPUFeatureVFPv3	webrtc/system_wrappers/include/cpu_features_wrapper.h	/^  kCPUFeatureVFPv3       = (1 << 1),$/;"	e	enum:__anon247
kCacheBody	webrtc/base/httpclient.cc	/^const size_t kCacheBody = 1;$/;"	m	namespace:rtc::__anon18	file:
kCacheHeader	webrtc/base/httpclient.cc	/^const size_t kCacheHeader = 0;$/;"	m	namespace:rtc::__anon18	file:
kCaptureInputFixLevel	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  static const int kCaptureInputFixLevel = 1024;$/;"	m	class:webrtc::__anon181::CaptureProcessor	file:
kCaptureInputFloatLevel	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  static const float kCaptureInputFloatLevel;$/;"	m	class:webrtc::__anon181::CaptureProcessor	file:
kCaptureInputFloatLevel	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^const float CaptureProcessor::kCaptureInputFloatLevel = 0.03125f;$/;"	m	class:webrtc::__anon181::CaptureProcessor	file:
kCaptureInputFloatLevel	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^  static const float kCaptureInputFloatLevel;$/;"	m	class:webrtc::__anon182::CallSimulator	file:
kCaptureInputFloatLevel	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^const float CallSimulator::kCaptureInputFloatLevel = 0.03125f;$/;"	m	class:webrtc::__anon182::CallSimulator	file:
kCdfQ16	webrtc/modules/audio_coding/codecs/isac/main/source/arith_routines_logist.c	/^static const int kCdfQ16[51] = {  \/* Q16 *\/$/;"	v	file:
kCdfSlopeQ0	webrtc/modules/audio_coding/codecs/isac/main/source/arith_routines_logist.c	/^static const int kCdfSlopeQ0[51] = {  \/* Q0 *\/$/;"	v	file:
kCertificateWindowInSeconds	webrtc/base/sslidentity.h	/^static const int kCertificateWindowInSeconds = -60 * 60 * 24;$/;"	m	namespace:rtc
kChannelStored16kHz	webrtc/modules/audio_processing/aecm/aecm_core.cc	/^static const int16_t kChannelStored16kHz[PART_LEN1] = {$/;"	v	file:
kChannelStored8kHz	webrtc/modules/audio_processing/aecm/aecm_core.cc	/^static const int16_t kChannelStored8kHz[PART_LEN1] = {$/;"	v	file:
kChannels	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^const google::protobuf::int32 kChannels[] = {1, 2};$/;"	m	namespace:webrtc::__anon183	file:
kChunkSize	webrtc/base/swap_queue_unittest.cc	/^const size_t kChunkSize = 3;$/;"	m	namespace:webrtc::__anon63	file:
kChunkSizeMs	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer_test.cc	/^const int kChunkSizeMs = 1000 \/ kChunksPerSecond;$/;"	m	namespace:webrtc::__anon189	file:
kChunkSizeMs	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer_unittest.cc	/^const int kChunkSizeMs = 10;$/;"	m	namespace:webrtc::__anon190	file:
kChunkSizeMs	webrtc/modules/audio_processing/include/audio_processing.h	/^  static const int kChunkSizeMs = 10;$/;"	m	class:webrtc::AudioProcessing
kChunkSizeMs	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer.cc	/^const int kChunkSizeMs = 10;  \/\/ Size provided by APM.$/;"	m	namespace:webrtc::__anon202	file:
kChunkSizeMs	webrtc/modules/audio_processing/transient/common.h	/^static const int kChunkSizeMs = 10;$/;"	m	namespace:webrtc::ts
kChunksAtStartupLeftToDelete	webrtc/modules/audio_processing/transient/transient_detector.cc	/^static const int kChunksAtStartupLeftToDelete =$/;"	m	namespace:webrtc	file:
kChunksPerSecond	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer_test.cc	/^const int kChunksPerSecond = 100;$/;"	m	namespace:webrtc::__anon189	file:
kChunksPerSecond	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^  static const int kChunksPerSecond = 1000 \/ AudioProcessing::kChunkSizeMs;$/;"	m	class:webrtc::test::AudioProcessingSimulator
kClipFreqKhz	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer.cc	/^const float kClipFreqKhz = 0.2f;$/;"	m	namespace:webrtc::__anon202	file:
kClippedLevelMin	webrtc/modules/audio_processing/agc/agc_manager_direct.cc	/^const int kClippedLevelMin = 170;$/;"	m	namespace:webrtc::__anon169	file:
kClippedLevelStep	webrtc/modules/audio_processing/agc/agc_manager_direct.cc	/^const int kClippedLevelStep = 15;$/;"	m	namespace:webrtc::__anon169	file:
kClippedRatioThreshold	webrtc/modules/audio_processing/agc/agc_manager_direct.cc	/^const float kClippedRatioThreshold = 0.1f;$/;"	m	namespace:webrtc::__anon169	file:
kClippedWaitFrames	webrtc/modules/audio_processing/agc/agc_manager_direct.cc	/^const int kClippedWaitFrames = 300;$/;"	m	namespace:webrtc::__anon169	file:
kCoeffDenominator	webrtc/modules/audio_processing/vad/vad_audio_proc_internal.h	/^static const float kCoeffDenominator[kFilterOrder + 1] = {1.0f,$/;"	m	namespace:webrtc
kCoeffNumerator	webrtc/modules/audio_processing/vad/vad_audio_proc_internal.h	/^static const float kCoeffNumerator[kFilterOrder + 1] = {0.974827f,$/;"	m	namespace:webrtc
kCoefficients	webrtc/common_audio/fir_filter_unittest.cc	/^static const float kCoefficients[] = {0.2f, 0.3f, 0.5f, 0.7f, 0.11f};$/;"	m	namespace:webrtc::__anon80	file:
kCoefficients	webrtc/modules/audio_processing/transient/wpd_node_unittest.cc	/^static const float kCoefficients[] = {0.2f, -0.3f, 0.5f, -0.7f, 0.11f};$/;"	m	namespace:webrtc	file:
kCoefficients32To22	webrtc/common_audio/signal_processing/resample.c	/^static const int16_t kCoefficients32To22[5][9] = {$/;"	v	file:
kCoefficients32To24	webrtc/common_audio/signal_processing/resample_fractional.c	/^static const int16_t kCoefficients32To24[3][8] = {$/;"	v	file:
kCoefficients44To32	webrtc/common_audio/signal_processing/resample_fractional.c	/^static const int16_t kCoefficients44To32[4][9] = {$/;"	v	file:
kCoefficients48To32	webrtc/common_audio/signal_processing/resample_fractional.c	/^static const int16_t kCoefficients48To32[2][8] = {$/;"	v	file:
kCoefficientsLength	webrtc/common_audio/fir_filter_unittest.cc	/^static const size_t kCoefficientsLength = sizeof(kCoefficients) \/$/;"	m	namespace:webrtc::__anon80	file:
kCoefficientsLength	webrtc/modules/audio_processing/transient/wpd_node_unittest.cc	/^static const size_t kCoefficientsLength = sizeof(kCoefficients) \/$/;"	m	namespace:webrtc	file:
kCoeffs	webrtc/common_audio/sparse_fir_filter_unittest.cc	/^static const float kCoeffs[] = {0.2f, 0.3f, 0.5f, 0.7f, 0.11f};$/;"	m	namespace:webrtc::__anon100	file:
kCompVar	webrtc/common_audio/vad/vad_gmm.c	/^static const int32_t kCompVar = 22005;$/;"	v	file:
kCompensationGain	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.cc	/^const float kCompensationGain = 2.f;$/;"	m	namespace:webrtc::__anon188	file:
kComplete	webrtc/base/signalthread.h	/^    kComplete,        \/\/ Work is done$/;"	e	enum:rtc::SignalThread::State
kComplexFftDataLength	webrtc/common_audio/signal_processing/real_fft_unittest.cc	/^const int kComplexFftDataLength = 2 << kOrder;$/;"	m	namespace:webrtc::__anon98	file:
kComplexityHigh	webrtc/common_types.h	/^  kComplexityHigh = 1,$/;"	e	enum:webrtc::VideoCodecComplexity
kComplexityHigher	webrtc/common_types.h	/^  kComplexityHigher = 2,$/;"	e	enum:webrtc::VideoCodecComplexity
kComplexityMax	webrtc/common_types.h	/^  kComplexityMax = 3$/;"	e	enum:webrtc::VideoCodecComplexity
kComplexityNormal	webrtc/common_types.h	/^  kComplexityNormal = 0,$/;"	e	enum:webrtc::VideoCodecComplexity
kCompound	webrtc/common_types.h	/^enum class RtcpMode { kOff, kCompound, kReducedSize };$/;"	m	class:webrtc::RtcpMode
kCompressionGainStep	webrtc/modules/audio_processing/agc/agc_manager_direct.cc	/^const float kCompressionGainStep = 0.05f;$/;"	m	namespace:webrtc::__anon169	file:
kConfigParameterSize	webrtc/common_types.h	/^enum { kConfigParameterSize = 128 };$/;"	e	enum:webrtc::__anon117
kCoreGraphicsName	webrtc/base/macwindowpicker.cc	/^static const char* kCoreGraphicsName =$/;"	m	namespace:rtc	file:
kCorrWeight	webrtc/modules/audio_processing/vad/vad_audio_proc_internal.h	/^static const double kCorrWeight[] = {1.000000,$/;"	m	namespace:webrtc
kCountLen	webrtc/modules/audio_processing/aec/aec_core.cc	/^static const size_t kCountLen = 50;$/;"	m	namespace:webrtc	file:
kCpuInfoFile	webrtc/base/linux.cc	/^static const char kCpuInfoFile[] = "\/proc\/cpuinfo";$/;"	m	namespace:rtc	file:
kCpuMaxFreqFile	webrtc/base/linux.cc	/^static const char kCpuMaxFreqFile[] =$/;"	m	namespace:rtc	file:
kCrc32Polynomial	webrtc/base/crc32.cc	/^static const uint32_t kCrc32Polynomial = 0xEDB88320;$/;"	m	namespace:rtc	file:
kCrc32Table	webrtc/base/crc32.cc	/^static uint32_t kCrc32Table[256] = {0};$/;"	m	namespace:rtc	file:
kCrcTable	webrtc/modules/audio_coding/codecs/isac/main/source/crc.c	/^static const uint32_t kCrcTable[256] = {$/;"	v	file:
kCreate	webrtc/system_wrappers/include/static_instance.h	/^  kCreate,$/;"	e	enum:webrtc::CreateOperation
kCreationFailedError	WebRTCAudioProcessing_jni.h	/^	kCreationFailedError = -2,$/;"	e	enum:Error
kCreationFailedError	webrtc/modules/audio_processing/include/audio_processing.h	/^    kCreationFailedError = -2,$/;"	e	enum:webrtc::AudioProcessing::Error
kCutOffConstant	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.cc	/^const float kCutOffConstant = 0.9999f;$/;"	m	namespace:webrtc::__anon188	file:
kDampFilter	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_filter.c	/^static const double kDampFilter[PITCH_DAMPORDER] = {-0.07, 0.25, 0.64, 0.25,$/;"	v	file:
kDataLength	webrtc/modules/audio_processing/transient/wpd_node_unittest.cc	/^static const size_t kDataLength = 5;$/;"	m	namespace:webrtc	file:
kDataSize	webrtc/common_audio/resampler/resampler_unittest.cc	/^const size_t kDataSize = static_cast<size_t> (kMaxChannels * kMaxRate \/ 100);$/;"	m	namespace:webrtc::__anon86	file:
kDaubechies8CoefficientsLength	webrtc/modules/audio_processing/transient/daubechies_8_wavelet_coeffs.h	/^const int kDaubechies8CoefficientsLength = 16;$/;"	m	namespace:webrtc
kDaubechies8HighPassCoefficients	webrtc/modules/audio_processing/transient/daubechies_8_wavelet_coeffs.h	/^const float kDaubechies8HighPassCoefficients[kDaubechies8CoefficientsLength]$/;"	m	namespace:webrtc
kDaubechies8LowPassCoefficients	webrtc/modules/audio_processing/transient/daubechies_8_wavelet_coeffs.h	/^const float kDaubechies8LowPassCoefficients[kDaubechies8CoefficientsLength] = {$/;"	m	namespace:webrtc
kDecayRate	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer.cc	/^const float kDecayRate = 0.995f;              \/\/ Power estimation decay rate.$/;"	m	namespace:webrtc::__anon202	file:
kDefaultApmDesktop	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^  kDefaultApmDesktop,$/;"	m	class:webrtc::__anon182::SettingsType	file:
kDefaultApmDesktopAndBeamformer	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^  kDefaultApmDesktopAndBeamformer,$/;"	m	class:webrtc::__anon182::SettingsType	file:
kDefaultApmDesktopAndIntelligibilityEnhancer	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^  kDefaultApmDesktopAndIntelligibilityEnhancer,$/;"	m	class:webrtc::__anon182::SettingsType	file:
kDefaultApmDesktopWithoutDelayAgnostic	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^  kDefaultApmDesktopWithoutDelayAgnostic,$/;"	m	class:webrtc::__anon182::SettingsType	file:
kDefaultApmMobile	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^  kDefaultApmMobile,$/;"	m	class:webrtc::__anon182::SettingsType	file:
kDefaultBufferSize	webrtc/base/sslstreamadapter_unittest.cc	/^static const size_t kDefaultBufferSize = 2048;$/;"	v	file:
kDefaultCertificateLifetimeInSeconds	webrtc/base/sslidentity.h	/^static const int kDefaultCertificateLifetimeInSeconds =$/;"	m	namespace:rtc
kDefaultCompressionGain	webrtc/modules/audio_processing/agc/agc_manager_direct.cc	/^const int kDefaultCompressionGain = 7;$/;"	m	namespace:webrtc::__anon169	file:
kDefaultFactor	webrtc/modules/audio_processing/config_unittest.cc	/^  static const int kDefaultFactor;$/;"	m	struct:webrtc::__anon191::MyExperiment	file:
kDefaultFactor	webrtc/modules/audio_processing/config_unittest.cc	/^const int MyExperiment::kDefaultFactor = 1;$/;"	m	class:webrtc::__anon191::MyExperiment	file:
kDefaultHTTPTimeout	webrtc/base/httprequest.cc	/^const int kDefaultHTTPTimeout = 30 * 1000; \/\/ 30 sec$/;"	v
kDefaultLevelDbfs	webrtc/modules/audio_processing/agc/agc.cc	/^const int kDefaultLevelDbfs = -18;$/;"	m	namespace:webrtc::__anon168	file:
kDefaultMode	webrtc/common_audio/vad/vad_core.c	/^static const short kDefaultMode = 0;$/;"	v	file:
kDefaultNetworkCapacity	webrtc/base/virtualsocketserver.cc	/^const uint32_t kDefaultNetworkCapacity = 64 * 1024;$/;"	m	namespace:rtc	file:
kDefaultNetworkIgnoreMask	webrtc/base/network.h	/^const int kDefaultNetworkIgnoreMask = ADAPTER_TYPE_LOOPBACK;$/;"	m	namespace:rtc
kDefaultOffset	webrtc/modules/audio_processing/config_unittest.cc	/^  static const int kDefaultOffset;$/;"	m	struct:webrtc::__anon191::MyExperiment	file:
kDefaultOffset	webrtc/modules/audio_processing/config_unittest.cc	/^const int MyExperiment::kDefaultOffset = 2;$/;"	m	class:webrtc::__anon191::MyExperiment	file:
kDefaultRequestSize	webrtc/common_audio/resampler/sinc_resampler.h	/^  static const size_t kDefaultRequestSize = 512;$/;"	m	class:webrtc::SincResampler
kDefaultRetries	webrtc/base/httpclient.cc	/^const size_t kDefaultRetries = 1;$/;"	m	namespace:rtc	file:
kDefaultStandaloneVadMode	webrtc/modules/audio_processing/vad/standalone_vad.cc	/^static const int kDefaultStandaloneVadMode = 3;$/;"	m	namespace:webrtc	file:
kDefaultTcpBufferSize	webrtc/base/virtualsocketserver.cc	/^const uint32_t kDefaultTcpBufferSize = 32 * 1024;$/;"	m	namespace:rtc	file:
kDefaultVoiceValue	webrtc/modules/audio_processing/vad/voice_activity_detector.cc	/^const double kDefaultVoiceValue = 1.0;$/;"	m	namespace:webrtc::__anon242	file:
kDelayAgnostic	webrtc/modules/audio_processing/aec/aec_core.cc	/^  kDelayAgnostic,  \/\/ The delay values come from the DA-AEC.$/;"	m	class:webrtc::__anon145::DelaySource	file:
kDelayAgnostic	webrtc/modules/audio_processing/include/config.h	/^  kDelayAgnostic,$/;"	m	class:webrtc::ConfigOptionID
kDelayCorrectionStart	webrtc/modules/audio_processing/aec/aec_core.cc	/^static const int kDelayCorrectionStart = 1500;  \/\/ 10 ms chunks$/;"	m	namespace:webrtc	file:
kDelayDiffOffsetSamples	webrtc/modules/audio_processing/aec/echo_cancellation.cc	/^static const int kDelayDiffOffsetSamples = -160;$/;"	m	namespace:webrtc	file:
kDelayDiffOffsetSamples	webrtc/modules/audio_processing/aec/echo_cancellation.cc	/^static const int kDelayDiffOffsetSamples = 0;$/;"	m	namespace:webrtc	file:
kDelayMetricsAggregationWindow	webrtc/modules/audio_processing/aec/aec_core.cc	/^static const int kDelayMetricsAggregationWindow = 1250;  \/\/ 5 seconds at 16 kHz.$/;"	m	namespace:webrtc	file:
kDelayQualityThresholdMax	webrtc/modules/audio_processing/aec/aec_core.cc	/^static const float kDelayQualityThresholdMax = 0.07f;$/;"	m	namespace:webrtc	file:
kDelayQualityThresholdMin	webrtc/modules/audio_processing/aec/aec_core.cc	/^static const float kDelayQualityThresholdMin = 0.01f;$/;"	m	namespace:webrtc	file:
kDestroy	webrtc/system_wrappers/include/static_instance.h	/^  kDestroy$/;"	e	enum:webrtc::CreateOperation
kDetectThreshold	webrtc/modules/audio_processing/transient/transient_detector.cc	/^static const float kDetectThreshold = 16.f;$/;"	m	namespace:webrtc	file:
kDeterminantEstMatrix	webrtc/modules/audio_processing/ns/nsx_core.c	/^static const int16_t kDeterminantEstMatrix[66] = {$/;"	v	file:
kDeviceBufMs	webrtc/modules/audio_processing/aec/system_delay_unittest.cc	/^static const int kDeviceBufMs = 100;$/;"	m	namespace:webrtc::__anon162	file:
kDftSize	webrtc/modules/audio_processing/vad/vad_audio_proc.h	/^  static const size_t kDftSize = 512;$/;"	m	class:webrtc::VadAudioProc
kDifferentHistorySize	webrtc/modules/audio_processing/utility/delay_estimator_unittest.cc	/^const int kDifferentHistorySize = 3;$/;"	m	namespace:__anon232	file:
kDifferentLookahead	webrtc/modules/audio_processing/utility/delay_estimator_unittest.cc	/^const int kDifferentLookahead = 1;$/;"	m	namespace:__anon232	file:
kDisabledTracePrefix	webrtc/base/event_tracer.cc	/^static const char* const kDisabledTracePrefix = TRACE_DISABLED_BY_DEFAULT("");$/;"	m	namespace:rtc::tracing::__anon12	file:
kDivergentFilterFractionAggregationWindowSize	webrtc/modules/audio_processing/aec/aec_core.cc	/^static const int kDivergentFilterFractionAggregationWindowSize = 50;$/;"	m	namespace:webrtc	file:
kDoubleVal	webrtc/base/win32regkey_unittest.cc	/^const double kDoubleVal = 98.7654321;$/;"	m	namespace:rtc	file:
kDstMaxExponent	webrtc/base/safe_conversions_impl.h	/^  static const size_t kDstMaxExponent = DstLimits::is_iec559 ?$/;"	m	struct:rtc::internal::StaticRangeCheck
kDummyResult	webrtc/base/win32window_unittest.cc	/^static LRESULT kDummyResult = 0x1234ABCD;$/;"	v	file:
kE	webrtc/modules/audio_processing/transient/file_utils_unittest.cc	/^static const double kE = 2.71828182845904523536;$/;"	m	namespace:webrtc	file:
kEBytes	webrtc/modules/audio_processing/transient/file_utils_unittest.cc	/^static const uint8_t kEBytes[8] =$/;"	m	namespace:webrtc	file:
kEBytesf	webrtc/modules/audio_processing/transient/file_utils_unittest.cc	/^static const uint8_t kEBytesf[4] = {0x54, 0xF8, 0x2D, 0x40};$/;"	m	namespace:webrtc	file:
kECDSA_BASE64_CERTIFICATE	webrtc/base/sslidentity_unittest.cc	/^static const char kECDSA_BASE64_CERTIFICATE[] =$/;"	v	file:
kECDSA_CERT_PEM	webrtc/base/sslidentity_unittest.cc	/^static const char kECDSA_CERT_PEM[] =$/;"	v	file:
kECDSA_FINGERPRINT	webrtc/base/sslidentity_unittest.cc	/^static const char kECDSA_FINGERPRINT[] =$/;"	v	file:
kECDSA_FINGERPRINT_ALGORITHM	webrtc/base/sslidentity_unittest.cc	/^static const char kECDSA_FINGERPRINT_ALGORITHM[] =$/;"	v	file:
kECDSA_PRIVATE_KEY_PEM	webrtc/base/sslidentity_unittest.cc	/^static const char kECDSA_PRIVATE_KEY_PEM[] =$/;"	v	file:
kECDSA_PUBLIC_KEY_PEM	webrtc/base/sslidentity_unittest.cc	/^static const char kECDSA_PUBLIC_KEY_PEM[] =$/;"	v	file:
kEarpiece	webrtc/modules/audio_processing/include/audio_processing.h	/^    kEarpiece,$/;"	e	enum:webrtc::EchoControlMobile::RoutingMode
kEcAec	webrtc/common_types.h	/^  kEcAec,            \/\/ Acoustic Echo Cancellation$/;"	e	enum:webrtc::EcModes
kEcAecm	webrtc/common_types.h	/^  kEcAecm,           \/\/ AEC mobile$/;"	e	enum:webrtc::EcModes
kEcConference	webrtc/common_types.h	/^  kEcConference,     \/\/ conferencing default (aggressive AEC)$/;"	e	enum:webrtc::EcModes
kEcDefault	webrtc/common_types.h	/^  kEcDefault,        \/\/ platform default$/;"	e	enum:webrtc::EcModes
kEcUnchanged	webrtc/common_types.h	/^  kEcUnchanged = 0,  \/\/ previously set mode$/;"	e	enum:webrtc::EcModes
kEchoCanceller3	webrtc/modules/audio_processing/include/config.h	/^  kEchoCanceller3,$/;"	m	class:webrtc::ConfigOptionID
kEmptyFrame	webrtc/common_types.h	/^  kEmptyFrame = 0,$/;"	e	enum:webrtc::FrameType
kEmptyMultiSZ	webrtc/base/win32regkey_unittest.cc	/^const wchar_t kEmptyMultiSZ[] = L"";$/;"	m	namespace:rtc	file:
kEmptyString	webrtc/base/optionsfile_unittest.cc	/^static const std::string kEmptyString = "";$/;"	m	namespace:rtc	file:
kEnable	webrtc/modules/audio_processing/utility/delay_estimator_unittest.cc	/^const int kEnable[] = { 0, 1 };$/;"	m	namespace:__anon232	file:
kEphemeralPortCount	webrtc/base/virtualsocketserver.cc	/^const uint16_t kEphemeralPortCount =$/;"	m	namespace:rtc	file:
kErbResolution	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer.cc	/^const size_t kErbResolution = 2;$/;"	m	namespace:webrtc::__anon202	file:
kError	webrtc/common_audio/vad/include/vad.h	/^  enum Activity { kPassive = 0, kActive = 1, kError = -1 };$/;"	e	enum:webrtc::Vad::Activity
kEstimateLengthFrames	webrtc/modules/audio_processing/aec/aec_resampler.cc	/^enum { kEstimateLengthFrames = 400 };$/;"	e	enum:webrtc::__anon153	file:
kEvenBufferLength	webrtc/modules/audio_processing/transient/dyadic_decimator_unittest.cc	/^static const size_t kEvenBufferLength = 6;$/;"	m	namespace:webrtc	file:
kEventError	webrtc/system_wrappers/include/event_wrapper.h	/^  kEventError = 2,$/;"	e	enum:webrtc::EventTypeWrapper
kEventLoggerArgsStrBufferInitialSize	webrtc/base/event_tracer.cc	/^static const size_t kEventLoggerArgsStrBufferInitialSize = 256;$/;"	v	file:
kEventSignaled	webrtc/system_wrappers/include/event_wrapper.h	/^  kEventSignaled = 1,$/;"	e	enum:webrtc::EventTypeWrapper
kEventTimeout	webrtc/system_wrappers/include/event_wrapper.h	/^  kEventTimeout = 3$/;"	e	enum:webrtc::EventTypeWrapper
kExperimentalAgc	webrtc/modules/audio_processing/include/config.h	/^  kExperimentalAgc,$/;"	m	class:webrtc::ConfigOptionID
kExperimentalNs	webrtc/modules/audio_processing/include/config.h	/^  kExperimentalNs,$/;"	m	class:webrtc::ConfigOptionID
kExporterContext	webrtc/base/sslstreamadapter_unittest.cc	/^static const unsigned char kExporterContext[] = "context";$/;"	v	file:
kExporterContextLen	webrtc/base/sslstreamadapter_unittest.cc	/^static int kExporterContextLen = sizeof(kExporterContext);$/;"	v	file:
kExporterLabel	webrtc/base/sslstreamadapter_unittest.cc	/^static const char kExporterLabel[] = "label";$/;"	v	file:
kExtendedFilter	webrtc/modules/audio_processing/include/config.h	/^  kExtendedFilter,$/;"	m	class:webrtc::ConfigOptionID
kExtendedMinOverDrive	webrtc/modules/audio_processing/aec/aec_core.cc	/^static const float kExtendedMinOverDrive[3] = {3.0f, 6.0f, 15.0f};$/;"	m	namespace:webrtc	file:
kExtendedNumPartitions	webrtc/modules/audio_processing/aec/aec_core.h	/^enum { kExtendedNumPartitions = 32 };$/;"	e	enum:webrtc::__anon148
kFactor1Table	webrtc/modules/audio_processing/ns/nsx_core.c	/^static const int16_t kFactor1Table[257] = {$/;"	v	file:
kFactor2Aggressiveness1	webrtc/modules/audio_processing/ns/nsx_core.c	/^static const int16_t kFactor2Aggressiveness1[257] = {$/;"	v	file:
kFactor2Aggressiveness2	webrtc/modules/audio_processing/ns/nsx_core.c	/^static const int16_t kFactor2Aggressiveness2[257] = {$/;"	v	file:
kFactor2Aggressiveness3	webrtc/modules/audio_processing/ns/nsx_core.c	/^static const int16_t kFactor2Aggressiveness3[257] = {$/;"	v	file:
kFakeIPv4NetworkPrefixLength	webrtc/base/fakenetwork.h	/^const int kFakeIPv4NetworkPrefixLength = 24;$/;"	m	namespace:rtc
kFakeIPv6NetworkPrefixLength	webrtc/base/fakenetwork.h	/^const int kFakeIPv6NetworkPrefixLength = 64;$/;"	m	namespace:rtc
kFecMaskBursty	webrtc/modules/include/module_common_types.h	/^  kFecMaskBursty,$/;"	e	enum:webrtc::FecMaskType
kFecMaskRandom	webrtc/modules/include/module_common_types.h	/^  kFecMaskRandom,$/;"	e	enum:webrtc::FecMaskType
kFftBufferAlignment	webrtc/common_audio/real_fourier.cc	/^const size_t RealFourier::kFftBufferAlignment = 32;$/;"	m	class:webrtc::RealFourier	file:
kFftBufferAlignment	webrtc/common_audio/real_fourier.h	/^  static const size_t kFftBufferAlignment;$/;"	m	class:webrtc::RealFourier
kFftSize	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.h	/^  static const size_t kFftSize = 256;$/;"	m	class:webrtc::NonlinearBeamformer
kFifoBufferSize	webrtc/base/sslstreamadapter_unittest.cc	/^static const int kFifoBufferSize = 4096;$/;"	v	file:
kFileError	WebRTCAudioProcessing_jni.h	/^	kFileError = -10,$/;"	e	enum:Error
kFileError	webrtc/modules/audio_processing/include/audio_processing.h	/^    kFileError = -10,$/;"	e	enum:webrtc::AudioProcessing::Error
kFileFormatCompressedFile	webrtc/common_types.h	/^  kFileFormatCompressedFile = 2,$/;"	e	enum:webrtc::FileFormats
kFileFormatPcm16kHzFile	webrtc/common_types.h	/^  kFileFormatPcm16kHzFile = 7,$/;"	e	enum:webrtc::FileFormats
kFileFormatPcm32kHzFile	webrtc/common_types.h	/^  kFileFormatPcm32kHzFile = 9$/;"	e	enum:webrtc::FileFormats
kFileFormatPcm8kHzFile	webrtc/common_types.h	/^  kFileFormatPcm8kHzFile = 8,$/;"	e	enum:webrtc::FileFormats
kFileFormatPreencodedFile	webrtc/common_types.h	/^  kFileFormatPreencodedFile = 4,$/;"	e	enum:webrtc::FileFormats
kFileFormatWavFile	webrtc/common_types.h	/^  kFileFormatWavFile = 1,$/;"	e	enum:webrtc::FileFormats
kFilePrefix	webrtc/base/filerotatingstream_unittest.cc	/^  static const char* kFilePrefix;$/;"	m	class:rtc::MAYBE_FileRotatingStreamTest	file:
kFilePrefix	webrtc/base/filerotatingstream_unittest.cc	/^const char* MAYBE_FileRotatingStreamTest::kFilePrefix =$/;"	m	class:rtc::MAYBE_FileRotatingStreamTest	file:
kFilterCoefficients	webrtc/modules/audio_processing/high_pass_filter_impl.cc	/^const int16_t kFilterCoefficients[5] = {4012, -8024, 4012, 8002, -3913};$/;"	m	namespace:webrtc::__anon200	file:
kFilterCoefficients8kHz	webrtc/modules/audio_processing/high_pass_filter_impl.cc	/^const int16_t kFilterCoefficients8kHz[5] = {3798, -7596, 3798, 7807, -3733};$/;"	m	namespace:webrtc::__anon200	file:
kFilterOrder	webrtc/modules/audio_processing/vad/vad_audio_proc_internal.h	/^static const size_t kFilterOrder = 2;$/;"	m	namespace:webrtc
kFirefoxCorruptHeader	webrtc/base/proxydetect_unittest.cc	/^static const std::string kFirefoxCorruptHeader =$/;"	m	namespace:rtc	file:
kFirefoxHeader	webrtc/base/proxydetect_unittest.cc	/^static const std::string kFirefoxHeader =$/;"	m	namespace:rtc	file:
kFirefoxPattern	webrtc/base/proxydetect.cc	/^static const char kFirefoxPattern[] = "Firefox";$/;"	v	file:
kFirefoxProfilesIni	webrtc/base/proxydetect_unittest.cc	/^static const std::string kFirefoxProfilesIni =$/;"	m	namespace:rtc	file:
kFirstEphemeralPort	webrtc/base/virtualsocketserver.cc	/^const uint16_t kFirstEphemeralPort = 49152;$/;"	m	namespace:rtc	file:
kFixedDelayMs	webrtc/modules/audio_processing/aec/echo_cancellation.cc	/^static const int kFixedDelayMs = 20;$/;"	m	namespace:webrtc	file:
kFixedDelayMs	webrtc/modules/audio_processing/aec/echo_cancellation.cc	/^static const int kFixedDelayMs = 50;$/;"	m	namespace:webrtc	file:
kFixedDigital	webrtc/modules/audio_processing/include/audio_processing.h	/^    kFixedDigital$/;"	e	enum:webrtc::GainControl::Mode
kFixedInterface	webrtc/modules/audio_processing/test/aec_dump_based_simulator.h	/^    kFixedInterface,$/;"	e	enum:webrtc::test::final::InterfaceType
kFloatExponentShift	webrtc/modules/audio_processing/aec/aec_core_neon.cc	/^enum { kFloatExponentShift = 23 };$/;"	e	enum:webrtc::__anon152	file:
kFloatFormat	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^    kFloatFormat$/;"	e	enum:webrtc::__anon183::ApmTest::Format	file:
kFloatInterface	webrtc/modules/audio_processing/test/aec_dump_based_simulator.h	/^    kFloatInterface,$/;"	e	enum:webrtc::test::final::InterfaceType
kFloatVal	webrtc/base/win32regkey_unittest.cc	/^const float kFloatVal = 12.3456789f;$/;"	m	namespace:rtc	file:
kFmtSubchunkSize	webrtc/common_audio/wav_header.cc	/^const uint32_t kFmtSubchunkSize = sizeof(FmtSubchunk) - sizeof(ChunkHeader);$/;"	m	namespace:webrtc::__anon112	file:
kForever	webrtc/base/event.h	/^  static const int kForever = -1;$/;"	m	class:rtc::Event
kForever	webrtc/base/messagequeue.h	/^  static const int kForever = -1;$/;"	m	class:rtc::MessageQueue
kForever	webrtc/base/socketserver.h	/^  static const int kForever = -1;$/;"	m	class:rtc::SocketServer
kForever	webrtc/base/thread.h	/^  static const int kForever = -1;$/;"	m	class:rtc::ThreadManager
kForward	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^enum StreamDirection { kForward = 0, kReverse };$/;"	e	enum:webrtc::__anon183::StreamDirection	file:
kFractionSlope	webrtc/modules/audio_processing/utility/delay_estimator.cc	/^static const float kFractionSlope = 0.05f;$/;"	v	file:
kFragmentSize	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer_unittest.cc	/^const int kFragmentSize = kSampleRate \/ 100;$/;"	m	namespace:webrtc::__anon203	file:
kFrameLengths	webrtc/common_audio/vad/vad_unittest.h	/^const size_t kFrameLengths[] = { 80, 120, 160, 240, 320, 480, 640, 960,$/;"	m	namespace:__anon111
kFrameLengthsSize	webrtc/common_audio/vad/vad_unittest.h	/^const size_t kFrameLengthsSize = sizeof(kFrameLengths) \/ sizeof(*kFrameLengths);$/;"	m	namespace:__anon111
kFrameSizeMsReference	webrtc/modules/audio_processing/voice_detection_unittest.cc	/^const int kFrameSizeMsReference = 10;$/;"	m	namespace:webrtc::__anon244	file:
kFreq16000Hz	webrtc/common_types.h	/^  kFreq16000Hz = 16000,$/;"	e	enum:webrtc::PayloadFrequencies
kFreq32000Hz	webrtc/common_types.h	/^  kFreq32000Hz = 32000$/;"	e	enum:webrtc::PayloadFrequencies
kFreq8000Hz	webrtc/common_types.h	/^  kFreq8000Hz = 8000,$/;"	e	enum:webrtc::PayloadFrequencies
kFreqDataLength	webrtc/common_audio/signal_processing/real_fft_unittest.cc	/^const int kFreqDataLength = (1 << kOrder) + 2;$/;"	m	namespace:webrtc::__anon98	file:
kFrequencyResolution	webrtc/modules/audio_processing/vad/vad_audio_proc.cc	/^static const float kFrequencyResolution =$/;"	m	namespace:webrtc	file:
kFullRkey1	webrtc/base/win32regkey_unittest.cc	/^const wchar_t kFullRkey1[] = L"HKCU\\\\" kBaseKey;$/;"	m	namespace:rtc	file:
kFullRkey1Subkey	webrtc/base/win32regkey_unittest.cc	/^const wchar_t kFullRkey1Subkey[] = L"HKCU\\\\" kBaseKey L"\\\\" kSubkeyName;$/;"	m	namespace:rtc	file:
kGainMap	webrtc/modules/audio_processing/agc/gain_map_internal.h	/^static const int kGainMap[kGainMapSize] = {$/;"	v
kGainMapSize	webrtc/modules/audio_processing/agc/gain_map_internal.h	/^static const int kGainMapSize = 256;$/;"	v
kGainTableAnalog	webrtc/modules/audio_processing/agc/legacy/analog_agc.c	/^static const uint16_t kGainTableAnalog[GAIN_TBL_LEN] = {$/;"	v	file:
kGainTableVirtualMic	webrtc/modules/audio_processing/agc/legacy/analog_agc.c	/^static const uint16_t kGainTableVirtualMic[128] = {$/;"	v	file:
kGainUpdatePeriod	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer.cc	/^const size_t kGainUpdatePeriod = 10u;$/;"	m	namespace:webrtc::__anon202	file:
kGenFuncTable	webrtc/modules/audio_processing/agc/legacy/digital_agc.c	/^static const uint16_t kGenFuncTable[kGenFuncTableSize] = {$/;"	v	file:
kGenFuncTableSize	webrtc/modules/audio_processing/agc/legacy/digital_agc.c	/^enum { kGenFuncTableSize = 128 };$/;"	e	enum:__anon172	file:
kGenerationTimeoutMs	webrtc/base/rtccertificategenerator_unittest.cc	/^  static const int kGenerationTimeoutMs = 10000;$/;"	m	class:rtc::RTCCertificateGeneratorTest	file:
kGlobalThresholdAGG	webrtc/common_audio/vad/vad_core.c	/^static const int16_t kGlobalThresholdAGG[3] = { 285, 260, 285 };$/;"	v	file:
kGlobalThresholdLBR	webrtc/common_audio/vad/vad_core.c	/^static const int16_t kGlobalThresholdLBR[3] = { 100, 80, 100 };$/;"	v	file:
kGlobalThresholdQ	webrtc/common_audio/vad/vad_core.c	/^static const int16_t kGlobalThresholdQ[3] = { 57, 48, 57 };$/;"	v	file:
kGlobalThresholdVAG	webrtc/common_audio/vad/vad_core.c	/^static const int16_t kGlobalThresholdVAG[3] = { 1100, 1050, 1100 };$/;"	v	file:
kH264FuA	webrtc/modules/include/module_common_types.h	/^  kH264FuA,         \/\/ This packet contains a FU-A (fragmentation$/;"	e	enum:webrtc::H264PacketizationTypes
kH264SingleNalu	webrtc/modules/include/module_common_types.h	/^  kH264SingleNalu,  \/\/ This packet contains a single NAL unit.$/;"	e	enum:webrtc::H264PacketizationTypes
kH264StapA	webrtc/modules/include/module_common_types.h	/^  kH264StapA,       \/\/ This packet contains STAP-A (single time$/;"	e	enum:webrtc::H264PacketizationTypes
kHalfBeamWidthRadians	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.cc	/^const float NonlinearBeamformer::kHalfBeamWidthRadians = DegreesToRadians(20.f);$/;"	m	class:webrtc::NonlinearBeamformer	file:
kHalfBeamWidthRadians	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.h	/^  static const float kHalfBeamWidthRadians;$/;"	m	class:webrtc::NonlinearBeamformer
kHanning64w128	webrtc/modules/audio_processing/ns/windows_private.h	/^static const float kHanning64w128[128] = {$/;"	v
kHanningTable	webrtc/common_audio/signal_processing/get_hanning_window.c	/^static const int16_t kHanningTable[] = {$/;"	v	file:
kHex	webrtc/base/helpers.cc	/^static const char kHex[16] = {'0', '1', '2', '3', '4', '5', '6', '7',$/;"	m	namespace:rtc::__anon15	file:
kHigh	webrtc/modules/audio_processing/include/audio_processing.h	/^    kHigh,$/;"	e	enum:webrtc::NoiseSuppression::Level
kHighLikelihood	webrtc/modules/audio_processing/include/audio_processing.h	/^    kHighLikelihood$/;"	e	enum:webrtc::VoiceDetection::Likelihood
kHighPriority	webrtc/base/platform_thread.h	/^  kHighPriority = THREAD_PRIORITY_ABOVE_NORMAL,$/;"	e	enum:rtc::ThreadPriority
kHighSuppression	webrtc/modules/audio_processing/include/audio_processing.h	/^    kHighSuppression$/;"	e	enum:webrtc::EchoCancellation::SuppressionLevel
kHighestNetworkPreference	webrtc/base/network.cc	/^const int kHighestNetworkPreference = 127;$/;"	m	namespace:rtc::__anon34	file:
kHighestPriority	webrtc/base/platform_thread.h	/^  kHighestPriority = THREAD_PRIORITY_HIGHEST,$/;"	e	enum:rtc::ThreadPriority
kHighlyNonStationary	webrtc/modules/audio_processing/level_controller/signal_classifier.h	/^  enum class SignalType { kHighlyNonStationary, kNonStationary, kStationary };$/;"	m	class:webrtc::SignalClassifier::SignalType
kHistBinCenters	webrtc/modules/audio_processing/agc/loudness_histogram.cc	/^static const double kHistBinCenters[] = {$/;"	m	namespace:webrtc	file:
kHistEdgesQ15	webrtc/modules/audio_coding/codecs/isac/main/source/arith_routines_logist.c	/^static const int32_t kHistEdgesQ15[51] = {$/;"	v	file:
kHistSize	webrtc/modules/audio_processing/agc/loudness_histogram.h	/^  static const int kHistSize = 77;$/;"	m	class:webrtc::LoudnessHistogram
kHistogramMax	webrtc/modules/audio_processing/utility/delay_estimator.cc	/^static const float kHistogramMax = 3000.f;$/;"	v	file:
kHistorySize	webrtc/modules/audio_processing/utility/delay_estimator_unittest.cc	/^enum { kHistorySize = kMaxDelay + kLookahead };$/;"	e	enum:__anon232::__anon236	file:
kHistorySizeBlocks	webrtc/modules/audio_processing/aec/aec_core.h	/^  kHistorySizeBlocks = 125$/;"	e	enum:webrtc::__anon150
kHoldTargetSeconds	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.cc	/^const float kHoldTargetSeconds = 0.25f;$/;"	m	namespace:webrtc::__anon188	file:
kHost	webrtc/base/autodetectproxy_unittest.cc	/^static const char kHost[] = "relay.google.com";$/;"	m	namespace:rtc	file:
kHpPoleCoefs	webrtc/common_audio/vad/vad_filterbank.c	/^static const int16_t kHpPoleCoefs[3] = { 16384, -7756, 5620 };$/;"	v	file:
kHpStCoefInFloat	webrtc/modules/audio_coding/codecs/isac/main/source/filterbanks.c	/^static const float kHpStCoefInFloat[4] =$/;"	v	file:
kHpStCoefOut1Float	webrtc/modules/audio_coding/codecs/isac/main/source/filterbanks.c	/^static const float kHpStCoefOut1Float[4] =$/;"	v	file:
kHpStCoefOut2Float	webrtc/modules/audio_coding/codecs/isac/main/source/filterbanks.c	/^static const float kHpStCoefOut2Float[4] =$/;"	v	file:
kHpZeroCoefs	webrtc/common_audio/vad/vad_filterbank.c	/^static const int16_t kHpZeroCoefs[3] = { 6631, -13262, 6631 };$/;"	v	file:
kHttpEmptyResponse	webrtc/base/httpbase_unittest.cc	/^const char* const kHttpEmptyResponse =$/;"	m	namespace:rtc	file:
kHttpHeaders	webrtc/base/httpcommon.cc	/^static const char* kHttpHeaders[HH_LAST+1] = {$/;"	m	namespace:rtc	file:
kHttpResponse	webrtc/base/httpbase_unittest.cc	/^const char* const kHttpResponse =$/;"	m	namespace:rtc	file:
kHttpResponsePrefix	webrtc/base/httpbase_unittest.cc	/^const char* const kHttpResponsePrefix =$/;"	m	namespace:rtc	file:
kHttpVerbs	webrtc/base/httpcommon.cc	/^static const char* kHttpVerbs[HV_LAST+1] = {$/;"	m	namespace:rtc	file:
kHttpVersions	webrtc/base/httpcommon.cc	/^static const char* kHttpVersions[HVER_LAST+1] = {$/;"	m	namespace:rtc	file:
kIPv4AddrSize	webrtc/base/ipaddress_unittest.cc	/^static const unsigned int kIPv4AddrSize = 4;$/;"	m	namespace:rtc	file:
kIPv4AnyAddrString	webrtc/base/ipaddress_unittest.cc	/^static const std::string kIPv4AnyAddrString = "0.0.0.0";$/;"	m	namespace:rtc	file:
kIPv4AnyAddress	webrtc/base/virtualsocket_unittest.cc	/^  const SocketAddress kIPv4AnyAddress;$/;"	m	class:VirtualSocketServerTest	file:
kIPv4BrokenString1	webrtc/base/ipaddress_unittest.cc	/^static const std::string kIPv4BrokenString1 = "192.168.7.";$/;"	m	namespace:rtc	file:
kIPv4BrokenString2	webrtc/base/ipaddress_unittest.cc	/^static const std::string kIPv4BrokenString2 = "192.168.7.1.1";$/;"	m	namespace:rtc	file:
kIPv4BrokenString3	webrtc/base/ipaddress_unittest.cc	/^static const std::string kIPv4BrokenString3 = "192.168.7.1:80";$/;"	m	namespace:rtc	file:
kIPv4BrokenString4	webrtc/base/ipaddress_unittest.cc	/^static const std::string kIPv4BrokenString4 = "192.168.7.ONE";$/;"	m	namespace:rtc	file:
kIPv4BrokenString5	webrtc/base/ipaddress_unittest.cc	/^static const std::string kIPv4BrokenString5 = "-192.168.7.1";$/;"	m	namespace:rtc	file:
kIPv4BrokenString6	webrtc/base/ipaddress_unittest.cc	/^static const std::string kIPv4BrokenString6 = "256.168.7.1";$/;"	m	namespace:rtc	file:
kIPv4Loopback	webrtc/base/socket_unittest.h	/^  const IPAddress kIPv4Loopback;$/;"	m	class:rtc::SocketTest
kIPv4LoopbackAddrString	webrtc/base/ipaddress_unittest.cc	/^static const std::string kIPv4LoopbackAddrString = "127.0.0.1";$/;"	m	namespace:rtc	file:
kIPv4MappedAnyAddr	webrtc/base/ipaddress_unittest.cc	/^static const in6_addr kIPv4MappedAnyAddr = {{{0x00, 0x00, 0x00, 0x00,$/;"	m	namespace:rtc	file:
kIPv4MappedAnyAddrString	webrtc/base/ipaddress_unittest.cc	/^static const std::string kIPv4MappedAnyAddrString = "::ffff:0:0";$/;"	m	namespace:rtc	file:
kIPv4MappedLoopbackAddrString	webrtc/base/ipaddress_unittest.cc	/^static const std::string kIPv4MappedLoopbackAddrString = "::ffff:7f00:1";$/;"	m	namespace:rtc	file:
kIPv4MappedPublicAddr	webrtc/base/ipaddress_unittest.cc	/^static const in6_addr kIPv4MappedPublicAddr = {{{0x00, 0x00, 0x00, 0x00,$/;"	m	namespace:rtc	file:
kIPv4MappedPublicAddrString	webrtc/base/ipaddress_unittest.cc	/^static const std::string kIPv4MappedPublicAddrString = "::ffff:102:0304";$/;"	m	namespace:rtc	file:
kIPv4MappedRFC1918Addr	webrtc/base/ipaddress_unittest.cc	/^static const in6_addr kIPv4MappedRFC1918Addr = {{{0x00, 0x00, 0x00, 0x00,$/;"	m	namespace:rtc	file:
kIPv4MappedRFC1918AddrString	webrtc/base/ipaddress_unittest.cc	/^static const std::string kIPv4MappedRFC1918AddrString = "::ffff:c0a8:701";$/;"	m	namespace:rtc	file:
kIPv4MappedV4StyleAddrString	webrtc/base/ipaddress_unittest.cc	/^static const std::string kIPv4MappedV4StyleAddrString = "::ffff:192.168.7.1";$/;"	m	namespace:rtc	file:
kIPv4PublicAddr	webrtc/base/ipaddress_unittest.cc	/^static const unsigned int kIPv4PublicAddr = 0x01020304;$/;"	m	namespace:rtc	file:
kIPv4PublicAddrAnonymizedString	webrtc/base/ipaddress_unittest.cc	/^static const std::string kIPv4PublicAddrAnonymizedString = "1.2.3.x";$/;"	m	namespace:rtc	file:
kIPv4PublicAddrString	webrtc/base/ipaddress_unittest.cc	/^static const std::string kIPv4PublicAddrString = "1.2.3.4";$/;"	m	namespace:rtc	file:
kIPv4RFC1918Addr	webrtc/base/ipaddress_unittest.cc	/^static const unsigned int kIPv4RFC1918Addr = 0xC0A80701;$/;"	m	namespace:rtc	file:
kIPv4RFC1918AddrString	webrtc/base/ipaddress_unittest.cc	/^static const std::string kIPv4RFC1918AddrString = "192.168.7.1";$/;"	m	namespace:rtc	file:
kIPv6AddrSize	webrtc/base/ipaddress_unittest.cc	/^static const unsigned int kIPv6AddrSize = 16;$/;"	m	namespace:rtc	file:
kIPv6AnyAddrString	webrtc/base/ipaddress_unittest.cc	/^static const std::string kIPv6AnyAddrString = "::";$/;"	m	namespace:rtc	file:
kIPv6AnyAddress	webrtc/base/virtualsocket_unittest.cc	/^  const SocketAddress kIPv6AnyAddress;$/;"	m	class:VirtualSocketServerTest	file:
kIPv6BrokenString1	webrtc/base/ipaddress_unittest.cc	/^static const std::string kIPv6BrokenString1 = "2401:fa00:4:1000:be30";$/;"	m	namespace:rtc	file:
kIPv6BrokenString10	webrtc/base/ipaddress_unittest.cc	/^static const std::string kIPv6BrokenString10 =$/;"	m	namespace:rtc	file:
kIPv6BrokenString11	webrtc/base/ipaddress_unittest.cc	/^static const std::string kIPv6BrokenString11 =$/;"	m	namespace:rtc	file:
kIPv6BrokenString12	webrtc/base/ipaddress_unittest.cc	/^static const std::string kIPv6BrokenString12 =$/;"	m	namespace:rtc	file:
kIPv6BrokenString13	webrtc/base/ipaddress_unittest.cc	/^static const std::string kIPv6BrokenString13 =$/;"	m	namespace:rtc	file:
kIPv6BrokenString14	webrtc/base/ipaddress_unittest.cc	/^static const std::string kIPv6BrokenString14 =$/;"	m	namespace:rtc	file:
kIPv6BrokenString2	webrtc/base/ipaddress_unittest.cc	/^static const std::string kIPv6BrokenString2 =$/;"	m	namespace:rtc	file:
kIPv6BrokenString3	webrtc/base/ipaddress_unittest.cc	/^static const std::string kIPv6BrokenString3 =$/;"	m	namespace:rtc	file:
kIPv6BrokenString4	webrtc/base/ipaddress_unittest.cc	/^static const std::string kIPv6BrokenString4 =$/;"	m	namespace:rtc	file:
kIPv6BrokenString5	webrtc/base/ipaddress_unittest.cc	/^static const std::string kIPv6BrokenString5 =$/;"	m	namespace:rtc	file:
kIPv6BrokenString6	webrtc/base/ipaddress_unittest.cc	/^static const std::string kIPv6BrokenString6 =$/;"	m	namespace:rtc	file:
kIPv6BrokenString7	webrtc/base/ipaddress_unittest.cc	/^static const std::string kIPv6BrokenString7 =$/;"	m	namespace:rtc	file:
kIPv6BrokenString8	webrtc/base/ipaddress_unittest.cc	/^static const std::string kIPv6BrokenString8 =$/;"	m	namespace:rtc	file:
kIPv6BrokenString9	webrtc/base/ipaddress_unittest.cc	/^static const std::string kIPv6BrokenString9 =$/;"	m	namespace:rtc	file:
kIPv6EuiAddrString	webrtc/base/ipaddress_unittest.cc	/^static const std::string kIPv6EuiAddrString =$/;"	m	namespace:rtc	file:
kIPv6LinkLocalAddr	webrtc/base/ipaddress_unittest.cc	/^static const in6_addr kIPv6LinkLocalAddr = {{{0xfe, 0x80, 0x00, 0x00,$/;"	m	namespace:rtc	file:
kIPv6LinkLocalAddrString	webrtc/base/ipaddress_unittest.cc	/^static const std::string kIPv6LinkLocalAddrString = "fe80::be30:5bff:fee5:c3";$/;"	m	namespace:rtc	file:
kIPv6Loopback	webrtc/base/socket_unittest.h	/^  const IPAddress kIPv6Loopback;$/;"	m	class:rtc::SocketTest
kIPv6LoopbackAddrString	webrtc/base/ipaddress_unittest.cc	/^static const std::string kIPv6LoopbackAddrString = "::1";$/;"	m	namespace:rtc	file:
kIPv6PublicAddr	webrtc/base/ipaddress_unittest.cc	/^static const in6_addr kIPv6PublicAddr = {{{0x24, 0x01, 0xfa, 0x00,$/;"	m	namespace:rtc	file:
kIPv6PublicAddr2	webrtc/base/ipaddress_unittest.cc	/^static const in6_addr kIPv6PublicAddr2 = {{{0x24, 0x01, 0x00, 0x00,$/;"	m	namespace:rtc	file:
kIPv6PublicAddr2AnonymizedString	webrtc/base/ipaddress_unittest.cc	/^static const std::string kIPv6PublicAddr2AnonymizedString =$/;"	m	namespace:rtc	file:
kIPv6PublicAddr2String	webrtc/base/ipaddress_unittest.cc	/^static const std::string kIPv6PublicAddr2String =$/;"	m	namespace:rtc	file:
kIPv6PublicAddrAnonymizedString	webrtc/base/ipaddress_unittest.cc	/^static const std::string kIPv6PublicAddrAnonymizedString =$/;"	m	namespace:rtc	file:
kIPv6PublicAddrString	webrtc/base/ipaddress_unittest.cc	/^static const std::string kIPv6PublicAddrString =$/;"	m	namespace:rtc	file:
kIPv6TemporaryAddrString	webrtc/base/ipaddress_unittest.cc	/^static const std::string kIPv6TemporaryAddrString =$/;"	m	namespace:rtc	file:
kIdentityName	webrtc/base/rtccertificategenerator.cc	/^const char kIdentityName[] = "WebRTC";$/;"	m	namespace:rtc::__anon53	file:
kIndicatorTable	webrtc/modules/audio_processing/ns/nsx_core_c.c	/^static const int16_t kIndicatorTable[17] = {$/;"	v	file:
kIndicatorTable	webrtc/modules/audio_processing/ns/nsx_core_mips.c	/^static const int16_t kIndicatorTable[17] = {$/;"	v	file:
kInit	webrtc/base/signalthread.h	/^    kInit,            \/\/ Initialized, but not started$/;"	e	enum:rtc::SignalThread::State
kInitCheck	webrtc/common_audio/vad/vad_core.c	/^static const int kInitCheck = 42;$/;"	v	file:
kInitCheck	webrtc/common_audio/vad/webrtc_vad.c	/^static const int kInitCheck = 42;$/;"	v	file:
kInitCheck	webrtc/modules/audio_processing/aecm/echo_control_mobile.cc	/^static const int kInitCheck = 42;$/;"	v	file:
kInitCheck	webrtc/modules/audio_processing/agc/legacy/analog_agc.c	/^static const int16_t kInitCheck = 42;$/;"	v	file:
kInitialNextIPv4	webrtc/base/virtualsocketserver.cc	/^const in_addr kInitialNextIPv4 = { {0x01, 0, 0, 0} };$/;"	m	namespace:rtc	file:
kInitialNextIPv6	webrtc/base/virtualsocketserver.cc	/^const in6_addr kInitialNextIPv6 = { { {$/;"	m	namespace:rtc	file:
kInitialPriorProbability	webrtc/modules/audio_processing/vad/pitch_based_vad.cc	/^static const double kInitialPriorProbability = 0.3;$/;"	m	namespace:webrtc	file:
kInitialShiftOffset	webrtc/modules/audio_processing/aec/aec_core.cc	/^static const int kInitialShiftOffset = 5;$/;"	m	namespace:webrtc	file:
kInitialVolume	webrtc/modules/audio_processing/agc/agc_manager_direct_unittest.cc	/^const int kInitialVolume = 128;$/;"	m	namespace:webrtc::__anon170	file:
kInput	webrtc/common_audio/fir_filter_unittest.cc	/^static const float kInput[] = {1.f, 2.f, 3.f, 4.f, 5.f, 6.f, 7.f,$/;"	m	namespace:webrtc::__anon80	file:
kInput	webrtc/common_audio/sparse_fir_filter_unittest.cc	/^static const float kInput[] =$/;"	m	namespace:webrtc::__anon100	file:
kInput	webrtc/modules/audio_processing/vad/pole_zero_filter_unittest.cc	/^static const int16_t kInput[kInputSamples] = {$/;"	m	namespace:webrtc	file:
kInputLength	webrtc/common_audio/fir_filter_unittest.cc	/^static const size_t kInputLength = sizeof(kInput) \/$/;"	m	namespace:webrtc::__anon80	file:
kInputSamples	webrtc/modules/audio_processing/vad/pole_zero_filter_unittest.cc	/^static const int kInputSamples = 50;$/;"	m	namespace:webrtc	file:
kInputStream	webrtc/modules/audio_processing/include/audio_processing.h	/^    kInputStream,$/;"	e	enum:webrtc::ProcessingConfig::StreamName
kInstanceExists	webrtc/system_wrappers/include/static_instance.h	/^  kInstanceExists,$/;"	e	enum:webrtc::CreateOperation
kIntFormat	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^    kIntFormat,$/;"	e	enum:webrtc::__anon183::ApmTest::Format	file:
kIntVal	webrtc/base/win32regkey_unittest.cc	/^const DWORD kIntVal = 20;$/;"	m	namespace:rtc	file:
kIntVal2	webrtc/base/win32regkey_unittest.cc	/^const DWORD kIntVal2 = 30;$/;"	m	namespace:rtc	file:
kIntVal64	webrtc/base/win32regkey_unittest.cc	/^const DWORD64 kIntVal64 = 119600064000000000uI64;$/;"	m	namespace:rtc	file:
kIntelligibility	webrtc/modules/audio_processing/include/config.h	/^  kIntelligibility,$/;"	m	class:webrtc::ConfigOptionID
kInternetExplorerPattern	webrtc/base/proxydetect.cc	/^static const char kInternetExplorerPattern[] = "MSIE";$/;"	v	file:
kInterpolWin	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_estimator.c	/^static const double kInterpolWin[8] = {-0.00067556028640,  0.02184247643159, -0.12203175715679,  0.60086484101160,$/;"	v	file:
kIntrpCoef	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_filter.c	/^static const double kIntrpCoef[PITCH_FRACS][PITCH_FRACORDER] = {$/;"	v	file:
kInvalidDllHandle	webrtc/base/latebindingsymboltable.cc	/^static const DllHandle kInvalidDllHandle = NULL;$/;"	m	namespace:rtc	file:
kInvalidMultiSZ	webrtc/base/win32regkey_unittest.cc	/^const wchar_t kInvalidMultiSZ[] = {L'6', L'7', L'8'};$/;"	m	namespace:rtc	file:
kInvalidPlatformFileValue	webrtc/base/platform_file.cc	/^const PlatformFile kInvalidPlatformFileValue = INVALID_HANDLE_VALUE;$/;"	m	namespace:rtc	file:
kInvisibleWindowTitle	webrtc/base/win32windowpicker_unittest.cc	/^static const TCHAR* kInvisibleWindowTitle = L"Invisible Window";$/;"	m	namespace:rtc	file:
kIsSWB12	webrtc/modules/audio_coding/codecs/isac/main/source/entropy_coding.c	/^static const int kIsSWB12 = 1;$/;"	v	file:
kIsacLowerBand	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^enum ISACBand {kIsacLowerBand = 0, kIsacUpperBand12 = 1, kIsacUpperBand16 = 2};$/;"	e	enum:ISACBand
kIsacSuperWideband	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^enum IsacSamplingRate {kIsacWideband = 16,  kIsacSuperWideband = 32};$/;"	e	enum:IsacSamplingRate
kIsacUpperBand12	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^enum ISACBand {kIsacLowerBand = 0, kIsacUpperBand12 = 1, kIsacUpperBand16 = 2};$/;"	e	enum:ISACBand
kIsacUpperBand16	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^enum ISACBand {kIsacLowerBand = 0, kIsacUpperBand12 = 1, kIsacUpperBand16 = 2};$/;"	e	enum:ISACBand
kIsacWideband	webrtc/modules/audio_coding/codecs/isac/main/source/settings.h	/^enum IsacSamplingRate {kIsacWideband = 16,  kIsacSuperWideband = 32};$/;"	e	enum:IsacSamplingRate
kKbdAlpha	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.cc	/^const float kKbdAlpha = 1.5f;$/;"	m	namespace:webrtc::__anon188	file:
kKbdAlpha	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer.cc	/^const float kKbdAlpha = 1.5f;$/;"	m	namespace:webrtc::__anon202	file:
kKernelInterpolationFactor	webrtc/common_audio/resampler/sinc_resampler_unittest.cc	/^static const double kKernelInterpolationFactor = 0.5;$/;"	m	namespace:webrtc	file:
kKernelOffsetCount	webrtc/common_audio/resampler/sinc_resampler.h	/^  static const size_t kKernelOffsetCount = 32;$/;"	m	class:webrtc::SincResampler
kKernelSize	webrtc/common_audio/resampler/sinc_resampler.h	/^  static const size_t kKernelSize = 32;$/;"	m	class:webrtc::SincResampler
kKernelStorageSize	webrtc/common_audio/resampler/sinc_resampler.h	/^  static const size_t kKernelStorageSize =$/;"	m	class:webrtc::SincResampler
kLambdaBot	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer.cc	/^const float kLambdaBot = -1.f;      \/\/ Extreme values in bisection$/;"	m	namespace:webrtc::__anon202	file:
kLambdaTop	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer.cc	/^const float kLambdaTop = -1e-5f;      \/\/ search for lamda.$/;"	m	namespace:webrtc::__anon202	file:
kLastEphemeralPort	webrtc/base/virtualsocketserver.cc	/^const uint16_t kLastEphemeralPort = 65535;$/;"	m	namespace:rtc	file:
kLastHistogramMax	webrtc/modules/audio_processing/utility/delay_estimator.cc	/^static const float kLastHistogramMax = 250.f;$/;"	v	file:
kLearningRate	webrtc/base/rollingaccumulator_unittest.cc	/^const double kLearningRate = 0.5;$/;"	m	namespace:rtc::__anon51	file:
kLeaves	webrtc/modules/audio_processing/transient/transient_detector.h	/^  static const size_t kLeaves = 1 << kLevels;$/;"	m	class:webrtc::TransientDetector
kLength10Ms	webrtc/modules/audio_processing/vad/common.h	/^static const size_t kLength10Ms = kSampleRateHz \/ 100;$/;"	v
kLevelQuantizationSlack	webrtc/modules/audio_processing/agc/agc_manager_direct.cc	/^const int kLevelQuantizationSlack = 25;$/;"	m	namespace:webrtc::__anon169	file:
kLevels	webrtc/modules/audio_processing/transient/transient_detector.h	/^  static const size_t kLevels = 3;$/;"	m	class:webrtc::TransientDetector
kLibjingle	webrtc/base/logging.cc	/^static const char kLibjingle[] = "libjingle";$/;"	v	file:
kLikelihoodReference	webrtc/modules/audio_processing/voice_detection_unittest.cc	/^const VoiceDetection::Likelihood kLikelihoodReference =$/;"	m	namespace:webrtc::__anon244	file:
kLinear2DbScale	webrtc/modules/audio_processing/agc/utility.cc	/^static const double kLinear2DbScale = 20.0 \/ kLog10;$/;"	v	file:
kLinear2LoudnessScale	webrtc/modules/audio_processing/agc/utility.cc	/^static const double kLinear2LoudnessScale = 13.4 \/ kLog10;$/;"	v	file:
kListenBacklog	webrtc/base/asynctcpsocket.cc	/^static const int kListenBacklog = 5;$/;"	m	namespace:rtc	file:
kLocalThresholdAGG	webrtc/common_audio/vad/vad_core.c	/^static const int16_t kLocalThresholdAGG[3] = { 82, 78, 82 };$/;"	v	file:
kLocalThresholdLBR	webrtc/common_audio/vad/vad_core.c	/^static const int16_t kLocalThresholdLBR[3] = { 37, 32, 37 };$/;"	v	file:
kLocalThresholdQ	webrtc/common_audio/vad/vad_core.c	/^static const int16_t kLocalThresholdQ[3] = { 24, 21, 24 };$/;"	v	file:
kLocalThresholdVAG	webrtc/common_audio/vad/vad_core.c	/^static const int16_t kLocalThresholdVAG[3] = { 94, 94, 94 };$/;"	v	file:
kLog10	webrtc/modules/audio_processing/agc/utility.cc	/^static const double kLog10 = 2.30258509299;$/;"	v	file:
kLog2Exp	webrtc/common_audio/vad/vad_gmm.c	/^static const int16_t kLog2Exp = 5909;  \/\/ log2(exp(1)) in Q12.$/;"	v	file:
kLogConst	webrtc/common_audio/vad/vad_filterbank.c	/^static const int16_t kLogConst = 24660;  \/\/ 160*log10(2) in Q9.$/;"	v	file:
kLogDomainMinBinCenter	webrtc/modules/audio_processing/agc/loudness_histogram.cc	/^static const double kLogDomainMinBinCenter = -2.57752062648587;$/;"	m	namespace:webrtc	file:
kLogDomainStepSizeInverse	webrtc/modules/audio_processing/agc/loudness_histogram.cc	/^static const double kLogDomainStepSizeInverse = 5.81954605750359;$/;"	m	namespace:webrtc	file:
kLogEnergyIntPart	webrtc/common_audio/vad/vad_filterbank.c	/^static const int16_t kLogEnergyIntPart = 14336;  \/\/ 14 in Q10$/;"	v	file:
kLogIndex	webrtc/modules/audio_processing/ns/nsx_core.c	/^static const int16_t kLogIndex[129] = {$/;"	v	file:
kLogPrefix	webrtc/base/filerotatingstream.cc	/^const char* CallSessionFileRotatingStream::kLogPrefix = "webrtc_log";$/;"	m	class:rtc::CallSessionFileRotatingStream	file:
kLogPrefix	webrtc/base/filerotatingstream.h	/^  static const char* kLogPrefix;$/;"	m	class:rtc::CallSessionFileRotatingStream
kLongBuffSize	webrtc/modules/audio_processing/vad/vad_circular_buffer_unittest.cc	/^static const int kLongBuffSize = 100;$/;"	m	namespace:webrtc	file:
kLongTime	webrtc/base/criticalsection_unittest.cc	/^const int kLongTime = 10000;  \/\/ 10 seconds$/;"	m	namespace:rtc::__anon10	file:
kLookahead	webrtc/modules/audio_processing/utility/delay_estimator_unittest.cc	/^enum { kLookahead = 10 };$/;"	e	enum:__anon232::__anon235	file:
kLookaheadBlocks	webrtc/modules/audio_processing/aec/aec_core.h	/^enum { kLookaheadBlocks = 15 };$/;"	e	enum:webrtc::__anon149
kLookbackFrames	webrtc/modules/audio_processing/residual_echo_detector.cc	/^constexpr size_t kLookbackFrames = 650;$/;"	m	namespace:__anon217	file:
kLoudEarpiece	webrtc/modules/audio_processing/include/audio_processing.h	/^    kLoudEarpiece,$/;"	e	enum:webrtc::EchoControlMobile::RoutingMode
kLoudSpeakerphone	webrtc/modules/audio_processing/include/audio_processing.h	/^    kLoudSpeakerphone$/;"	e	enum:webrtc::EchoControlMobile::RoutingMode
kLow	webrtc/modules/audio_processing/include/audio_processing.h	/^    kLow,$/;"	e	enum:webrtc::NoiseSuppression::Level
kLowLikelihood	webrtc/modules/audio_processing/include/audio_processing.h	/^    kLowLikelihood,$/;"	e	enum:webrtc::VoiceDetection::Likelihood
kLowMeanEndHz	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.cc	/^const int kLowMeanEndHz = 400;$/;"	m	namespace:webrtc::__anon188	file:
kLowMeanStartHz	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.cc	/^const int kLowMeanStartHz = 200;$/;"	m	namespace:webrtc::__anon188	file:
kLowPassFilterCoefficients_16kHz	webrtc/modules/audio_processing/level_controller/down_sampler.cc	/^const BiQuadFilter::BiQuadCoefficients kLowPassFilterCoefficients_16kHz = {$/;"	m	namespace:webrtc::__anon206	file:
kLowPassFilterCoefficients_32kHz	webrtc/modules/audio_processing/level_controller/down_sampler.cc	/^const BiQuadFilter::BiQuadCoefficients kLowPassFilterCoefficients_32kHz = {$/;"	m	namespace:webrtc::__anon206	file:
kLowPassFilterCoefficients_48kHz	webrtc/modules/audio_processing/level_controller/down_sampler.cc	/^const BiQuadFilter::BiQuadCoefficients kLowPassFilterCoefficients_48kHz = {$/;"	m	namespace:webrtc::__anon206	file:
kLowPriority	webrtc/base/platform_thread.h	/^  kLowPriority = THREAD_PRIORITY_BELOW_NORMAL,$/;"	e	enum:rtc::ThreadPriority
kLowProbThresholdQ10	webrtc/modules/audio_processing/agc/loudness_histogram.cc	/^static const int kLowProbThresholdQ10 =$/;"	m	namespace:webrtc	file:
kLowProbability	webrtc/modules/audio_processing/vad/voice_activity_detector.cc	/^const double kLowProbability = 0.01;$/;"	m	namespace:webrtc::__anon242	file:
kLowProbabilityThreshold	webrtc/modules/audio_processing/agc/loudness_histogram.cc	/^static const double kLowProbabilityThreshold = 0.2;$/;"	m	namespace:webrtc	file:
kLowProbabilityThreshold	webrtc/modules/audio_processing/vad/pitch_based_vad.cc	/^static const double kLowProbabilityThreshold = 0.2;$/;"	m	namespace:webrtc	file:
kLowSuppression	webrtc/modules/audio_processing/include/audio_processing.h	/^    kLowSuppression,$/;"	e	enum:webrtc::EchoCancellation::SuppressionLevel
kLowerBandBitRate12	webrtc/modules/audio_coding/codecs/isac/main/source/encode.c	/^static const int16_t kLowerBandBitRate12[7] = {$/;"	v	file:
kLowerBandBitRate16	webrtc/modules/audio_coding/codecs/isac/main/source/encode.c	/^static const int16_t kLowerBandBitRate16[6] = {$/;"	v	file:
kLowpassCoeffs	webrtc/modules/audio_processing/three_band_filter_bank.cc	/^const float kLowpassCoeffs[kNumBands * kSparsity][kNumCoeffs] =$/;"	m	namespace:webrtc::__anon224	file:
kLpcAnalWin	webrtc/modules/audio_processing/vad/vad_audio_proc_internal.h	/^static const double kLpcAnalWin[] = {$/;"	m	namespace:webrtc
kLpcCorrWindow	webrtc/modules/audio_coding/codecs/isac/main/source/lpc_analysis.c	/^static const double kLpcCorrWindow[WINLEN] = {$/;"	v	file:
kLpcVecPerSegmentUb12	webrtc/modules/audio_coding/codecs/isac/main/source/entropy_coding.c	/^static const uint16_t kLpcVecPerSegmentUb12 = 5;$/;"	v	file:
kLpcVecPerSegmentUb16	webrtc/modules/audio_coding/codecs/isac/main/source/entropy_coding.c	/^static const uint16_t kLpcVecPerSegmentUb16 = 4;$/;"	v	file:
kMacOSLeopard	webrtc/base/macutils.h	/^  kMacOSLeopard,       \/\/ 10.5$/;"	e	enum:rtc::MacOSVersionName
kMacOSLion	webrtc/base/macutils.h	/^  kMacOSLion,          \/\/ 10.7$/;"	e	enum:rtc::MacOSVersionName
kMacOSMavericks	webrtc/base/macutils.h	/^  kMacOSMavericks,     \/\/ 10.9$/;"	e	enum:rtc::MacOSVersionName
kMacOSMountainLion	webrtc/base/macutils.h	/^  kMacOSMountainLion,  \/\/ 10.8$/;"	e	enum:rtc::MacOSVersionName
kMacOSNewer	webrtc/base/macutils.h	/^  kMacOSNewer,         \/\/ 10.10+$/;"	e	enum:rtc::MacOSVersionName
kMacOSOlder	webrtc/base/macutils.h	/^  kMacOSOlder,         \/\/ 10.2-$/;"	e	enum:rtc::MacOSVersionName
kMacOSPanther	webrtc/base/macutils.h	/^  kMacOSPanther,       \/\/ 10.3$/;"	e	enum:rtc::MacOSVersionName
kMacOSSnowLeopard	webrtc/base/macutils.h	/^  kMacOSSnowLeopard,   \/\/ 10.6$/;"	e	enum:rtc::MacOSVersionName
kMacOSTiger	webrtc/base/macutils.h	/^  kMacOSTiger,         \/\/ 10.4$/;"	e	enum:rtc::MacOSVersionName
kMacOSUnknown	webrtc/base/macutils.h	/^  kMacOSUnknown,       \/\/ ???$/;"	e	enum:rtc::MacOSVersionName
kMagicNtpFractionalUnit	webrtc/system_wrappers/include/clock.h	/^const double kMagicNtpFractionalUnit = 4.294967296E+9;$/;"	m	namespace:webrtc
kMappedV4Addr	webrtc/base/socketaddress_unittest.cc	/^const in6_addr kMappedV4Addr = { { {0x00, 0x00, 0x00, 0x00,$/;"	m	namespace:rtc	file:
kMaskFrequencySmoothAlpha	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.cc	/^const float kMaskFrequencySmoothAlpha = 0.6f;$/;"	m	namespace:webrtc::__anon188	file:
kMaskQuantile	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.cc	/^const float kMaskQuantile = 0.7f;$/;"	m	namespace:webrtc::__anon188	file:
kMaskTargetThreshold	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.cc	/^const float kMaskTargetThreshold = 0.01f;$/;"	m	namespace:webrtc::__anon188	file:
kMaskTimeSmoothAlpha	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.cc	/^const float kMaskTimeSmoothAlpha = 0.2f;$/;"	m	namespace:webrtc::__anon188	file:
kMaxActiveSNR	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer.cc	/^const float kMaxActiveSNR = 128.f;  \/\/ 21dB$/;"	m	namespace:webrtc::__anon202	file:
kMaxAllowedValuesOfSamplesPerFrame	webrtc/modules/audio_processing/audio_processing_impl.cc	/^static const size_t kMaxAllowedValuesOfSamplesPerFrame = 160;$/;"	m	namespace:webrtc::__anon180	file:
kMaxBandFrameLength	webrtc/common_audio/signal_processing/splitting_filter.c	/^    kMaxBandFrameLength = 320  \/\/ 10 ms at 64 kHz.$/;"	e	enum:__anon99	file:
kMaxBitCountsQ9	webrtc/modules/audio_processing/utility/delay_estimator.h	/^static const int32_t kMaxBitCountsQ9 = (32 << 9);  \/\/ 32 matching bits in Q9.$/;"	v
kMaxBufSizeStart	webrtc/modules/audio_processing/aec/echo_cancellation.cc	/^static const int kMaxBufSizeStart = 62;  \/\/ In partitions$/;"	m	namespace:webrtc	file:
kMaxCallDifference	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  static const int kMaxCallDifference = 10;$/;"	m	class:webrtc::__anon181::CaptureProcessor	file:
kMaxCallDifference	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  static const int kMaxCallDifference = 10;$/;"	m	class:webrtc::__anon181::RenderProcessor	file:
kMaxCallDifference	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^  static const int kMaxCallDifference = 10;$/;"	m	class:webrtc::__anon182::TimedThreadApiProcessor	file:
kMaxChannels	webrtc/common_audio/resampler/resampler_unittest.cc	/^const int kMaxChannels = 2;$/;"	m	namespace:webrtc::__anon86	file:
kMaxCompressionGain	webrtc/modules/audio_processing/agc/agc_manager_direct.cc	/^const int kMaxCompressionGain = 12;$/;"	m	namespace:webrtc::__anon169	file:
kMaxConvergenceMs	webrtc/modules/audio_processing/aec/system_delay_unittest.cc	/^static const int kMaxConvergenceMs = 500;$/;"	m	namespace:webrtc::__anon162	file:
kMaxDelay	webrtc/modules/audio_processing/utility/delay_estimator_unittest.cc	/^enum { kMaxDelay = 100 };$/;"	e	enum:__anon232::__anon234	file:
kMaxDelayLogValue	webrtc/modules/audio_processing/aec/aec_core.cc	/^constexpr int kMaxDelayLogValue = 200;$/;"	m	namespace:webrtc::__anon145	file:
kMaxDimension	webrtc/modules/audio_processing/vad/gmm.cc	/^static const int kMaxDimension = 10;$/;"	m	namespace:webrtc	file:
kMaxDotProduct	webrtc/modules/audio_processing/beamformer/array_util.cc	/^const float kMaxDotProduct = 1e-6f;$/;"	m	namespace:webrtc::__anon184	file:
kMaxFFTOrder	webrtc/common_audio/signal_processing/include/real_fft.h	/^enum {kMaxFFTOrder = 10};$/;"	e	enum:__anon89
kMaxFactor	webrtc/modules/audio_processing/intelligibility/intelligibility_utils.cc	/^const float kMaxFactor = 100.f;$/;"	m	namespace:webrtc::intelligibility::__anon204	file:
kMaxFileNameSize	webrtc/system_wrappers/include/file_wrapper.h	/^  static const size_t kMaxFileNameSize = 1024;$/;"	m	class:webrtc::FileWrapper
kMaxFileSize	webrtc/base/filerotatingstream_unittest.cc	/^  static const size_t kMaxFileSize;$/;"	m	class:rtc::MAYBE_FileRotatingStreamTest	file:
kMaxFileSize	webrtc/base/filerotatingstream_unittest.cc	/^const size_t MAYBE_FileRotatingStreamTest::kMaxFileSize = 2;$/;"	m	class:rtc::MAYBE_FileRotatingStreamTest	file:
kMaxFilenameSize	webrtc/modules/audio_processing/include/audio_processing.h	/^  static const size_t kMaxFilenameSize = 1024;$/;"	m	class:webrtc::AudioProcessing
kMaxFilterOrder	webrtc/modules/audio_processing/vad/pole_zero_filter.h	/^  static const int kMaxFilterOrder = 24;$/;"	m	class:webrtc::PoleZeroFilter
kMaxFrameLength	webrtc/common_audio/vad/vad_unittest.h	/^const size_t kMaxFrameLength = 1440;$/;"	m	namespace:__anon111
kMaxFrameLengthMs	webrtc/common_audio/vad/webrtc_vad.c	/^static const int kMaxFrameLengthMs = 30;$/;"	v	file:
kMaxFrameSize	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  static const int kMaxFrameSize = 480;$/;"	m	class:webrtc::__anon181::AudioProcessingImplLockTest	file:
kMaxFrameSize	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^  static const int kMaxFrameSize = 480;$/;"	m	class:webrtc::__anon182::TimedThreadApiProcessor	file:
kMaxHitsWhenPossiblyCausal	webrtc/modules/audio_processing/utility/delay_estimator.cc	/^static const int kMaxHitsWhenPossiblyCausal = 1000;$/;"	v	file:
kMaxHitsWhenPossiblyNonCausal	webrtc/modules/audio_processing/utility/delay_estimator.cc	/^static const int kMaxHitsWhenPossiblyNonCausal = 10;$/;"	v	file:
kMaxIPv6Networks	webrtc/base/network.cc	/^const int kMaxIPv6Networks = 5;$/;"	m	namespace:rtc::__anon34	file:
kMaxKeyNameChars	webrtc/base/win32regkey.h	/^const int kMaxKeyNameChars = 255 + 1;$/;"	m	namespace:rtc
kMaxLcGain	webrtc/modules/audio_processing/level_controller/level_controller_constants.h	/^const float kMaxLcGain = 10;$/;"	m	namespace:webrtc
kMaxLcNoisePower	webrtc/modules/audio_processing/level_controller/level_controller_constants.h	/^const float kMaxLcNoisePower = 100.f * 100.f;$/;"	m	namespace:webrtc
kMaxLength	webrtc/modules/audio_processing/vad/voice_activity_detector.cc	/^const size_t kMaxLength = 320;$/;"	m	namespace:webrtc::__anon242	file:
kMaxLineLength	webrtc/base/proxydetect.cc	/^static const size_t kMaxLineLength = 1024;$/;"	v	file:
kMaxLogLineSize	webrtc/base/logging.cc	/^static const int kMaxLogLineSize = 1024 - 60;$/;"	v	file:
kMaxMicLevel	webrtc/modules/audio_processing/agc/agc_manager_direct.cc	/^const int kMaxMicLevel = 255;$/;"	m	namespace:webrtc::__anon169	file:
kMaxMsgLatency	webrtc/base/messagequeue.cc	/^const int kMaxMsgLatency = 150;  \/\/ 150 ms$/;"	m	namespace:rtc::__anon32	file:
kMaxNalusPerPacket	webrtc/modules/include/module_common_types.h	/^const size_t kMaxNalusPerPacket = 10;$/;"	m	namespace:webrtc
kMaxNativeSampleRateHz	webrtc/modules/audio_processing/include/audio_processing.h	/^  static constexpr int kMaxNativeSampleRateHz =$/;"	m	class:webrtc::AudioProcessing
kMaxNoiseProbability	webrtc/modules/audio_processing/vad/voice_activity_detector_unittest.cc	/^const float kMaxNoiseProbability = 0.1f;$/;"	m	namespace:webrtc::__anon243	file:
kMaxNum10msFrames	webrtc/modules/audio_processing/vad/standalone_vad.h	/^  static const size_t kMaxNum10msFrames = 3;$/;"	m	class:webrtc::StandaloneVad
kMaxNumFrames	webrtc/modules/audio_processing/vad/common.h	/^static const size_t kMaxNumFrames = 4;$/;"	v
kMaxNumFramesToBuffer	webrtc/modules/audio_processing/audio_processing_impl.cc	/^static const size_t kMaxNumFramesToBuffer = 100;$/;"	m	namespace:webrtc::__anon180	file:
kMaxNumNoiseEstimatesToBuffer	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer.h	/^  static const size_t kMaxNumNoiseEstimatesToBuffer = 5;$/;"	m	class:webrtc::IntelligibilityEnhancer
kMaxOneBytePictureId	webrtc/modules/include/module_common_types.h	/^const int16_t kMaxOneBytePictureId = 0x7F;    \/\/ 7 bits$/;"	m	namespace:webrtc
kMaxOutputLength	webrtc/modules/audio_processing/transient/moving_moments_unittest.cc	/^  static const size_t kMaxOutputLength = 20;  \/\/ Valid for this tests only.$/;"	m	class:webrtc::MovingMomentsTest	file:
kMaxOutputLength	webrtc/modules/audio_processing/transient/moving_moments_unittest.cc	/^const size_t MovingMomentsTest::kMaxOutputLength;$/;"	m	class:webrtc::MovingMomentsTest	file:
kMaxPacketSize	webrtc/base/asynctcpsocket.cc	/^static const size_t kMaxPacketSize = 64 * 1024;$/;"	m	namespace:rtc	file:
kMaxRate	webrtc/common_audio/resampler/resampler_unittest.cc	/^const int kMaxRate = 96000;$/;"	m	namespace:webrtc::__anon86	file:
kMaxRateBps	webrtc/base/rate_limiter_unittest.cc	/^  static constexpr uint32_t kMaxRateBps = 100000;$/;"	m	class:webrtc::RateLimitTest	file:
kMaxReadSize	webrtc/base/ifaddrs-android.cc	/^const int kMaxReadSize = 4096;$/;"	m	namespace:__anon21	file:
kMaxRedirects	webrtc/base/httpclient.cc	/^const size_t kMaxRedirects = 5;$/;"	m	namespace:rtc	file:
kMaxRelativeGainChange	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer.cc	/^const float kMaxRelativeGainChange = 0.005f;$/;"	m	namespace:webrtc::__anon202	file:
kMaxResidualGainChange	webrtc/modules/audio_processing/agc/agc_manager_direct.cc	/^const int kMaxResidualGainChange = 15;$/;"	m	namespace:webrtc::__anon169	file:
kMaxSampleMapSize	webrtc/system_wrappers/source/metrics_default.cc	/^const int kMaxSampleMapSize = 300;$/;"	m	namespace:webrtc::metrics::__anon251	file:
kMaxSampleValue	webrtc/modules/audio_processing/level_controller/gain_applier.cc	/^const float kMaxSampleValue = 32767.f;$/;"	m	namespace:webrtc::__anon207	file:
kMaxSeedUsed	webrtc/common_audio/signal_processing/randomization_functions.c	/^static const uint32_t kMaxSeedUsed = 0x80000000;$/;"	v	file:
kMaxSimulcastStreams	webrtc/common_types.h	/^enum { kMaxSimulcastStreams = 4 };$/;"	e	enum:webrtc::__anon119
kMaxSize	webrtc/base/messagedigest.h	/^  enum { kMaxSize = 64 };  \/\/ Maximum known size (SHA-512)$/;"	e	enum:rtc::MessageDigest::__anon31
kMaxSpatialLayers	webrtc/common_types.h	/^enum { kMaxSpatialLayers = 5 };$/;"	e	enum:webrtc::__anon120
kMaxSpeechFrames	webrtc/common_audio/vad/vad_core.c	/^static const int16_t kMaxSpeechFrames = 6;$/;"	v	file:
kMaxSquaredLevel	webrtc/modules/audio_processing/rms_level.cc	/^static const float kMaxSquaredLevel = 32768 * 32768;$/;"	m	namespace:webrtc	file:
kMaxTemporalStreams	webrtc/common_types.h	/^enum { kMaxTemporalStreams = 4 };$/;"	e	enum:webrtc::__anon121
kMaxTestError	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer_unittest.cc	/^const float kMaxTestError = 0.005f;$/;"	m	namespace:webrtc::__anon203	file:
kMaxTimeoutMs	webrtc/base/rate_limiter_unittest.cc	/^static const int64_t kMaxTimeoutMs = 30000;$/;"	m	namespace:webrtc	file:
kMaxTrustedDelayMs	webrtc/modules/audio_processing/aec/echo_cancellation.cc	/^static const int kMaxTrustedDelayMs = 500;$/;"	m	namespace:webrtc	file:
kMaxTwoBytePictureId	webrtc/modules/include/module_common_types.h	/^const int16_t kMaxTwoBytePictureId = 0x7FFF;  \/\/ 15 bits$/;"	m	namespace:webrtc
kMaxValueNameChars	webrtc/base/win32regkey.h	/^const int kMaxValueNameChars = 16383 + 1;$/;"	m	namespace:rtc
kMaxVoiceBin	webrtc/modules/audio_processing/transient/transient_suppressor.cc	/^static const size_t kMaxVoiceBin = 60;$/;"	m	namespace:webrtc	file:
kMaxVp9FramesInGof	webrtc/modules/include/module_common_types.h	/^const size_t kMaxVp9FramesInGof = 0xFF;  \/\/ 8 bits$/;"	m	namespace:webrtc
kMaxVp9NumberOfSpatialLayers	webrtc/modules/include/module_common_types.h	/^const size_t kMaxVp9NumberOfSpatialLayers = 8;$/;"	m	namespace:webrtc
kMaxVp9RefPics	webrtc/modules/include/module_common_types.h	/^const size_t kMaxVp9RefPics = 3;$/;"	m	namespace:webrtc
kMaximumNoise	webrtc/common_audio/vad/vad_core.c	/^static const int16_t kMaximumNoise[kNumChannels] = {$/;"	v	file:
kMaximumSpeech	webrtc/common_audio/vad/vad_core.c	/^static const int16_t kMaximumSpeech[kNumChannels] = {$/;"	v	file:
kMeanIIRCoefficient	webrtc/modules/audio_processing/transient/transient_suppressor.cc	/^static const float kMeanIIRCoefficient = 0.5f;$/;"	m	namespace:webrtc	file:
kMeanSpeechProbability	webrtc/modules/audio_processing/vad/voice_activity_detector_unittest.cc	/^const float kMeanSpeechProbability = 0.3f;$/;"	m	namespace:webrtc::__anon243	file:
kMetricsFrameInterval	webrtc/modules/audio_processing/level_controller/level_controller.cc	/^const int kMetricsFrameInterval = 1000;$/;"	m	namespace:webrtc::__anon208	file:
kMinAwayRadians	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.cc	/^const float kMinAwayRadians = 0.2f;$/;"	m	namespace:webrtc::__anon188	file:
kMinCompressionGain	webrtc/modules/audio_processing/agc/agc_manager_direct.cc	/^const int kMinCompressionGain = 2;$/;"	m	namespace:webrtc::__anon169	file:
kMinDelayLogValue	webrtc/modules/audio_processing/aec/aec_core.cc	/^constexpr int kMinDelayLogValue = -200;$/;"	m	namespace:webrtc::__anon145	file:
kMinEnergy	webrtc/common_audio/vad/vad_core.h	/^enum { kMinEnergy = 10 };  \/\/ Minimum energy required to trigger audio signal.$/;"	e	enum:__anon105
kMinFactor	webrtc/modules/audio_processing/intelligibility/intelligibility_utils.cc	/^const float kMinFactor = 0.01f;$/;"	m	namespace:webrtc::intelligibility::__anon204	file:
kMinFractionWhenPossiblyCausal	webrtc/modules/audio_processing/utility/delay_estimator.cc	/^static const float kMinFractionWhenPossiblyCausal = 0.5f;$/;"	v	file:
kMinFractionWhenPossiblyNonCausal	webrtc/modules/audio_processing/utility/delay_estimator.cc	/^static const float kMinFractionWhenPossiblyNonCausal = 0.25f;$/;"	v	file:
kMinFrequency	webrtc/common_audio/resampler/sinusoidal_linear_chirp_source.h	/^    kMinFrequency = 5$/;"	e	enum:webrtc::SinusoidalLinearChirpSource::__anon88
kMinHistogramThreshold	webrtc/modules/audio_processing/utility/delay_estimator.cc	/^static const float kMinHistogramThreshold = 1.5f;$/;"	v	file:
kMinInactiveSNR	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer.cc	/^const float kMinInactiveSNR = 32.f;  \/\/ 15dB$/;"	m	namespace:webrtc::__anon202	file:
kMinLevel	webrtc/modules/audio_processing/level_controller/peak_level_estimator.cc	/^constexpr float kMinLevel = 30.f;$/;"	m	namespace:webrtc::__anon212	file:
kMinLevel	webrtc/modules/audio_processing/rms_level.h	/^  static const int kMinLevel = 127;$/;"	m	class:webrtc::RMSLevel
kMinMicLevel	webrtc/modules/audio_processing/agc/agc_manager_direct.cc	/^const int kMinMicLevel = 12;$/;"	m	namespace:webrtc::__anon169	file:
kMinNoisePower	webrtc/modules/audio_processing/level_controller/noise_spectrum_estimator.cc	/^float kMinNoisePower = 100.f;$/;"	m	namespace:webrtc::__anon211	file:
kMinNumFramesToProcess	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^  static const int kMinNumFramesToProcess = 150;$/;"	m	class:webrtc::__anon182::CallSimulator	file:
kMinRequiredHits	webrtc/modules/audio_processing/utility/delay_estimator.cc	/^static const int kMinRequiredHits = 10;$/;"	v	file:
kMinRunTimeInSeconds	webrtc/system_wrappers/include/metrics.h	/^enum { kMinRunTimeInSeconds = 10 };$/;"	e	enum:webrtc::metrics::__anon248
kMinSampleValue	webrtc/modules/audio_processing/level_controller/gain_applier.cc	/^const float kMinSampleValue = -32767.f;$/;"	m	namespace:webrtc::__anon207	file:
kMinStd	webrtc/common_audio/vad/vad_core.c	/^static const int16_t kMinStd = 384;$/;"	v	file:
kMinTrustedDelayMs	webrtc/modules/audio_processing/aec/echo_cancellation.cc	/^static const int kMinTrustedDelayMs = 20;$/;"	m	namespace:webrtc	file:
kMinVoiceBin	webrtc/modules/audio_processing/transient/transient_suppressor.cc	/^static const size_t kMinVoiceBin = 3;$/;"	m	namespace:webrtc	file:
kMinimumDifference	webrtc/common_audio/vad/vad_core.c	/^static const int16_t kMinimumDifference[kNumChannels] = {$/;"	v	file:
kMinimumMean	webrtc/common_audio/vad/vad_core.c	/^static const int16_t kMinimumMean[kNumGaussians] = { 640, 768 };$/;"	v	file:
kMinimumRecvSize	webrtc/base/asynctcpsocket.cc	/^static const size_t kMinimumRecvSize = 128;$/;"	m	namespace:rtc	file:
kModerate	webrtc/modules/audio_processing/include/audio_processing.h	/^    kModerate,$/;"	e	enum:webrtc::NoiseSuppression::Level
kModerateLikelihood	webrtc/modules/audio_processing/include/audio_processing.h	/^    kModerateLikelihood,$/;"	e	enum:webrtc::VoiceDetection::Likelihood
kModerateSuppression	webrtc/modules/audio_processing/include/audio_processing.h	/^    kModerateSuppression,$/;"	e	enum:webrtc::EchoCancellation::SuppressionLevel
kModes	webrtc/common_audio/vad/vad_unittest.h	/^const int kModes[] = { 0, 1, 2, 3 };$/;"	m	namespace:__anon111
kModesSize	webrtc/common_audio/vad/vad_unittest.h	/^const size_t kModesSize = sizeof(kModes) \/ sizeof(*kModes);$/;"	m	namespace:__anon111
kMono	webrtc/common_audio/channel_buffer_unittest.cc	/^const size_t kMono = 1u;$/;"	m	namespace:webrtc::__anon79	file:
kMono	webrtc/modules/audio_processing/audio_buffer_unittest.cc	/^const size_t kMono = 1u;$/;"	m	namespace:webrtc::__anon179	file:
kMono	webrtc/modules/audio_processing/include/audio_processing.h	/^    kMono,$/;"	e	enum:webrtc::AudioProcessing::ChannelLayout
kMonoAndKeyboard	webrtc/modules/audio_processing/include/audio_processing.h	/^    kMonoAndKeyboard,$/;"	e	enum:webrtc::AudioProcessing::ChannelLayout
kMovingMomentsBufferLength	webrtc/modules/audio_processing/transient/moving_moments_unittest.cc	/^  static const size_t kMovingMomentsBufferLength = 5;$/;"	m	class:webrtc::MovingMomentsTest	file:
kMsecSpeechInner	webrtc/modules/audio_processing/agc/legacy/analog_agc.h	/^static const int16_t kMsecSpeechInner = 520;$/;"	v
kMsecSpeechOuter	webrtc/modules/audio_processing/agc/legacy/analog_agc.h	/^static const int16_t kMsecSpeechOuter = 340;$/;"	v
kMsecTo100ns	webrtc/base/taskrunner.h	/^const int64_t kMsecTo100ns = 10000;$/;"	m	namespace:rtc
kMsgRead	webrtc/base/sharedexclusivelock_unittest.cc	/^static const uint32_t kMsgRead = 0;$/;"	m	namespace:rtc	file:
kMsgWrite	webrtc/base/sharedexclusivelock_unittest.cc	/^static const uint32_t kMsgWrite = 0;$/;"	m	namespace:rtc	file:
kMultiSZ	webrtc/base/win32regkey_unittest.cc	/^const wchar_t kMultiSZ[] = L"abc\\0def\\0P12345\\0";$/;"	m	namespace:rtc	file:
kMuteGuardTimeMs	webrtc/modules/audio_processing/agc/legacy/analog_agc.c	/^static const int16_t kMuteGuardTimeMs = 8000;$/;"	v	file:
kMyExperimentForTest	webrtc/modules/audio_processing/include/config.h	/^  kMyExperimentForTest,$/;"	m	class:webrtc::ConfigOptionID
kNATEncodedIPv4AddressSize	webrtc/base/natsocketfactory.h	/^const size_t kNATEncodedIPv4AddressSize = 8U;$/;"	m	namespace:rtc
kNATEncodedIPv6AddressSize	webrtc/base/natsocketfactory.h	/^const size_t kNATEncodedIPv6AddressSize = 20U;$/;"	m	namespace:rtc
kNativeSampleRatesHz	webrtc/modules/audio_processing/audio_processing_impl.cc	/^constexpr int AudioProcessing::kNativeSampleRatesHz[];$/;"	m	class:webrtc::AudioProcessing	file:
kNativeSampleRatesHz	webrtc/modules/audio_processing/include/audio_processing.h	/^  static constexpr int kNativeSampleRatesHz[4] = {$/;"	m	class:webrtc::AudioProcessing
kNegInt	webrtc/base/optionsfile_unittest.cc	/^static int kNegInt = -634;$/;"	m	namespace:rtc	file:
kNetEqCapacityConfig	webrtc/modules/audio_processing/include/config.h	/^  kNetEqCapacityConfig,  \/\/ Deprecated$/;"	m	class:webrtc::ConfigOptionID
kNetEqFastAccelerate	webrtc/modules/audio_processing/include/config.h	/^  kNetEqFastAccelerate,  \/\/ Deprecated$/;"	m	class:webrtc::ConfigOptionID
kNetworkCostHigh	webrtc/base/network.h	/^static const uint16_t kNetworkCostHigh = 900;$/;"	m	namespace:rtc
kNetworkCostLow	webrtc/base/network.h	/^static const uint16_t kNetworkCostLow = 10;$/;"	m	namespace:rtc
kNetworkCostMax	webrtc/base/network.h	/^static const uint16_t kNetworkCostMax = 999;$/;"	m	namespace:rtc
kNetworkCostMin	webrtc/base/network.h	/^static const uint16_t kNetworkCostMin = 0;$/;"	m	namespace:rtc
kNetworkCostUnknown	webrtc/base/network.h	/^static const uint16_t kNetworkCostUnknown = 50;$/;"	m	namespace:rtc
kNetworkDown	webrtc/common_types.h	/^  kNetworkDown,$/;"	e	enum:webrtc::NetworkState
kNetworkUp	webrtc/common_types.h	/^  kNetworkUp,$/;"	e	enum:webrtc::NetworkState
kNetworksUpdateIntervalMs	webrtc/base/network.cc	/^const int kNetworksUpdateIntervalMs = 2000;$/;"	m	namespace:rtc::__anon34	file:
kNeutralProbability	webrtc/modules/audio_processing/vad/voice_activity_detector.cc	/^const double kNeutralProbability = 0.5;$/;"	m	namespace:webrtc::__anon242	file:
kNoErr	webrtc/modules/audio_processing/test/test_utils.h	/^static const AudioProcessing::Error kNoErr = AudioProcessing::kNoError;$/;"	m	namespace:webrtc
kNoError	WebRTCAudioProcessing_jni.h	/^	kNoError = 0,$/;"	e	enum:Error
kNoError	webrtc/modules/audio_processing/include/audio_processing.h	/^    kNoError = 0,$/;"	e	enum:webrtc::AudioProcessing::Error
kNoError	webrtc/modules/audio_processing/vad/pitch_based_vad.h	/^  static const int kNoError = 0;$/;"	m	class:webrtc::PitchBasedVad
kNoEventId	webrtc/base/trace_event.h	/^const unsigned long long kNoEventId = 0;$/;"	m	namespace:webrtc::trace_event_internal
kNoGofIdx	webrtc/modules/include/module_common_types.h	/^const uint8_t kNoGofIdx = 0xFF;$/;"	m	namespace:webrtc
kNoKeyIdx	webrtc/modules/include/module_common_types.h	/^const int kNoKeyIdx = -1;$/;"	m	namespace:webrtc
kNoPacketTimeoutMs	webrtc/base/testclient.h	/^  static const int kNoPacketTimeoutMs = 1000;$/;"	m	class:rtc::TestClient
kNoPictureId	webrtc/modules/include/module_common_types.h	/^const int16_t kNoPictureId = -1;$/;"	m	namespace:webrtc
kNoSpatialIdx	webrtc/modules/include/module_common_types.h	/^const uint8_t kNoSpatialIdx = 0xFF;$/;"	m	namespace:webrtc
kNoTemporalIdx	webrtc/modules/include/module_common_types.h	/^const uint8_t kNoTemporalIdx = 0xFF;$/;"	m	namespace:webrtc
kNoTl0PicIdx	webrtc/modules/include/module_common_types.h	/^const int16_t kNoTl0PicIdx = -1;$/;"	m	namespace:webrtc
kNoWaitThresholdInMs	webrtc/base/sharedexclusivelock_unittest.cc	/^static const int kNoWaitThresholdInMs = 10;$/;"	m	namespace:rtc	file:
kNoiseDataMeans	webrtc/common_audio/vad/vad_core.c	/^static const int16_t kNoiseDataMeans[kTableSize] = {$/;"	v	file:
kNoiseDataStds	webrtc/common_audio/vad/vad_core.c	/^static const int16_t kNoiseDataStds[kTableSize] = {$/;"	v	file:
kNoiseDataWeights	webrtc/common_audio/vad/vad_core.c	/^static const int16_t kNoiseDataWeights[kTableSize] = {$/;"	v	file:
kNoiseEstIncCount	webrtc/modules/audio_processing/aecm/aecm_core_c.cc	/^static const int16_t kNoiseEstIncCount = 5;$/;"	v	file:
kNoiseEstIncCount	webrtc/modules/audio_processing/aecm/aecm_core_mips.cc	/^static const int16_t kNoiseEstIncCount = 5;$/;"	v	file:
kNoiseEstQDomain	webrtc/modules/audio_processing/aecm/aecm_core_c.cc	/^static const int16_t kNoiseEstQDomain = 15;$/;"	v	file:
kNoiseEstQDomain	webrtc/modules/audio_processing/aecm/aecm_core_mips.cc	/^static const int16_t kNoiseEstQDomain = 15;$/;"	v	file:
kNoiseGmmCovarInverse	webrtc/modules/audio_processing/vad/noise_gmm_tables.h	/^    kNoiseGmmCovarInverse[kNoiseGmmNumMixtures][kNoiseGmmDim][kNoiseGmmDim] = {$/;"	v
kNoiseGmmDim	webrtc/modules/audio_processing/vad/noise_gmm_tables.h	/^static const int kNoiseGmmDim = 3;$/;"	v
kNoiseGmmMean	webrtc/modules/audio_processing/vad/noise_gmm_tables.h	/^static const double kNoiseGmmMean[kNoiseGmmNumMixtures][kNoiseGmmDim] = {$/;"	v
kNoiseGmmNumMixtures	webrtc/modules/audio_processing/vad/noise_gmm_tables.h	/^static const int kNoiseGmmNumMixtures = 12;$/;"	v
kNoiseGmmWeights	webrtc/modules/audio_processing/vad/noise_gmm_tables.h	/^static const double kNoiseGmmWeights[kNoiseGmmNumMixtures] = {$/;"	v
kNoiseUpdateConst	webrtc/common_audio/vad/vad_core.c	/^static const int16_t kNoiseUpdateConst = 655; \/\/ Q15$/;"	v	file:
kNonStationary	webrtc/modules/audio_processing/level_controller/signal_classifier.h	/^  enum class SignalType { kHighlyNonStationary, kNonStationary, kStationary };$/;"	m	class:webrtc::SignalClassifier::SignalType
kNormalMinOverDrive	webrtc/modules/audio_processing/aec/aec_core.cc	/^static const float kNormalMinOverDrive[3] = {1.0f, 2.0f, 5.0f};$/;"	m	namespace:webrtc	file:
kNormalNumPartitions	webrtc/modules/audio_processing/aec/aec_core.h	/^static const int kNormalNumPartitions = 12;$/;"	m	namespace:webrtc
kNormalPriority	webrtc/base/platform_thread.h	/^  kNormalPriority = THREAD_PRIORITY_NORMAL,$/;"	e	enum:rtc::ThreadPriority
kNormalSpeech	webrtc/modules/include/module_common_types.h	/^    kNormalSpeech = 0,$/;"	e	enum:webrtc::AudioFrame::SpeechType
kNormalVadThreshold	webrtc/modules/audio_processing/agc/legacy/analog_agc.h	/^static const int16_t kNormalVadThreshold = 400;$/;"	v
kNotEnabledError	WebRTCAudioProcessing_jni.h	/^	kNotEnabledError = -12,$/;"	e	enum:Error
kNotEnabledError	webrtc/modules/audio_processing/include/audio_processing.h	/^    kNotEnabledError = -12,$/;"	e	enum:webrtc::AudioProcessing::Error
kNotSpecified	webrtc/modules/audio_processing/test/aec_dump_based_simulator.h	/^    kNotSpecified,$/;"	e	enum:webrtc::test::final::InterfaceType
kNsConference	webrtc/common_types.h	/^  kNsConference,      \/\/ conferencing default$/;"	e	enum:webrtc::NsModes
kNsDefault	webrtc/common_types.h	/^  kNsDefault,         \/\/ platform default$/;"	e	enum:webrtc::NsModes
kNsHighSuppression	webrtc/common_types.h	/^  kNsHighSuppression,$/;"	e	enum:webrtc::NsModes
kNsLowSuppression	webrtc/common_types.h	/^  kNsLowSuppression,  \/\/ lowest suppression$/;"	e	enum:webrtc::NsModes
kNsModerateSuppression	webrtc/common_types.h	/^  kNsModerateSuppression,$/;"	e	enum:webrtc::NsModes
kNsUnchanged	webrtc/common_types.h	/^  kNsUnchanged = 0,   \/\/ previously set mode$/;"	e	enum:webrtc::NsModes
kNsVeryHighSuppression	webrtc/common_types.h	/^  kNsVeryHighSuppression,  \/\/ highest suppression$/;"	e	enum:webrtc::NsModes
kNtpJan1970	webrtc/system_wrappers/include/clock.h	/^const uint32_t kNtpJan1970 = 2208988800UL;$/;"	m	namespace:webrtc
kNullPointerError	WebRTCAudioProcessing_jni.h	/^	kNullPointerError = -5,$/;"	e	enum:Error
kNullPointerError	webrtc/modules/audio_processing/include/audio_processing.h	/^    kNullPointerError = -5,$/;"	e	enum:webrtc::AudioProcessing::Error
kNumAnalysisFrames	webrtc/modules/audio_processing/agc/agc.cc	/^const int kNumAnalysisFrames = 100;$/;"	m	namespace:webrtc::__anon168	file:
kNumBands	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer_unittest.cc	/^const size_t kNumBands = 1;$/;"	m	namespace:webrtc::__anon203	file:
kNumBands	webrtc/modules/audio_processing/three_band_filter_bank.cc	/^const size_t kNumBands = 3;$/;"	m	namespace:webrtc::__anon224	file:
kNumChannels	webrtc/common_audio/resampler/resampler_unittest.cc	/^const int kNumChannels[] = {1, 2};$/;"	m	namespace:webrtc::__anon86	file:
kNumChannels	webrtc/common_audio/vad/vad_core.h	/^enum { kNumChannels = 6 };  \/\/ Number of frequency bands (named channels).$/;"	e	enum:__anon102
kNumChannels	webrtc/modules/audio_processing/agc/agc_manager_direct_unittest.cc	/^const int kNumChannels = 1;$/;"	m	namespace:webrtc::__anon170	file:
kNumChannels	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer_unittest.cc	/^const int kNumChannels = 1;$/;"	m	namespace:webrtc::__anon203	file:
kNumChannels	webrtc/modules/audio_processing/vad/voice_activity_detector.cc	/^const size_t kNumChannels = 1;$/;"	m	namespace:webrtc::__anon242	file:
kNumChannelsSize	webrtc/common_audio/resampler/resampler_unittest.cc	/^const size_t kNumChannelsSize = sizeof(kNumChannels) \/ sizeof(*kNumChannels);$/;"	m	namespace:webrtc::__anon86	file:
kNumChunks	webrtc/modules/audio_processing/vad/voice_activity_detector_unittest.cc	/^const size_t kNumChunks = 300u;$/;"	m	namespace:webrtc::__anon243	file:
kNumChunksPerIsacBlock	webrtc/modules/audio_processing/vad/voice_activity_detector_unittest.cc	/^const size_t kNumChunksPerIsacBlock = 3;$/;"	m	namespace:webrtc::__anon243	file:
kNumCoeffs	webrtc/modules/audio_processing/three_band_filter_bank.cc	/^const size_t kNumCoeffs = 4;$/;"	m	namespace:webrtc::__anon224	file:
kNumDelayLogBuckets	webrtc/modules/audio_processing/aec/aec_core.cc	/^constexpr int kNumDelayLogBuckets = 100;$/;"	m	namespace:webrtc::__anon145	file:
kNumFrames	webrtc/common_audio/channel_buffer_unittest.cc	/^const size_t kNumFrames = 480u;$/;"	m	namespace:webrtc::__anon79	file:
kNumFrames	webrtc/modules/audio_processing/audio_buffer_unittest.cc	/^const size_t kNumFrames = 480u;$/;"	m	namespace:webrtc::__anon179	file:
kNumFramesToProcess	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer_unittest.cc	/^const size_t kNumFramesToProcess = 1000;$/;"	m	namespace:webrtc::__anon190	file:
kNumFramesToProcess	webrtc/modules/audio_processing/echo_cancellation_bit_exact_unittest.cc	/^const int kNumFramesToProcess = 100;$/;"	m	namespace:webrtc::__anon192	file:
kNumFramesToProcess	webrtc/modules/audio_processing/echo_control_mobile_unittest.cc	/^const int kNumFramesToProcess = 200;$/;"	m	namespace:webrtc::__anon195	file:
kNumFramesToProcess	webrtc/modules/audio_processing/gain_control_unittest.cc	/^const int kNumFramesToProcess = 100;$/;"	m	namespace:webrtc::__anon199	file:
kNumFramesToProcess	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer_unittest.cc	/^const size_t kNumFramesToProcess = 1000;$/;"	m	namespace:webrtc::__anon203	file:
kNumFramesToProcess	webrtc/modules/audio_processing/level_controller/level_controller_complexity_unittest.cc	/^const size_t kNumFramesToProcess = 100;$/;"	m	namespace:webrtc::__anon209	file:
kNumFramesToProcess	webrtc/modules/audio_processing/level_controller/level_controller_unittest.cc	/^const int kNumFramesToProcess = 1000;$/;"	m	namespace:webrtc::__anon210	file:
kNumFramesToProcess	webrtc/modules/audio_processing/level_estimator_unittest.cc	/^const int kNumFramesToProcess = 1000;$/;"	m	namespace:webrtc::__anon214	file:
kNumFramesToProcess	webrtc/modules/audio_processing/noise_suppression_unittest.cc	/^const int kNumFramesToProcess = 1000;$/;"	m	namespace:webrtc::__anon216	file:
kNumFramesToProcess	webrtc/modules/audio_processing/voice_detection_unittest.cc	/^const int kNumFramesToProcess = 1000;$/;"	m	namespace:webrtc::__anon244	file:
kNumFreqBins	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.cc	/^const size_t NonlinearBeamformer::kNumFreqBins;$/;"	m	class:webrtc::NonlinearBeamformer	file:
kNumFreqBins	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.h	/^  static const size_t kNumFreqBins = kFftSize \/ 2 + 1;$/;"	m	class:webrtc::NonlinearBeamformer
kNumGaussians	webrtc/common_audio/vad/vad_core.h	/^enum { kNumGaussians = 2 };  \/\/ Number of Gaussians per channel in the GMM.$/;"	e	enum:__anon103
kNumInitializationFrames	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^  static const int kNumInitializationFrames = 5;$/;"	m	class:webrtc::__anon182::TimedThreadApiProcessor	file:
kNumMicrosecsPerMillisec	webrtc/base/timeutils.h	/^static const int64_t kNumMicrosecsPerMillisec =$/;"	m	namespace:rtc
kNumMicrosecsPerSec	webrtc/base/timeutils.h	/^static const int64_t kNumMicrosecsPerSec = INT64_C(1000000);$/;"	m	namespace:rtc
kNumMillisecsPerSec	webrtc/base/timeutils.h	/^static const int64_t kNumMillisecsPerSec = INT64_C(1000);$/;"	m	namespace:rtc
kNumNanosecsPerMicrosec	webrtc/base/timeutils.h	/^static const int64_t kNumNanosecsPerMicrosec =$/;"	m	namespace:rtc
kNumNanosecsPerMillisec	webrtc/base/timeutils.h	/^static const int64_t kNumNanosecsPerMillisec =$/;"	m	namespace:rtc
kNumNanosecsPerSec	webrtc/base/timeutils.h	/^static const int64_t kNumNanosecsPerSec = INT64_C(1000000000);$/;"	m	namespace:rtc
kNumNativeSampleRates	webrtc/modules/audio_processing/include/audio_processing.h	/^  static constexpr size_t kNumNativeSampleRates =$/;"	m	class:webrtc::AudioProcessing
kNumNoiseBins	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer_unittest.cc	/^const size_t kNumNoiseBins = 129;$/;"	m	namespace:webrtc::__anon203	file:
kNumPosixSignals	webrtc/base/physicalsocketserver.cc	/^  static const int kNumPosixSignals = 128;$/;"	m	class:rtc::PosixSignalHandler	file:
kNumSampleRates	webrtc/modules/audio_processing/aec/system_delay_unittest.cc	/^static const size_t kNumSampleRates =$/;"	m	namespace:webrtc::__anon162	file:
kNumStreamNames	webrtc/modules/audio_processing/include/audio_processing.h	/^    kNumStreamNames,$/;"	e	enum:webrtc::ProcessingConfig::StreamName
kNumSubframes	webrtc/modules/audio_processing/agc/legacy/analog_agc.c	/^static const size_t kNumSubframes = 10;$/;"	v	file:
kNumThreads	webrtc/base/criticalsection_unittest.cc	/^const int kNumThreads = 16;$/;"	m	namespace:rtc::__anon10	file:
kNumValidFrameLengths	webrtc/common_audio/vad/vad_filterbank_unittest.cc	/^const int kNumValidFrameLengths = 3;$/;"	m	namespace:__anon107	file:
kNumVp9Buffers	webrtc/modules/include/module_common_types.h	/^const uint8_t kNumVp9Buffers = 8;$/;"	m	namespace:webrtc
kNumberOfSampleRates	webrtc/modules/audio_processing/transient/transient_detector_unittest.cc	/^static const size_t kNumberOfSampleRates =$/;"	m	namespace:webrtc	file:
kOddBufferLength	webrtc/modules/audio_processing/transient/dyadic_decimator_unittest.cc	/^static const size_t kOddBufferLength = 5;$/;"	m	namespace:webrtc	file:
kOff	webrtc/common_types.h	/^enum class RtcpMode { kOff, kCompound, kReducedSize };$/;"	m	class:webrtc::RtcpMode
kOffset1	webrtc/modules/audio_processing/agc/legacy/analog_agc.c	/^static const int16_t kOffset1[8] = {25395, 23911, 22206, 20737,$/;"	v	file:
kOffset2	webrtc/modules/audio_processing/agc/legacy/analog_agc.c	/^static const int16_t kOffset2[8] = {18432, 18379, 18290, 18177,$/;"	v	file:
kOffsetLevel	webrtc/modules/audio_processing/aec/aec_core.h	/^enum { kOffsetLevel = -100 };$/;"	e	enum:webrtc::__anon147
kOffsetVector	webrtc/common_audio/vad/vad_filterbank.c	/^static const int16_t kOffsetVector[6] = { 368, 368, 272, 176, 176, 176 };$/;"	v	file:
kOneBitEqualProbCdf	webrtc/modules/audio_coding/codecs/isac/main/source/entropy_coding.c	/^static const uint16_t kOneBitEqualProbCdf[3] = {$/;"	v	file:
kOneBitEqualProbCdf_ptr	webrtc/modules/audio_coding/codecs/isac/main/source/entropy_coding.c	/^static const uint16_t* kOneBitEqualProbCdf_ptr[1] = {$/;"	v	file:
kOneBitEqualProbInitIndex	webrtc/modules/audio_coding/codecs/isac/main/source/entropy_coding.c	/^static const uint16_t kOneBitEqualProbInitIndex[1] = { 1 };$/;"	v	file:
kOperationsToRun	webrtc/base/criticalsection_unittest.cc	/^const int kOperationsToRun = 1000;$/;"	m	namespace:rtc::__anon10	file:
kOptionWithEquals	webrtc/base/optionsfile_unittest.cc	/^static const std::string kOptionWithEquals = "foo=bar";$/;"	m	namespace:rtc	file:
kOptionWithNewline	webrtc/base/optionsfile_unittest.cc	/^static const std::string kOptionWithNewline = "foo\\nbar";$/;"	m	namespace:rtc	file:
kOptionWithUtf8	webrtc/base/optionsfile_unittest.cc	/^static const char kOptionWithUtf8[] = {'O', 'p', 't', '\\302', '\\256', 'i', 'o',$/;"	m	namespace:rtc	file:
kOrder	webrtc/common_audio/signal_processing/real_fft_unittest.cc	/^const int kOrder = 5;$/;"	m	namespace:webrtc::__anon98	file:
kOutBufferLength	webrtc/modules/audio_processing/transient/dyadic_decimator_unittest.cc	/^static const size_t kOutBufferLength = 3;$/;"	m	namespace:webrtc	file:
kOutputStream	webrtc/modules/audio_processing/include/audio_processing.h	/^    kOutputStream,$/;"	e	enum:webrtc::ProcessingConfig::StreamName
kOverHangMax1AGG	webrtc/common_audio/vad/vad_core.c	/^static const int16_t kOverHangMax1AGG[3] = { 6, 3, 2 };$/;"	v	file:
kOverHangMax1LBR	webrtc/common_audio/vad/vad_core.c	/^static const int16_t kOverHangMax1LBR[3] = { 8, 4, 3 };$/;"	v	file:
kOverHangMax1Q	webrtc/common_audio/vad/vad_core.c	/^static const int16_t kOverHangMax1Q[3] = { 8, 4, 3 };$/;"	v	file:
kOverHangMax1VAG	webrtc/common_audio/vad/vad_core.c	/^static const int16_t kOverHangMax1VAG[3] = { 6, 3, 2 };$/;"	v	file:
kOverHangMax2AGG	webrtc/common_audio/vad/vad_core.c	/^static const int16_t kOverHangMax2AGG[3] = { 9, 5, 3 };$/;"	v	file:
kOverHangMax2LBR	webrtc/common_audio/vad/vad_core.c	/^static const int16_t kOverHangMax2LBR[3] = { 14, 7, 5 };$/;"	v	file:
kOverHangMax2Q	webrtc/common_audio/vad/vad_core.c	/^static const int16_t kOverHangMax2Q[3] = { 14, 7, 5 };$/;"	v	file:
kOverHangMax2VAG	webrtc/common_audio/vad/vad_core.c	/^static const int16_t kOverHangMax2VAG[3] = { 9, 5, 3 };$/;"	v	file:
kPLC	webrtc/modules/include/module_common_types.h	/^    kPLC = 1,$/;"	e	enum:webrtc::AudioFrame::SpeechType
kPLCCNG	webrtc/modules/include/module_common_types.h	/^    kPLCCNG = 3,$/;"	e	enum:webrtc::AudioFrame::SpeechType
kPacketLenSize	webrtc/base/asynctcpsocket.cc	/^static const size_t kPacketLenSize = sizeof(PacketLength);$/;"	m	namespace:rtc	file:
kPad	webrtc/base/base64.cc	/^static const char kPad = '=';$/;"	m	namespace:rtc	file:
kParameterNotSpecifiedValue	webrtc/modules/audio_processing/test/audioproc_float.cc	/^const int kParameterNotSpecifiedValue = -10000;$/;"	m	namespace:webrtc::test::__anon221	file:
kParentData	webrtc/modules/audio_processing/transient/wpd_node_unittest.cc	/^static const float kParentData[kParentDataLength] =$/;"	m	namespace:webrtc	file:
kParentDataLength	webrtc/modules/audio_processing/transient/wpd_node_unittest.cc	/^static const size_t kParentDataLength = kDataLength * 2;$/;"	m	namespace:webrtc	file:
kPassive	webrtc/common_audio/vad/include/vad.h	/^  enum Activity { kPassive = 0, kActive = 1, kError = -1 };$/;"	e	enum:webrtc::Vad::Activity
kPath	webrtc/base/autodetectproxy_unittest.cc	/^static const char kPath[] = "\/";$/;"	m	namespace:rtc	file:
kPayloadNameSize	webrtc/common_types.h	/^enum { kPayloadNameSize = 32 };$/;"	e	enum:webrtc::__anon118
kPemTypeCertificate	webrtc/base/sslidentity.cc	/^const char kPemTypeCertificate[] = "CERTIFICATE";$/;"	m	namespace:rtc	file:
kPemTypeEcPrivateKey	webrtc/base/sslidentity.cc	/^const char kPemTypeEcPrivateKey[] = "EC PRIVATE KEY";$/;"	m	namespace:rtc	file:
kPemTypeRsaPrivateKey	webrtc/base/sslidentity.cc	/^const char kPemTypeRsaPrivateKey[] = "RSA PRIVATE KEY";$/;"	m	namespace:rtc	file:
kPi	webrtc/modules/audio_processing/transient/common.h	/^static const float kPi = 3.14159265358979323846f;$/;"	m	namespace:webrtc::ts
kPi	webrtc/modules/audio_processing/transient/file_utils_unittest.cc	/^static const double kPi = 3.14159265358979323846;$/;"	m	namespace:webrtc	file:
kPiBytes	webrtc/modules/audio_processing/transient/file_utils_unittest.cc	/^static const uint8_t kPiBytes[8] =$/;"	m	namespace:webrtc	file:
kPiBytesf	webrtc/modules/audio_processing/transient/file_utils_unittest.cc	/^static const uint8_t kPiBytesf[4] = {0xDB, 0x0F, 0x49, 0x40};$/;"	m	namespace:webrtc	file:
kPitchFilterPost	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_filter.c	/^  kPitchFilterPre, kPitchFilterPost, kPitchFilterPreLa, kPitchFilterPreGain$/;"	e	enum:__anon123	file:
kPitchFilterPre	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_filter.c	/^  kPitchFilterPre, kPitchFilterPost, kPitchFilterPreLa, kPitchFilterPreGain$/;"	e	enum:__anon123	file:
kPitchFilterPreGain	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_filter.c	/^  kPitchFilterPre, kPitchFilterPost, kPitchFilterPreLa, kPitchFilterPreGain$/;"	e	enum:__anon123	file:
kPitchFilterPreLa	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_filter.c	/^  kPitchFilterPre, kPitchFilterPost, kPitchFilterPreLa, kPitchFilterPreGain$/;"	e	enum:__anon123	file:
kPlaybackAllChannelsMixed	webrtc/common_types.h	/^  kPlaybackAllChannelsMixed,$/;"	e	enum:webrtc::ProcessingTypes
kPlaybackPerChannel	webrtc/common_types.h	/^  kPlaybackPerChannel = 0,$/;"	e	enum:webrtc::ProcessingTypes
kPlayoutDelayDefaultId	webrtc/config.cc	/^const int RtpExtension::kPlayoutDelayDefaultId = 6;$/;"	m	class:webrtc::RtpExtension	file:
kPlayoutDelayDefaultId	webrtc/config.h	/^  static const int kPlayoutDelayDefaultId;$/;"	m	struct:webrtc::RtpExtension
kPlayoutDelayUri	webrtc/config.cc	/^const char* RtpExtension::kPlayoutDelayUri =$/;"	m	class:webrtc::RtpExtension	file:
kPlayoutDelayUri	webrtc/config.h	/^  static const char* kPlayoutDelayUri;$/;"	m	struct:webrtc::RtpExtension
kPort	webrtc/base/autodetectproxy_unittest.cc	/^static const uint16_t kPort = 443;$/;"	m	namespace:rtc	file:
kPosteriorHistorySize	webrtc/modules/audio_processing/vad/pitch_based_vad.cc	/^static const int kPosteriorHistorySize = 500;  \/\/ 5 sec of 10 ms frames.$/;"	m	namespace:webrtc	file:
kPowerNormalizationFactor	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer.cc	/^const float kPowerNormalizationFactor = 1.f \/ (1 << 30);$/;"	m	namespace:webrtc::__anon202	file:
kPrefBandSize	webrtc/modules/audio_processing/aec/aec_core.cc	/^enum { kPrefBandSize = 24 };$/;"	e	enum:webrtc::__anon146	file:
kPrintAllDurations	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^static const bool kPrintAllDurations = false;$/;"	m	namespace:webrtc::__anon182	file:
kProbQDomain	webrtc/modules/audio_processing/agc/loudness_histogram.cc	/^static const double kProbQDomain = 1024.0;$/;"	m	namespace:webrtc	file:
kProbabilityLowerLimit	webrtc/modules/audio_processing/utility/delay_estimator.cc	/^static const int32_t kProbabilityLowerLimit = 8704;  \/\/ 17 in Q9.$/;"	v	file:
kProbabilityMinSpread	webrtc/modules/audio_processing/utility/delay_estimator.cc	/^static const int32_t kProbabilityMinSpread = 2816;  \/\/ 5.5 in Q9.$/;"	v	file:
kProbabilityOffset	webrtc/modules/audio_processing/utility/delay_estimator.cc	/^static const int32_t kProbabilityOffset = 1024;  \/\/ 2 in Q9.$/;"	v	file:
kProcessReverseStream	webrtc/modules/audio_processing/test/wav_based_simulator.h	/^    kProcessReverseStream,$/;"	e	enum:webrtc::test::final::SimulationEventType
kProcessSampleRates	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^const int kProcessSampleRates[] = {8000, 16000, 32000, 48000};$/;"	m	namespace:webrtc::__anon183	file:
kProcessSampleRates	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^const int kProcessSampleRates[] = {8000, 16000, 32000};$/;"	m	namespace:webrtc::__anon183	file:
kProcessStream	webrtc/modules/audio_processing/test/wav_based_simulator.h	/^    kProcessStream,$/;"	e	enum:webrtc::test::final::SimulationEventType
kProcessTimeInMs	webrtc/base/sharedexclusivelock_unittest.cc	/^static const int kProcessTimeInMs = 100;$/;"	m	namespace:rtc	file:
kProcessTimeoutInMs	webrtc/base/sharedexclusivelock_unittest.cc	/^static const int kProcessTimeoutInMs = 5000;$/;"	m	namespace:rtc	file:
kProgramManagerClass	webrtc/base/win32windowpicker.cc	/^const char kProgramManagerClass[] = "Progman";$/;"	m	namespace:rtc::__anon75	file:
kProxyAddress	webrtc/base/proxydetect_unittest.cc	/^static const std::string kProxyAddress = "proxy.net.com";$/;"	m	namespace:rtc	file:
kPublicIPv4Host	webrtc/base/network.cc	/^const char kPublicIPv4Host[] = "8.8.8.8";$/;"	m	namespace:rtc	file:
kPublicIPv6Host	webrtc/base/network.cc	/^const char kPublicIPv6Host[] = "2001:4860:4860::8888";$/;"	m	namespace:rtc	file:
kPublicPort	webrtc/base/network.cc	/^const int kPublicPort = 53;  \/\/ DNS port.$/;"	m	namespace:rtc	file:
kQ14Scaling	webrtc/modules/audio_processing/utility/delay_estimator.cc	/^static const float kQ14Scaling = 1.f \/ (1 << 14);  \/\/ Scaling by 2^14 to get Q0.$/;"	v	file:
kQRateTableSwb	webrtc/modules/audio_coding/codecs/isac/main/source/bandwidth_estimator.c	/^static const float kQRateTableSwb[24] =$/;"	v	file:
kQRateTableWb	webrtc/modules/audio_coding/codecs/isac/main/source/bandwidth_estimator.c	/^static const float kQRateTableWb[12] =$/;"	v	file:
kQuietEarpieceOrHeadset	webrtc/modules/audio_processing/include/audio_processing.h	/^    kQuietEarpieceOrHeadset,$/;"	e	enum:webrtc::EchoControlMobile::RoutingMode
kQuit	webrtc/base/task_queue_libevent.cc	/^static const char kQuit = 1;$/;"	m	namespace:rtc::__anon65	file:
kRSA_BASE64_CERTIFICATE	webrtc/base/sslidentity_unittest.cc	/^static const char kRSA_BASE64_CERTIFICATE[] =$/;"	v	file:
kRSA_CERT_PEM	webrtc/base/sslidentity_unittest.cc	/^static const char kRSA_CERT_PEM[] =$/;"	v	file:
kRSA_FINGERPRINT	webrtc/base/sslidentity_unittest.cc	/^static const char kRSA_FINGERPRINT[] =$/;"	v	file:
kRSA_FINGERPRINT_ALGORITHM	webrtc/base/sslidentity_unittest.cc	/^static const char kRSA_FINGERPRINT_ALGORITHM[] =$/;"	v	file:
kRSA_PRIVATE_KEY_PEM	webrtc/base/sslidentity_unittest.cc	/^static const char kRSA_PRIVATE_KEY_PEM[] =$/;"	v	file:
kRSA_PRIVATE_KEY_PEM	webrtc/base/sslstreamadapter_unittest.cc	/^static const char kRSA_PRIVATE_KEY_PEM[] =$/;"	v	file:
kRSA_PUBLIC_KEY_PEM	webrtc/base/sslidentity_unittest.cc	/^static const char kRSA_PUBLIC_KEY_PEM[] =$/;"	v	file:
kRandNTable	webrtc/common_audio/signal_processing/randomization_functions.c	/^static const int16_t kRandNTable[] = {$/;"	v	file:
kRateFillingBytes	webrtc/base/rate_limiter_unittest.cc	/^  static constexpr size_t kRateFillingBytes =$/;"	m	class:webrtc::RateLimitTest	file:
kRates	webrtc/common_audio/resampler/resampler_unittest.cc	/^const int kRates[] = {$/;"	m	namespace:webrtc::__anon86	file:
kRates	webrtc/common_audio/vad/vad_unittest.h	/^const int kRates[] = { 8000, 12000, 16000, 24000, 32000, 48000 };$/;"	m	namespace:__anon111
kRatesSize	webrtc/common_audio/resampler/resampler_unittest.cc	/^const size_t kRatesSize = sizeof(kRates) \/ sizeof(*kRates);$/;"	m	namespace:webrtc::__anon86	file:
kRatesSize	webrtc/common_audio/vad/vad_unittest.h	/^const size_t kRatesSize = sizeof(kRates) \/ sizeof(*kRates);$/;"	m	namespace:__anon111
kRatesSize	webrtc/common_audio/vad/webrtc_vad.c	/^static const size_t kRatesSize = sizeof(kValidRates) \/ sizeof(*kValidRates);$/;"	v	file:
kRead	webrtc/base/filerotatingstream.h	/^  enum Mode { kRead, kWrite };$/;"	e	enum:rtc::FileRotatingStream::Mode
kRealtimePriority	webrtc/base/platform_thread.h	/^  kRealtimePriority = THREAD_PRIORITY_TIME_CRITICAL$/;"	e	enum:rtc::ThreadPriority
kRealtimeVideo	webrtc/common_types.h	/^enum VideoCodecMode { kRealtimeVideo, kScreensharing };$/;"	e	enum:webrtc::VideoCodecMode
kRealtimeVideo	webrtc/config.h	/^    kRealtimeVideo,$/;"	m	class:webrtc::VideoEncoderConfig::ContentType
kRecordingAllChannelsMixed	webrtc/common_types.h	/^  kRecordingAllChannelsMixed,$/;"	e	enum:webrtc::ProcessingTypes
kRecordingPerChannel	webrtc/common_types.h	/^  kRecordingPerChannel,$/;"	e	enum:webrtc::ProcessingTypes
kRecordingPreprocessing	webrtc/common_types.h	/^  kRecordingPreprocessing$/;"	e	enum:webrtc::ProcessingTypes
kRefData	webrtc/common_audio/signal_processing/real_fft_unittest.cc	/^const int16_t kRefData[kTimeDataLength] = {$/;"	m	namespace:webrtc::__anon98	file:
kReferenceOutput	webrtc/modules/audio_processing/vad/pole_zero_filter_unittest.cc	/^static const float kReferenceOutput[kInputSamples] = {$/;"	m	namespace:webrtc	file:
kRelativeErrTol	webrtc/modules/audio_processing/agc/loudness_histogram_unittest.cc	/^const double kRelativeErrTol = 1e-10;$/;"	m	namespace:webrtc	file:
kRelease	webrtc/system_wrappers/include/static_instance.h	/^  kRelease,$/;"	e	enum:webrtc::CountOperation
kReleasing	webrtc/base/signalthread.h	/^    kReleasing,       \/\/ Same as running, but to be deleted when work is done$/;"	e	enum:rtc::SignalThread::State
kRender	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^enum class ProcessorType { kRender, kCapture };$/;"	m	class:webrtc::__anon182::ProcessorType	file:
kRenderBufferSize	webrtc/modules/audio_processing/residual_echo_detector.cc	/^constexpr size_t kRenderBufferSize = 30;$/;"	m	namespace:__anon217	file:
kRenderInputFixLevel	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  static const int kRenderInputFixLevel = 16384;$/;"	m	class:webrtc::__anon181::RenderProcessor	file:
kRenderInputFloatLevel	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  static const float kRenderInputFloatLevel;$/;"	m	class:webrtc::__anon181::RenderProcessor	file:
kRenderInputFloatLevel	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^const float RenderProcessor::kRenderInputFloatLevel = 0.5f;$/;"	m	class:webrtc::__anon181::RenderProcessor	file:
kRenderInputFloatLevel	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^  static const float kRenderInputFloatLevel;$/;"	m	class:webrtc::__anon182::CallSimulator	file:
kRenderInputFloatLevel	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^const float CallSimulator::kRenderInputFloatLevel = 0.5f;$/;"	m	class:webrtc::__anon182::CallSimulator	file:
kRequest	webrtc/base/httpserver_unittest.cc	/^  const char* const kRequest =$/;"	m	namespace:rtc::__anon20	file:
kResampleAllpass	webrtc/common_audio/signal_processing/resample_by_2_internal.c	/^static const int16_t kResampleAllpass[2][3] = {$/;"	v	file:
kResampleAllpass1	webrtc/common_audio/signal_processing/resample_by_2.c	/^static const uint16_t kResampleAllpass1[3] = {3284, 24441, 49528};$/;"	v	file:
kResampleAllpass1	webrtc/common_audio/signal_processing/resample_by_2.c	/^static const uint32_t kResampleAllpass1[3] = {3284, 24441, 49528 << 15};$/;"	v	file:
kResampleAllpass1	webrtc/common_audio/signal_processing/resample_by_2_mips.c	/^static const uint16_t kResampleAllpass1[3] = {3284, 24441, 49528};$/;"	v	file:
kResampleAllpass2	webrtc/common_audio/signal_processing/resample_by_2.c	/^static const uint16_t kResampleAllpass2[3] = {12199, 37471, 60255};$/;"	v	file:
kResampleAllpass2	webrtc/common_audio/signal_processing/resample_by_2.c	/^static const uint32_t kResampleAllpass2[3] =$/;"	v	file:
kResampleAllpass2	webrtc/common_audio/signal_processing/resample_by_2_mips.c	/^static const uint16_t kResampleAllpass2[3] = {12199, 37471, 60255};$/;"	v	file:
kResamplerBufferSize	webrtc/modules/audio_processing/aec/aec_resampler.h	/^enum { kResamplerBufferSize = FRAME_LEN * 4 };$/;"	e	enum:webrtc::__anon156
kResamplerMode11To16	webrtc/common_audio/resampler/include/resampler.h	/^        kResamplerMode11To16,$/;"	e	enum:webrtc::Resampler::ResamplerMode
kResamplerMode11To2	webrtc/common_audio/resampler/include/resampler.h	/^        kResamplerMode11To2,$/;"	e	enum:webrtc::Resampler::ResamplerMode
kResamplerMode11To32	webrtc/common_audio/resampler/include/resampler.h	/^        kResamplerMode11To32,$/;"	e	enum:webrtc::Resampler::ResamplerMode
kResamplerMode11To4	webrtc/common_audio/resampler/include/resampler.h	/^        kResamplerMode11To4,$/;"	e	enum:webrtc::Resampler::ResamplerMode
kResamplerMode11To8	webrtc/common_audio/resampler/include/resampler.h	/^        kResamplerMode11To8$/;"	e	enum:webrtc::Resampler::ResamplerMode
kResamplerMode12To1	webrtc/common_audio/resampler/include/resampler.h	/^        kResamplerMode12To1,$/;"	e	enum:webrtc::Resampler::ResamplerMode
kResamplerMode1To1	webrtc/common_audio/resampler/include/resampler.h	/^        kResamplerMode1To1,$/;"	e	enum:webrtc::Resampler::ResamplerMode
kResamplerMode1To12	webrtc/common_audio/resampler/include/resampler.h	/^        kResamplerMode1To12,$/;"	e	enum:webrtc::Resampler::ResamplerMode
kResamplerMode1To2	webrtc/common_audio/resampler/include/resampler.h	/^        kResamplerMode1To2,$/;"	e	enum:webrtc::Resampler::ResamplerMode
kResamplerMode1To3	webrtc/common_audio/resampler/include/resampler.h	/^        kResamplerMode1To3,$/;"	e	enum:webrtc::Resampler::ResamplerMode
kResamplerMode1To4	webrtc/common_audio/resampler/include/resampler.h	/^        kResamplerMode1To4,$/;"	e	enum:webrtc::Resampler::ResamplerMode
kResamplerMode1To6	webrtc/common_audio/resampler/include/resampler.h	/^        kResamplerMode1To6,$/;"	e	enum:webrtc::Resampler::ResamplerMode
kResamplerMode2To1	webrtc/common_audio/resampler/include/resampler.h	/^        kResamplerMode2To1,$/;"	e	enum:webrtc::Resampler::ResamplerMode
kResamplerMode2To11	webrtc/common_audio/resampler/include/resampler.h	/^        kResamplerMode2To11,$/;"	e	enum:webrtc::Resampler::ResamplerMode
kResamplerMode2To3	webrtc/common_audio/resampler/include/resampler.h	/^        kResamplerMode2To3,$/;"	e	enum:webrtc::Resampler::ResamplerMode
kResamplerMode3To1	webrtc/common_audio/resampler/include/resampler.h	/^        kResamplerMode3To1,$/;"	e	enum:webrtc::Resampler::ResamplerMode
kResamplerMode3To2	webrtc/common_audio/resampler/include/resampler.h	/^        kResamplerMode3To2,$/;"	e	enum:webrtc::Resampler::ResamplerMode
kResamplerMode4To1	webrtc/common_audio/resampler/include/resampler.h	/^        kResamplerMode4To1,$/;"	e	enum:webrtc::Resampler::ResamplerMode
kResamplerMode4To11	webrtc/common_audio/resampler/include/resampler.h	/^        kResamplerMode4To11,$/;"	e	enum:webrtc::Resampler::ResamplerMode
kResamplerMode6To1	webrtc/common_audio/resampler/include/resampler.h	/^        kResamplerMode6To1,$/;"	e	enum:webrtc::Resampler::ResamplerMode
kResamplerMode8To11	webrtc/common_audio/resampler/include/resampler.h	/^        kResamplerMode8To11,$/;"	e	enum:webrtc::Resampler::ResamplerMode
kResamplingDelay	webrtc/modules/audio_processing/aec/aec_resampler.h	/^enum { kResamplingDelay = 1 };$/;"	e	enum:webrtc::__anon155
kResamplingRMSError	webrtc/common_audio/resampler/push_sinc_resampler_unittest.cc	/^const double kResamplingRMSError = -14.42;$/;"	m	namespace:webrtc::__anon85	file:
kResamplingRMSError	webrtc/common_audio/resampler/sinc_resampler_unittest.cc	/^static const double kResamplingRMSError = -14.58;$/;"	m	namespace:webrtc	file:
kResilienceOff	webrtc/common_types.h	/^  kResilienceOff,    \/\/ The stream produced by the encoder requires a$/;"	e	enum:webrtc::VP8ResilienceMode
kResilientFrames	webrtc/common_types.h	/^  kResilientFrames   \/\/ Same as kResilientStream but with added resilience$/;"	e	enum:webrtc::VP8ResilienceMode
kResilientStream	webrtc/common_types.h	/^  kResilientStream,  \/\/ A stream produced by the encoder is resilient to$/;"	e	enum:webrtc::VP8ResilienceMode
kReverse	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^enum StreamDirection { kForward = 0, kReverse };$/;"	e	enum:webrtc::__anon183::StreamDirection	file:
kReverseInputStream	webrtc/modules/audio_processing/include/audio_processing.h	/^    kReverseInputStream,$/;"	e	enum:webrtc::ProcessingConfig::StreamName
kReverseOutputStream	webrtc/modules/audio_processing/include/audio_processing.h	/^    kReverseOutputStream,$/;"	e	enum:webrtc::ProcessingConfig::StreamName
kRho	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer.cc	/^const float kRho = 0.0004f;  \/\/ Default production and interpretation SNR.$/;"	m	namespace:webrtc::__anon202	file:
kRkey1	webrtc/base/win32regkey_unittest.cc	/^const wchar_t kRkey1[] = kBaseKey;$/;"	m	namespace:rtc	file:
kRkey1Subkey	webrtc/base/win32regkey_unittest.cc	/^const wchar_t kRkey1Subkey[] = kBaseKey L"\\\\" kSubkeyName;$/;"	m	namespace:rtc	file:
kRkey1SubkeyName	webrtc/base/win32regkey_unittest.cc	/^const wchar_t kRkey1SubkeyName[] = kSubkeyName;$/;"	m	namespace:rtc	file:
kRotatingLogFileDefaultSize	webrtc/base/filerotatingstream.cc	/^const size_t CallSessionFileRotatingStream::kRotatingLogFileDefaultSize =$/;"	m	class:rtc::CallSessionFileRotatingStream	file:
kRotatingLogFileDefaultSize	webrtc/base/filerotatingstream.h	/^  static const size_t kRotatingLogFileDefaultSize;$/;"	m	class:rtc::CallSessionFileRotatingStream
kRsaDefaultExponent	webrtc/base/sslidentity.h	/^static const int kRsaDefaultExponent = 0x10001;  \/\/ = 2^16+1 = 65537$/;"	m	namespace:rtc
kRsaDefaultModSize	webrtc/base/sslidentity.h	/^static const int kRsaDefaultModSize = 1024;$/;"	m	namespace:rtc
kRsaMaxModSize	webrtc/base/sslidentity.h	/^static const int kRsaMaxModSize = 8192;$/;"	m	namespace:rtc
kRsaMinModSize	webrtc/base/sslidentity.h	/^static const int kRsaMinModSize = 1024;$/;"	m	namespace:rtc
kRtpCsrcSize	webrtc/common_types.h	/^enum { kRtpCsrcSize = 15 };  \/\/ RFC 3550 page 13$/;"	e	enum:webrtc::__anon116
kRtpVideoGeneric	webrtc/modules/include/module_common_types.h	/^  kRtpVideoGeneric,$/;"	e	enum:webrtc::RtpVideoCodecTypes
kRtpVideoH264	webrtc/modules/include/module_common_types.h	/^  kRtpVideoH264$/;"	e	enum:webrtc::RtpVideoCodecTypes
kRtpVideoNone	webrtc/modules/include/module_common_types.h	/^  kRtpVideoNone,$/;"	e	enum:webrtc::RtpVideoCodecTypes
kRtpVideoVp8	webrtc/modules/include/module_common_types.h	/^  kRtpVideoVp8,$/;"	e	enum:webrtc::RtpVideoCodecTypes
kRtpVideoVp9	webrtc/modules/include/module_common_types.h	/^  kRtpVideoVp9,$/;"	e	enum:webrtc::RtpVideoCodecTypes
kRunTask	webrtc/base/task_queue_libevent.cc	/^static const char kRunTask = 2;$/;"	m	namespace:rtc::__anon65	file:
kRunning	webrtc/base/signalthread.h	/^    kRunning,         \/\/ Started and doing work$/;"	e	enum:rtc::SignalThread::State
kSSE2	webrtc/system_wrappers/include/cpu_features_wrapper.h	/^  kSSE2,$/;"	e	enum:__anon246
kSSE3	webrtc/system_wrappers/include/cpu_features_wrapper.h	/^  kSSE3$/;"	e	enum:__anon246
kSSLCertCertificateList	webrtc/base/sslroots.h	/^const unsigned char* kSSLCertCertificateList[] = {$/;"	v
kSSLCertCertificateSizeList	webrtc/base/sslroots.h	/^const size_t kSSLCertCertificateSizeList[] = {$/;"	v
kSampMsNb	webrtc/modules/audio_processing/aecm/echo_control_mobile.cc	/^static const int kSampMsNb = 8; \/\/ samples per ms in nb$/;"	v	file:
kSampleRate	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer_unittest.cc	/^const int kSampleRate = 4000;$/;"	m	namespace:webrtc::__anon203	file:
kSampleRate16kHz	webrtc/modules/audio_processing/include/audio_processing.h	/^    kSampleRate16kHz = 16000,$/;"	e	enum:webrtc::AudioProcessing::NativeRate
kSampleRate16kHz	webrtc/modules/audio_processing/transient/common.h	/^  kSampleRate16kHz = 16000,$/;"	e	enum:webrtc::ts::__anon225
kSampleRate32kHz	webrtc/modules/audio_processing/include/audio_processing.h	/^    kSampleRate32kHz = 32000,$/;"	e	enum:webrtc::AudioProcessing::NativeRate
kSampleRate32kHz	webrtc/modules/audio_processing/transient/common.h	/^  kSampleRate32kHz = 32000,$/;"	e	enum:webrtc::ts::__anon225
kSampleRate48kHz	webrtc/modules/audio_processing/include/audio_processing.h	/^    kSampleRate48kHz = 48000$/;"	e	enum:webrtc::AudioProcessing::NativeRate
kSampleRate48kHz	webrtc/modules/audio_processing/transient/common.h	/^  kSampleRate48kHz = 48000$/;"	e	enum:webrtc::ts::__anon225
kSampleRate8kHz	webrtc/modules/audio_processing/include/audio_processing.h	/^    kSampleRate8kHz = 8000,$/;"	e	enum:webrtc::AudioProcessing::NativeRate
kSampleRate8kHz	webrtc/modules/audio_processing/transient/common.h	/^  kSampleRate8kHz = 8000,$/;"	e	enum:webrtc::ts::__anon225
kSampleRateHz	webrtc/modules/audio_processing/aec/system_delay_unittest.cc	/^static const int kSampleRateHz[] = {8000, 16000};$/;"	m	namespace:webrtc::__anon162	file:
kSampleRateHz	webrtc/modules/audio_processing/agc/agc_manager_direct_unittest.cc	/^const int kSampleRateHz = 32000;$/;"	m	namespace:webrtc::__anon170	file:
kSampleRateHz	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer_unittest.cc	/^const int kSampleRateHz = 16000;$/;"	m	namespace:webrtc::__anon190	file:
kSampleRateHz	webrtc/modules/audio_processing/vad/common.h	/^static const int kSampleRateHz = 16000;$/;"	v
kSampleRateRatio	webrtc/common_audio/resampler/sinc_resampler_unittest.cc	/^static const double kSampleRateRatio = 192000.0 \/ 44100.0;$/;"	m	namespace:webrtc	file:
kSampleRates	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^const int kSampleRates[] = {8000, 16000, 32000, 48000};$/;"	m	namespace:webrtc::__anon183	file:
kSampleRatesHz	webrtc/modules/audio_processing/transient/transient_detector_unittest.cc	/^static const int kSampleRatesHz[] = {ts::kSampleRate8kHz,$/;"	m	namespace:webrtc	file:
kSamples	webrtc/common_audio/wav_file_unittest.cc	/^static const float kSamples[] = {0.0, 10.0, 4e4, -1e9};$/;"	m	namespace:webrtc	file:
kSamples	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer_unittest.cc	/^const int kSamples = 10000;$/;"	m	namespace:webrtc::__anon203	file:
kSamplesPer16kHzChannel	webrtc/modules/audio_processing/audio_buffer.cc	/^const size_t kSamplesPer16kHzChannel = 160;$/;"	m	namespace:webrtc::__anon178	file:
kSamplesPer16kHzChannel	webrtc/modules/audio_processing/splitting_filter_unittest.cc	/^const size_t kSamplesPer16kHzChannel = 160;$/;"	m	namespace:webrtc::__anon218	file:
kSamplesPer32kHzChannel	webrtc/modules/audio_processing/audio_buffer.cc	/^const size_t kSamplesPer32kHzChannel = 320;$/;"	m	namespace:webrtc::__anon178	file:
kSamplesPer48kHzChannel	webrtc/modules/audio_processing/audio_buffer.cc	/^const size_t kSamplesPer48kHzChannel = 480;$/;"	m	namespace:webrtc::__anon178	file:
kSamplesPer48kHzChannel	webrtc/modules/audio_processing/splitting_filter_unittest.cc	/^const size_t kSamplesPer48kHzChannel = 480;$/;"	m	namespace:webrtc::__anon218	file:
kSamplesPerChannel	webrtc/modules/audio_processing/agc/agc_manager_direct_unittest.cc	/^const int kSamplesPerChannel = kSampleRateHz \/ 100;$/;"	m	namespace:webrtc::__anon170	file:
kSamplesPerChunk	webrtc/modules/audio_processing/aec/system_delay_unittest.cc	/^  static const int kSamplesPerChunk = 160;$/;"	m	class:webrtc::__anon162::SystemDelayTest	file:
kSavedStringLimit	webrtc/base/autodetectproxy.cc	/^static const int kSavedStringLimit = 128;$/;"	m	namespace:rtc	file:
kScreen	webrtc/config.h	/^    kScreen,$/;"	m	class:webrtc::VideoEncoderConfig::ContentType
kScreensharing	webrtc/common_types.h	/^enum VideoCodecMode { kRealtimeVideo, kScreensharing };$/;"	e	enum:webrtc::VideoCodecMode
kSecTo100ns	webrtc/base/taskrunner.h	/^const int64_t kSecTo100ns = kSecToMsec * kMsecTo100ns;$/;"	m	namespace:rtc
kSecToMsec	webrtc/base/taskrunner.h	/^const int64_t kSecToMsec = 1000;$/;"	m	namespace:rtc
kSecure	webrtc/base/autodetectproxy_unittest.cc	/^static const bool kSecure = true;$/;"	m	namespace:rtc	file:
kSequenceLength	webrtc/modules/audio_processing/utility/delay_estimator_unittest.cc	/^enum { kSequenceLength = 400 };$/;"	e	enum:__anon232::__anon237	file:
kShiftExponentIntoTopMantissa	webrtc/modules/audio_processing/aec/aec_core_neon.cc	/^enum { kShiftExponentIntoTopMantissa = 8 };$/;"	e	enum:webrtc::__anon151	file:
kShiftsAtZero	webrtc/modules/audio_processing/utility/delay_estimator.cc	/^static const int kShiftsAtZero = 13;  \/\/ Right shifts at zero binary spectrum.$/;"	v	file:
kShiftsLinearSlope	webrtc/modules/audio_processing/utility/delay_estimator.cc	/^static const int kShiftsLinearSlope = 3;$/;"	v	file:
kShortBuffSize	webrtc/modules/audio_processing/vad/vad_circular_buffer_unittest.cc	/^static const int kShortBuffSize = 10;$/;"	m	namespace:webrtc	file:
kSignalNetworksMessage	webrtc/base/network.cc	/^const uint32_t kSignalNetworksMessage = 2;$/;"	m	namespace:rtc::__anon34	file:
kSilenceRms	webrtc/modules/audio_processing/vad/vad_audio_proc.cc	/^static const int kSilenceRms = 5;$/;"	m	namespace:webrtc	file:
kSinTable1024	webrtc/common_audio/signal_processing/complex_fft_tables.h	/^static const int16_t kSinTable1024[] = {$/;"	v
kSize	webrtc/base/md5digest.h	/^  enum { kSize = 16 };$/;"	e	enum:rtc::Md5Digest::__anon30
kSize	webrtc/base/sha1digest.h	/^  enum { kSize = SHA1_DIGEST_SIZE };$/;"	e	enum:rtc::Sha1Digest::__anon58
kSizeEnable	webrtc/modules/audio_processing/utility/delay_estimator_unittest.cc	/^const size_t kSizeEnable = sizeof(kEnable) \/ sizeof(*kEnable);$/;"	m	namespace:__anon232	file:
kSlope1	webrtc/modules/audio_processing/agc/legacy/analog_agc.c	/^static const int16_t kSlope1[8] = {21793, 12517, 7189, 4129,$/;"	v	file:
kSlope2	webrtc/modules/audio_processing/agc/legacy/analog_agc.c	/^static const int16_t kSlope2[8] = {2063, 1731, 1452, 1218, 1021, 857, 597, 337};$/;"	v	file:
kSlowDispatchLoggingThreshold	webrtc/base/messagequeue.cc	/^const int kSlowDispatchLoggingThreshold = 50;  \/\/ 50 ms$/;"	m	namespace:rtc::__anon32	file:
kSmoothingDown	webrtc/common_audio/vad/vad_sp.c	/^static const int16_t kSmoothingDown = 6553;  \/\/ 0.2 in Q15.$/;"	v	file:
kSmoothingUp	webrtc/common_audio/vad/vad_sp.c	/^static const int16_t kSmoothingUp = 32439;  \/\/ 0.99 in Q15.$/;"	v	file:
kSparsity	webrtc/modules/audio_processing/three_band_filter_bank.cc	/^const size_t kSparsity = 4;$/;"	m	namespace:webrtc::__anon224	file:
kSpeakerphone	webrtc/modules/audio_processing/include/audio_processing.h	/^    kSpeakerphone,$/;"	e	enum:webrtc::EchoControlMobile::RoutingMode
kSpectrumSize	webrtc/modules/audio_processing/utility/delay_estimator_unittest.cc	/^enum { kSpectrumSize = 65 };$/;"	e	enum:__anon232::__anon233	file:
kSpectrumWeight	webrtc/common_audio/vad/vad_core.c	/^static const int16_t kSpectrumWeight[kNumChannels] = { 6, 8, 10, 12, 14, 16 };$/;"	v	file:
kSpeechDataMeans	webrtc/common_audio/vad/vad_core.c	/^static const int16_t kSpeechDataMeans[kTableSize] = {$/;"	v	file:
kSpeechDataStds	webrtc/common_audio/vad/vad_core.c	/^static const int16_t kSpeechDataStds[kTableSize] = {$/;"	v	file:
kSpeechDataWeights	webrtc/common_audio/vad/vad_core.c	/^static const int16_t kSpeechDataWeights[kTableSize] = {$/;"	v	file:
kSpeechOffsetDelay	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer.cc	/^const size_t kSpeechOffsetDelay = 10;$/;"	m	namespace:webrtc::__anon202	file:
kSpeechUpdateConst	webrtc/common_audio/vad/vad_core.c	/^static const int16_t kSpeechUpdateConst = 6554; \/\/ Q15$/;"	v	file:
kSpeedOfSoundMeterSeconds	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.cc	/^const float kSpeedOfSoundMeterSeconds = 343;$/;"	m	namespace:webrtc::__anon188	file:
kSrcMaxExponent	webrtc/base/safe_conversions_impl.h	/^  static const size_t kSrcMaxExponent = SrcLimits::is_iec559 ?$/;"	m	struct:rtc::internal::StaticRangeCheck
kSrcMaxExponent	webrtc/base/safe_conversions_impl.h	/^  static const size_t kSrcMaxExponent = sizeof(Src) * 8;$/;"	m	struct:rtc::internal::StaticRangeCheck
kSslCipherMap	webrtc/base/opensslstreamadapter.cc	/^static const SslCipherMapEntry kSslCipherMap[] = {$/;"	m	namespace:rtc	file:
kSslClientHello	webrtc/base/socketadapters.cc	/^static const uint8_t kSslClientHello[] = {$/;"	m	namespace:rtc	file:
kSslServerHello	webrtc/base/socketadapters.cc	/^static const uint8_t kSslServerHello[] = {$/;"	m	namespace:rtc	file:
kStableConvergenceMs	webrtc/modules/audio_processing/aec/system_delay_unittest.cc	/^static const int kStableConvergenceMs = 100;$/;"	m	namespace:webrtc::__anon162	file:
kStartBand	webrtc/modules/audio_processing/ns/nsx_core.c	/^static const size_t kStartBand = 5;$/;"	v	file:
kStartTimeSec	webrtc/modules/audio_processing/vad/voice_activity_detector_unittest.cc	/^const int kStartTimeSec = 16;$/;"	m	namespace:webrtc::__anon243	file:
kStateSize	webrtc/modules/audio_processing/splitting_filter.h	/^  static const int kStateSize = 6;$/;"	m	struct:webrtc::TwoBandsStates
kStereo	webrtc/common_audio/channel_buffer_unittest.cc	/^const size_t kStereo = 2u;$/;"	m	namespace:webrtc::__anon79	file:
kStereo	webrtc/modules/audio_processing/audio_buffer_unittest.cc	/^const size_t kStereo = 2u;$/;"	m	namespace:webrtc::__anon179	file:
kStereo	webrtc/modules/audio_processing/include/audio_processing.h	/^    kStereo,$/;"	e	enum:webrtc::AudioProcessing::ChannelLayout
kStereoAndKeyboard	webrtc/modules/audio_processing/include/audio_processing.h	/^    kStereoAndKeyboard$/;"	e	enum:webrtc::AudioProcessing::ChannelLayout
kStereoBoth	webrtc/common_types.h	/^enum StereoChannel { kStereoLeft = 0, kStereoRight, kStereoBoth };$/;"	e	enum:webrtc::StereoChannel
kStereoLeft	webrtc/common_types.h	/^enum StereoChannel { kStereoLeft = 0, kStereoRight, kStereoBoth };$/;"	e	enum:webrtc::StereoChannel
kStereoRight	webrtc/common_types.h	/^enum StereoChannel { kStereoLeft = 0, kStereoRight, kStereoBoth };$/;"	e	enum:webrtc::StereoChannel
kStopping	webrtc/base/signalthread.h	/^    kStopping,        \/\/ Work is being interrupted$/;"	e	enum:rtc::SignalThread::State
kStrVal	webrtc/base/win32regkey_unittest.cc	/^const wchar_t kStrVal[] = L"Some string data 1";$/;"	m	namespace:rtc	file:
kStrVal2	webrtc/base/win32regkey_unittest.cc	/^const wchar_t kStrVal2[] = L"Some string data 2";$/;"	m	namespace:rtc	file:
kStreamHasEchoReference	webrtc/modules/audio_processing/echo_cancellation_bit_exact_unittest.cc	/^const bool kStreamHasEchoReference = true;$/;"	m	namespace:webrtc::__anon192	file:
kStreamHasVoiceReference	webrtc/modules/audio_processing/voice_detection_unittest.cc	/^const bool kStreamHasVoiceReference = true;$/;"	m	namespace:webrtc::__anon244	file:
kStreamParameterNotSetError	WebRTCAudioProcessing_jni.h	/^	kStreamParameterNotSetError = -11,$/;"	e	enum:Error
kStreamParameterNotSetError	webrtc/modules/audio_processing/include/audio_processing.h	/^    kStreamParameterNotSetError = -11,$/;"	e	enum:webrtc::AudioProcessing::Error
kSubCountLen	webrtc/modules/audio_processing/aec/aec_core.cc	/^static const size_t kSubCountLen = 4;$/;"	m	namespace:webrtc	file:
kSubkeyName	webrtc/base/win32regkey_unittest.cc	/^#define kSubkeyName /;"	d	file:
kSumLogIndex	webrtc/modules/audio_processing/ns/nsx_core.c	/^static const int16_t kSumLogIndex[66] = {$/;"	v	file:
kSumSquareLogIndex	webrtc/modules/audio_processing/ns/nsx_core.c	/^static const int16_t kSumSquareLogIndex[66] = {$/;"	v	file:
kSuppressionTableVirtualMic	webrtc/modules/audio_processing/agc/legacy/analog_agc.c	/^static const uint16_t kSuppressionTableVirtualMic[128] = {$/;"	v	file:
kSurplusCompressionGain	webrtc/modules/audio_processing/agc/agc_manager_direct.cc	/^const int kSurplusCompressionGain = 6;$/;"	m	namespace:webrtc::__anon169	file:
kSystemDelay	webrtc/modules/audio_processing/aec/aec_core.cc	/^  kSystemDelay,    \/\/ The delay values come from the OS.$/;"	m	class:webrtc::__anon145::DelaySource	file:
kTableSize	webrtc/common_audio/vad/vad_core.h	/^enum { kTableSize = kNumChannels * kNumGaussians };$/;"	e	enum:__anon104
kTargetLcPeakLevel	webrtc/modules/audio_processing/level_controller/level_controller_constants.h	/^const float kTargetLcPeakLevel = 16384.f;$/;"	m	namespace:webrtc
kTargetLcPeakLeveldBFS	webrtc/modules/audio_processing/level_controller/level_controller_constants.h	/^const float kTargetLcPeakLeveldBFS = -6.0206f;$/;"	m	namespace:webrtc
kTargetLevelTable	webrtc/modules/audio_processing/agc/legacy/analog_agc.c	/^static const int32_t kTargetLevelTable[64] = {$/;"	v	file:
kTargetSupp	webrtc/modules/audio_processing/aec/aec_core.cc	/^static const float kTargetSupp[3] = {-6.9f, -11.5f, -18.4f};$/;"	m	namespace:webrtc	file:
kTcpInternalDataSize	webrtc/base/socket_unittest.cc	/^static const size_t kTcpInternalDataSize = 1024 * 1024;  \/\/ bytes$/;"	m	namespace:rtc	file:
kTemporalLayersFactory	webrtc/modules/audio_processing/include/config.h	/^  kTemporalLayersFactory,  \/\/ Deprecated$/;"	m	class:webrtc::ConfigOptionID
kTemporalStructureMode1	webrtc/modules/include/module_common_types.h	/^  kTemporalStructureMode1,  \/\/ 1 temporal layer structure - i.e., IPPP...$/;"	e	enum:webrtc::TemporalStructureMode
kTemporalStructureMode2	webrtc/modules/include/module_common_types.h	/^  kTemporalStructureMode2,  \/\/ 2 temporal layers 01...$/;"	e	enum:webrtc::TemporalStructureMode
kTemporalStructureMode3	webrtc/modules/include/module_common_types.h	/^  kTemporalStructureMode3,  \/\/ 3 temporal layers 0212...$/;"	e	enum:webrtc::TemporalStructureMode
kTemporalStructureMode4	webrtc/modules/include/module_common_types.h	/^  kTemporalStructureMode4   \/\/ 3 temporal layers 02120212...$/;"	e	enum:webrtc::TemporalStructureMode
kTeredoPrefix	webrtc/base/ipaddress.cc	/^static const in6_addr kTeredoPrefix = {{{0x20, 0x01, 0x00, 0x00}}};$/;"	m	namespace:rtc	file:
kTestCenterFreqs	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer_unittest.cc	/^const float kTestCenterFreqs[] = {$/;"	m	namespace:webrtc::__anon203	file:
kTestCertCommonName	webrtc/base/rtccertificate_unittest.cc	/^static const char* kTestCertCommonName = "RTCCertificateTest's certificate";$/;"	m	namespace:rtc::__anon52	file:
kTestCertSha1	webrtc/base/sslidentity_unittest.cc	/^const unsigned char kTestCertSha1[] = {$/;"	v
kTestCertSha224	webrtc/base/sslidentity_unittest.cc	/^const unsigned char kTestCertSha224[] = {$/;"	v
kTestCertSha256	webrtc/base/sslidentity_unittest.cc	/^const unsigned char kTestCertSha256[] = {$/;"	v
kTestCertSha384	webrtc/base/sslidentity_unittest.cc	/^const unsigned char kTestCertSha384[] = {$/;"	v
kTestCertSha512	webrtc/base/sslidentity_unittest.cc	/^const unsigned char kTestCertSha512[] = {$/;"	v
kTestCertificate	webrtc/base/sslidentity_unittest.cc	/^const char kTestCertificate[] = "-----BEGIN CERTIFICATE-----\\n"$/;"	v
kTestData	webrtc/base/buffer_unittest.cc	/^const uint8_t kTestData[] = {0x0, 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7,$/;"	m	namespace:rtc::__anon7	file:
kTestData	webrtc/base/copyonwritebuffer_unittest.cc	/^const uint8_t kTestData[] = {0x0, 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7,$/;"	m	namespace:rtc::__anon9	file:
kTestFileName	webrtc/modules/audio_processing/transient/file_utils_unittest.cc	/^  const std::string kTestFileName;$/;"	m	class:webrtc::TransientFileUtilsTest	file:
kTestFileNamef	webrtc/modules/audio_processing/transient/file_utils_unittest.cc	/^  const std::string kTestFileNamef;$/;"	m	class:webrtc::TransientFileUtilsTest	file:
kTestFilterBank	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer_unittest.cc	/^const float kTestFilterBank[][33] = {$/;"	m	namespace:webrtc::__anon203	file:
kTestInt1	webrtc/base/optionsfile_unittest.cc	/^static int kTestInt1 = 12345;$/;"	m	namespace:rtc	file:
kTestInt2	webrtc/base/optionsfile_unittest.cc	/^static int kTestInt2 = 67890;$/;"	m	namespace:rtc	file:
kTestNonZeroVarLambdaTop	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer_unittest.cc	/^const float kTestNonZeroVarLambdaTop[] = {$/;"	m	namespace:webrtc::__anon203	file:
kTestOptionA	webrtc/base/optionsfile_unittest.cc	/^static const std::string kTestOptionA = "test-option-a";$/;"	m	namespace:rtc	file:
kTestOptionB	webrtc/base/optionsfile_unittest.cc	/^static const std::string kTestOptionB = "test-option-b";$/;"	m	namespace:rtc	file:
kTestStartFreq	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer_unittest.cc	/^const size_t kTestStartFreq = 12;  \/\/ Lowest integral frequency for ERBs.$/;"	m	namespace:webrtc::__anon203	file:
kTestString1	webrtc/base/optionsfile_unittest.cc	/^static const std::string kTestString1 = "a string";$/;"	m	namespace:rtc	file:
kTestString2	webrtc/base/optionsfile_unittest.cc	/^static const std::string kTestString2 = "different string";$/;"	m	namespace:rtc	file:
kTestTimeOutLimit	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  static const int kTestTimeOutLimit = 10 * 60 * 1000;$/;"	m	class:webrtc::__anon181::AudioProcessingImplLockTest	file:
kTestTimeout	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^  static const int32_t kTestTimeout = 3 * 10 * kMinNumFramesToProcess;$/;"	m	class:webrtc::__anon182::CallSimulator	file:
kTestV6Addr	webrtc/base/socketaddress_unittest.cc	/^const in6_addr kTestV6Addr =  { { {0x20, 0x01, 0x0d, 0xb8,$/;"	m	namespace:rtc	file:
kTestV6AddrAnonymizedString	webrtc/base/socketaddress_unittest.cc	/^const std::string kTestV6AddrAnonymizedString = "2001:db8:1020:x:x:x:x:x";$/;"	m	namespace:rtc	file:
kTestV6AddrFullAnonymizedString	webrtc/base/socketaddress_unittest.cc	/^const std::string kTestV6AddrFullAnonymizedString =$/;"	m	namespace:rtc	file:
kTestV6AddrFullString	webrtc/base/socketaddress_unittest.cc	/^const std::string kTestV6AddrFullString =$/;"	m	namespace:rtc	file:
kTestV6AddrString	webrtc/base/socketaddress_unittest.cc	/^const std::string kTestV6AddrString = "2001:db8:1020:3040:5060:7080:90a0:b0c0";$/;"	m	namespace:rtc	file:
kTestZeroVar	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer_unittest.cc	/^const float kTestZeroVar = 1.f;$/;"	m	namespace:webrtc::__anon203	file:
kTimeDataLength	webrtc/common_audio/signal_processing/real_fft_unittest.cc	/^const int kTimeDataLength = 1 << kOrder;$/;"	m	namespace:webrtc::__anon98	file:
kTimeUnset	webrtc/base/ratetracker.cc	/^static const int64_t kTimeUnset = -1;$/;"	m	namespace:rtc	file:
kTimeout	webrtc/base/nullsocketserver_unittest.cc	/^static const uint32_t kTimeout = 5000U;$/;"	m	namespace:rtc	file:
kTimeout	webrtc/base/signalthread_unittest.cc	/^static const int kTimeout = 10000;$/;"	v	file:
kTimeout	webrtc/base/socket_unittest.h	/^  static const int kTimeout = 5000;  \/\/ ms$/;"	m	class:rtc::SocketTest
kTimeout	webrtc/base/ssladapter_unittest.cc	/^static const int kTimeout = 5000;$/;"	v	file:
kTimeoutMs	webrtc/base/autodetectproxy_unittest.cc	/^static const int kTimeoutMs = 10000;$/;"	m	namespace:rtc	file:
kTimeoutMs	webrtc/base/dbus_unittest.cc	/^static const uint32_t kTimeoutMs = 5000U;$/;"	m	namespace:rtc	file:
kTimeoutMs	webrtc/base/testclient.h	/^  static const int kTimeoutMs = 5000;$/;"	m	class:rtc::TestClient
kTimestampLength	webrtc/system_wrappers/include/trace.h	/^  static const int kTimestampLength;$/;"	m	class:webrtc::Trace
kTimestampLength	webrtc/system_wrappers/source/trace_impl.cc	/^const int Trace::kTimestampLength = 12;$/;"	m	class:webrtc::Trace	file:
kTimestampOffsetDefaultId	webrtc/config.cc	/^const int RtpExtension::kTimestampOffsetDefaultId = 2;$/;"	m	class:webrtc::RtpExtension	file:
kTimestampOffsetDefaultId	webrtc/config.h	/^  static const int kTimestampOffsetDefaultId;$/;"	m	struct:webrtc::RtpExtension
kTimestampOffsetUri	webrtc/config.cc	/^const char* RtpExtension::kTimestampOffsetUri =$/;"	m	class:webrtc::RtpExtension	file:
kTimestampOffsetUri	webrtc/config.h	/^  static const char* kTimestampOffsetUri;$/;"	m	struct:webrtc::RtpExtension
kTimestampPosition	webrtc/system_wrappers/include/trace.h	/^  static const int kTimestampPosition;$/;"	m	class:webrtc::Trace
kTimestampPosition	webrtc/system_wrappers/source/trace_impl.cc	/^const int Trace::kTimestampPosition = 13;$/;"	m	class:webrtc::Trace	file:
kTolerance	webrtc/modules/audio_processing/beamformer/matrix_test_helpers.h	/^const float kTolerance = 0.001f;$/;"	m	namespace:__anon187
kTolerance	webrtc/modules/audio_processing/transient/moving_moments_unittest.cc	/^static const float kTolerance = 0.0001f;$/;"	m	namespace:webrtc	file:
kTolerance	webrtc/modules/audio_processing/transient/wpd_node_unittest.cc	/^static const float kTolerance = 0.0001f;$/;"	m	namespace:webrtc	file:
kTraceAll	webrtc/common_types.h	/^  kTraceAll = 0xffff$/;"	e	enum:webrtc::TraceLevel
kTraceApiCall	webrtc/common_types.h	/^  kTraceApiCall = 0x0010,$/;"	e	enum:webrtc::TraceLevel
kTraceArgBufferLength	webrtc/base/event_tracer.cc	/^static const size_t kTraceArgBufferLength = 32;$/;"	v	file:
kTraceAudioCoding	webrtc/common_types.h	/^  kTraceAudioCoding = 0x0007,$/;"	e	enum:webrtc::TraceModule
kTraceAudioDevice	webrtc/common_types.h	/^  kTraceAudioDevice = 0x0012,$/;"	e	enum:webrtc::TraceModule
kTraceAudioMixerClient	webrtc/common_types.h	/^  kTraceAudioMixerClient = 0x0009,$/;"	e	enum:webrtc::TraceModule
kTraceAudioMixerServer	webrtc/common_types.h	/^  kTraceAudioMixerServer = 0x0008,$/;"	e	enum:webrtc::TraceModule
kTraceAudioProcessing	webrtc/common_types.h	/^  kTraceAudioProcessing = 0x000b,$/;"	e	enum:webrtc::TraceModule
kTraceCritical	webrtc/common_types.h	/^  kTraceCritical = 0x0008,$/;"	e	enum:webrtc::TraceLevel
kTraceDebug	webrtc/common_types.h	/^  kTraceDebug = 0x0800,  \/\/ debug$/;"	e	enum:webrtc::TraceLevel
kTraceDefault	webrtc/common_types.h	/^  kTraceDefault = 0x00ff,$/;"	e	enum:webrtc::TraceLevel
kTraceError	webrtc/common_types.h	/^  kTraceError = 0x0004,$/;"	e	enum:webrtc::TraceLevel
kTraceFile	webrtc/common_types.h	/^  kTraceFile = 0x000a,$/;"	e	enum:webrtc::TraceModule
kTraceInfo	webrtc/common_types.h	/^  kTraceInfo = 0x1000,   \/\/ debug info$/;"	e	enum:webrtc::TraceLevel
kTraceMemory	webrtc/common_types.h	/^  kTraceMemory = 0x0100,  \/\/ memory info$/;"	e	enum:webrtc::TraceLevel
kTraceModuleCall	webrtc/common_types.h	/^  kTraceModuleCall = 0x0020,$/;"	e	enum:webrtc::TraceLevel
kTraceNone	webrtc/common_types.h	/^  kTraceNone = 0x0000,  \/\/ no trace$/;"	e	enum:webrtc::TraceLevel
kTraceRemoteBitrateEstimator	webrtc/common_types.h	/^  kTraceRemoteBitrateEstimator = 0x0017,$/;"	e	enum:webrtc::TraceModule
kTraceRtpRtcp	webrtc/common_types.h	/^  kTraceRtpRtcp = 0x0004,$/;"	e	enum:webrtc::TraceModule
kTraceSrtp	webrtc/common_types.h	/^  kTraceSrtp = 0x0006,$/;"	e	enum:webrtc::TraceModule
kTraceStateInfo	webrtc/common_types.h	/^  kTraceStateInfo = 0x0001,$/;"	e	enum:webrtc::TraceLevel
kTraceStream	webrtc/common_types.h	/^  kTraceStream = 0x0400,  \/\/ "continuous" stream of data$/;"	e	enum:webrtc::TraceLevel
kTraceTerseInfo	webrtc/common_types.h	/^  kTraceTerseInfo = 0x2000,$/;"	e	enum:webrtc::TraceLevel
kTraceTimer	webrtc/common_types.h	/^  kTraceTimer = 0x0200,   \/\/ timing info$/;"	e	enum:webrtc::TraceLevel
kTraceTransport	webrtc/common_types.h	/^  kTraceTransport = 0x0005,$/;"	e	enum:webrtc::TraceModule
kTraceUndefined	webrtc/common_types.h	/^  kTraceUndefined = 0,$/;"	e	enum:webrtc::TraceModule
kTraceUtility	webrtc/common_types.h	/^  kTraceUtility = 0x0003,$/;"	e	enum:webrtc::TraceModule
kTraceVideo	webrtc/common_types.h	/^  kTraceVideo = 0x0002,$/;"	e	enum:webrtc::TraceModule
kTraceVideoCapture	webrtc/common_types.h	/^  kTraceVideoCapture = 0x0015,$/;"	e	enum:webrtc::TraceModule
kTraceVideoCoding	webrtc/common_types.h	/^  kTraceVideoCoding = 0x0010,$/;"	e	enum:webrtc::TraceModule
kTraceVideoMixer	webrtc/common_types.h	/^  kTraceVideoMixer = 0x0011,$/;"	e	enum:webrtc::TraceModule
kTraceVideoRenderer	webrtc/common_types.h	/^  kTraceVideoRenderer = 0x0014,$/;"	e	enum:webrtc::TraceModule
kTraceVoice	webrtc/common_types.h	/^  kTraceVoice = 0x0001,$/;"	e	enum:webrtc::TraceModule
kTraceWarning	webrtc/common_types.h	/^  kTraceWarning = 0x0002,$/;"	e	enum:webrtc::TraceLevel
kTransientLengthMs	webrtc/modules/audio_processing/transient/transient_detector.cc	/^static const int kTransientLengthMs = 30;$/;"	m	namespace:webrtc	file:
kTransientWidthThreshold	webrtc/modules/audio_processing/agc/loudness_histogram.cc	/^static const int kTransientWidthThreshold = 7;$/;"	m	namespace:webrtc	file:
kTransientWidthThreshold	webrtc/modules/audio_processing/vad/pitch_based_vad.cc	/^static const int kTransientWidthThreshold = 7;$/;"	m	namespace:webrtc	file:
kTransportSequenceNumberDefaultId	webrtc/config.cc	/^const int RtpExtension::kTransportSequenceNumberDefaultId = 5;$/;"	m	class:webrtc::RtpExtension	file:
kTransportSequenceNumberDefaultId	webrtc/config.h	/^  static const int kTransportSequenceNumberDefaultId;$/;"	m	struct:webrtc::RtpExtension
kTransportSequenceNumberUri	webrtc/config.cc	/^const char* RtpExtension::kTransportSequenceNumberUri =$/;"	m	class:webrtc::RtpExtension	file:
kTransportSequenceNumberUri	webrtc/config.h	/^  static const char* kTransportSequenceNumberUri;$/;"	m	struct:webrtc::RtpExtension
kUndefined	webrtc/modules/include/module_common_types.h	/^    kUndefined = 4$/;"	e	enum:webrtc::AudioFrame::SpeechType
kUnspecifiedError	WebRTCAudioProcessing_jni.h	/^	kUnspecifiedError = -1,$/;"	e	enum:Error
kUnspecifiedError	webrtc/modules/audio_processing/include/audio_processing.h	/^    kUnspecifiedError = -1,$/;"	e	enum:webrtc::AudioProcessing::Error
kUnsupportedComponentError	WebRTCAudioProcessing_jni.h	/^	kUnsupportedComponentError = -3,$/;"	e	enum:Error
kUnsupportedComponentError	webrtc/modules/audio_processing/include/audio_processing.h	/^    kUnsupportedComponentError = -3,$/;"	e	enum:webrtc::AudioProcessing::Error
kUnsupportedFunctionError	WebRTCAudioProcessing_jni.h	/^	kUnsupportedFunctionError = -4,$/;"	e	enum:Error
kUnsupportedFunctionError	webrtc/modules/audio_processing/include/audio_processing.h	/^    kUnsupportedFunctionError = -4,$/;"	e	enum:webrtc::AudioProcessing::Error
kUpdateNetworksMessage	webrtc/base/network.cc	/^const uint32_t kUpdateNetworksMessage = 1;$/;"	m	namespace:rtc::__anon34	file:
kUpperBandBitRate12	webrtc/modules/audio_coding/codecs/isac/main/source/encode.c	/^static const int16_t kUpperBandBitRate12[7] = {$/;"	v	file:
kUpperBandBitRate16	webrtc/modules/audio_coding/codecs/isac/main/source/encode.c	/^static const int16_t kUpperBandBitRate16[6] = {$/;"	v	file:
kUsage	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer_test.cc	/^const char kUsage[] =$/;"	m	namespace:webrtc::__anon189	file:
kUsage	webrtc/modules/audio_processing/transient/transient_suppression_test.cc	/^const char kUsage[] =$/;"	m	namespace:webrtc	file:
kUsageDescription	webrtc/modules/audio_processing/test/audioproc_float.cc	/^const char kUsageDescription[] =$/;"	m	namespace:webrtc::test::__anon221	file:
kUserAgent	webrtc/base/autodetectproxy_unittest.cc	/^static const char kUserAgent[] = "";$/;"	m	namespace:rtc	file:
kUuidDigit17	webrtc/base/helpers.cc	/^static const char kUuidDigit17[4] = {'8', '9', 'a', 'b'};$/;"	m	namespace:rtc::__anon15	file:
kV4CompatibilityPrefix	webrtc/base/ipaddress.cc	/^static const in6_addr kV4CompatibilityPrefix = {{{0}}};$/;"	m	namespace:rtc	file:
kV4MappedPrefix	webrtc/base/ipaddress.cc	/^static const in6_addr kV4MappedPrefix = {{{0, 0, 0, 0, 0, 0, 0, 0, 0, 0,$/;"	m	namespace:rtc	file:
kVadActive	webrtc/modules/include/module_common_types.h	/^    kVadActive = 0,$/;"	e	enum:webrtc::AudioFrame::VADActivity
kVadAggressive	webrtc/common_audio/vad/include/vad.h	/^    kVadAggressive = 2,$/;"	e	enum:webrtc::Vad::Aggressiveness
kVadAggressiveHigh	webrtc/common_types.h	/^  kVadAggressiveHigh  \/\/ highest reduction$/;"	e	enum:webrtc::VadModes
kVadAggressiveLow	webrtc/common_types.h	/^  kVadAggressiveLow,$/;"	e	enum:webrtc::VadModes
kVadAggressiveMid	webrtc/common_types.h	/^  kVadAggressiveMid,$/;"	e	enum:webrtc::VadModes
kVadConventional	webrtc/common_types.h	/^  kVadConventional = 0,  \/\/ lowest reduction$/;"	e	enum:webrtc::VadModes
kVadLowBitrate	webrtc/common_audio/vad/include/vad.h	/^    kVadLowBitrate = 1,$/;"	e	enum:webrtc::Vad::Aggressiveness
kVadNormal	webrtc/common_audio/vad/include/vad.h	/^    kVadNormal = 0,$/;"	e	enum:webrtc::Vad::Aggressiveness
kVadPassive	webrtc/modules/include/module_common_types.h	/^    kVadPassive = 1,$/;"	e	enum:webrtc::AudioFrame::VADActivity
kVadUnknown	webrtc/modules/include/module_common_types.h	/^    kVadUnknown = 2$/;"	e	enum:webrtc::AudioFrame::VADActivity
kVadVeryAggressive	webrtc/common_audio/vad/include/vad.h	/^    kVadVeryAggressive = 3$/;"	e	enum:webrtc::Vad::Aggressiveness
kValNameBinary	webrtc/base/win32regkey_unittest.cc	/^const wchar_t kValNameBinary[] = L"Binary Value";$/;"	m	namespace:rtc	file:
kValNameDouble	webrtc/base/win32regkey_unittest.cc	/^const wchar_t kValNameDouble[] = L"Double Value";$/;"	m	namespace:rtc	file:
kValNameFloat	webrtc/base/win32regkey_unittest.cc	/^const wchar_t kValNameFloat[] = L"Float Value";$/;"	m	namespace:rtc	file:
kValNameInt	webrtc/base/win32regkey_unittest.cc	/^const wchar_t kValNameInt[] = L"Int32 Value";$/;"	m	namespace:rtc	file:
kValNameInt64	webrtc/base/win32regkey_unittest.cc	/^const wchar_t kValNameInt64[] = L"Int64 Value";$/;"	m	namespace:rtc	file:
kValNameMultiStr	webrtc/base/win32regkey_unittest.cc	/^const wchar_t kValNameMultiStr[] = L"MultiStr Value";$/;"	m	namespace:rtc	file:
kValNameStr	webrtc/base/win32regkey_unittest.cc	/^const wchar_t kValNameStr[] = L"Str Value";$/;"	m	namespace:rtc	file:
kValThreshold	webrtc/modules/audio_processing/vad/vad_circular_buffer_unittest.cc	/^static const double kValThreshold = 1.0;$/;"	m	namespace:webrtc	file:
kValidRates	webrtc/common_audio/vad/webrtc_vad.c	/^static const int kValidRates[] = { 8000, 16000, 32000, 48000 };$/;"	v	file:
kValueUndefined	webrtc/base/exp_filter.cc	/^const float ExpFilter::kValueUndefined = -1.0f;$/;"	m	class:rtc::ExpFilter	file:
kValueUndefined	webrtc/base/exp_filter.h	/^  static const float kValueUndefined;$/;"	m	class:rtc::ExpFilter
kValueWithEquals	webrtc/base/optionsfile_unittest.cc	/^static const std::string kValueWithEquals = "baz=quux";$/;"	m	namespace:rtc	file:
kValueWithNewline	webrtc/base/optionsfile_unittest.cc	/^static const std::string kValueWithNewline = "baz\\nquux";$/;"	m	namespace:rtc	file:
kValueWithUtf8	webrtc/base/optionsfile_unittest.cc	/^static const char kValueWithUtf8[] = {'V', 'a', 'l', '\\302', '\\256', 'v', 'e',$/;"	m	namespace:rtc	file:
kVector16Size	webrtc/common_audio/signal_processing/signal_processing_unittest.cc	/^static const size_t kVector16Size = 9;$/;"	v	file:
kVeryHigh	webrtc/modules/audio_processing/include/audio_processing.h	/^    kVeryHigh$/;"	e	enum:webrtc::NoiseSuppression::Level
kVeryLowLikelihood	webrtc/modules/audio_processing/include/audio_processing.h	/^    kVeryLowLikelihood,$/;"	e	enum:webrtc::VoiceDetection::Likelihood
kVideoARGB	webrtc/common_types.h	/^  kVideoARGB = 5,$/;"	e	enum:webrtc::RawVideoType
kVideoARGB1555	webrtc/common_types.h	/^  kVideoARGB1555 = 9,$/;"	e	enum:webrtc::RawVideoType
kVideoARGB4444	webrtc/common_types.h	/^  kVideoARGB4444 = 8,$/;"	e	enum:webrtc::RawVideoType
kVideoBGRA	webrtc/common_types.h	/^  kVideoBGRA = 13,$/;"	e	enum:webrtc::RawVideoType
kVideoCodecGeneric	webrtc/common_types.h	/^  kVideoCodecGeneric,$/;"	e	enum:webrtc::VideoCodecType
kVideoCodecH264	webrtc/common_types.h	/^  kVideoCodecH264,$/;"	e	enum:webrtc::VideoCodecType
kVideoCodecI420	webrtc/common_types.h	/^  kVideoCodecI420,$/;"	e	enum:webrtc::VideoCodecType
kVideoCodecRED	webrtc/common_types.h	/^  kVideoCodecRED,$/;"	e	enum:webrtc::VideoCodecType
kVideoCodecULPFEC	webrtc/common_types.h	/^  kVideoCodecULPFEC,$/;"	e	enum:webrtc::VideoCodecType
kVideoCodecUnknown	webrtc/common_types.h	/^  kVideoCodecUnknown$/;"	e	enum:webrtc::VideoCodecType
kVideoCodecVP8	webrtc/common_types.h	/^  kVideoCodecVP8,$/;"	e	enum:webrtc::VideoCodecType
kVideoCodecVP9	webrtc/common_types.h	/^  kVideoCodecVP9,$/;"	e	enum:webrtc::VideoCodecType
kVideoFrameDelta	webrtc/common_types.h	/^  kVideoFrameDelta = 4,$/;"	e	enum:webrtc::FrameType
kVideoFrameKey	webrtc/common_types.h	/^  kVideoFrameKey = 3,$/;"	e	enum:webrtc::FrameType
kVideoI420	webrtc/common_types.h	/^  kVideoI420 = 0,$/;"	e	enum:webrtc::RawVideoType
kVideoIYUV	webrtc/common_types.h	/^  kVideoIYUV = 4,$/;"	e	enum:webrtc::RawVideoType
kVideoMJPEG	webrtc/common_types.h	/^  kVideoMJPEG = 10,$/;"	e	enum:webrtc::RawVideoType
kVideoNV12	webrtc/common_types.h	/^  kVideoNV12 = 11,$/;"	e	enum:webrtc::RawVideoType
kVideoNV21	webrtc/common_types.h	/^  kVideoNV21 = 12,$/;"	e	enum:webrtc::RawVideoType
kVideoRGB24	webrtc/common_types.h	/^  kVideoRGB24 = 6,$/;"	e	enum:webrtc::RawVideoType
kVideoRGB565	webrtc/common_types.h	/^  kVideoRGB565 = 7,$/;"	e	enum:webrtc::RawVideoType
kVideoRotationDefaultId	webrtc/config.cc	/^const int RtpExtension::kVideoRotationDefaultId = 4;$/;"	m	class:webrtc::RtpExtension	file:
kVideoRotationDefaultId	webrtc/config.h	/^  static const int kVideoRotationDefaultId;$/;"	m	struct:webrtc::RtpExtension
kVideoRotationUri	webrtc/config.cc	/^const char* RtpExtension::kVideoRotationUri = "urn:3gpp:video-orientation";$/;"	m	class:webrtc::RtpExtension	file:
kVideoRotationUri	webrtc/config.h	/^  static const char* kVideoRotationUri;$/;"	m	struct:webrtc::RtpExtension
kVideoRotation_0	webrtc/common_video/rotation.h	/^  kVideoRotation_0 = 0,$/;"	e	enum:webrtc::VideoRotation
kVideoRotation_180	webrtc/common_video/rotation.h	/^  kVideoRotation_180 = 180,$/;"	e	enum:webrtc::VideoRotation
kVideoRotation_270	webrtc/common_video/rotation.h	/^  kVideoRotation_270 = 270$/;"	e	enum:webrtc::VideoRotation
kVideoRotation_90	webrtc/common_video/rotation.h	/^  kVideoRotation_90 = 90,$/;"	e	enum:webrtc::VideoRotation
kVideoUYVY	webrtc/common_types.h	/^  kVideoUYVY = 3,$/;"	e	enum:webrtc::RawVideoType
kVideoUnknown	webrtc/common_types.h	/^  kVideoUnknown = 99$/;"	e	enum:webrtc::RawVideoType
kVideoYUY2	webrtc/common_types.h	/^  kVideoYUY2 = 2,$/;"	e	enum:webrtc::RawVideoType
kVideoYV12	webrtc/common_types.h	/^  kVideoYV12 = 1,$/;"	e	enum:webrtc::RawVideoType
kVisibleWindowTitle	webrtc/base/win32windowpicker_unittest.cc	/^static const TCHAR* kVisibleWindowTitle = L"Visible Window";$/;"	m	namespace:rtc	file:
kVoiceGmmCovarInverse	webrtc/modules/audio_processing/vad/voice_gmm_tables.h	/^    kVoiceGmmCovarInverse[kVoiceGmmNumMixtures][kVoiceGmmDim][kVoiceGmmDim] = {$/;"	v
kVoiceGmmDim	webrtc/modules/audio_processing/vad/voice_gmm_tables.h	/^static const int kVoiceGmmDim = 3;$/;"	v
kVoiceGmmMean	webrtc/modules/audio_processing/vad/voice_gmm_tables.h	/^static const double kVoiceGmmMean[kVoiceGmmNumMixtures][kVoiceGmmDim] = {$/;"	v
kVoiceGmmNumMixtures	webrtc/modules/audio_processing/vad/voice_gmm_tables.h	/^static const int kVoiceGmmNumMixtures = 12;$/;"	v
kVoiceGmmWeights	webrtc/modules/audio_processing/vad/voice_gmm_tables.h	/^static const double kVoiceGmmWeights[kVoiceGmmNumMixtures] = {$/;"	v
kVoicePacing	webrtc/modules/audio_processing/include/config.h	/^  kVoicePacing,  \/\/ Deprecated$/;"	m	class:webrtc::ConfigOptionID
kVoiceProbabilityThreshold	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer.cc	/^const float kVoiceProbabilityThreshold = 0.5f;$/;"	m	namespace:webrtc::__anon202	file:
kVoiceThreshold	webrtc/modules/audio_processing/transient/transient_suppressor.cc	/^static const float kVoiceThreshold = 0.02f;$/;"	m	namespace:webrtc	file:
kWaitThresholdInMs	webrtc/base/sharedexclusivelock_unittest.cc	/^static const int kWaitThresholdInMs = 80;$/;"	m	namespace:rtc	file:
kWaitTimeout	webrtc/base/thread_unittest.cc	/^  const static int kWaitTimeout = 1000;$/;"	m	class:GuardedAsyncInvokeTest	file:
kWaitTimeout	webrtc/base/thread_unittest.cc	/^  enum { kWaitTimeout = 1000 };$/;"	e	enum:AsyncInvokeTest::__anon70	file:
kWavFormat	webrtc/common_audio/wav_file.cc	/^static const WavFormat kWavFormat = kWavFormatPcm;$/;"	m	namespace:webrtc	file:
kWavFormatALaw	webrtc/common_audio/wav_header.h	/^  kWavFormatALaw  = 6,  \/\/ 8-bit ITU-T G.711 A-law$/;"	e	enum:webrtc::WavFormat
kWavFormatMuLaw	webrtc/common_audio/wav_header.h	/^  kWavFormatMuLaw = 7,  \/\/ 8-bit ITU-T G.711 mu-law$/;"	e	enum:webrtc::WavFormat
kWavFormatPcm	webrtc/common_audio/wav_header.h	/^  kWavFormatPcm   = 1,  \/\/ PCM, each sample of size bytes_per_sample$/;"	e	enum:webrtc::WavFormat
kWavHeaderSize	webrtc/common_audio/wav_header.cc	/^static_assert(sizeof(WavHeader) == kWavHeaderSize, "no padding in header");$/;"	m	namespace:webrtc::__anon112	file:
kWavHeaderSize	webrtc/common_audio/wav_header.h	/^static const size_t kWavHeaderSize = 44;$/;"	m	namespace:webrtc
kWebRtcSpl_CountLeadingZeros32_Table	webrtc/common_audio/signal_processing/spl_inl.c	/^const int8_t kWebRtcSpl_CountLeadingZeros32_Table[64] = {$/;"	v
kWeight	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_estimator.c	/^static const double kWeight[5][5] = {$/;"	v	file:
kWhitespace	webrtc/base/stringutils.cc	/^static const char kWhitespace[] = " \\n\\r\\t";$/;"	m	namespace:rtc	file:
kWidthThreshold	webrtc/modules/audio_processing/vad/vad_circular_buffer_unittest.cc	/^static const int kWidthThreshold = 7;$/;"	m	namespace:webrtc	file:
kWindowBaseClassName	webrtc/base/win32window.cc	/^static const wchar_t kWindowBaseClassName[] = L"WindowBaseClass";$/;"	m	namespace:rtc	file:
kWindowListCopyWindowInfo	webrtc/base/macwindowpicker.cc	/^static const char* kWindowListCopyWindowInfo = "CGWindowListCopyWindowInfo";$/;"	m	namespace:rtc	file:
kWindowListCreateDescriptionFromArray	webrtc/base/macwindowpicker.cc	/^static const char* kWindowListCreateDescriptionFromArray =$/;"	m	namespace:rtc	file:
kWindowMs	webrtc/base/rate_statistics_unittest.cc	/^const int64_t kWindowMs = 500;$/;"	m	namespace:__anon48	file:
kWindowName	webrtc/base/win32socketserver.cc	/^const TCHAR Win32SocketServer::kWindowName[] = L"libjingle Message Window";$/;"	m	class:rtc::Win32SocketServer	file:
kWindowName	webrtc/base/win32socketserver.h	/^  static const TCHAR kWindowName[];$/;"	m	class:rtc::Win32SocketServer
kWindowSizeMs	webrtc/base/rate_limiter_unittest.cc	/^  static constexpr int64_t kWindowSizeMs = 1000;$/;"	m	class:webrtc::RateLimitTest	file:
kWindowSizeMs	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer.cc	/^const int kWindowSizeMs = 16;$/;"	m	namespace:webrtc::__anon202	file:
kWindows2000	webrtc/base/win32.h	/^  kWindows2000 = 5,$/;"	e	enum:rtc::WindowsMajorVersions
kWindowsVista	webrtc/base/win32.h	/^  kWindowsVista = 6,$/;"	e	enum:rtc::WindowsMajorVersions
kWrite	webrtc/base/filerotatingstream.h	/^  enum Mode { kRead, kWrite };$/;"	e	enum:rtc::FileRotatingStream::Mode
kYearInSeconds	webrtc/base/rtccertificategenerator.cc	/^uint64_t kYearInSeconds = 365 * 24 * 60 * 60;$/;"	m	namespace:rtc::__anon53	file:
kZero	webrtc/base/optionsfile_unittest.cc	/^static int kZero = 0;$/;"	m	namespace:rtc	file:
kZeroNumArgs	webrtc/base/trace_event.h	/^const int kZeroNumArgs = 0;$/;"	m	namespace:webrtc::trace_event_internal
k_	webrtc/common_audio/resampler/sinusoidal_linear_chirp_source.h	/^  double k_;$/;"	m	class:webrtc::SinusoidalLinearChirpSource
k_swap_sign	webrtc/modules/audio_processing/utility/ooura_fft_tables_neon_sse2.h	/^const ALIGN16_BEG float ALIGN16_END k_swap_sign[4] = {-1.f, 1.f, -1.f, 1.f};$/;"	m	namespace:webrtc
kernel_pre_sinc_storage_	webrtc/common_audio/resampler/sinc_resampler.h	/^  std::unique_ptr<float[], AlignedFreeDeleter> kernel_pre_sinc_storage_;$/;"	m	class:webrtc::SincResampler
kernel_storage_	webrtc/common_audio/resampler/sinc_resampler.h	/^  std::unique_ptr<float[], AlignedFreeDeleter> kernel_storage_;$/;"	m	class:webrtc::SincResampler
kernel_window_storage_	webrtc/common_audio/resampler/sinc_resampler.h	/^  std::unique_ptr<float[], AlignedFreeDeleter> kernel_window_storage_;$/;"	m	class:webrtc::SincResampler
key	webrtc/base/network.h	/^  std::string key() const { return key_; }$/;"	f	class:rtc::Network
key	webrtc/base/win32regkey.h	/^  HKEY key() { return h_key_; }$/;"	f	class:rtc::RegKey
keyFrameInterval	webrtc/common_types.h	/^  int keyFrameInterval;$/;"	m	struct:webrtc::VideoCodecH264
keyFrameInterval	webrtc/common_types.h	/^  int keyFrameInterval;$/;"	m	struct:webrtc::VideoCodecVP8
keyFrameInterval	webrtc/common_types.h	/^  int keyFrameInterval;$/;"	m	struct:webrtc::VideoCodecVP9
keyIdx	webrtc/modules/include/module_common_types.h	/^  int keyIdx;                 \/\/ 5 bits; kNoKeyIdx means not used.$/;"	m	struct:webrtc::RTPVideoHeaderVP8
key_	webrtc/base/network.h	/^  std::string key_;$/;"	m	class:rtc::Network
key_	webrtc/base/thread.h	/^  DWORD key_;$/;"	m	class:rtc::ThreadManager
key_	webrtc/base/thread.h	/^  pthread_key_t key_;$/;"	m	class:rtc::ThreadManager
key_frames	webrtc/common_types.h	/^  int key_frames;$/;"	m	struct:webrtc::FrameCounts
key_pair_	webrtc/base/opensslidentity.h	/^  std::unique_ptr<OpenSSLKeyPair> key_pair_;$/;"	m	class:rtc::OpenSSLIdentity
key_params	webrtc/base/sslidentity.h	/^  KeyParams key_params;$/;"	m	struct:rtc::SSLIdentityParams
key_params_	webrtc/base/rtccertificategenerator.cc	/^  const KeyParams key_params_;$/;"	m	class:rtc::__anon53::RTCCertificateGenerationTask	file:
key_pressed	webrtc/modules/audio_processing/audio_processing_impl.h	/^    bool key_pressed;$/;"	m	struct:webrtc::AudioProcessingImpl::ApmCaptureState
keyboard_data	webrtc/modules/audio_processing/audio_buffer.cc	/^const float* AudioBuffer::keyboard_data() const {$/;"	f	class:webrtc::AudioBuffer
keyboard_data_	webrtc/modules/audio_processing/audio_buffer.h	/^  const float* keyboard_data_;$/;"	m	class:webrtc::AudioBuffer
keypress_counter_	webrtc/modules/audio_processing/transient/transient_suppressor.h	/^  int keypress_counter_;$/;"	m	class:webrtc::TransientSuppressor
knownDelay	webrtc/modules/audio_processing/aec/aec_core.h	/^  int knownDelay;$/;"	m	struct:webrtc::AecCore
knownDelay	webrtc/modules/audio_processing/aec/echo_cancellation.h	/^  int knownDelay;$/;"	m	struct:webrtc::Aec
knownDelay	webrtc/modules/audio_processing/aecm/aecm_core.h	/^    int knownDelay;$/;"	m	struct:__anon164
knownDelay	webrtc/modules/audio_processing/aecm/echo_control_mobile.cc	/^    int knownDelay;$/;"	m	struct:__anon165	file:
label	webrtc/base/logging.h	/^struct ConstantLabel { int value; const char * label; };$/;"	m	struct:rtc::ConstantLabel
label_	webrtc/base/socketadapters.h	/^  std::string label_;$/;"	m	class:rtc::LoggingSocketAdapter
label_	webrtc/base/socketpool.h	/^  std::string label_;$/;"	m	class:rtc::LoggingPoolAdapter
label_	webrtc/base/stream.h	/^  std::string label_;$/;"	m	class:rtc::LoggingAdapter
lag	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_filter.c	/^  double lag;$/;"	m	struct:__anon124	file:
lag_offset	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_filter.c	/^  int lag_offset;$/;"	m	struct:__anon124	file:
last	webrtc/base/thread_unittest.cc	/^  int last;$/;"	m	class:TestGenerator	file:
lastBWIdx	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  int16_t         lastBWIdx;$/;"	m	struct:__anon136
lastDelayDiff	webrtc/modules/audio_processing/aec/echo_cancellation.h	/^  short lastDelayDiff;$/;"	m	struct:webrtc::Aec
lastDelayDiff	webrtc/modules/audio_processing/aecm/echo_control_mobile.cc	/^    short lastDelayDiff;$/;"	m	struct:__anon165	file:
lastError	webrtc/modules/audio_processing/agc/legacy/analog_agc.h	/^  int16_t lastError;$/;"	m	struct:__anon171
lastInMicLevel	webrtc/modules/audio_processing/agc/legacy/analog_agc.h	/^  int32_t lastInMicLevel;$/;"	m	struct:__anon171
lastJitterInfo	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  int16_t             lastJitterInfo;$/;"	m	struct:__anon137
lastKnownDelay	webrtc/modules/audio_processing/aecm/aecm_core.h	/^    int lastKnownDelay;$/;"	m	struct:__anon164
lastLPCVec	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  double                  lastLPCVec[UB_LPC_ORDER];$/;"	m	struct:__anon137
last_aec_system_delay_ms	webrtc/modules/audio_processing/audio_processing_impl.h	/^    int last_aec_system_delay_ms;$/;"	m	struct:webrtc::AudioProcessingImpl::ApmCaptureState
last_candidate_delay	webrtc/modules/audio_processing/utility/delay_estimator.h	/^  int last_candidate_delay;$/;"	m	struct:__anon228
last_delay	webrtc/modules/audio_processing/utility/delay_estimator.h	/^  int last_delay;$/;"	m	struct:__anon228
last_delay_histogram	webrtc/modules/audio_processing/utility/delay_estimator.h	/^  float last_delay_histogram;$/;"	m	struct:__anon228
last_delay_probability	webrtc/modules/audio_processing/utility/delay_estimator.h	/^  int last_delay_probability;$/;"	m	struct:__anon228
last_delivery_time_	webrtc/base/virtualsocketserver.h	/^  int64_t last_delivery_time_ = 0;$/;"	m	class:rtc::VirtualSocket
last_first_moment_	webrtc/modules/audio_processing/transient/transient_detector.h	/^  float last_first_moment_[kLeaves];$/;"	m	class:webrtc::TransientDetector
last_frame_was_saturated_	webrtc/modules/audio_processing/level_controller/gain_applier.h	/^  bool last_frame_was_saturated_;$/;"	m	class:webrtc::GainApplier
last_gain_	webrtc/modules/audio_processing/level_controller/level_controller.h	/^  float last_gain_;$/;"	m	class:webrtc::LevelController
last_modified	webrtc/base/diskcache.h	/^    time_t last_modified;$/;"	m	struct:rtc::DiskCache::Entry
last_reduction_ts	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  uint32_t    last_reduction_ts;$/;"	m	struct:__anon131
last_second_moment_	webrtc/modules/audio_processing/transient/transient_detector.h	/^  float last_second_moment_[kLeaves];$/;"	m	class:webrtc::TransientDetector
last_send	webrtc/base/virtualsocket_unittest.cc	/^  int64_t last_send;$/;"	m	struct:Sender	file:
last_sent_packet_id	webrtc/base/networkroute.h	/^  int last_sent_packet_id;  \/\/ Last packet id sent on the PREVIOUS route.$/;"	m	struct:rtc::NetworkRoute
last_seq_	webrtc/modules/include/module_common_types.h	/^  int64_t last_seq_;$/;"	m	class:webrtc::SequenceNumberUnwrapper
last_serialized_config	webrtc/modules/audio_processing/audio_processing_impl.h	/^    std::string last_serialized_config;$/;"	m	struct:webrtc::AudioProcessingImpl::ApmDebugDumpThreadState
last_signal_type_	webrtc/modules/audio_processing/level_controller/signal_classifier.h	/^  SignalType last_signal_type_;$/;"	m	class:webrtc::SignalClassifier
last_specified_microphone_level_	webrtc/modules/audio_processing/test/wav_based_simulator.h	/^  int last_specified_microphone_level_ = 100;$/;"	m	class:webrtc::test::final
last_stream_delay_ms	webrtc/modules/audio_processing/audio_processing_impl.h	/^    int last_stream_delay_ms;$/;"	m	struct:webrtc::AudioProcessingImpl::ApmCaptureState
last_ts_	webrtc/base/timeutils.h	/^  uint32_t last_ts_;$/;"	m	class:rtc::TimestampWrapAroundHandler
last_update_ts	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  uint32_t    last_update_ts;$/;"	m	struct:__anon131
last_voice_probability	webrtc/modules/audio_processing/vad/voice_activity_detector.h	/^  float last_voice_probability() const { return last_voice_probability_; }$/;"	f	class:webrtc::VoiceActivityDetector
last_voice_probability_	webrtc/modules/audio_processing/vad/voice_activity_detector.h	/^  float last_voice_probability_;$/;"	m	class:webrtc::VoiceActivityDetector
layerSync	webrtc/modules/include/module_common_types.h	/^  bool layerSync;             \/\/ This frame is a layer sync frame.$/;"	m	struct:webrtc::RTPVideoHeaderVP8
len_	webrtc/base/httpbase.h	/^  size_t len_;$/;"	m	class:rtc::HttpBase
len_	webrtc/base/transformadapter.h	/^  size_t len_;$/;"	m	class:rtc::TransformAdapter
len_circular_buffer_	webrtc/modules/audio_processing/agc/loudness_histogram.h	/^  int len_circular_buffer_;$/;"	m	class:webrtc::LoudnessHistogram
len_high_activity_	webrtc/modules/audio_processing/agc/loudness_histogram.h	/^  int len_high_activity_;$/;"	m	class:webrtc::LoudnessHistogram
length	webrtc/modules/audio_processing/transient/wpd_node.h	/^  size_t length() const { return length_; }$/;"	f	class:webrtc::WPDNode
length_	webrtc/base/cryptstring.h	/^  size_t length_;$/;"	m	class:rtc::FormatCryptString
length_	webrtc/base/swap_queue_unittest.cc	/^  size_t length_;$/;"	m	class:webrtc::__anon63::LengthVerifierFunctor	file:
length_	webrtc/common_audio/real_fourier_ooura.h	/^  const size_t length_;$/;"	m	class:webrtc::RealFourierOoura
length_	webrtc/modules/audio_processing/transient/moving_moments.h	/^  size_t length_;$/;"	m	class:webrtc::MovingMoments
length_	webrtc/modules/audio_processing/transient/wpd_node.h	/^  size_t length_;$/;"	m	class:webrtc::WPDNode
level	webrtc/base/java/src/org/webrtc/Logging.java	/^    public final int level;$/;"	f	class:Logging.TraceLevel
level	webrtc/modules/audio_processing/noise_suppression_impl.cc	/^NoiseSuppression::Level NoiseSuppressionImpl::level() const {$/;"	f	class:webrtc::NoiseSuppressionImpl
level_	webrtc/base/socketadapters.h	/^  LoggingSeverity level_;$/;"	m	class:rtc::LoggingSocketAdapter
level_	webrtc/base/socketpool.h	/^  LoggingSeverity level_;$/;"	m	class:rtc::LoggingPoolAdapter
level_	webrtc/base/stream.h	/^  LoggingSeverity level_;$/;"	m	class:rtc::LoggingAdapter
level_	webrtc/modules/audio_processing/agc/agc_manager_direct.h	/^  int level_;$/;"	m	class:webrtc::final
level_controller	webrtc/modules/audio_processing/audio_processing_impl.cc	/^  std::unique_ptr<LevelController> level_controller;$/;"	m	struct:webrtc::AudioProcessingImpl::ApmPrivateSubmodules	file:
level_controller	webrtc/modules/audio_processing/include/audio_processing.h	/^    } level_controller;$/;"	m	struct:webrtc::AudioProcessing::Config	typeref:struct:webrtc::AudioProcessing::Config::LevelController
level_controller_enabled	webrtc/modules/audio_processing/audio_processing_impl.h	/^    bool level_controller_enabled = false;$/;"	m	struct:webrtc::AudioProcessingImpl::ApmCaptureNonLockedState
level_controller_enabled_	webrtc/modules/audio_processing/audio_processing_impl.h	/^    bool level_controller_enabled_ = false;$/;"	m	class:webrtc::AudioProcessingImpl::ApmSubmoduleStates
level_estimator	webrtc/modules/audio_processing/audio_processing_impl.cc	/^  std::unique_ptr<LevelEstimatorImpl> level_estimator;$/;"	m	struct:webrtc::AudioProcessingImpl::ApmPublicSubmodules	file:
level_estimator	webrtc/modules/audio_processing/audio_processing_impl.cc	/^LevelEstimator* AudioProcessingImpl::level_estimator() const {$/;"	f	class:webrtc::AudioProcessingImpl
level_estimator	webrtc/modules/audio_processing/include/mock_audio_processing.h	/^  virtual MockLevelEstimator* level_estimator() const {$/;"	f	class:webrtc::test::MockAudioProcessing
level_estimator_	webrtc/modules/audio_processing/include/mock_audio_processing.h	/^  std::unique_ptr<MockLevelEstimator> level_estimator_;$/;"	m	class:webrtc::test::MockAudioProcessing
level_estimator_enabled_	webrtc/modules/audio_processing/audio_processing_impl.h	/^    bool level_estimator_enabled_ = false;$/;"	m	class:webrtc::AudioProcessingImpl::ApmSubmoduleStates
level_filter	webrtc/system_wrappers/source/trace_impl.cc	/^int Trace::level_filter() {$/;"	f	class:webrtc::Trace
level_filter_	webrtc/system_wrappers/include/trace.h	/^  static volatile int level_filter_;$/;"	m	class:webrtc::Trace
level_filter_	webrtc/system_wrappers/source/trace_impl.cc	/^volatile int Trace::level_filter_ = kTraceDefault;$/;"	m	class:webrtc::Trace	file:
levels	webrtc/modules/audio_processing/transient/wpd_tree.h	/^  int levels() const { return levels_; }$/;"	f	class:webrtc::WPDTree
levels_	webrtc/modules/audio_processing/transient/wpd_tree.h	/^  int levels_;$/;"	m	class:webrtc::WPDTree
lib_handle_	webrtc/base/macwindowpicker.h	/^  void* lib_handle_;$/;"	m	class:rtc::MacWindowPicker
likelihood	webrtc/modules/audio_processing/voice_detection_impl.cc	/^VoiceDetection::Likelihood VoiceDetectionImpl::likelihood() const {$/;"	f	class:webrtc::VoiceDetectionImpl
limitPeakSpacingSpecDiff	webrtc/modules/audio_processing/ns/ns_core.h	/^  float limitPeakSpacingSpecDiff;$/;"	m	struct:NSParaExtract_
limitPeakSpacingSpecFlat	webrtc/modules/audio_processing/ns/ns_core.h	/^  float limitPeakSpacingSpecFlat;$/;"	m	struct:NSParaExtract_
limitPeakWeightsSpecDiff	webrtc/modules/audio_processing/ns/ns_core.h	/^  float limitPeakWeightsSpecDiff;$/;"	m	struct:NSParaExtract_
limitPeakWeightsSpecFlat	webrtc/modules/audio_processing/ns/ns_core.h	/^  float limitPeakWeightsSpecFlat;$/;"	m	struct:NSParaExtract_
limiterEnable	webrtc/common_types.h	/^  bool limiterEnable;$/;"	m	struct:webrtc::AgcConfig
limiterEnable	webrtc/modules/audio_processing/agc/legacy/analog_agc.h	/^  uint8_t limiterEnable;      \/\/ Enabling limiter (on\/off (default off))$/;"	m	struct:__anon171
limiterEnable	webrtc/modules/audio_processing/agc/legacy/gain_control.h	/^  uint8_t limiterEnable;      \/\/ default kAgcTrue (on)$/;"	m	struct:__anon177
limits_int16	webrtc/common_audio/include/audio_util.h	/^typedef std::numeric_limits<int16_t> limits_int16;$/;"	t	namespace:webrtc
link	webrtc/base/unixfilesystem.cc	/^link(const char* oldpath, const char* newpath) {$/;"	f
linked_ptr	webrtc/base/linked_ptr.h	/^    explicit linked_ptr(X* p = 0) throw()$/;"	f	class:rtc::linked_ptr
linked_ptr	webrtc/base/linked_ptr.h	/^    linked_ptr(const linked_ptr& r) throw()$/;"	f	class:rtc::linked_ptr
linked_ptr	webrtc/base/linked_ptr.h	/^    template <class Y> linked_ptr(const linked_ptr<Y>& r) throw()$/;"	f	class:rtc::linked_ptr
linked_ptr	webrtc/base/linked_ptr.h	/^template <class X> class linked_ptr$/;"	c	namespace:rtc
linoutlevel	webrtc/modules/audio_processing/aec/aec_core.h	/^  PowerLevel linoutlevel;$/;"	m	struct:webrtc::AecCore
list	webrtc/base/flags.h	/^  static Flag* list()  { return list_; }$/;"	f	class:rtc::FlagList
list_	webrtc/base/flags.cc	/^Flag* FlagList::list_ = NULL;$/;"	m	class:rtc::FlagList	file:
list_	webrtc/base/flags.h	/^  static Flag* list_;$/;"	m	class:rtc::FlagList
listen_	webrtc/base/asynctcpsocket.h	/^  bool listen_;$/;"	m	class:rtc::AsyncTCPSocketBase
listen_queue_	webrtc/base/virtualsocketserver.h	/^  ListenQueue* listen_queue_;$/;"	m	class:rtc::VirtualSocket
listener_	webrtc/base/httpserver.h	/^  std::unique_ptr<AsyncSocket> listener_;$/;"	m	class:rtc::HttpListenServer
literal_	webrtc/base/socketaddress.h	/^  bool literal_;  \/\/ Indicates that 'hostname_' contains a literal IP string.$/;"	m	class:rtc::SocketAddress
lms_	webrtc/base/socketadapters.h	/^  LogMultilineState lms_;$/;"	m	class:rtc::LoggingSocketAdapter
lms_	webrtc/base/stream.h	/^  LogMultilineState lms_;$/;"	m	class:rtc::LoggingAdapter
loFiltGain	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  double       loFiltGain[SUBFRAMES];$/;"	m	struct:__anon142
local_addr_	webrtc/base/virtualsocketserver.h	/^  SocketAddress local_addr_;$/;"	m	class:rtc::VirtualSocket
local_network_id	webrtc/base/networkroute.h	/^  uint16_t local_network_id;$/;"	m	struct:rtc::NetworkRoute
lock	webrtc/base/sigslot.cc	/^void multi_threaded_global::lock() {$/;"	f	class:sigslot::multi_threaded_global
lock	webrtc/base/sigslot.cc	/^void multi_threaded_local::lock() {$/;"	f	class:sigslot::multi_threaded_local
lock	webrtc/base/sigslot.h	/^		virtual void lock()$/;"	f	class:sigslot::multi_threaded_global
lock	webrtc/base/sigslot.h	/^		virtual void lock()$/;"	f	class:sigslot::multi_threaded_local
lock	webrtc/base/sigslot.h	/^                virtual void lock() {}$/;"	f	class:sigslot::single_threaded
lock	webrtc/base/sigslot_unittest.cc	/^  virtual void lock() {$/;"	f	class:multi_threaded_local_fake
lock_	webrtc/base/criticalsection.h	/^  GlobalLockPod* const lock_;$/;"	m	class:rtc::GlobalLockScope
lock_	webrtc/base/criticalsection_unittest.cc	/^  CriticalSection lock_;$/;"	m	class:rtc::PerfTestData	file:
lock_	webrtc/base/criticalsection_unittest.cc	/^  Lock lock_;$/;"	m	class:rtc::__anon10::LockRunner	file:
lock_	webrtc/base/fakeclock.h	/^  CriticalSection lock_;$/;"	m	class:rtc::FakeClock
lock_	webrtc/base/fakeclock.h	/^  uint64_t time_ GUARDED_BY(lock_) = 0u;$/;"	m	class:rtc::FakeClock
lock_	webrtc/base/rate_limiter.h	/^  rtc::CriticalSection lock_;$/;"	m	class:webrtc::RateLimiter
lock_	webrtc/base/sequenced_task_checker_impl.h	/^  CriticalSection lock_;$/;"	m	class:rtc::SequencedTaskCheckerImpl
lock_	webrtc/base/sharedexclusivelock.h	/^  SharedExclusiveLock* lock_;$/;"	m	class:rtc::ExclusiveScope
lock_	webrtc/base/sharedexclusivelock.h	/^  SharedExclusiveLock* lock_;$/;"	m	class:rtc::SharedScope
lock_	webrtc/base/task_queue_libevent.cc	/^  CriticalSection lock_;$/;"	m	class:rtc::TaskQueue::PostAndReplyTask	file:
lock_	webrtc/base/thread_annotations_unittest.cc	/^  Lock lock_;$/;"	m	class:__anon68::ThreadSafe	file:
lock_	webrtc/base/thread_annotations_unittest.cc	/^  int protected_by_lock_ GUARDED_BY(lock_) = 0;$/;"	m	class:__anon68::ThreadSafe	file:
lock_	webrtc/base/thread_checker_impl.h	/^  CriticalSection lock_;$/;"	m	class:rtc::ThreadCheckerImpl
lock_	webrtc/system_wrappers/include/clock.h	/^  std::unique_ptr<RWLockWrapper> lock_;$/;"	m	class:webrtc::SimulatedClock
lock_	webrtc/system_wrappers/include/critical_section_wrapper.h	/^  rtc::CriticalSection lock_;$/;"	m	class:webrtc::CriticalSectionWrapper
lock_	webrtc/system_wrappers/include/file_wrapper.h	/^  rtc::CriticalSection lock_;$/;"	m	class:webrtc::FileWrapper
lock_acquired	webrtc/base/criticalsection.h	/^  volatile int lock_acquired;$/;"	m	class:rtc::GlobalLockPod
lock_block	webrtc/base/sigslot.h	/^		lock_block(mt_policy *mtx)$/;"	f	class:sigslot::lock_block
lock_block	webrtc/base/sigslot.h	/^	class lock_block$/;"	c	namespace:sigslot
lock_count	webrtc/base/sigslot_unittest.cc	/^  int lock_count() { return lock_count_; }$/;"	f	class:multi_threaded_local_fake
lock_count_	webrtc/base/sigslot_unittest.cc	/^  int lock_count_;$/;"	m	class:multi_threaded_local_fake	file:
lock_queue_	webrtc/base/criticalsection.h	/^  mutable volatile int lock_queue_;$/;"	m	class:rtc::CriticalSection
lock_state	webrtc/base/diskcache.h	/^    LockState lock_state;$/;"	m	struct:rtc::DiskCache::Entry
locked	webrtc/base/criticalsection.cc	/^bool TryCritScope::locked() const {$/;"	f	class:rtc::TryCritScope
locked_	webrtc/base/criticalsection.h	/^  const bool locked_;$/;"	m	class:rtc::TryCritScope
locked_	webrtc/base/diskcache.h	/^  bool rollback_, locked_;$/;"	m	class:rtc::CacheLock
locked_	webrtc/base/messagequeue.cc	/^  bool* locked_;$/;"	m	class:rtc::__anon32::DebugNonReentrantCritScope	file:
locking_function	webrtc/base/openssladapter.cc	/^static void locking_function(int mode, int n, const char * file, int line) {$/;"	f	namespace:rtc
log	webrtc/base/java/src/org/webrtc/Logging.java	/^  public static void log(Severity severity, String tag, String message) {$/;"	m	class:Logging
logFile	webrtc/modules/audio_processing/agc/legacy/digital_agc.h	/^  FILE* logFile;$/;"	m	struct:__anon174
logLrtTimeAvg	webrtc/modules/audio_processing/ns/ns_core.h	/^  float logLrtTimeAvg[HALF_ANAL_BLOCKL];  \/\/ Log LRT factor with time-smoothing.$/;"	m	struct:NoiseSuppressionC_
logLrtTimeAvgW32	webrtc/modules/audio_processing/ns/nsx_core.h	/^  int32_t                 logLrtTimeAvgW32[HALF_ANAL_BLOCKL];$/;"	m	struct:NoiseSuppressionFixedC_
logRatio	webrtc/modules/audio_processing/agc/legacy/digital_agc.h	/^  int16_t logRatio;           \/\/ log( P(active) \/ P(inactive) ) (Q10)$/;"	m	struct:__anon173
log_old_gain_	webrtc/modules/audio_processing/vad/vad_audio_proc.h	/^  double log_old_gain_;$/;"	m	class:webrtc::VadAudioProc
log_pitch_gain	webrtc/modules/audio_processing/vad/common.h	/^  double log_pitch_gain[kMaxNumFrames];$/;"	m	struct:AudioFeatures
log_to_stderr_	webrtc/base/logging.cc	/^bool LogMessage::log_to_stderr_ = true;$/;"	m	class:rtc::LogMessage	file:
log_to_stderr_	webrtc/base/logging.h	/^  static bool log_to_stderr_;$/;"	m	class:rtc::LogMessage
loggingEnabled	webrtc/base/java/src/org/webrtc/Logging.java	/^  private static volatile boolean loggingEnabled;$/;"	f	class:Logging	file:
logging_label_	webrtc/base/sslsocketfactory.h	/^  std::string hostname_, logging_label_;$/;"	m	class:rtc::SslSocketFactory
logging_level_	webrtc/base/sslsocketfactory.h	/^  LoggingSeverity logging_level_;$/;"	m	class:rtc::SslSocketFactory
logging_thread_	webrtc/base/event_tracer.cc	/^  rtc::PlatformThread logging_thread_;$/;"	m	class:rtc::tracing::__anon12::final	file:
logical_cpus_	webrtc/base/systeminfo.cc	/^int SystemInfo::logical_cpus_ = 0;$/;"	m	class:rtc::SystemInfo	file:
logical_cpus_	webrtc/base/systeminfo.h	/^  static int logical_cpus_;$/;"	m	class:rtc::SystemInfo
lookahead	webrtc/modules/audio_processing/utility/delay_estimator.h	/^  int lookahead;$/;"	m	struct:__anon228
lose_first_packet_	webrtc/base/sslstreamadapter_unittest.cc	/^  bool lose_first_packet_;$/;"	m	class:SSLStreamAdapterTestBase	file:
lossRate	webrtc/modules/include/module_common_types.h	/^  uint8_t lossRate;$/;"	m	struct:webrtc::RTCPVoIPMetric
loss_	webrtc/base/sslstreamadapter_unittest.cc	/^  int loss_;$/;"	m	class:SSLStreamAdapterTestBase	file:
loudness	webrtc/modules/audio_processing/agc/loudness_histogram_unittest.cc	/^  double loudness;$/;"	m	struct:webrtc::InputOutput	file:
lowLevelSignal	webrtc/modules/audio_processing/agc/legacy/analog_agc.h	/^  int16_t lowLevelSignal;$/;"	m	struct:__anon171
low_freq_error_	webrtc/common_audio/resampler/push_sinc_resampler_unittest.cc	/^  double low_freq_error_;$/;"	m	class:webrtc::PushSincResamplerTest	file:
low_freq_error_	webrtc/common_audio/resampler/sinc_resampler_unittest.cc	/^  double low_freq_error_;$/;"	m	class:webrtc::SincResamplerTest	file:
low_mean_end_bin_	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.h	/^  size_t low_mean_end_bin_;$/;"	m	class:webrtc::NonlinearBeamformer
low_mean_start_bin_	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.h	/^  size_t low_mean_start_bin_;$/;"	m	class:webrtc::NonlinearBeamformer
low_pass_filter_	webrtc/modules/audio_processing/level_controller/down_sampler.h	/^  BiQuadFilter low_pass_filter_;$/;"	m	class:webrtc::DownSampler
low_pass_reference	webrtc/modules/audio_processing/audio_buffer.cc	/^const int16_t* AudioBuffer::low_pass_reference(int channel) const {$/;"	f	class:webrtc::AudioBuffer
low_pass_reference_channels_	webrtc/modules/audio_processing/audio_buffer.h	/^  std::unique_ptr<ChannelBuffer<int16_t> > low_pass_reference_channels_;$/;"	m	class:webrtc::AudioBuffer
low_value_vector	webrtc/common_audio/vad/vad_core.h	/^    int16_t low_value_vector[16 * kNumChannels];$/;"	m	struct:VadInstT_
lowerLimit	webrtc/modules/audio_processing/agc/legacy/analog_agc.h	/^  int32_t lowerLimit;      \/\/ Lower limit for mic energy$/;"	m	struct:__anon171
lowerPrimaryLimit	webrtc/modules/audio_processing/agc/legacy/analog_agc.h	/^  int32_t lowerPrimaryLimit;    \/\/ = RXX_BUFFER_LEN * 534298;       -24 dBfs$/;"	m	struct:__anon171
lowerSecondaryLimit	webrtc/modules/audio_processing/agc/legacy/analog_agc.h	/^  int32_t lowerSecondaryLimit;  \/\/ = RXX_BUFFER_LEN * 267783;       -27 dBfs$/;"	m	struct:__anon171
lower_state	webrtc/common_audio/vad/vad_core.h	/^    int16_t lower_state[5];$/;"	m	struct:VadInstT_
lpcGain	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  double      lpcGain[SUBFRAMES<<1];$/;"	m	struct:__anon135
lpcGainIndex	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  int         lpcGainIndex[SUBFRAMES<<1];$/;"	m	struct:__anon135
lpszAutoConfigUrl	webrtc/base/proxydetect.cc	/^  LPCWSTR lpszAutoConfigUrl;$/;"	m	struct:__anon45	file:
lpszAutoConfigUrl	webrtc/base/proxydetect.cc	/^  LPWSTR  lpszAutoConfigUrl;$/;"	m	struct:__anon46	file:
lpszProxy	webrtc/base/proxydetect.cc	/^  LPWSTR  lpszProxy;$/;"	m	struct:__anon46	file:
lpszProxy	webrtc/base/proxydetect.cc	/^  LPWSTR lpszProxy;         \/\/ proxy server list$/;"	m	struct:__anon44	file:
lpszProxyBypass	webrtc/base/proxydetect.cc	/^  LPWSTR  lpszProxyBypass;$/;"	m	struct:__anon46	file:
lpszProxyBypass	webrtc/base/proxydetect.cc	/^  LPWSTR lpszProxyBypass;   \/\/ proxy bypass list$/;"	m	struct:__anon44	file:
lpvReserved	webrtc/base/proxydetect.cc	/^  LPVOID  lpvReserved;$/;"	m	struct:__anon45	file:
lquantile	webrtc/modules/audio_processing/ns/ns_core.h	/^  float lquantile[SIMULT * HALF_ANAL_BLOCKL];$/;"	m	struct:NoiseSuppressionC_
m_connected_slots	webrtc/base/sigslot.h	/^		connections_list m_connected_slots;$/;"	m	class:sigslot::_signal_base0
m_connected_slots	webrtc/base/sigslot.h	/^		connections_list m_connected_slots;$/;"	m	class:sigslot::_signal_base1
m_connected_slots	webrtc/base/sigslot.h	/^		connections_list m_connected_slots;$/;"	m	class:sigslot::_signal_base2
m_connected_slots	webrtc/base/sigslot.h	/^		connections_list m_connected_slots;$/;"	m	class:sigslot::_signal_base3
m_connected_slots	webrtc/base/sigslot.h	/^		connections_list m_connected_slots;$/;"	m	class:sigslot::_signal_base4
m_connected_slots	webrtc/base/sigslot.h	/^		connections_list m_connected_slots;$/;"	m	class:sigslot::_signal_base5
m_connected_slots	webrtc/base/sigslot.h	/^		connections_list m_connected_slots;$/;"	m	class:sigslot::_signal_base6
m_connected_slots	webrtc/base/sigslot.h	/^		connections_list m_connected_slots;$/;"	m	class:sigslot::_signal_base7
m_connected_slots	webrtc/base/sigslot.h	/^		connections_list m_connected_slots;$/;"	m	class:sigslot::_signal_base8
m_critsec	webrtc/base/sigslot.h	/^		CRITICAL_SECTION m_critsec;$/;"	m	class:sigslot::multi_threaded_local
m_mutex	webrtc/base/sigslot.h	/^		mt_policy *m_mutex;$/;"	m	class:sigslot::lock_block
m_mutex	webrtc/base/sigslot.h	/^		pthread_mutex_t m_mutex;$/;"	m	class:sigslot::multi_threaded_local
m_pmemfun	webrtc/base/sigslot.h	/^		void (dest_type::* m_pmemfun)();$/;"	m	class:sigslot::_connection0
m_pmemfun	webrtc/base/sigslot.h	/^		void (dest_type::* m_pmemfun)(arg1_type);$/;"	m	class:sigslot::_connection1
m_pmemfun	webrtc/base/sigslot.h	/^		void (dest_type::* m_pmemfun)(arg1_type, arg2_type);$/;"	m	class:sigslot::_connection2
m_pmemfun	webrtc/base/sigslot.h	/^		void (dest_type::* m_pmemfun)(arg1_type, arg2_type, arg3_type);$/;"	m	class:sigslot::_connection3
m_pmemfun	webrtc/base/sigslot.h	/^		void (dest_type::* m_pmemfun)(arg1_type, arg2_type, arg3_type, arg4_type,$/;"	m	class:sigslot::_connection5
m_pmemfun	webrtc/base/sigslot.h	/^		void (dest_type::* m_pmemfun)(arg1_type, arg2_type, arg3_type, arg4_type,$/;"	m	class:sigslot::_connection6
m_pmemfun	webrtc/base/sigslot.h	/^		void (dest_type::* m_pmemfun)(arg1_type, arg2_type, arg3_type, arg4_type,$/;"	m	class:sigslot::_connection7
m_pmemfun	webrtc/base/sigslot.h	/^		void (dest_type::* m_pmemfun)(arg1_type, arg2_type, arg3_type, arg4_type,$/;"	m	class:sigslot::_connection8
m_pmemfun	webrtc/base/sigslot.h	/^		void (dest_type::* m_pmemfun)(arg1_type, arg2_type, arg3_type,$/;"	m	class:sigslot::_connection4
m_pobject	webrtc/base/sigslot.h	/^		dest_type* m_pobject;$/;"	m	class:sigslot::_connection0
m_pobject	webrtc/base/sigslot.h	/^		dest_type* m_pobject;$/;"	m	class:sigslot::_connection1
m_pobject	webrtc/base/sigslot.h	/^		dest_type* m_pobject;$/;"	m	class:sigslot::_connection2
m_pobject	webrtc/base/sigslot.h	/^		dest_type* m_pobject;$/;"	m	class:sigslot::_connection3
m_pobject	webrtc/base/sigslot.h	/^		dest_type* m_pobject;$/;"	m	class:sigslot::_connection4
m_pobject	webrtc/base/sigslot.h	/^		dest_type* m_pobject;$/;"	m	class:sigslot::_connection5
m_pobject	webrtc/base/sigslot.h	/^		dest_type* m_pobject;$/;"	m	class:sigslot::_connection6
m_pobject	webrtc/base/sigslot.h	/^		dest_type* m_pobject;$/;"	m	class:sigslot::_connection7
m_pobject	webrtc/base/sigslot.h	/^		dest_type* m_pobject;$/;"	m	class:sigslot::_connection8
m_senders	webrtc/base/sigslot.h	/^		sender_set m_senders;$/;"	m	class:sigslot::has_slots
magnAvgPause	webrtc/modules/audio_processing/ns/ns_core.h	/^  float magnAvgPause[HALF_ANAL_BLOCKL];$/;"	m	struct:NoiseSuppressionC_
magnEnergy	webrtc/modules/audio_processing/ns/nsx_core.h	/^  uint32_t                magnEnergy;$/;"	m	struct:NoiseSuppressionFixedC_
magnLen	webrtc/modules/audio_processing/ns/ns_core.h	/^  size_t magnLen;$/;"	m	struct:NoiseSuppressionC_
magnLen	webrtc/modules/audio_processing/ns/nsx_core.h	/^  size_t                  magnLen;$/;"	m	struct:NoiseSuppressionFixedC_
magnPrevAnalyze	webrtc/modules/audio_processing/ns/ns_core.h	/^  float magnPrevAnalyze[HALF_ANAL_BLOCKL];$/;"	m	struct:NoiseSuppressionC_
magnPrevProcess	webrtc/modules/audio_processing/ns/ns_core.h	/^  float magnPrevProcess[HALF_ANAL_BLOCKL];$/;"	m	struct:NoiseSuppressionC_
magnitudes_	webrtc/modules/audio_processing/transient/transient_suppressor.h	/^  std::unique_ptr<float[]> magnitudes_;$/;"	m	class:webrtc::TransientSuppressor
main	webrtc/base/unittest_main.cc	/^int main(int argc, char** argv) {$/;"	f
main	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer_test.cc	/^int main(int argc, char* argv[]) {$/;"	f
main	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer_test.cc	/^int main(int argc, char* argv[]) {$/;"	f	namespace:webrtc
main	webrtc/modules/audio_processing/intelligibility/test/intelligibility_proc.cc	/^int main(int argc, char* argv[]) {$/;"	f
main	webrtc/modules/audio_processing/test/audioproc_float.cc	/^int main(int argc, char* argv[]) {$/;"	f
main	webrtc/modules/audio_processing/test/audioproc_float.cc	/^int main(int argc, char* argv[]) {$/;"	f	namespace:webrtc::test
main	webrtc/modules/audio_processing/test/unpack.cc	/^int main(int argc, char* argv[]) {$/;"	f
main	webrtc/modules/audio_processing/transient/click_annotate.cc	/^int main(int argc, char* argv[]) {$/;"	f
main	webrtc/modules/audio_processing/transient/transient_suppression_test.cc	/^int main(int argc, char* argv[]) {$/;"	f
main_	webrtc/base/signalthread.h	/^  Thread* main_;$/;"	m	class:rtc::SignalThread
main_thread_	webrtc/base/signalthread_unittest.cc	/^  Thread* main_thread_;$/;"	m	class:SignalThreadTest	file:
mainloop_	webrtc/base/dbus.cc	/^  GMainLoop *mainloop_;$/;"	m	class:rtc::DBusMonitor::DBusMonitoringThread	file:
make_char_safe_for_filename	webrtc/base/stringencode.cc	/^char make_char_safe_for_filename(char c) {$/;"	f	namespace:rtc
make_prefixes	webrtc/base/ifaddrs-android.cc	/^int make_prefixes(struct ifaddrs* ifaddr, int family, int prefixlen) {$/;"	f	namespace:rtc
makect	webrtc/common_audio/fft4g.c	/^static void makect(size_t nc, size_t *ip, float *c)$/;"	f	file:
makewt	webrtc/common_audio/fft4g.c	/^static void makewt(size_t nw, size_t *ip, float *w)$/;"	f	file:
manager_	webrtc/base/firewallsocketserver.h	/^  FirewallManager * manager_;$/;"	m	class:rtc::FirewallSocketServer
manager_	webrtc/modules/audio_processing/agc/agc_manager_direct_unittest.cc	/^  AgcManagerDirect manager_;$/;"	m	class:webrtc::AgcManagerDirectTest	file:
map_	webrtc/base/diskcache.h	/^  EntryMap map_;$/;"	m	class:rtc::DiskCache
map_	webrtc/base/proxydetect.cc	/^  std::map<std::string, std::string> map_;$/;"	m	struct:StringMap	file:
markerBit	webrtc/common_types.h	/^  bool markerBit;$/;"	m	struct:webrtc::RTPHeader
maskfiltstr_obj	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  MaskFiltstr             maskfiltstr_obj;$/;"	m	struct:__anon137
maskfiltstr_obj	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  MaskFiltstr         maskfiltstr_obj;$/;"	m	struct:__anon136
maskfiltstr_obj	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  MaskFiltstr     maskfiltstr_obj;$/;"	m	struct:__anon138
maskfiltstr_obj	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  MaskFiltstr     maskfiltstr_obj;$/;"	m	struct:__anon139
max	webrtc/base/helpers.cc	/^#undef max$/;"	d	file:
max	webrtc/modules/audio_processing/aec/aec_core.h	/^  float max;$/;"	m	struct:webrtc::Stats
max	webrtc/modules/audio_processing/aec/echo_cancellation.h	/^  int max;$/;"	m	struct:webrtc::__anon160
max	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^  int64_t max;$/;"	m	struct:webrtc::test::TickIntervalStats
max	webrtc/system_wrappers/include/metrics_default.h	/^  const int max;$/;"	m	struct:webrtc::metrics::SampleInfo
maxAnalog	webrtc/modules/audio_processing/agc/legacy/analog_agc.h	/^  int32_t maxAnalog;      \/\/ Maximum possible analog volume level$/;"	m	struct:__anon171
maxBitrate	webrtc/common_types.h	/^  unsigned int maxBitrate;     \/\/ kilobits\/sec.$/;"	m	class:webrtc::VideoCodec
maxBitrate	webrtc/common_types.h	/^  unsigned int maxBitrate;     \/\/ kilobits\/sec.$/;"	m	struct:webrtc::SimulcastStream
maxFramerate	webrtc/common_types.h	/^  unsigned char maxFramerate;$/;"	m	class:webrtc::VideoCodec
maxInit	webrtc/modules/audio_processing/agc/legacy/analog_agc.h	/^  int32_t maxInit;        \/\/ Initial value of "max"$/;"	m	struct:__anon171
maxLevel	webrtc/modules/audio_processing/agc/legacy/analog_agc.h	/^  int32_t maxLevel;       \/\/ Max possible vol level, incl dig gain$/;"	m	struct:__anon171
maxLrt	webrtc/modules/audio_processing/ns/ns_core.h	/^  float maxLrt;$/;"	m	struct:NSParaExtract_
maxLrt	webrtc/modules/audio_processing/ns/nsx_core.h	/^  int32_t                 maxLrt;$/;"	m	struct:NoiseSuppressionFixedC_
maxPayloadBytes	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  int16_t         maxPayloadBytes;$/;"	m	struct:__anon136
maxPayloadSizeBytes	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  int16_t               maxPayloadSizeBytes;$/;"	m	struct:__anon144
maxPayloadSizeBytes	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  int16_t             maxPayloadSizeBytes;$/;"	m	struct:__anon137
maxRateBytesPer30Ms	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  int16_t               maxRateBytesPer30Ms;$/;"	m	struct:__anon144
maxRateInBytes	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  int16_t         maxRateInBytes;$/;"	m	struct:__anon136
maxSpecDiff	webrtc/modules/audio_processing/ns/ns_core.h	/^  float maxSpecDiff;$/;"	m	struct:NSParaExtract_
maxSpecFlat	webrtc/modules/audio_processing/ns/ns_core.h	/^  float maxSpecFlat;$/;"	m	struct:NSParaExtract_
maxWaitingTimeMs	webrtc/common_types.h	/^  int maxWaitingTimeMs;$/;"	m	struct:webrtc::NetworkStatistics
max_	webrtc/base/exp_filter.h	/^  const float max_;$/;"	m	class:rtc::ExpFilter
max_	webrtc/base/rollingaccumulator.h	/^  mutable T max_;$/;"	m	class:rtc::RollingAccumulator
max_	webrtc/system_wrappers/source/metrics_default.cc	/^  const int max_;$/;"	m	class:webrtc::metrics::__anon251::RtcHistogram	file:
max_bitrate_bps	webrtc/config.h	/^  int max_bitrate_bps;$/;"	m	class:webrtc::VideoEncoderConfig
max_bitrate_bps	webrtc/config.h	/^  int max_bitrate_bps;$/;"	m	struct:webrtc::VideoStream
max_cache_	webrtc/base/diskcache.h	/^  size_t max_cache_, total_size_;$/;"	m	class:rtc::DiskCache
max_compression_gain_	webrtc/modules/audio_processing/agc/agc_manager_direct.h	/^  int max_compression_gain_;$/;"	m	class:webrtc::final
max_count	webrtc/base/rollingaccumulator.h	/^  size_t max_count() const {$/;"	f	class:rtc::RollingAccumulator
max_fec_frames	webrtc/modules/include/module_common_types.h	/^  int max_fec_frames;$/;"	m	struct:webrtc::FecProtectionParams
max_file_size_	webrtc/base/filerotatingstream.h	/^  size_t max_file_size_;$/;"	m	class:rtc::FileRotatingStream
max_framerate	webrtc/config.h	/^  int max_framerate;$/;"	m	struct:webrtc::VideoStream
max_frequency_	webrtc/common_audio/resampler/sinusoidal_linear_chirp_source.h	/^  double max_frequency_;$/;"	m	class:webrtc::SinusoidalLinearChirpSource
max_gain_	webrtc/modules/audio_processing/level_controller/level_controller.h	/^    float max_gain_;$/;"	m	class:webrtc::LevelController::Metrics
max_insize_	webrtc/base/asynctcpsocket.h	/^  size_t max_insize_;$/;"	m	class:rtc::AsyncTCPSocketBase
max_ipv6_networks	webrtc/base/network.h	/^  int max_ipv6_networks() { return max_ipv6_networks_; }$/;"	f	class:rtc::NetworkManagerBase
max_ipv6_networks_	webrtc/base/network.h	/^  int max_ipv6_networks_;$/;"	m	class:rtc::NetworkManagerBase
max_level_	webrtc/modules/audio_processing/agc/agc_manager_direct.h	/^  int max_level_;$/;"	m	class:webrtc::final
max_ms	webrtc/common_types.h	/^  int max_ms;$/;"	m	struct:webrtc::PlayoutDelay
max_noise_energy_	webrtc/modules/audio_processing/level_controller/level_controller.h	/^    float max_noise_energy_;$/;"	m	class:webrtc::LevelController::Metrics
max_outsize_	webrtc/base/asynctcpsocket.h	/^  size_t max_outsize_;$/;"	m	class:rtc::AsyncTCPSocketBase
max_peak_level_	webrtc/modules/audio_processing/level_controller/level_controller.h	/^    float max_peak_level_;$/;"	m	class:webrtc::LevelController::Metrics
max_per_period	webrtc/base/ratelimiter.h	/^  size_t max_per_period() const {$/;"	f	class:rtc::RateLimiter
max_per_period_	webrtc/base/ratelimiter.h	/^  size_t max_per_period_;$/;"	m	class:rtc::RateLimiter
max_picture_id	webrtc/modules/include/module_common_types.h	/^  int16_t max_picture_id;  \/\/ Maximum picture ID index; either 0x7F or 0x7FFF;$/;"	m	struct:webrtc::RTPVideoHeaderVP9
max_qp	webrtc/config.h	/^  int max_qp;$/;"	m	struct:webrtc::VideoStream
max_send_size_	webrtc/base/physicalsocketserver_unittest.cc	/^  int max_send_size_;$/;"	m	class:rtc::PhysicalSocketTest	file:
max_size_in_bytes_	webrtc/system_wrappers/include/file_wrapper.h	/^  size_t max_size_in_bytes_ = 0;$/;"	m	class:webrtc::FileWrapper
max_stale_	webrtc/base/rollingaccumulator.h	/^  mutable bool max_stale_;$/;"	m	class:rtc::RollingAccumulator
max_total_log_size_	webrtc/base/filerotatingstream.h	/^  const size_t max_total_log_size_;$/;"	m	class:rtc::CallSessionFileRotatingStream
max_window_size_ms_	webrtc/base/rate_statistics.h	/^  const int64_t max_window_size_ms_;$/;"	m	class:webrtc::RateStatistics
maximum	webrtc/modules/audio_processing/include/audio_processing.h	/^    float maximum() const { return maximum_; }$/;"	f	struct:webrtc::AudioProcessing::Stat
maximum	webrtc/modules/audio_processing/include/audio_processing.h	/^    int maximum = 0;  \/\/ Long-term maximum.$/;"	m	struct:webrtc::AudioProcessing::Statistic
maximum_	webrtc/modules/audio_processing/include/audio_processing.h	/^    float maximum_ = 0.0f;  \/\/ Long-term maximum.$/;"	m	struct:webrtc::AudioProcessing::Stat
md_	webrtc/base/openssldigest.h	/^  const EVP_MD* md_;$/;"	m	class:rtc::OpenSSLDigest
mean	webrtc/modules/audio_processing/echo_detector/mean_variance_estimator.cc	/^float MeanVarianceEstimator::mean() const {$/;"	f	class:webrtc::MeanVarianceEstimator
mean	webrtc/modules/audio_processing/vad/gmm.h	/^  const double* mean;$/;"	m	struct:webrtc::GmmParameters
meanGain	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  double      meanGain[2];$/;"	m	struct:__anon134
meanLongTerm	webrtc/modules/audio_processing/agc/legacy/digital_agc.h	/^  int16_t meanLongTerm;       \/\/ Q10$/;"	m	struct:__anon173
meanShortTerm	webrtc/modules/audio_processing/agc/legacy/digital_agc.h	/^  int16_t meanShortTerm;      \/\/ Q10$/;"	m	struct:__anon173
meanWaitingTimeMs	webrtc/common_types.h	/^  int meanWaitingTimeMs;$/;"	m	struct:webrtc::NetworkStatistics
mean_	webrtc/modules/audio_processing/echo_detector/mean_variance_estimator.h	/^  float mean_ = 0.f;$/;"	m	class:webrtc::MeanVarianceEstimator
mean_	webrtc/modules/audio_processing/utility/block_mean_calculator.h	/^  float mean_;$/;"	m	class:webrtc::BlockMeanCalculator
mean_bit_counts	webrtc/modules/audio_processing/utility/delay_estimator.h	/^  int32_t* mean_bit_counts;$/;"	m	struct:__anon228
mean_factor_	webrtc/modules/audio_processing/transient/transient_suppressor.h	/^  std::unique_ptr<float[]> mean_factor_;$/;"	m	class:webrtc::TransientSuppressor
mean_far_spectrum	webrtc/modules/audio_processing/utility/delay_estimator_internal.h	/^  SpectrumType* mean_far_spectrum;$/;"	m	struct:__anon230
mean_near_spectrum	webrtc/modules/audio_processing/utility/delay_estimator_internal.h	/^  SpectrumType* mean_near_spectrum;$/;"	m	struct:__anon231
mean_value	webrtc/common_audio/vad/vad_core.h	/^    int16_t mean_value[kNumChannels];$/;"	m	struct:VadInstT_
medianWaitingTimeMs	webrtc/common_types.h	/^  int medianWaitingTimeMs;$/;"	m	struct:webrtc::NetworkStatistics
mem	webrtc/base/httpbase_unittest.cc	/^  MemoryStream* mem;$/;"	m	class:rtc::HttpBaseTest	file:
member	webrtc/base/weak_ptr_unittest.cc	/^  std::string member;$/;"	m	struct:rtc::__anon74::Base	file:
memory_check	webrtc/base/stringutils.cc	/^bool memory_check(const void* memory, int c, size_t count) {$/;"	f	namespace:rtc
message	webrtc/base/httpcommon.h	/^  std::string message;$/;"	m	struct:rtc::HttpResponseData
message_id	webrtc/base/messagequeue.h	/^  uint32_t message_id;$/;"	m	struct:rtc::Message
message_queue_	webrtc/base/win32socketserver.h	/^  MessageQueue *message_queue_;$/;"	m	class:rtc::Win32SocketServer
message_received_	webrtc/base/dbus_unittest.cc	/^  bool message_received_;$/;"	m	class:rtc::DBusSigFilterTest	file:
method_	webrtc/base/bind.h	/^  MethodT method_;$/;"	m	class:rtc::MethodFunctor0
method_	webrtc/base/bind.h	/^  MethodT method_;$/;"	m	class:rtc::MethodFunctor1
method_	webrtc/base/bind.h	/^  MethodT method_;$/;"	m	class:rtc::MethodFunctor2
method_	webrtc/base/bind.h	/^  MethodT method_;$/;"	m	class:rtc::MethodFunctor3
method_	webrtc/base/bind.h	/^  MethodT method_;$/;"	m	class:rtc::MethodFunctor4
method_	webrtc/base/bind.h	/^  MethodT method_;$/;"	m	class:rtc::MethodFunctor5
method_	webrtc/base/bind.h	/^  MethodT method_;$/;"	m	class:rtc::MethodFunctor6
method_	webrtc/base/bind.h	/^  MethodT method_;$/;"	m	class:rtc::MethodFunctor7
method_	webrtc/base/bind.h	/^  MethodT method_;$/;"	m	class:rtc::MethodFunctor8
method_	webrtc/base/bind.h	/^  MethodT method_;$/;"	m	class:rtc::MethodFunctor9
methods_socket	webrtc/base/openssladapter.cc	/^static BIO_METHOD methods_socket = {$/;"	v	file:
methods_stream	webrtc/base/opensslstreamadapter.cc	/^static BIO_METHOD methods_stream = {$/;"	m	namespace:rtc	file:
metrics	webrtc/system_wrappers/include/metrics.h	/^namespace metrics {$/;"	n	namespace:webrtc
metrics	webrtc/system_wrappers/include/metrics_default.h	/^namespace metrics {$/;"	n	namespace:webrtc
metrics	webrtc/system_wrappers/source/metrics_default.cc	/^namespace metrics {$/;"	n	namespace:webrtc	file:
metricsMode	webrtc/modules/audio_processing/aec/aec_core.h	/^  int metricsMode;$/;"	m	struct:webrtc::AecCore
metricsMode	webrtc/modules/audio_processing/aec/echo_cancellation.h	/^  int16_t metricsMode;  \/\/ default kAecFalse$/;"	m	struct:webrtc::__anon159
metrics_	webrtc/modules/audio_processing/level_controller/level_controller.h	/^  Metrics metrics_;$/;"	m	class:webrtc::LevelController
metrics_frame_counter_	webrtc/modules/audio_processing/level_controller/level_controller.h	/^    size_t metrics_frame_counter_;$/;"	m	class:webrtc::LevelController::Metrics
micGainIdx	webrtc/modules/audio_processing/agc/legacy/analog_agc.h	/^  int32_t micGainIdx;     \/\/ Gain index of mic level to increase slowly$/;"	m	struct:__anon171
micLvlSat	webrtc/modules/audio_processing/agc/legacy/analog_agc.h	/^  uint8_t micLvlSat;$/;"	m	struct:__anon171
micRef	webrtc/modules/audio_processing/agc/legacy/analog_agc.h	/^  int32_t micRef;         \/\/ Remember ref. mic level for virtual mic$/;"	m	struct:__anon171
micVol	webrtc/modules/audio_processing/agc/legacy/analog_agc.h	/^  int32_t micVol;         \/\/ Remember volume between frames$/;"	m	struct:__anon171
microphone_positions	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^  rtc::Optional<std::string> microphone_positions;$/;"	m	struct:webrtc::test::SimulationSettings
milliseconds_	webrtc/base/task_queue_libevent.cc	/^  const uint32_t milliseconds_;$/;"	m	class:rtc::TaskQueue::SetTimerTask	file:
min	webrtc/modules/audio_processing/aec/aec_core.h	/^  float min;$/;"	m	struct:webrtc::Stats
min	webrtc/modules/audio_processing/aec/echo_cancellation.h	/^  int min;$/;"	m	struct:webrtc::__anon160
min	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^  int64_t min;$/;"	m	struct:webrtc::test::TickIntervalStats
min	webrtc/system_wrappers/include/metrics_default.h	/^  const int min;$/;"	m	struct:webrtc::metrics::SampleInfo
minBitrate	webrtc/common_types.h	/^  unsigned int minBitrate;     \/\/ kilobits\/sec.$/;"	m	class:webrtc::VideoCodec
minBitrate	webrtc/common_types.h	/^  unsigned int minBitrate;     \/\/ kilobits\/sec.$/;"	m	struct:webrtc::SimulcastStream
minBytes	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  int         minBytes;$/;"	m	struct:__anon134
minLevel	webrtc/modules/audio_processing/agc/legacy/analog_agc.h	/^  int32_t minLevel;       \/\/ Minimum possible volume level$/;"	m	struct:__anon171
minLrt	webrtc/modules/audio_processing/ns/ns_core.h	/^  float minLrt;$/;"	m	struct:NSParaExtract_
minLrt	webrtc/modules/audio_processing/ns/nsx_core.h	/^  int32_t                 minLrt;$/;"	m	struct:NoiseSuppressionFixedC_
minNorm	webrtc/modules/audio_processing/ns/nsx_core.h	/^  int                     minNorm;  \/\/ Smallest normalization factor.$/;"	m	struct:NoiseSuppressionFixedC_
minOutput	webrtc/modules/audio_processing/agc/legacy/analog_agc.h	/^  int32_t minOutput;      \/\/ Minimum output volume level$/;"	m	struct:__anon171
minSpecDiff	webrtc/modules/audio_processing/ns/ns_core.h	/^  float minSpecDiff;$/;"	m	struct:NSParaExtract_
minSpecFlat	webrtc/modules/audio_processing/ns/ns_core.h	/^  float minSpecFlat;$/;"	m	struct:NSParaExtract_
minWaitingTimeMs	webrtc/common_types.h	/^  int minWaitingTimeMs;$/;"	m	struct:webrtc::NetworkStatistics
min_	webrtc/base/rollingaccumulator.h	/^  mutable T min_;$/;"	m	class:rtc::RollingAccumulator
min_	webrtc/system_wrappers/source/metrics_default.cc	/^  const int min_;$/;"	m	class:webrtc::metrics::__anon251::RtcHistogram	file:
min_bitrate_bps	webrtc/config.h	/^  int min_bitrate_bps;$/;"	m	struct:webrtc::VideoStream
min_mic_spacing_	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.h	/^  const float min_mic_spacing_;$/;"	m	class:webrtc::NonlinearBeamformer
min_ms	webrtc/common_types.h	/^  int min_ms;$/;"	m	struct:webrtc::PlayoutDelay
min_noise_energy_	webrtc/modules/audio_processing/level_controller/noise_level_estimator.h	/^  float min_noise_energy_ = 0.f;$/;"	m	class:webrtc::NoiseLevelEstimator
min_number_of_calls	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  int min_number_of_calls = 300;$/;"	m	struct:webrtc::__anon181::TestConfig	file:
min_sev_	webrtc/base/logging.cc	/^LoggingSeverity LogMessage::min_sev_ = LS_INFO;$/;"	m	class:rtc::LogMessage	file:
min_sev_	webrtc/base/logging.cc	/^LoggingSeverity LogMessage::min_sev_ = LS_NONE;$/;"	m	class:rtc::LogMessage	file:
min_sev_	webrtc/base/logging.h	/^  static LoggingSeverity min_sev_, dbg_sev_, ctx_sev_;$/;"	m	class:rtc::LogMessage
min_stale_	webrtc/base/rollingaccumulator.h	/^  mutable bool min_stale_;$/;"	m	class:rtc::RollingAccumulator
min_transmit_bitrate_bps	webrtc/config.h	/^  int min_transmit_bitrate_bps;$/;"	m	class:webrtc::VideoEncoderConfig
minimum	webrtc/modules/audio_processing/include/audio_processing.h	/^    float minimum() const { return minimum_; }$/;"	f	struct:webrtc::AudioProcessing::Stat
minimum	webrtc/modules/audio_processing/include/audio_processing.h	/^    int minimum = 0;  \/\/ Long-term minimum.$/;"	m	struct:webrtc::AudioProcessing::Statistic
minimum_	webrtc/modules/audio_processing/include/audio_processing.h	/^    float minimum_ = 0.0f;  \/\/ Long-term minimum.$/;"	m	struct:webrtc::AudioProcessing::Stat
minimum_capacity_	webrtc/modules/audio_processing/render_queue_item_verifier.h	/^  size_t minimum_capacity_;$/;"	m	class:webrtc::RenderQueueItemVerifier
minimum_probability	webrtc/modules/audio_processing/utility/delay_estimator.h	/^  int32_t minimum_probability;$/;"	m	struct:__anon228
minlevel	webrtc/modules/audio_processing/aec/aec_core.h	/^  float minlevel;$/;"	m	struct:webrtc::PowerLevel
mixed_low_pass_channels_	webrtc/modules/audio_processing/audio_buffer.h	/^  std::unique_ptr<ChannelBuffer<int16_t> > mixed_low_pass_channels_;$/;"	m	class:webrtc::AudioBuffer
mixed_low_pass_data	webrtc/modules/audio_processing/audio_buffer.cc	/^const int16_t* AudioBuffer::mixed_low_pass_data() {$/;"	f	class:webrtc::AudioBuffer
mixed_low_pass_valid_	webrtc/modules/audio_processing/audio_buffer.h	/^  bool mixed_low_pass_valid_;$/;"	m	class:webrtc::AudioBuffer
mkerr	webrtc/base/httpcommon.h	/^inline HttpError mkerr(HttpError err, HttpError def_err = HE_DEFAULT) {$/;"	f	namespace:rtc
mm_pow_ps	webrtc/modules/audio_processing/aec/aec_core_sse2.cc	/^static __m128 mm_pow_ps(__m128 a, __m128 b) {$/;"	f	namespace:webrtc
mobile_echo_controller_enabled_	webrtc/modules/audio_processing/audio_processing_impl.h	/^    bool mobile_echo_controller_enabled_ = false;$/;"	m	class:webrtc::AudioProcessingImpl::ApmSubmoduleStates
mod_size	webrtc/base/sslidentity.h	/^  unsigned int mod_size;$/;"	m	struct:rtc::RSAParams
mode	webrtc/base/httpbase.h	/^  HttpMode mode() const { return mode_; }$/;"	f	class:rtc::HttpBase
mode	webrtc/base/httpbase_unittest.cc	/^    HttpMode mode;$/;"	m	struct:rtc::HttpBaseTest::Event	file:
mode	webrtc/common_types.h	/^  VideoCodecMode mode;$/;"	m	class:webrtc::VideoCodec
mode	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_filter.c	/^  PitchFilterOperation mode;$/;"	m	struct:__anon124	file:
mode	webrtc/modules/audio_processing/gain_control_for_experimental_agc.cc	/^GainControl::Mode GainControlForExperimentalAgc::mode() const {$/;"	f	class:webrtc::GainControlForExperimentalAgc
mode	webrtc/modules/audio_processing/gain_control_impl.cc	/^GainControl::Mode GainControlImpl::mode() const {$/;"	f	class:webrtc::GainControlImpl
mode	webrtc/modules/audio_processing/vad/standalone_vad.h	/^  int mode() const { return mode_; }$/;"	f	class:webrtc::StandaloneVad
mode_	webrtc/base/filerotatingstream.h	/^  const Mode mode_;$/;"	m	class:rtc::FileRotatingStream
mode_	webrtc/base/httpbase.h	/^  HttpMode mode_;$/;"	m	class:rtc::HttpBase
mode_	webrtc/modules/audio_processing/vad/standalone_vad.h	/^  int mode_;$/;"	m	class:webrtc::StandaloneVad
modelUpdate	webrtc/modules/audio_processing/ns/nsx_core.h	/^  int                     modelUpdate;$/;"	m	struct:NoiseSuppressionFixedC_
modelUpdatePars	webrtc/modules/audio_processing/ns/ns_core.h	/^  int modelUpdatePars[4];  \/\/ Parameters for updating or estimating.$/;"	m	struct:NoiseSuppressionC_
monitor_	webrtc/base/dbus.cc	/^  DBusMonitor *monitor_;$/;"	m	class:rtc::DBusMonitor::DBusMonitoringThread	file:
monitoring_thread_	webrtc/base/dbus.h	/^  DBusMonitoringThread *monitoring_thread_;$/;"	m	class:rtc::DBusMonitor
moving_moments_	webrtc/modules/audio_processing/transient/moving_moments_unittest.cc	/^  std::unique_ptr<MovingMoments> moving_moments_;$/;"	m	class:webrtc::MovingMomentsTest	file:
moving_moments_	webrtc/modules/audio_processing/transient/transient_detector.h	/^  std::unique_ptr<MovingMoments> moving_moments_[kLeaves];$/;"	m	class:webrtc::TransientDetector
msInSndCardBuf	webrtc/modules/audio_processing/aec/echo_cancellation.h	/^  short msInSndCardBuf;$/;"	m	struct:webrtc::Aec
msInSndCardBuf	webrtc/modules/audio_processing/aecm/echo_control_mobile.cc	/^    short msInSndCardBuf;$/;"	m	struct:__anon165	file:
msTooHigh	webrtc/modules/audio_processing/agc/legacy/analog_agc.h	/^  int16_t msTooHigh;         \/\/ Milliseconds of speech at a too high level$/;"	m	struct:__anon171
msTooLow	webrtc/modules/audio_processing/agc/legacy/analog_agc.h	/^  int16_t msTooLow;          \/\/ Milliseconds of speech at a too low level$/;"	m	struct:__anon171
msTrigger_	webrtc/base/messagequeue.h	/^  int64_t msTrigger_;$/;"	m	class:rtc::DelayedMessage
msZero	webrtc/modules/audio_processing/agc/legacy/analog_agc.h	/^  int16_t msZero;            \/\/ Milliseconds of zero input$/;"	m	struct:__anon171
mseAdaptOld	webrtc/modules/audio_processing/aecm/aecm_core.h	/^    int32_t mseAdaptOld;$/;"	m	struct:__anon164
mseChannelCount	webrtc/modules/audio_processing/aecm/aecm_core.h	/^    int16_t mseChannelCount;$/;"	m	struct:__anon164
mseStoredOld	webrtc/modules/audio_processing/aecm/aecm_core.h	/^    int32_t mseStoredOld;$/;"	m	struct:__anon164
mseThreshold	webrtc/modules/audio_processing/aecm/aecm_core.h	/^    int32_t mseThreshold;$/;"	m	struct:__anon164
msecSpeechInnerChange	webrtc/modules/audio_processing/agc/legacy/analog_agc.h	/^  int16_t msecSpeechInnerChange;  \/\/ Min ms of speech between volume changes$/;"	m	struct:__anon171
msecSpeechOuterChange	webrtc/modules/audio_processing/agc/legacy/analog_agc.h	/^  int16_t msecSpeechOuterChange;  \/\/ Min ms of speech between volume changes$/;"	m	struct:__anon171
msg	webrtc/base/ifaddrs-android.cc	/^  ifaddrmsg msg;$/;"	m	struct:__anon21::netlinkrequest	file:
msg	webrtc/base/thread.h	/^  Message msg;$/;"	m	struct:rtc::_SendMessage
msg	webrtc/base/win32window_unittest.cc	/^  const MSG& msg() const { return msg_; }$/;"	f	class:TestWindow
msgPeek_	webrtc/base/messagequeue.h	/^  Message msgPeek_;$/;"	m	class:rtc::MessageQueue
msg_	webrtc/base/messagequeue.h	/^  Message msg_;$/;"	m	class:rtc::DelayedMessage
msg_	webrtc/base/win32window_unittest.cc	/^  MSG msg_;$/;"	m	class:TestWindow	file:
msg_queue_	webrtc/base/natsocketfactory.h	/^  MessageQueue* msg_queue_;$/;"	m	class:rtc::NATSocketServer
msg_queue_	webrtc/base/virtualsocketserver.h	/^  MessageQueue* msg_queue_;$/;"	m	class:rtc::VirtualSocketServer
mt_loop_back_count	webrtc/base/sigslot_unittest.cc	/^  int mt_loop_back_count() { return mt_receiver_.signal_count(); }$/;"	f	class:SigslotSlotTest
mt_receiver_	webrtc/base/sigslot_unittest.cc	/^  SigslotReceiver<slot_policy, mt_signal_policy> mt_receiver_;$/;"	m	class:SigslotSlotTest	file:
mtu_	webrtc/base/sslstreamadapter_unittest.cc	/^  size_t mtu_;$/;"	m	class:SSLStreamAdapterTestBase	file:
mult	webrtc/modules/audio_processing/aec/aec_core.h	/^  int mult;  \/\/ sampling frequency multiple$/;"	m	struct:webrtc::AecCore
mult	webrtc/modules/audio_processing/aecm/aecm_core.h	/^    int16_t mult;$/;"	m	struct:__anon164
multi_threaded_global	webrtc/base/sigslot.cc	/^multi_threaded_global::multi_threaded_global() {$/;"	f	class:sigslot::multi_threaded_global
multi_threaded_global	webrtc/base/sigslot.cc	/^multi_threaded_global::multi_threaded_global(const multi_threaded_global&) {$/;"	f	class:sigslot::multi_threaded_global
multi_threaded_global	webrtc/base/sigslot.h	/^		multi_threaded_global()$/;"	f	class:sigslot::multi_threaded_global
multi_threaded_global	webrtc/base/sigslot.h	/^		multi_threaded_global(const multi_threaded_global&)$/;"	f	class:sigslot::multi_threaded_global
multi_threaded_global	webrtc/base/sigslot.h	/^	class multi_threaded_global$/;"	c	namespace:sigslot
multi_threaded_local	webrtc/base/sigslot.cc	/^multi_threaded_local::multi_threaded_local() {$/;"	f	class:sigslot::multi_threaded_local
multi_threaded_local	webrtc/base/sigslot.cc	/^multi_threaded_local::multi_threaded_local(const multi_threaded_local&) {$/;"	f	class:sigslot::multi_threaded_local
multi_threaded_local	webrtc/base/sigslot.h	/^		multi_threaded_local()$/;"	f	class:sigslot::multi_threaded_local
multi_threaded_local	webrtc/base/sigslot.h	/^		multi_threaded_local(const multi_threaded_local&)$/;"	f	class:sigslot::multi_threaded_local
multi_threaded_local	webrtc/base/sigslot.h	/^	class multi_threaded_local$/;"	c	namespace:sigslot
multi_threaded_local_fake	webrtc/base/sigslot_unittest.cc	/^  multi_threaded_local_fake() : lock_count_(0), unlock_count_(0) {$/;"	f	class:multi_threaded_local_fake
multi_threaded_local_fake	webrtc/base/sigslot_unittest.cc	/^class multi_threaded_local_fake : public sigslot::multi_threaded_local {$/;"	c	file:
mutable_proc_time	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^  TickIntervalStats* mutable_proc_time() { return &proc_time_; }$/;"	f	class:webrtc::test::AudioProcessingSimulator
muteGuardMs	webrtc/modules/audio_processing/agc/legacy/analog_agc.h	/^  int16_t muteGuardMs;            \/\/ Counter to prevent mute action$/;"	m	struct:__anon171
mutex	webrtc/base/openssladapter.cc	/^  MUTEX_TYPE mutex;$/;"	m	struct:CRYPTO_dynlock_value	file:
mutex_	webrtc/base/criticalsection.h	/^  mutable pthread_mutex_t mutex_;$/;"	m	class:rtc::CriticalSection
mutex_buf	webrtc/base/openssladapter.cc	/^static MUTEX_TYPE* mutex_buf = NULL;$/;"	m	namespace:rtc	file:
my_counter_	webrtc/base/criticalsection_unittest.cc	/^  int64_t my_counter_ = 0;$/;"	m	class:rtc::PerfTestData	file:
my_filter_	webrtc/modules/audio_processing/vad/pole_zero_filter_unittest.cc	/^  std::unique_ptr<PoleZeroFilter> my_filter_;$/;"	m	class:webrtc::PoleZeroFilterTest	file:
my_id_	webrtc/base/criticalsection_unittest.cc	/^  int my_id_ = 0;$/;"	m	class:rtc::PerfTestThread	file:
my_in_frequency_khz_	webrtc/common_audio/resampler/include/resampler.h	/^    int my_in_frequency_khz_;$/;"	m	class:webrtc::Resampler
my_mode_	webrtc/common_audio/resampler/include/resampler.h	/^    ResamplerMode my_mode_;$/;"	m	class:webrtc::Resampler
my_out_frequency_khz_	webrtc/common_audio/resampler/include/resampler.h	/^    int my_out_frequency_khz_;$/;"	m	class:webrtc::Resampler
nack_packets	webrtc/common_types.h	/^  uint32_t nack_packets;          \/\/ Number of RTCP NACK packets.$/;"	m	struct:webrtc::RtcpPacketTypeCounter
nack_requests	webrtc/common_types.h	/^  uint32_t nack_requests;         \/\/ Number of NACKed RTP packets.$/;"	m	struct:webrtc::RtcpPacketTypeCounter
nalu_type	webrtc/modules/include/module_common_types.h	/^  uint8_t nalu_type;  \/\/ The NAL unit type. If this is a header for a$/;"	m	struct:webrtc::RTPVideoHeaderH264
nalus	webrtc/modules/include/module_common_types.h	/^  NaluInfo nalus[kMaxNalusPerPacket];$/;"	m	struct:webrtc::RTPVideoHeaderH264
nalus_length	webrtc/modules/include/module_common_types.h	/^  size_t nalus_length;$/;"	m	struct:webrtc::RTPVideoHeaderH264
name	webrtc/base/event_tracer.cc	/^    const char* name;$/;"	m	struct:rtc::tracing::__anon12::final::TraceArg	file:
name	webrtc/base/event_tracer.cc	/^    const char* name;$/;"	m	struct:rtc::tracing::__anon12::final::TraceEvent	file:
name	webrtc/base/flags.h	/^  const char* name() const  { return name_; }$/;"	f	class:rtc::Flag
name	webrtc/base/httpcommon.cc	/^  inline const char* name() const { return Name(val); }$/;"	f	struct:rtc::Enum
name	webrtc/base/network.h	/^  const std::string& name() const { return name_; }$/;"	f	class:rtc::Network
name	webrtc/base/platform_thread.h	/^  const std::string& name() const { return name_; }$/;"	f	class:rtc::PlatformThread
name	webrtc/base/thread.h	/^  const std::string& name() const { return name_; }$/;"	f	class:rtc::Thread
name	webrtc/base/trace_event.h	/^    const char* name;$/;"	m	struct:webrtc::trace_event_internal::TraceEndOnScopeClose::Data
name	webrtc/system_wrappers/include/metrics_default.h	/^  const std::string name;$/;"	m	struct:webrtc::metrics::SampleInfo
name	webrtc/system_wrappers/source/metrics_default.cc	/^  const std::string& name() const { return info_.name; }$/;"	f	class:webrtc::metrics::__anon251::RtcHistogram
name_	webrtc/base/flags.h	/^  const char* name_;$/;"	m	class:rtc::Flag
name_	webrtc/base/network.h	/^  std::string name_;$/;"	m	class:rtc::Network
name_	webrtc/base/platform_thread.h	/^  const std::string name_;$/;"	m	class:rtc::PlatformThread
name_	webrtc/base/thread.h	/^  std::string name_;$/;"	m	class:rtc::Thread
nat_	webrtc/base/nat_unittest.cc	/^  std::unique_ptr<NATServer> nat_;$/;"	m	class:NatTcpTest	file:
nat_	webrtc/base/natserver.h	/^  NAT* nat_;$/;"	m	class:rtc::NATServer
nat_server_	webrtc/base/natsocketfactory.h	/^    std::unique_ptr<NATServer> nat_server_;$/;"	m	class:rtc::NATSocketServer::Translator
nat_tcp_addr_	webrtc/base/natsocketfactory.h	/^  SocketAddress nat_tcp_addr_;$/;"	m	class:rtc::NATSocketFactory
nat_udp_addr_	webrtc/base/natsocketfactory.h	/^  SocketAddress nat_udp_addr_;$/;"	m	class:rtc::NATSocketFactory
nativeClose	WebRTCAudioProcessing_jni.cc	/^void PackageName(nativeClose)(JNIEnv *env, jobject thiz, jlong nProcessor)$/;"	f
nativeEnableLogThreads	webrtc/base/java/src/org/webrtc/Logging.java	/^  private static native void nativeEnableLogThreads();$/;"	m	class:Logging	file:
nativeEnableLogTimeStamps	webrtc/base/java/src/org/webrtc/Logging.java	/^  private static native void nativeEnableLogTimeStamps();$/;"	m	class:Logging	file:
nativeEnableLogToDebugOutput	webrtc/base/java/src/org/webrtc/Logging.java	/^  private static native void nativeEnableLogToDebugOutput(int nativeSeverity);$/;"	m	class:Logging	file:
nativeEnableTracing	webrtc/base/java/src/org/webrtc/Logging.java	/^  private static native void nativeEnableTracing(String path, int nativeLevels);$/;"	m	class:Logging	file:
nativeLibLoaded	webrtc/base/java/src/org/webrtc/Logging.java	/^  private static volatile boolean nativeLibLoaded;$/;"	f	class:Logging	file:
nativeLog	webrtc/base/java/src/org/webrtc/Logging.java	/^  private static native void nativeLog(int severity, String tag, String message);$/;"	m	class:Logging	file:
nativeOpen	WebRTCAudioProcessing_jni.cc	/^jlong PackageName(nativeOpen)(JNIEnv *env, jobject thiz, jint enableNS, jint enableAEC, jint aecDelay, jint enableAGC, jint enableVAD)$/;"	f
nativeProcess	WebRTCAudioProcessing_jni.cc	/^int PackageName(nativeProcess)(JNIEnv *env, jobject thiz, jlong nProcessor, jbyteArray jData)$/;"	f
nativeProcess_back	WebRTCAudioProcessing_jni.cc	/^int PackageName(nativeProcess_back)(JNIEnv *env, jobject thiz, jlong nProcessor, jbyteArray jData)$/;"	f
nativeSetParameters	WebRTCAudioProcessing_jni.cc	/^int PackageName(nativeSetParameters)(JNIEnv *env, jobject thiz, jlong nProcessor,$/;"	f
nats_	webrtc/base/natsocketfactory.h	/^    TranslatorMap nats_;$/;"	m	class:rtc::NATSocketServer::Translator
nats_	webrtc/base/natsocketfactory.h	/^  TranslatorMap nats_;$/;"	m	class:rtc::NATSocketServer
natsf_	webrtc/base/nat_unittest.cc	/^  std::unique_ptr<NATSocketFactory> natsf_;$/;"	m	class:NatTcpTest	file:
nearCleanFrameBuf	webrtc/modules/audio_processing/aecm/aecm_core.h	/^    RingBuffer* nearCleanFrameBuf;$/;"	m	struct:__anon164
nearFile	webrtc/modules/audio_processing/aecm/aecm_core.h	/^    FILE *nearFile;$/;"	m	struct:__anon164
nearFilt	webrtc/modules/audio_processing/aecm/aecm_core.h	/^    int16_t nearFilt[PART_LEN1];$/;"	m	struct:__anon164
nearLogEnergy	webrtc/modules/audio_processing/aecm/aecm_core.h	/^    int16_t nearLogEnergy[MAX_BUF_LEN];$/;"	m	struct:__anon164
nearNoisyFrameBuf	webrtc/modules/audio_processing/aecm/aecm_core.h	/^    RingBuffer* nearNoisyFrameBuf;$/;"	m	struct:__anon164
near_	webrtc/modules/audio_processing/aec/system_delay_unittest.cc	/^  float near_[kSamplesPerChunk];$/;"	m	class:webrtc::__anon162::SystemDelayTest	file:
near_f_	webrtc/modules/audio_processing/utility/delay_estimator_unittest.cc	/^  float near_f_[kSpectrumSize];$/;"	m	class:__anon232::DelayEstimatorTest	file:
near_file_	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^  FILE* near_file_;$/;"	m	class:webrtc::__anon183::ApmTest	file:
near_history_size	webrtc/modules/audio_processing/utility/delay_estimator.h	/^  int near_history_size;$/;"	m	struct:__anon228
near_ptr_	webrtc/modules/audio_processing/aec/system_delay_unittest.cc	/^  const float* near_ptr_;$/;"	m	class:webrtc::__anon162::SystemDelayTest	file:
near_spectrum_initialized	webrtc/modules/audio_processing/utility/delay_estimator_internal.h	/^  int near_spectrum_initialized;$/;"	m	struct:__anon231
near_u16_	webrtc/modules/audio_processing/utility/delay_estimator_unittest.cc	/^  uint16_t near_u16_[kSpectrumSize];$/;"	m	class:__anon232::DelayEstimatorTest	file:
nearend_buffer	webrtc/modules/audio_processing/aec/aec_core.h	/^  float nearend_buffer[NUM_HIGH_BANDS_MAX + 1]$/;"	m	struct:webrtc::AecCore
nearend_buffer_size	webrtc/modules/audio_processing/aec/aec_core.h	/^  size_t nearend_buffer_size;$/;"	m	struct:webrtc::AecCore
nearlevel	webrtc/modules/audio_processing/aec/aec_core.h	/^  PowerLevel nearlevel;$/;"	m	struct:webrtc::AecCore
net	webrtc/base/network.cc	/^  Network* net;$/;"	m	struct:rtc::__anon34::__anon35	file:
net_wm_icon_	webrtc/base/x11windowpicker.cc	/^  Atom net_wm_icon_;$/;"	m	class:rtc::XWindowEnumerator	file:
netlinkrequest	webrtc/base/ifaddrs-android.cc	/^struct netlinkrequest {$/;"	s	namespace:__anon21	file:
network_	webrtc/base/virtualsocketserver.h	/^  NetworkQueue network_;$/;"	m	class:rtc::VirtualSocket
network_binder	webrtc/base/socketserver.h	/^  NetworkBinderInterface* network_binder() const { return network_binder_; }$/;"	f	class:rtc::SocketServer
network_binder_	webrtc/base/socketserver.h	/^  NetworkBinderInterface* network_binder_ = nullptr;$/;"	m	class:rtc::SocketServer
network_capacity	webrtc/base/virtualsocketserver.h	/^  uint32_t network_capacity() const { return network_capacity_; }$/;"	f	class:rtc::VirtualSocketServer
network_capacity_	webrtc/base/virtualsocketserver.h	/^  uint32_t network_capacity_;$/;"	m	class:rtc::VirtualSocketServer
network_ignore_list_	webrtc/base/network.h	/^  std::vector<std::string> network_ignore_list_;$/;"	m	class:rtc::BasicNetworkManager
network_monitor_	webrtc/base/network.h	/^  std::unique_ptr<NetworkMonitorInterface> network_monitor_;$/;"	m	class:rtc::BasicNetworkManager
network_monitor_factory	webrtc/base/networkmonitor.cc	/^rtc::NetworkMonitorFactory* network_monitor_factory = nullptr;$/;"	m	namespace:__anon37	file:
network_size_	webrtc/base/virtualsocketserver.h	/^  size_t network_size_;$/;"	m	class:rtc::VirtualSocket
networks_	webrtc/base/network.h	/^  NetworkList networks_;$/;"	m	class:rtc::NetworkManagerBase
networks_map_	webrtc/base/network.h	/^  NetworkMap networks_map_;$/;"	m	class:rtc::NetworkManagerBase
new_detection_to_report_	webrtc/modules/audio_processing/typing_detection.h	/^  bool new_detection_to_report_;$/;"	m	class:webrtc::TypingDetection
new_framelength	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  int16_t         new_framelength;$/;"	m	struct:__anon136
new_mask_	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.h	/^  float new_mask_[kNumFreqBins];$/;"	m	class:webrtc::NonlinearBeamformer
next	webrtc/base/flags.h	/^  Flag* next() const  { return next_; }$/;"	f	class:rtc::Flag
next_	webrtc/base/autodetectproxy.h	/^  int next_;$/;"	m	class:rtc::AutoDetectProxy
next_	webrtc/base/flags.h	/^  Flag* next_;$/;"	m	class:rtc::Flag
next_available_network_id_	webrtc/base/network.h	/^  uint16_t next_available_network_id_ = 1;$/;"	m	class:rtc::NetworkManagerBase
next_connection_id_	webrtc/base/httpserver.h	/^  int next_connection_id_;$/;"	m	class:rtc::HttpServer
next_event_	webrtc/modules/audio_processing/test/debug_dump_replayer.h	/^  audioproc::Event next_event_;$/;"	m	class:webrtc::test::DebugDumpReplayer
next_id_	webrtc/base/physicalsocketserver.cc	/^int SocketDispatcher::next_id_ = 0;$/;"	m	class:rtc::SocketDispatcher	file:
next_id_	webrtc/base/physicalsocketserver.h	/^  static int next_id_;$/;"	m	class:rtc::SocketDispatcher
next_index_	webrtc/base/fakenetwork.h	/^  int next_index_ = 0;$/;"	m	class:rtc::FakeNetworkManager
next_index_	webrtc/base/rollingaccumulator.h	/^  size_t next_index_;$/;"	m	class:rtc::RollingAccumulator
next_insertion_index_	webrtc/modules/audio_processing/echo_detector/circular_buffer.h	/^  size_t next_insertion_index_ = 0;$/;"	m	struct:webrtc::CircularBuffer
next_insertion_index_	webrtc/modules/audio_processing/residual_echo_detector.h	/^  size_t next_insertion_index_ = 0;$/;"	m	class:webrtc::ResidualEchoDetector
next_ipv4_	webrtc/base/virtualsocketserver.h	/^  in_addr next_ipv4_;$/;"	m	class:rtc::VirtualSocketServer
next_ipv6_	webrtc/base/virtualsocketserver.h	/^  in6_addr next_ipv6_;$/;"	m	class:rtc::VirtualSocketServer
next_port_	webrtc/base/virtualsocketserver.h	/^  uint16_t next_port_;$/;"	m	class:rtc::VirtualSocketServer
next_task_timeout	webrtc/base/taskrunner.cc	/^int64_t TaskRunner::next_task_timeout() const {$/;"	f	class:rtc::TaskRunner
next_timeout_task_	webrtc/base/taskrunner.h	/^  Task *next_timeout_task_;$/;"	m	class:rtc::TaskRunner
nlpFlag	webrtc/modules/audio_processing/aecm/aecm_core.h	/^    int16_t nlpFlag;$/;"	m	struct:__anon164
nlpMode	webrtc/modules/audio_processing/aec/echo_cancellation.h	/^  int16_t nlpMode;      \/\/ default kAecNlpModerate$/;"	m	struct:webrtc::__anon159
nlp_mode	webrtc/modules/audio_processing/aec/aec_core.h	/^  int nlp_mode;$/;"	m	struct:webrtc::AecCore
nlpoutlevel	webrtc/modules/audio_processing/aec/aec_core.h	/^  PowerLevel nlpoutlevel;$/;"	m	struct:webrtc::AecCore
nodes_	webrtc/modules/audio_processing/transient/wpd_tree.h	/^  std::unique_ptr<std::unique_ptr<WPDNode>[]> nodes_;$/;"	m	class:webrtc::WPDTree
noise	webrtc/modules/audio_processing/ns/ns_core.h	/^  float noise[HALF_ANAL_BLOCKL];  \/\/ Noise spectrum from current frame.$/;"	m	struct:NoiseSuppressionC_
noiseEst	webrtc/modules/audio_processing/aecm/aecm_core.h	/^    int32_t noiseEst[PART_LEN1];$/;"	m	struct:__anon164
noiseEstCounter	webrtc/modules/audio_processing/ns/nsx_core.h	/^  int16_t                 noiseEstCounter[SIMULT];$/;"	m	struct:NoiseSuppressionFixedC_
noiseEstCtr	webrtc/modules/audio_processing/aec/aec_core.h	/^  int noiseEstCtr;$/;"	m	struct:webrtc::AecCore
noiseEstCtr	webrtc/modules/audio_processing/aecm/aecm_core.h	/^    int16_t noiseEstCtr;$/;"	m	struct:__anon164
noiseEstDensity	webrtc/modules/audio_processing/ns/nsx_core.h	/^  int16_t                 noiseEstDensity[SIMULT* HALF_ANAL_BLOCKL];$/;"	m	struct:NoiseSuppressionFixedC_
noiseEstLogQuantile	webrtc/modules/audio_processing/ns/nsx_core.h	/^  int16_t                 noiseEstLogQuantile[SIMULT* HALF_ANAL_BLOCKL];$/;"	m	struct:NoiseSuppressionFixedC_
noiseEstQuantile	webrtc/modules/audio_processing/ns/nsx_core.h	/^  int16_t                 noiseEstQuantile[HALF_ANAL_BLOCKL];$/;"	m	struct:NoiseSuppressionFixedC_
noiseEstTooHighCtr	webrtc/modules/audio_processing/aecm/aecm_core.h	/^    int           noiseEstTooHighCtr[PART_LEN1];$/;"	m	struct:__anon164
noiseEstTooLowCtr	webrtc/modules/audio_processing/aecm/aecm_core.h	/^    int           noiseEstTooLowCtr[PART_LEN1];$/;"	m	struct:__anon164
noiseLevel	webrtc/modules/include/module_common_types.h	/^  uint8_t noiseLevel;$/;"	m	struct:webrtc::RTCPVoIPMetric
noisePow	webrtc/modules/audio_processing/aec/aec_core.h	/^  float* noisePow;$/;"	m	struct:webrtc::AecCore
noisePrev	webrtc/modules/audio_processing/ns/ns_core.h	/^  float noisePrev[HALF_ANAL_BLOCKL];  \/\/ Noise spectrum from previous frame.$/;"	m	struct:NoiseSuppressionC_
noiseSupFilter	webrtc/modules/audio_processing/ns/nsx_core.h	/^  uint16_t                noiseSupFilter[HALF_ANAL_BLOCKL];$/;"	m	struct:NoiseSuppressionFixedC_
noise_data_	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer_unittest.cc	/^  std::vector<float> noise_data_;$/;"	m	class:webrtc::IntelligibilityEnhancerTest	file:
noise_energy_	webrtc/modules/audio_processing/level_controller/noise_level_estimator.h	/^  float noise_energy_;$/;"	m	class:webrtc::NoiseLevelEstimator
noise_energy_hold_counter_	webrtc/modules/audio_processing/level_controller/noise_level_estimator.h	/^  int noise_energy_hold_counter_;$/;"	m	class:webrtc::NoiseLevelEstimator
noise_energy_sum_	webrtc/modules/audio_processing/level_controller/level_controller.h	/^    float noise_energy_sum_;$/;"	m	class:webrtc::LevelController::Metrics
noise_estimation_buffer_	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer.h	/^  std::vector<float> noise_estimation_buffer_;$/;"	m	class:webrtc::IntelligibilityEnhancer
noise_estimation_queue_	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer.h	/^      noise_estimation_queue_;$/;"	m	class:webrtc::IntelligibilityEnhancer
noise_gmm_	webrtc/modules/audio_processing/vad/pitch_based_vad.h	/^  GmmParameters noise_gmm_;$/;"	m	class:webrtc::PitchBasedVad
noise_level_estimator_	webrtc/modules/audio_processing/level_controller/level_controller.h	/^  NoiseLevelEstimator noise_level_estimator_;$/;"	m	class:webrtc::LevelController
noise_means	webrtc/common_audio/vad/vad_core.h	/^    int16_t noise_means[kTableSize];$/;"	m	struct:VadInstT_
noise_power_estimator_	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer.h	/^  intelligibility::PowerEstimator<float> noise_power_estimator_;$/;"	m	class:webrtc::IntelligibilityEnhancer
noise_spectrum_	webrtc/modules/audio_processing/level_controller/noise_spectrum_estimator.h	/^  float noise_spectrum_[65];$/;"	m	class:webrtc::NoiseSpectrumEstimator
noise_spectrum_estimator_	webrtc/modules/audio_processing/level_controller/signal_classifier.h	/^  NoiseSpectrumEstimator noise_spectrum_estimator_;$/;"	m	class:webrtc::SignalClassifier
noise_stds	webrtc/common_audio/vad/vad_core.h	/^    int16_t noise_stds[kTableSize];$/;"	m	struct:VadInstT_
noise_suppression	webrtc/modules/audio_processing/audio_processing_impl.cc	/^  std::unique_ptr<NoiseSuppressionImpl> noise_suppression;$/;"	m	struct:webrtc::AudioProcessingImpl::ApmPublicSubmodules	file:
noise_suppression	webrtc/modules/audio_processing/audio_processing_impl.cc	/^NoiseSuppression* AudioProcessingImpl::noise_suppression() const {$/;"	f	class:webrtc::AudioProcessingImpl
noise_suppression	webrtc/modules/audio_processing/include/mock_audio_processing.h	/^  virtual MockNoiseSuppression* noise_suppression() const {$/;"	f	class:webrtc::test::MockAudioProcessing
noise_suppression_	webrtc/modules/audio_processing/include/mock_audio_processing.h	/^  std::unique_ptr<MockNoiseSuppression> noise_suppression_;$/;"	m	class:webrtc::test::MockAudioProcessing
noise_suppressor_enabled_	webrtc/modules/audio_processing/audio_processing_impl.h	/^    bool noise_suppressor_enabled_ = false;$/;"	m	class:webrtc::AudioProcessingImpl::ApmSubmoduleStates
nonReference	webrtc/modules/include/module_common_types.h	/^  bool nonReference;          \/\/ Frame is discardable.$/;"	m	struct:webrtc::RTPVideoHeaderVP8
nonnull	webrtc/base/stringutils.h	/^inline const CTYPE* nonnull(const CTYPE* str, const CTYPE* def_str = NULL) {$/;"	f	namespace:rtc
nonzero_coeffs_	webrtc/common_audio/sparse_fir_filter.h	/^  const std::vector<float> nonzero_coeffs_;$/;"	m	class:webrtc::final
normData	webrtc/modules/audio_processing/ns/nsx_core.h	/^  int                     normData;$/;"	m	struct:NoiseSuppressionFixedC_
normalized_cross_correlation	webrtc/modules/audio_processing/echo_detector/normalized_covariance_estimator.h	/^  float normalized_cross_correlation() const {$/;"	f	class:webrtc::NormalizedCovarianceEstimator
normalized_cross_correlation_	webrtc/modules/audio_processing/echo_detector/normalized_covariance_estimator.h	/^  float normalized_cross_correlation_ = 0.f;$/;"	m	class:webrtc::NormalizedCovarianceEstimator
not_after	webrtc/base/sslidentity.h	/^  time_t not_after;   \/\/ Absolute time since epoch in seconds.$/;"	m	struct:rtc::SSLIdentityParams
not_before	webrtc/base/asyncpacketsocket.h	/^  int64_t not_before;$/;"	m	struct:rtc::PacketTime
not_before	webrtc/base/sslidentity.h	/^  time_t not_before;  \/\/ Absolute time since epoch in seconds.$/;"	m	struct:rtc::SSLIdentityParams
not_before	webrtc/common_types.h	/^  int64_t not_before;  \/\/ Earliest possible time the data could have arrived,$/;"	m	struct:webrtc::PacketTime
notify	webrtc/base/httpbase.h	/^  void notify(IHttpNotify* notify) { notify_ = notify; }$/;"	f	class:rtc::HttpBase
notify_	webrtc/base/httpbase.h	/^  IHttpNotify* notify_;$/;"	m	class:rtc::HttpBase
nr_elements_in_buffer_	webrtc/modules/audio_processing/echo_detector/circular_buffer.h	/^  size_t nr_elements_in_buffer_ = 0;$/;"	m	struct:webrtc::CircularBuffer
ns_level	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^  rtc::Optional<int> ns_level;$/;"	m	struct:webrtc::test::SimulationSettings
ntp_frac	webrtc/system_wrappers/include/rtp_to_ntp.h	/^  uint32_t ntp_frac;$/;"	m	struct:webrtc::RtcpMeasurement
ntp_secs	webrtc/system_wrappers/include/rtp_to_ntp.h	/^  uint32_t ntp_secs;$/;"	m	struct:webrtc::RtcpMeasurement
ntp_time_ms	webrtc/modules/include/module_common_types.h	/^  int64_t ntp_time_ms;$/;"	m	struct:webrtc::WebRtcRTPHeader
ntp_time_ms_	webrtc/modules/include/module_common_types.h	/^  int64_t ntp_time_ms_;$/;"	m	class:webrtc::AudioFrame
numBlocksMicLvlSat	webrtc/modules/audio_processing/agc/legacy/analog_agc.h	/^  int16_t numBlocksMicLvlSat;$/;"	m	struct:__anon171
numBytesUsed	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  int16_t             numBytesUsed;$/;"	m	struct:__anon137
numCSRCs	webrtc/common_types.h	/^  uint8_t numCSRCs;$/;"	m	struct:webrtc::RTPHeader
numConsecLatePkts	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  uint16_t                 numConsecLatePkts;$/;"	m	struct:__anon131
numEnergy	webrtc/modules/include/module_common_types.h	/^  uint8_t numEnergy;                  \/\/ number of valid entries in arrOfEnergy$/;"	m	struct:webrtc::RTPAudioHeader
num_	webrtc/base/messagequeue.h	/^  uint32_t num_;$/;"	m	class:rtc::DelayedMessage
num_active_chunks_	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer.h	/^  unsigned long int num_active_chunks_;$/;"	m	class:webrtc::IntelligibilityEnhancer
num_allocated_channels_	webrtc/common_audio/channel_buffer.h	/^  const size_t num_allocated_channels_;$/;"	m	class:webrtc::ChannelBuffer
num_bands	webrtc/common_audio/channel_buffer.h	/^  size_t num_bands() const { return ibuf_.num_bands(); }$/;"	f	class:webrtc::IFChannelBuffer
num_bands	webrtc/common_audio/channel_buffer.h	/^  size_t num_bands() const { return num_bands_; }$/;"	f	class:webrtc::ChannelBuffer
num_bands	webrtc/modules/audio_processing/aec/aec_core.h	/^  size_t num_bands;$/;"	m	struct:webrtc::AecCore
num_bands	webrtc/modules/audio_processing/audio_buffer.cc	/^size_t AudioBuffer::num_bands() const {$/;"	f	class:webrtc::AudioBuffer
num_bands_	webrtc/common_audio/channel_buffer.h	/^  const size_t num_bands_;$/;"	m	class:webrtc::ChannelBuffer
num_bands_	webrtc/modules/audio_processing/audio_buffer.h	/^  size_t num_bands_;$/;"	m	class:webrtc::AudioBuffer
num_bands_	webrtc/modules/audio_processing/splitting_filter.h	/^  const size_t num_bands_;$/;"	m	class:webrtc::SplittingFilter
num_buffer_samples_	webrtc/modules/audio_processing/vad/vad_audio_proc.h	/^  size_t num_buffer_samples_;$/;"	m	class:webrtc::VadAudioProc
num_bytes_left_for_log_	webrtc/modules/audio_processing/audio_processing_impl.h	/^    int64_t num_bytes_left_for_log_ = -1;$/;"	m	struct:webrtc::AudioProcessingImpl::ApmDebugDumpState
num_channels	webrtc/common_audio/channel_buffer.h	/^  size_t num_channels() const { return num_channels_; }$/;"	f	class:webrtc::ChannelBuffer
num_channels	webrtc/common_audio/channel_buffer.h	/^  size_t num_channels() const {$/;"	f	class:webrtc::IFChannelBuffer
num_channels	webrtc/common_audio/wav_file.cc	/^size_t WavReader::num_channels() const {$/;"	f	class:webrtc::WavReader
num_channels	webrtc/common_audio/wav_file.cc	/^size_t WavWriter::num_channels() const {$/;"	f	class:webrtc::WavWriter
num_channels	webrtc/modules/audio_processing/audio_buffer.cc	/^size_t AudioBuffer::num_channels() const {$/;"	f	class:webrtc::AudioBuffer
num_channels	webrtc/modules/audio_processing/include/audio_processing.h	/^  size_t num_channels() const { return num_channels_; }$/;"	f	class:webrtc::StreamConfig
num_channels_	webrtc/common_audio/channel_buffer.h	/^  size_t num_channels_;$/;"	m	class:webrtc::ChannelBuffer
num_channels_	webrtc/common_audio/resampler/include/push_resampler.h	/^  size_t num_channels_;$/;"	m	class:webrtc::PushResampler
num_channels_	webrtc/common_audio/resampler/include/resampler.h	/^    size_t num_channels_;$/;"	m	class:webrtc::Resampler
num_channels_	webrtc/common_audio/wav_file.h	/^  const size_t num_channels_;$/;"	m	class:webrtc::final
num_channels_	webrtc/common_audio/wav_file.h	/^  size_t num_channels_;$/;"	m	class:webrtc::final
num_channels_	webrtc/modules/audio_processing/audio_buffer.h	/^  size_t num_channels_;$/;"	m	class:webrtc::AudioBuffer
num_channels_	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^  const int num_channels_ = 1;$/;"	m	class:webrtc::__anon182::TimedThreadApiProcessor	file:
num_channels_	webrtc/modules/audio_processing/include/audio_processing.h	/^  size_t num_channels_;$/;"	m	class:webrtc::StreamConfig
num_channels_	webrtc/modules/audio_processing/transient/transient_suppressor.h	/^  int num_channels_;$/;"	m	class:webrtc::TransientSuppressor
num_channels_	webrtc/modules/include/module_common_types.h	/^  size_t num_channels_;$/;"	m	class:webrtc::AudioFrame
num_channels_dummy	webrtc/modules/audio_processing/transient/transient_suppression_test.cc	/^static const bool num_channels_dummy =$/;"	v	file:
num_chunks_	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer.h	/^  unsigned long int num_chunks_;$/;"	m	class:webrtc::IntelligibilityEnhancer
num_columns	webrtc/modules/audio_processing/beamformer/matrix.h	/^  size_t num_columns() const { return num_columns_; }$/;"	f	class:webrtc::Matrix
num_columns_	webrtc/modules/audio_processing/beamformer/matrix.h	/^  size_t num_columns_;$/;"	m	class:webrtc::Matrix
num_consec_rec_pkts_over_30k	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  int num_consec_rec_pkts_over_30k;$/;"	m	struct:__anon131
num_consec_snt_pkts_over_30k	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  int num_consec_snt_pkts_over_30k;$/;"	m	struct:__anon131
num_delay_values	webrtc/modules/audio_processing/aec/aec_core.h	/^  int num_delay_values;$/;"	m	struct:webrtc::AecCore
num_durations_to_store_	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^  const size_t num_durations_to_store_;$/;"	m	class:webrtc::__anon182::TimedThreadApiProcessor	file:
num_frames	webrtc/common_audio/channel_buffer.h	/^  size_t num_frames() const { return ibuf_.num_frames(); }$/;"	f	class:webrtc::IFChannelBuffer
num_frames	webrtc/common_audio/channel_buffer.h	/^  size_t num_frames() const { return num_frames_; }$/;"	f	class:webrtc::ChannelBuffer
num_frames	webrtc/modules/audio_processing/audio_buffer.cc	/^size_t AudioBuffer::num_frames() const {$/;"	f	class:webrtc::AudioBuffer
num_frames	webrtc/modules/audio_processing/include/audio_processing.h	/^  size_t num_frames() const { return num_frames_; }$/;"	f	class:webrtc::StreamConfig
num_frames	webrtc/modules/audio_processing/vad/common.h	/^  size_t num_frames;$/;"	m	struct:AudioFeatures
num_frames_	webrtc/common_audio/channel_buffer.h	/^  const size_t num_frames_;$/;"	m	class:webrtc::ChannelBuffer
num_frames_	webrtc/modules/audio_processing/include/audio_processing.h	/^  size_t num_frames_;$/;"	m	class:webrtc::StreamConfig
num_frames_in_gof	webrtc/modules/include/module_common_types.h	/^  size_t num_frames_in_gof;$/;"	m	struct:webrtc::GofInfoVP9
num_frames_per_band	webrtc/common_audio/channel_buffer.h	/^  size_t num_frames_per_band() const { return ibuf_.num_frames_per_band(); }$/;"	f	class:webrtc::IFChannelBuffer
num_frames_per_band	webrtc/common_audio/channel_buffer.h	/^  size_t num_frames_per_band() const { return num_frames_per_band_; }$/;"	f	class:webrtc::ChannelBuffer
num_frames_per_band	webrtc/modules/audio_processing/audio_buffer.cc	/^size_t AudioBuffer::num_frames_per_band() const {$/;"	f	class:webrtc::AudioBuffer
num_frames_per_band_	webrtc/common_audio/channel_buffer.h	/^  const size_t num_frames_per_band_;$/;"	m	class:webrtc::ChannelBuffer
num_freq_bins_	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.h	/^  const size_t num_freq_bins_;$/;"	m	class:webrtc::PostFilterTransform
num_freqs_	webrtc/modules/audio_processing/intelligibility/intelligibility_utils.h	/^  const size_t num_freqs_;$/;"	m	class:webrtc::intelligibility::GainApplier
num_in_channels	webrtc/common_audio/lapped_transform.h	/^  size_t num_in_channels() const { return num_in_channels_; }$/;"	f	class:webrtc::LappedTransform
num_in_channels_	webrtc/common_audio/lapped_transform.h	/^  const size_t num_in_channels_;$/;"	m	class:webrtc::LappedTransform
num_input_channels	webrtc/modules/audio_processing/audio_processing_impl.cc	/^size_t AudioProcessingImpl::num_input_channels() const {$/;"	f	class:webrtc::AudioProcessingImpl
num_input_channels_	webrtc/common_audio/blocker.h	/^  const size_t num_input_channels_;$/;"	m	class:webrtc::Blocker
num_input_channels_	webrtc/modules/audio_processing/audio_buffer.h	/^  const size_t num_input_channels_;$/;"	m	class:webrtc::AudioBuffer
num_input_channels_	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.h	/^  const size_t num_input_channels_;$/;"	m	class:webrtc::NonlinearBeamformer
num_instances_	webrtc/base/scopedptrcollection_unittest.cc	/^  int num_instances_;$/;"	m	class:rtc::ScopedPtrCollectionTest	file:
num_instances_	webrtc/base/scopedptrcollection_unittest.cc	/^  int* num_instances_;$/;"	m	class:rtc::__anon55::InstanceCounter	file:
num_keyboard_frames	webrtc/modules/audio_processing/audio_buffer.cc	/^size_t AudioBuffer::num_keyboard_frames() const {$/;"	f	class:webrtc::AudioBuffer
num_leaves	webrtc/modules/audio_processing/transient/wpd_tree.h	/^  int num_leaves() const { return 1 << levels_; }$/;"	f	class:webrtc::WPDTree
num_mixtures	webrtc/modules/audio_processing/vad/gmm.h	/^  int num_mixtures;$/;"	m	struct:webrtc::GmmParameters
num_nodes	webrtc/modules/audio_processing/transient/wpd_tree.h	/^  int num_nodes() const { return num_nodes_; }$/;"	f	class:webrtc::WPDTree
num_nodes_	webrtc/modules/audio_processing/transient/wpd_tree.h	/^  int num_nodes_;$/;"	m	class:webrtc::WPDTree
num_noise_bins	webrtc/modules/audio_processing/noise_suppression_impl.cc	/^size_t NoiseSuppressionImpl::num_noise_bins() {$/;"	f	class:webrtc::NoiseSuppressionImpl
num_noise_bins_	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer.h	/^  const size_t num_noise_bins_;$/;"	m	class:webrtc::IntelligibilityEnhancer
num_of_speech	webrtc/common_audio/vad/vad_core.h	/^    int16_t num_of_speech;$/;"	m	struct:VadInstT_
num_out_channels	webrtc/common_audio/lapped_transform.h	/^  size_t num_out_channels() const { return num_out_channels_; }$/;"	f	class:webrtc::LappedTransform
num_out_channels_	webrtc/common_audio/lapped_transform.h	/^  const size_t num_out_channels_;$/;"	m	class:webrtc::LappedTransform
num_output_channels	webrtc/modules/audio_processing/audio_processing_impl.cc	/^size_t AudioProcessingImpl::num_output_channels() const {$/;"	f	class:webrtc::AudioProcessingImpl
num_output_channels	webrtc/modules/audio_processing/echo_cancellation_impl.cc	/^  const size_t num_output_channels;$/;"	m	struct:webrtc::EchoCancellationImpl::StreamProperties	file:
num_output_channels	webrtc/modules/audio_processing/echo_control_mobile_impl.cc	/^  size_t num_output_channels;$/;"	m	struct:webrtc::EchoControlMobileImpl::StreamProperties	file:
num_output_channels_	webrtc/common_audio/blocker.h	/^  const size_t num_output_channels_;$/;"	m	class:webrtc::Blocker
num_output_channels_	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^  size_t num_output_channels_;$/;"	m	class:webrtc::__anon183::ApmTest	file:
num_partitions	webrtc/modules/audio_processing/aec/aec_core.h	/^  int num_partitions;$/;"	m	struct:webrtc::AecCore
num_pkts_rec	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  int num_pkts_rec;$/;"	m	struct:__anon131
num_postfilter_channels_	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.h	/^  const size_t num_postfilter_channels_;$/;"	m	class:webrtc::NonlinearBeamformer
num_proc_channels	webrtc/modules/audio_processing/audio_processing_impl.cc	/^size_t AudioProcessingImpl::num_proc_channels() const {$/;"	f	class:webrtc::AudioProcessingImpl
num_proc_channels	webrtc/modules/audio_processing/echo_cancellation_impl.cc	/^  const size_t num_proc_channels;$/;"	m	struct:webrtc::EchoCancellationImpl::StreamProperties	file:
num_proc_channels_	webrtc/modules/audio_processing/audio_buffer.h	/^  const size_t num_proc_channels_;$/;"	m	class:webrtc::AudioBuffer
num_process_stream_calls_	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^  size_t num_process_stream_calls_ = 0;$/;"	m	class:webrtc::test::AudioProcessingSimulator
num_ref_pics	webrtc/modules/include/module_common_types.h	/^  uint8_t num_ref_pics;  \/\/ Number of reference pictures used by this layer$/;"	m	struct:webrtc::RTPVideoHeaderVP9
num_ref_pics	webrtc/modules/include/module_common_types.h	/^  uint8_t num_ref_pics[kMaxVp9FramesInGof];$/;"	m	struct:webrtc::GofInfoVP9
num_render_channels_	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer.h	/^  const size_t num_render_channels_;$/;"	m	class:webrtc::IntelligibilityEnhancer
num_reverse_channels	webrtc/modules/audio_processing/audio_processing_impl.cc	/^size_t AudioProcessingImpl::num_reverse_channels() const {$/;"	f	class:webrtc::AudioProcessingImpl
num_reverse_channels	webrtc/modules/audio_processing/echo_cancellation_impl.cc	/^  const size_t num_reverse_channels;$/;"	m	struct:webrtc::EchoCancellationImpl::StreamProperties	file:
num_reverse_channels	webrtc/modules/audio_processing/echo_control_mobile_impl.cc	/^  size_t num_reverse_channels;$/;"	m	struct:webrtc::EchoControlMobileImpl::StreamProperties	file:
num_reverse_process_stream_calls_	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^  size_t num_reverse_process_stream_calls_ = 0;$/;"	m	class:webrtc::test::AudioProcessingSimulator
num_rotations_	webrtc/base/filerotatingstream.h	/^  size_t num_rotations_;$/;"	m	class:rtc::CallSessionFileRotatingStream
num_rows	webrtc/modules/audio_processing/beamformer/matrix.h	/^  size_t num_rows() const { return num_rows_; }$/;"	f	class:webrtc::Matrix
num_rows_	webrtc/modules/audio_processing/beamformer/matrix.h	/^  size_t num_rows_;$/;"	m	class:webrtc::Matrix
num_samples	webrtc/common_audio/wav_file.cc	/^size_t WavReader::num_samples() const {$/;"	f	class:webrtc::WavReader
num_samples	webrtc/common_audio/wav_file.cc	/^size_t WavWriter::num_samples() const {$/;"	f	class:webrtc::WavWriter
num_samples	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_filter.c	/^  int num_samples;$/;"	m	struct:__anon124	file:
num_samples	webrtc/modules/audio_processing/include/audio_processing.h	/^  size_t num_samples() const { return num_channels_ * num_frames_; }$/;"	f	class:webrtc::StreamConfig
num_samples_	webrtc/base/rate_statistics.h	/^  size_t num_samples_;$/;"	m	class:webrtc::RateStatistics
num_samples_	webrtc/common_audio/wav_file.h	/^  size_t num_samples_;  \/\/ Total number of samples in the file.$/;"	m	class:webrtc::final
num_samples_	webrtc/common_audio/wav_file.h	/^  size_t num_samples_;  \/\/ Total number of samples written to file.$/;"	m	class:webrtc::final
num_samples_remaining_	webrtc/common_audio/wav_file.h	/^  size_t num_samples_remaining_;$/;"	m	class:webrtc::final
num_spatial_layers	webrtc/modules/include/module_common_types.h	/^  size_t num_spatial_layers;  \/\/ Always populated.$/;"	m	struct:webrtc::RTPVideoHeaderVP9
num_split_frames_	webrtc/modules/audio_processing/audio_buffer.h	/^  size_t num_split_frames_;$/;"	m	class:webrtc::AudioBuffer
num_symbols	webrtc/base/latebindingsymboltable.h	/^    int num_symbols;$/;"	m	struct:rtc::LateBindingSymbolTable::TableInfo
num_updates	webrtc/modules/audio_processing/agc/loudness_histogram.h	/^  int num_updates() const { return num_updates_; }$/;"	f	class:webrtc::LoudnessHistogram
num_updates_	webrtc/modules/audio_processing/agc/loudness_histogram.h	/^  int num_updates_;$/;"	m	class:webrtc::LoudnessHistogram
num_wrap_	webrtc/base/timeutils.h	/^  int64_t num_wrap_;$/;"	m	class:rtc::TimestampWrapAroundHandler
numberOfSimulcastStreams	webrtc/common_types.h	/^  unsigned char numberOfSimulcastStreams;$/;"	m	class:webrtc::VideoCodec
numberOfSpatialLayers	webrtc/common_types.h	/^  unsigned char numberOfSpatialLayers;$/;"	m	struct:webrtc::VideoCodecVP9
numberOfTemporalLayers	webrtc/common_types.h	/^  unsigned char numberOfTemporalLayers;$/;"	m	struct:webrtc::SimulcastStream
numberOfTemporalLayers	webrtc/common_types.h	/^  unsigned char numberOfTemporalLayers;$/;"	m	struct:webrtc::VideoCodecVP8
numberOfTemporalLayers	webrtc/common_types.h	/^  unsigned char numberOfTemporalLayers;$/;"	m	struct:webrtc::VideoCodecVP9
number_of_streams	webrtc/config.h	/^  size_t number_of_streams;$/;"	m	class:webrtc::VideoEncoderConfig
numerator_coefficients_	webrtc/modules/audio_processing/vad/pole_zero_filter.h	/^  float numerator_coefficients_[kMaxFilterOrder + 1];$/;"	m	class:webrtc::PoleZeroFilter
obj_	webrtc/base/platform_thread.h	/^  void* const obj_;$/;"	m	class:rtc::PlatformThread
object	webrtc/base/bind.h	/^     ObjectT* object,$/;"	m	namespace:rtc
object	webrtc/base/bind.h	/^     const ObjectT* object,$/;"	m	namespace:rtc
object	webrtc/base/bind.h	/^     const scoped_refptr<ObjectT>& object,$/;"	m	namespace:rtc
object	webrtc/base/bind.h	/^    ObjectT* object,$/;"	m	namespace:rtc
object	webrtc/base/bind.h	/^    const ObjectT* object,$/;"	m	namespace:rtc
object	webrtc/base/bind.h	/^    const scoped_refptr<ObjectT>& object,$/;"	m	namespace:rtc
object	webrtc/base/bind.h	/^Bind(FP_T(method), ObjectT* object,$/;"	m	namespace:rtc
object	webrtc/base/bind.h	/^Bind(FP_T(method), const ObjectT* object,$/;"	m	namespace:rtc
object	webrtc/base/bind.h	/^Bind(FP_T(method), const scoped_refptr<ObjectT>& object,$/;"	m	namespace:rtc
object_	webrtc/base/bind.h	/^  typename detail::PointerType<ObjectT>::type object_;$/;"	m	class:rtc::MethodFunctor0
object_	webrtc/base/bind.h	/^  typename detail::PointerType<ObjectT>::type object_;$/;"	m	class:rtc::MethodFunctor1
object_	webrtc/base/bind.h	/^  typename detail::PointerType<ObjectT>::type object_;$/;"	m	class:rtc::MethodFunctor2
object_	webrtc/base/bind.h	/^  typename detail::PointerType<ObjectT>::type object_;$/;"	m	class:rtc::MethodFunctor3
object_	webrtc/base/bind.h	/^  typename detail::PointerType<ObjectT>::type object_;$/;"	m	class:rtc::MethodFunctor4
object_	webrtc/base/bind.h	/^  typename detail::PointerType<ObjectT>::type object_;$/;"	m	class:rtc::MethodFunctor5
object_	webrtc/base/bind.h	/^  typename detail::PointerType<ObjectT>::type object_;$/;"	m	class:rtc::MethodFunctor6
object_	webrtc/base/bind.h	/^  typename detail::PointerType<ObjectT>::type object_;$/;"	m	class:rtc::MethodFunctor7
object_	webrtc/base/bind.h	/^  typename detail::PointerType<ObjectT>::type object_;$/;"	m	class:rtc::MethodFunctor8
object_	webrtc/base/bind.h	/^  typename detail::PointerType<ObjectT>::type object_;$/;"	m	class:rtc::MethodFunctor9
obtain_stream	webrtc/base/httpbase_unittest.cc	/^  bool obtain_stream;$/;"	m	class:rtc::HttpBaseTest	file:
occurrence_	webrtc/modules/audio_processing/aec/aec_core.h	/^  size_t occurrence_;$/;"	m	class:webrtc::DivergentFilterFraction
offset	webrtc/modules/audio_processing/config_unittest.cc	/^  int offset;$/;"	m	struct:webrtc::__anon191::MyExperiment	file:
offset_	webrtc/common_audio/sparse_fir_filter.h	/^  const size_t offset_;$/;"	m	class:webrtc::final
offset_us_	webrtc/base/timestampaligner.h	/^  int64_t offset_us_;$/;"	m	class:rtc::TimestampAligner
old_fs_	webrtc/base/fileutils.h	/^  FilesystemInterface* old_fs_;$/;"	m	class:rtc::FilesystemScope
old_gain_	webrtc/modules/audio_processing/level_controller/gain_applier.h	/^  float old_gain_ = 1.f;$/;"	m	class:webrtc::GainApplier
old_high_pass_mask_	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.h	/^  float old_high_pass_mask_;$/;"	m	class:webrtc::NonlinearBeamformer
old_lag_	webrtc/modules/audio_processing/vad/vad_audio_proc.h	/^  double old_lag_;$/;"	m	class:webrtc::VadAudioProc
old_ss_	webrtc/base/thread.h	/^  SocketServer* old_ss_;$/;"	m	class:rtc::SocketServerScope
oldest_index_	webrtc/base/rate_statistics.h	/^  uint32_t oldest_index_;$/;"	m	class:webrtc::RateStatistics
oldest_time_	webrtc/base/rate_statistics.h	/^  int64_t oldest_time_;$/;"	m	class:webrtc::RateStatistics
oldgainp	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  double    oldgainp[1];$/;"	m	struct:__anon128
oldlagp	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  double    oldlagp[1];$/;"	m	struct:__anon128
omx_spec_	webrtc/common_audio/real_fourier_openmax.h	/^  OMXFFTSpec_R_F32_* const omx_spec_;$/;"	m	class:webrtc::RealFourierOpenmax
onHttpClosed	webrtc/base/httpbase_unittest.cc	/^  virtual void onHttpClosed(HttpError err) {$/;"	f	class:rtc::HttpBaseTest
onHttpClosed	webrtc/base/httpclient.cc	/^void HttpClient::onHttpClosed(HttpError err) {$/;"	f	class:rtc::HttpClient
onHttpClosed	webrtc/base/httpserver.cc	/^HttpServer::Connection::onHttpClosed(HttpError err) {$/;"	f	class:rtc::HttpServer::Connection
onHttpComplete	webrtc/base/httpbase_unittest.cc	/^  virtual void onHttpComplete(HttpMode mode, HttpError err) {$/;"	f	class:rtc::HttpBaseTest
onHttpComplete	webrtc/base/httpclient.cc	/^void HttpClient::onHttpComplete(HttpMode mode, HttpError err) {$/;"	f	class:rtc::HttpClient
onHttpComplete	webrtc/base/httpserver.cc	/^HttpServer::Connection::onHttpComplete(HttpMode mode, HttpError err) {$/;"	f	class:rtc::HttpServer::Connection
onHttpHeaderComplete	webrtc/base/httpbase_unittest.cc	/^  virtual HttpError onHttpHeaderComplete(bool chunked, size_t& data_size) {$/;"	f	class:rtc::HttpBaseTest
onHttpHeaderComplete	webrtc/base/httpclient.cc	/^HttpError HttpClient::onHttpHeaderComplete(bool chunked, size_t& data_size) {$/;"	f	class:rtc::HttpClient
onHttpHeaderComplete	webrtc/base/httpserver.cc	/^HttpServer::Connection::onHttpHeaderComplete(bool chunked, size_t& data_size) {$/;"	f	class:rtc::HttpServer::Connection
once	webrtc/common_audio/signal_processing/spl_init.c	/^static void once(void (*func)(void)) {$/;"	f	file:
ooura_fft	webrtc/modules/audio_processing/aec/aec_core.h	/^  const OouraFft ooura_fft;$/;"	m	struct:webrtc::AecCore
ooura_fft_	webrtc/modules/audio_processing/level_controller/signal_classifier.h	/^  const OouraFft ooura_fft_;$/;"	m	class:webrtc::SignalClassifier
openssl_id	webrtc/base/opensslstreamadapter.cc	/^  uint32_t openssl_id;$/;"	m	struct:rtc::SslCipherMapEntry	file:
operator !=	webrtc/base/array_view.h	/^  friend bool operator!=(const ArrayView& a, const ArrayView& b) {$/;"	f	class:rtc::final
operator !=	webrtc/base/buffer.h	/^  bool operator!=(const BufferT& buf) const { return !(*this == buf); }$/;"	f	class:rtc::BufferT
operator !=	webrtc/base/copyonwritebuffer.h	/^  bool operator!=(const CopyOnWriteBuffer& buf) const {$/;"	f	class:rtc::CopyOnWriteBuffer
operator !=	webrtc/base/ipaddress.cc	/^bool IPAddress::operator!=(const IPAddress &other) const {$/;"	f	class:rtc::IPAddress
operator !=	webrtc/base/ipaddress.cc	/^bool InterfaceAddress::operator!=(const InterfaceAddress &other) const {$/;"	f	class:rtc::InterfaceAddress
operator !=	webrtc/base/networkroute.h	/^  bool operator!=(const NetworkRoute& nr) const { return !(*this == nr); }$/;"	f	struct:rtc::NetworkRoute
operator !=	webrtc/base/opensslidentity.cc	/^bool OpenSSLCertificate::operator!=(const OpenSSLCertificate& other) const {$/;"	f	class:rtc::OpenSSLCertificate
operator !=	webrtc/base/opensslidentity.cc	/^bool OpenSSLIdentity::operator!=(const OpenSSLIdentity& other) const {$/;"	f	class:rtc::OpenSSLIdentity
operator !=	webrtc/base/opensslidentity.cc	/^bool OpenSSLKeyPair::operator!=(const OpenSSLKeyPair& other) const {$/;"	f	class:rtc::OpenSSLKeyPair
operator !=	webrtc/base/optional.h	/^  friend bool operator!=(const Optional& m1, const Optional& m2) {$/;"	f	class:rtc::final
operator !=	webrtc/base/optional.h	/^  friend bool operator!=(const Optional& opt, const T& value) {$/;"	f	class:rtc::final
operator !=	webrtc/base/optional.h	/^  friend bool operator!=(const T& value, const Optional& opt) {$/;"	f	class:rtc::final
operator !=	webrtc/base/optional_unittest.cc	/^  friend bool operator!=(const Logger& a, const Logger& b) {$/;"	f	class:rtc::__anon41::Logger
operator !=	webrtc/base/rtccertificate.cc	/^bool RTCCertificate::operator!=(const RTCCertificate& certificate) const {$/;"	f	class:rtc::RTCCertificate
operator !=	webrtc/base/socketaddress.h	/^  inline bool operator !=(const SocketAddress& addr) const {$/;"	f	class:rtc::SocketAddress
operator !=	webrtc/base/sslidentity.cc	/^bool operator!=(const SSLIdentity& a, const SSLIdentity& b) {$/;"	f	namespace:rtc
operator !=	webrtc/base/timedelta.h	/^  constexpr bool operator!=(TimeDelta other) const {$/;"	f	class:rtc::TimeDelta
operator !=	webrtc/base/weak_ptr.h	/^bool operator!=(const WeakPtr<T>& weak_ptr, std::nullptr_t) {$/;"	f	namespace:rtc
operator !=	webrtc/base/weak_ptr.h	/^bool operator!=(std::nullptr_t, const WeakPtr<T>& weak_ptr) {$/;"	f	namespace:rtc
operator !=	webrtc/common_types.h	/^  bool operator!=(const CodecInst& other) const { return !(*this == other); }$/;"	f	struct:webrtc::CodecInst
operator !=	webrtc/modules/audio_processing/include/audio_processing.h	/^  bool operator!=(const ProcessingConfig& other) const {$/;"	f	class:webrtc::ProcessingConfig
operator !=	webrtc/modules/audio_processing/include/audio_processing.h	/^  bool operator!=(const StreamConfig& other) const { return !(*this == other); }$/;"	f	class:webrtc::StreamConfig
operator !=	webrtc/system_wrappers/include/ntp_time.h	/^inline bool operator!=(const NtpTime& n1, const NtpTime& n2) {$/;"	f	namespace:webrtc
operator %	webrtc/base/timedelta.h	/^  TimeDelta operator%(TimeDelta a) const {$/;"	f	class:rtc::TimeDelta
operator &	webrtc/base/checks.h	/^  void operator&(std::ostream&) { }$/;"	f	class:rtc::FatalMessageVoidify
operator &	webrtc/base/logging.h	/^  void operator&(std::ostream&) { }$/;"	f	class:rtc::LogMessageVoidify
operator &	webrtc/system_wrappers/include/logging.h	/^  void operator&(std::ostream&) { }$/;"	f	class:webrtc::LogMessageVoidify
operator ()	webrtc/base/bind.h	/^  R operator()() const { return functor_(p1_, p2_, p3_, p4_, p5_, p6_, p7_); }$/;"	f	class:rtc::Functor7
operator ()	webrtc/base/bind.h	/^  R operator()() const {$/;"	f	class:rtc::Functor0
operator ()	webrtc/base/bind.h	/^  R operator()() const {$/;"	f	class:rtc::Functor1
operator ()	webrtc/base/bind.h	/^  R operator()() const {$/;"	f	class:rtc::Functor2
operator ()	webrtc/base/bind.h	/^  R operator()() const {$/;"	f	class:rtc::Functor3
operator ()	webrtc/base/bind.h	/^  R operator()() const {$/;"	f	class:rtc::Functor4
operator ()	webrtc/base/bind.h	/^  R operator()() const {$/;"	f	class:rtc::Functor5
operator ()	webrtc/base/bind.h	/^  R operator()() const {$/;"	f	class:rtc::Functor6
operator ()	webrtc/base/bind.h	/^  R operator()() const {$/;"	f	class:rtc::Functor8
operator ()	webrtc/base/bind.h	/^  R operator()() const {$/;"	f	class:rtc::Functor9
operator ()	webrtc/base/bind.h	/^  R operator()() const {$/;"	f	class:rtc::MethodFunctor0
operator ()	webrtc/base/bind.h	/^  R operator()() const {$/;"	f	class:rtc::MethodFunctor1
operator ()	webrtc/base/bind.h	/^  R operator()() const {$/;"	f	class:rtc::MethodFunctor2
operator ()	webrtc/base/bind.h	/^  R operator()() const {$/;"	f	class:rtc::MethodFunctor3
operator ()	webrtc/base/bind.h	/^  R operator()() const {$/;"	f	class:rtc::MethodFunctor4
operator ()	webrtc/base/bind.h	/^  R operator()() const {$/;"	f	class:rtc::MethodFunctor5
operator ()	webrtc/base/bind.h	/^  R operator()() const {$/;"	f	class:rtc::MethodFunctor6
operator ()	webrtc/base/bind.h	/^  R operator()() const {$/;"	f	class:rtc::MethodFunctor7
operator ()	webrtc/base/bind.h	/^  R operator()() const {$/;"	f	class:rtc::MethodFunctor8
operator ()	webrtc/base/bind.h	/^  R operator()() const {$/;"	f	class:rtc::MethodFunctor9
operator ()	webrtc/base/callback.h	/^  R operator()() {$/;"	f	class:rtc::Callback0
operator ()	webrtc/base/callback.h	/^  R operator()(P1 p1) {$/;"	f	class:rtc::Callback1
operator ()	webrtc/base/callback.h	/^  R operator()(P1 p1, P2 p2) {$/;"	f	class:rtc::Callback2
operator ()	webrtc/base/callback.h	/^  R operator()(P1 p1, P2 p2, P3 p3) {$/;"	f	class:rtc::Callback3
operator ()	webrtc/base/callback.h	/^  R operator()(P1 p1, P2 p2, P3 p3, P4 p4) {$/;"	f	class:rtc::Callback4
operator ()	webrtc/base/callback.h	/^  R operator()(P1 p1, P2 p2, P3 p3, P4 p4, P5 p5) {$/;"	f	class:rtc::Callback5
operator ()	webrtc/base/function_view.h	/^  RetT operator()(ArgT... args) const {$/;"	f	class:rtc::final
operator ()	webrtc/base/httpcommon.h	/^  bool operator()(const std::string& lhs, const std::string& rhs) const {$/;"	f	struct:rtc::iless
operator ()	webrtc/base/natserver.cc	/^bool AddrCmp::operator()($/;"	f	class:rtc::AddrCmp
operator ()	webrtc/base/natserver.cc	/^bool RouteCmp::operator()($/;"	f	class:rtc::RouteCmp
operator ()	webrtc/base/natserver.cc	/^size_t AddrCmp::operator()(const SocketAddress& a) const {$/;"	f	class:rtc::AddrCmp
operator ()	webrtc/base/natserver.cc	/^size_t RouteCmp::operator()(const SocketAddressPair& r) const {$/;"	f	class:rtc::RouteCmp
operator ()	webrtc/base/onetimeevent.h	/^  bool operator()() {$/;"	f	class:webrtc::OneTimeEvent
operator ()	webrtc/base/onetimeevent.h	/^  bool operator()() {$/;"	f	class:webrtc::ThreadUnsafeOneTimeEvent
operator ()	webrtc/base/sigslot.h	/^		void operator()()$/;"	f	class:sigslot::signal0
operator ()	webrtc/base/sigslot.h	/^		void operator()(arg1_type a1)$/;"	f	class:sigslot::signal1
operator ()	webrtc/base/sigslot.h	/^		void operator()(arg1_type a1, arg2_type a2)$/;"	f	class:sigslot::signal2
operator ()	webrtc/base/sigslot.h	/^		void operator()(arg1_type a1, arg2_type a2, arg3_type a3)$/;"	f	class:sigslot::signal3
operator ()	webrtc/base/sigslot.h	/^		void operator()(arg1_type a1, arg2_type a2, arg3_type a3, arg4_type a4)$/;"	f	class:sigslot::signal4
operator ()	webrtc/base/sigslot.h	/^		void operator()(arg1_type a1, arg2_type a2, arg3_type a3, arg4_type a4,$/;"	f	class:sigslot::signal5
operator ()	webrtc/base/sigslot.h	/^		void operator()(arg1_type a1, arg2_type a2, arg3_type a3, arg4_type a4,$/;"	f	class:sigslot::signal6
operator ()	webrtc/base/sigslot.h	/^		void operator()(arg1_type a1, arg2_type a2, arg3_type a3, arg4_type a4,$/;"	f	class:sigslot::signal7
operator ()	webrtc/base/sigslot.h	/^		void operator()(arg1_type a1, arg2_type a2, arg3_type a3, arg4_type a4,$/;"	f	class:sigslot::signal8
operator ()	webrtc/base/swap_queue.h	/^  bool operator()(const T& t) const { return QueueItemVerifierFunction(t); }$/;"	f	class:webrtc::SwapQueueItemVerifier
operator ()	webrtc/base/swap_queue_unittest.cc	/^  bool operator()(const std::vector<int>& v) const {$/;"	f	class:webrtc::__anon63::LengthVerifierFunctor
operator ()	webrtc/base/thread_unittest.cc	/^  int operator()() { return 42; }$/;"	f	struct:FunctorA
operator ()	webrtc/base/thread_unittest.cc	/^  int operator()() {$/;"	f	struct:FunctorC
operator ()	webrtc/base/thread_unittest.cc	/^  void operator()() { if (flag_) *flag_ = true; }$/;"	f	class:FunctorB
operator ()	webrtc/base/thread_unittest.cc	/^  void operator()() { invoker_->reset(new GuardedAsyncInvoker()); }$/;"	f	struct:CreateInvoker
operator ()	webrtc/base/virtualsocketserver.cc	/^  bool operator()(const VirtualSocketServer::Point& p1, double v2) {$/;"	f	struct:rtc::FunctionDomainCmp
operator ()	webrtc/base/virtualsocketserver.cc	/^  bool operator()(const VirtualSocketServer::Point& p1,$/;"	f	struct:rtc::FunctionDomainCmp
operator ()	webrtc/base/virtualsocketserver.cc	/^  bool operator()(double v1, const VirtualSocketServer::Point& p2) {$/;"	f	struct:rtc::FunctionDomainCmp
operator ()	webrtc/common_audio/ring_buffer_unittest.cc	/^  inline void operator()(void* ptr) const {$/;"	f	struct:webrtc::FreeBufferDeleter
operator ()	webrtc/modules/audio_processing/logging/apm_data_dumper.h	/^  void operator()(FILE* f) const { fclose(f); }$/;"	f	struct:webrtc::RawFileCloseFunctor
operator ()	webrtc/modules/audio_processing/render_queue_item_verifier.h	/^  bool operator()(const std::vector<T>& v) const {$/;"	f	class:webrtc::RenderQueueItemVerifier
operator ()	webrtc/system_wrappers/include/aligned_malloc.h	/^  inline void operator()(void* ptr) const {$/;"	f	struct:webrtc::AlignedFreeDeleter
operator *	webrtc/base/linked_ptr.h	/^    X& operator*()  const throw()   {return *itsPtr;}$/;"	f	class:rtc::linked_ptr
operator *	webrtc/base/optional.h	/^  T& operator*() {$/;"	f	class:rtc::final
operator *	webrtc/base/optional.h	/^  const T& operator*() const {$/;"	f	class:rtc::final
operator *	webrtc/base/timedelta.h	/^  TimeDelta operator*(T a) const {$/;"	f	class:rtc::TimeDelta
operator *	webrtc/base/timedelta.h	/^inline TimeDelta operator*(T a, TimeDelta td) {$/;"	f	namespace:rtc
operator *	webrtc/base/weak_ptr.h	/^  T& operator*() const {$/;"	f	class:rtc::WeakPtr
operator *=	webrtc/base/timedelta.h	/^  TimeDelta& operator*=(T a) {$/;"	f	class:rtc::TimeDelta
operator +	webrtc/base/timedelta.h	/^  TimeDelta operator+(TimeDelta other) const {$/;"	f	class:rtc::TimeDelta
operator +=	webrtc/base/timedelta.h	/^  TimeDelta& operator+=(TimeDelta other) { return *this = (*this + other); }$/;"	f	class:rtc::TimeDelta
operator +=	webrtc/modules/include/module_common_types.h	/^inline AudioFrame& AudioFrame::operator+=(const AudioFrame& rhs) {$/;"	f	class:webrtc::AudioFrame
operator -	webrtc/base/timedelta.h	/^  TimeDelta operator-() const { return TimeDelta(-delta_); }$/;"	f	class:rtc::TimeDelta
operator -	webrtc/base/timedelta.h	/^  TimeDelta operator-(TimeDelta other) const {$/;"	f	class:rtc::TimeDelta
operator -=	webrtc/base/timedelta.h	/^  TimeDelta& operator-=(TimeDelta other) { return *this = (*this - other); }$/;"	f	class:rtc::TimeDelta
operator ->	webrtc/base/linked_ptr.h	/^    X* operator->() const throw()   {return itsPtr;}$/;"	f	class:rtc::linked_ptr
operator ->	webrtc/base/optional.h	/^  T* operator->() {$/;"	f	class:rtc::final
operator ->	webrtc/base/optional.h	/^  const T* operator->() const {$/;"	f	class:rtc::final
operator ->	webrtc/base/scoped_ref_ptr.h	/^  T* operator->() const { return ptr_; }$/;"	f	class:rtc::scoped_refptr
operator ->	webrtc/base/weak_ptr.h	/^  T* operator->() const {$/;"	f	class:rtc::WeakPtr
operator /	webrtc/base/timedelta.h	/^  TimeDelta operator\/(T a) const {$/;"	f	class:rtc::TimeDelta
operator /=	webrtc/base/timedelta.h	/^  TimeDelta& operator\/=(T a) {$/;"	f	class:rtc::TimeDelta
operator <	webrtc/base/ipaddress.cc	/^bool IPAddress::operator <(const IPAddress &other) const {$/;"	f	class:rtc::IPAddress
operator <	webrtc/base/messagequeue.h	/^  bool operator< (const DelayedMessage& dmsg) const {$/;"	f	class:rtc::DelayedMessage
operator <	webrtc/base/socketaddress.cc	/^bool SocketAddress::operator<(const SocketAddress& addr) const {$/;"	f	class:rtc::SocketAddress
operator <	webrtc/base/socketaddresspair.cc	/^bool SocketAddressPair::operator <(const SocketAddressPair& p) const {$/;"	f	class:rtc::SocketAddressPair
operator <	webrtc/base/timedelta.h	/^  constexpr bool operator<(TimeDelta other) const {$/;"	f	class:rtc::TimeDelta
operator <<	webrtc/base/ipaddress.cc	/^std::ostream& operator<<(std::ostream& os, const IPAddress& ip) {$/;"	f	namespace:rtc
operator <<	webrtc/base/ipaddress.cc	/^std::ostream& operator<<(std::ostream& os, const InterfaceAddress& ip) {$/;"	f	namespace:rtc
operator <<	webrtc/base/socketaddress.cc	/^std::ostream& operator<<(std::ostream& os, const SocketAddress& addr) {$/;"	f	namespace:rtc
operator <=	webrtc/base/timedelta.h	/^  constexpr bool operator<=(TimeDelta other) const {$/;"	f	class:rtc::TimeDelta
operator =	webrtc/base/buffer.h	/^  BufferT& operator=(BufferT&& buf) {$/;"	f	class:rtc::BufferT
operator =	webrtc/base/copyonwritebuffer.h	/^  CopyOnWriteBuffer& operator=(CopyOnWriteBuffer&& buf) {$/;"	f	class:rtc::CopyOnWriteBuffer
operator =	webrtc/base/copyonwritebuffer.h	/^  CopyOnWriteBuffer& operator=(const CopyOnWriteBuffer& buf) {$/;"	f	class:rtc::CopyOnWriteBuffer
operator =	webrtc/base/cryptstring.h	/^  CryptString & operator=(const CryptString & other) {$/;"	f	class:rtc::CryptString
operator =	webrtc/base/file.cc	/^File& File::operator=(File&& other) {$/;"	f	class:rtc::File
operator =	webrtc/base/httpcommon.cc	/^  inline Enum& operator=(E rhs) { val = rhs; return *this; }$/;"	f	struct:rtc::Enum
operator =	webrtc/base/httpcommon.cc	/^  inline Enum& operator=(const std::string& rhs) { assign(rhs); return *this; }$/;"	f	struct:rtc::Enum
operator =	webrtc/base/ipaddress.cc	/^const InterfaceAddress& InterfaceAddress::operator=($/;"	f	class:rtc::InterfaceAddress
operator =	webrtc/base/ipaddress.h	/^  const IPAddress & operator=(const IPAddress& other) {$/;"	f	class:rtc::IPAddress
operator =	webrtc/base/linked_ptr.h	/^    linked_ptr& operator=(const linked_ptr& r)$/;"	f	class:rtc::linked_ptr
operator =	webrtc/base/linked_ptr.h	/^    template <class Y> linked_ptr& operator=(const linked_ptr<Y>& r)$/;"	f	class:rtc::linked_ptr
operator =	webrtc/base/location.cc	/^Location& Location::operator=(const Location& other) {$/;"	f	class:rtc::Location
operator =	webrtc/base/optional.h	/^  Optional& operator=(Optional&& m) {$/;"	f	class:rtc::final
operator =	webrtc/base/optional.h	/^  Optional& operator=(const Optional& m) {$/;"	f	class:rtc::final
operator =	webrtc/base/optional_unittest.cc	/^  Logger& operator=(Logger&& other) {$/;"	f	class:rtc::__anon41::Logger
operator =	webrtc/base/optional_unittest.cc	/^  Logger& operator=(const Logger& other) {$/;"	f	class:rtc::__anon41::Logger
operator =	webrtc/base/scoped_ref_ptr.h	/^  scoped_refptr<T>& operator=(T* p) {$/;"	f	class:rtc::scoped_refptr
operator =	webrtc/base/scoped_ref_ptr.h	/^  scoped_refptr<T>& operator=(const scoped_refptr<T>& r) {$/;"	f	class:rtc::scoped_refptr
operator =	webrtc/base/scoped_ref_ptr.h	/^  scoped_refptr<T>& operator=(const scoped_refptr<U>& r) {$/;"	f	class:rtc::scoped_refptr
operator =	webrtc/base/scoped_ref_ptr.h	/^  scoped_refptr<T>& operator=(scoped_refptr<T>&& r) {$/;"	f	class:rtc::scoped_refptr
operator =	webrtc/base/scoped_ref_ptr.h	/^  scoped_refptr<T>& operator=(scoped_refptr<U>&& r) {$/;"	f	class:rtc::scoped_refptr
operator =	webrtc/base/socketaddress.cc	/^SocketAddress& SocketAddress::operator=(const SocketAddress& addr) {$/;"	f	class:rtc::SocketAddress
operator =	webrtc/base/thread_unittest.cc	/^  AtomicBool& operator=(bool value) {$/;"	f	class:AtomicBool
operator =	webrtc/base/timedelta.h	/^  TimeDelta& operator=(TimeDelta other) {$/;"	f	class:rtc::TimeDelta
operator =	webrtc/system_wrappers/source/file_impl.cc	/^FileWrapper& FileWrapper::operator=(FileWrapper&& other) {$/;"	f	class:webrtc::FileWrapper
operator ==	webrtc/base/array_view.h	/^  friend bool operator==(const ArrayView& a, const ArrayView& b) {$/;"	f	class:rtc::final
operator ==	webrtc/base/buffer.h	/^  bool operator==(const BufferT& buf) const {$/;"	f	class:rtc::BufferT
operator ==	webrtc/base/copyonwritebuffer.cc	/^bool CopyOnWriteBuffer::operator==(const CopyOnWriteBuffer& buf) const {$/;"	f	class:rtc::CopyOnWriteBuffer
operator ==	webrtc/base/fakesslidentity.h	/^  virtual bool operator==(const SSLIdentity& other) const {$/;"	f	class:rtc::FakeSSLIdentity
operator ==	webrtc/base/ipaddress.cc	/^bool IPAddress::operator==(const IPAddress &other) const {$/;"	f	class:rtc::IPAddress
operator ==	webrtc/base/ipaddress.cc	/^bool InterfaceAddress::operator==(const InterfaceAddress &other) const {$/;"	f	class:rtc::InterfaceAddress
operator ==	webrtc/base/networkroute.h	/^  bool operator==(const NetworkRoute& nr) const {$/;"	f	struct:rtc::NetworkRoute
operator ==	webrtc/base/opensslidentity.cc	/^bool OpenSSLCertificate::operator==(const OpenSSLCertificate& other) const {$/;"	f	class:rtc::OpenSSLCertificate
operator ==	webrtc/base/opensslidentity.cc	/^bool OpenSSLIdentity::operator==(const OpenSSLIdentity& other) const {$/;"	f	class:rtc::OpenSSLIdentity
operator ==	webrtc/base/opensslidentity.cc	/^bool OpenSSLKeyPair::operator==(const OpenSSLKeyPair& other) const {$/;"	f	class:rtc::OpenSSLKeyPair
operator ==	webrtc/base/optional.h	/^  friend bool operator==(const Optional& m1, const Optional& m2) {$/;"	f	class:rtc::final
operator ==	webrtc/base/optional.h	/^  friend bool operator==(const Optional& opt, const T& value) {$/;"	f	class:rtc::final
operator ==	webrtc/base/optional.h	/^  friend bool operator==(const T& value, const Optional& opt) {$/;"	f	class:rtc::final
operator ==	webrtc/base/optional_unittest.cc	/^  friend bool operator==(const Logger& a, const Logger& b) {$/;"	f	class:rtc::__anon41::Logger
operator ==	webrtc/base/rtccertificate.cc	/^bool RTCCertificate::operator==(const RTCCertificate& certificate) const {$/;"	f	class:rtc::RTCCertificate
operator ==	webrtc/base/socketaddress.cc	/^bool SocketAddress::operator==(const SocketAddress& addr) const {$/;"	f	class:rtc::SocketAddress
operator ==	webrtc/base/socketaddresspair.cc	/^bool SocketAddressPair::operator ==(const SocketAddressPair& p) const {$/;"	f	class:rtc::SocketAddressPair
operator ==	webrtc/base/sslfingerprint.cc	/^bool SSLFingerprint::operator==(const SSLFingerprint& other) const {$/;"	f	class:rtc::SSLFingerprint
operator ==	webrtc/base/sslidentity.cc	/^bool operator==(const SSLIdentity& a, const SSLIdentity& b) {$/;"	f	namespace:rtc
operator ==	webrtc/base/timedelta.h	/^  constexpr bool operator==(TimeDelta other) const {$/;"	f	class:rtc::TimeDelta
operator ==	webrtc/base/weak_ptr.h	/^bool operator==(const WeakPtr<T>& weak_ptr, std::nullptr_t) {$/;"	f	namespace:rtc
operator ==	webrtc/base/weak_ptr.h	/^bool operator==(std::nullptr_t, const WeakPtr<T>& weak_ptr) {$/;"	f	namespace:rtc
operator ==	webrtc/common_types.h	/^  bool operator==(const CodecInst& other) const {$/;"	f	struct:webrtc::CodecInst
operator ==	webrtc/config.h	/^  bool operator==(const RtpExtension& rhs) const {$/;"	f	struct:webrtc::RtpExtension
operator ==	webrtc/modules/audio_processing/beamformer/array_util_unittest.cc	/^bool operator==(const Point& lhs, const Point& rhs) {$/;"	f	namespace:webrtc
operator ==	webrtc/modules/audio_processing/include/audio_processing.h	/^  bool operator==(const ProcessingConfig& other) const {$/;"	f	class:webrtc::ProcessingConfig
operator ==	webrtc/modules/audio_processing/include/audio_processing.h	/^  bool operator==(const StreamConfig& other) const {$/;"	f	class:webrtc::StreamConfig
operator ==	webrtc/system_wrappers/include/ntp_time.h	/^inline bool operator==(const NtpTime& n1, const NtpTime& n2) {$/;"	f	namespace:webrtc
operator >	webrtc/base/ipaddress.cc	/^bool IPAddress::operator >(const IPAddress &other) const {$/;"	f	class:rtc::IPAddress
operator >	webrtc/base/timedelta.h	/^  constexpr bool operator>(TimeDelta other) const {$/;"	f	class:rtc::TimeDelta
operator >=	webrtc/base/timedelta.h	/^  constexpr bool operator>=(TimeDelta other) const {$/;"	f	class:rtc::TimeDelta
operator >>=	webrtc/modules/include/module_common_types.h	/^inline AudioFrame& AudioFrame::operator>>=(const int rhs) {$/;"	f	class:webrtc::AudioFrame
operator Display*	webrtc/base/testutils.h	/^  operator Display*() { return display_; }$/;"	f	struct:testing::XDisplay
operator E&	webrtc/base/httpcommon.cc	/^  inline operator E&() { return val; }$/;"	f	struct:rtc::Enum
operator T*	webrtc/base/scoped_ref_ptr.h	/^  operator T*() const { return ptr_; }$/;"	f	class:rtc::scoped_refptr
operator []	webrtc/base/array_view.h	/^  T& operator[](size_t idx) const {$/;"	f	class:rtc::final
operator []	webrtc/base/buffer.h	/^  T operator[](size_t index) const {$/;"	f	class:rtc::BufferT
operator []	webrtc/base/buffer.h	/^  T& operator[](size_t index) {$/;"	f	class:rtc::BufferT
operator []	webrtc/base/copyonwritebuffer.h	/^  uint8_t operator[](size_t index) const {$/;"	f	class:rtc::CopyOnWriteBuffer
operator []	webrtc/base/copyonwritebuffer.h	/^  uint8_t& operator[](size_t index) {$/;"	f	class:rtc::CopyOnWriteBuffer
operator []	webrtc/base/testutils.h	/^  SocketTestClient* operator[](size_t index) const { return client(index); }$/;"	f	class:testing::SocketTestServer
operator bool	webrtc/base/function_view.h	/^  explicit operator bool() const { return !!call_; }$/;"	f	class:rtc::final
operator bool	webrtc/base/optional.h	/^  explicit operator bool() const { return has_value_; }$/;"	f	class:rtc::final
operator bool	webrtc/base/weak_ptr.h	/^  explicit operator bool() const { return get() != nullptr; }$/;"	f	class:rtc::WeakPtr
operator const char*	webrtc/base/trace_event.h	/^  operator const char* () const { return str_; }$/;"	f	class:webrtc::trace_event_internal::TraceStringWithCopy
operator delete	webrtc/base/scoped_autorelease_pool.h	/^  void operator delete (void* ptr) {}$/;"	f	class:rtc::ScopedAutoreleasePool
operator new	webrtc/base/scoped_autorelease_pool.h	/^  void* operator new(size_t size) throw() { return NULL; }$/;"	f	class:rtc::ScopedAutoreleasePool
optional_internal	webrtc/base/optional.cc	/^namespace optional_internal {$/;"	n	namespace:rtc	file:
optional_internal	webrtc/base/optional.h	/^namespace optional_internal {$/;"	n	namespace:rtc
options	webrtc/base/virtualsocket_unittest.cc	/^  rtc::PacketOptions options;$/;"	m	struct:Sender	file:
options_	webrtc/base/optionsfile.h	/^  OptionsMap options_;$/;"	m	class:rtc::OptionsFile
options_	webrtc/modules/audio_processing/include/config.h	/^  OptionMap options_;$/;"	m	class:webrtc::Config
options_map_	webrtc/base/virtualsocketserver.h	/^  OptionsMap options_map_;$/;"	m	class:rtc::VirtualSocket
order	webrtc/common_audio/signal_processing/real_fft.c	/^  int order;$/;"	m	struct:RealFFT	file:
order_	webrtc/common_audio/real_fourier_ooura.h	/^  const int order_;$/;"	m	class:webrtc::RealFourierOoura
order_	webrtc/common_audio/real_fourier_openmax.h	/^  const int order_;$/;"	m	class:webrtc::RealFourierOpenmax
order_denominator_	webrtc/modules/audio_processing/vad/pole_zero_filter.h	/^  size_t order_denominator_;$/;"	m	class:webrtc::PoleZeroFilter
order_numerator_	webrtc/modules/audio_processing/vad/pole_zero_filter.h	/^  size_t order_numerator_;$/;"	m	class:webrtc::PoleZeroFilter
org.webrtc	webrtc/base/java/src/org/webrtc/Logging.java	/^package org.webrtc;$/;"	p
org.webrtc	webrtc/base/java/src/org/webrtc/Size.java	/^package org.webrtc;$/;"	p
org.webrtc	webrtc/base/java/src/org/webrtc/ThreadUtils.java	/^package org.webrtc;$/;"	p
organization_name_	webrtc/base/fileutils.h	/^  std::string organization_name_;$/;"	m	class:rtc::FilesystemInterface
orig_data_	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer_unittest.cc	/^  std::vector<float> orig_data_;$/;"	m	class:webrtc::IntelligibilityEnhancerTest	file:
origin_	webrtc/base/optional_unittest.cc	/^  int origin_;$/;"	m	class:rtc::__anon41::Logger	file:
original_error_handler_	webrtc/base/x11windowpicker.cc	/^  XErrorHandler original_error_handler_;$/;"	m	class:rtc::XErrorSuppressor	file:
other	webrtc/base/weak_ptr.cc	/^WeakReference::WeakReference(WeakReference&& other) = default;$/;"	m	class:rtc::internal::WeakReference	file:
other	webrtc/base/weak_ptr.cc	/^WeakReference::WeakReference(const WeakReference& other) = default;$/;"	m	class:rtc::internal::WeakReference	file:
other	webrtc/base/weak_ptr.h	/^  WeakPtrBase& operator=(WeakPtrBase&& other) = default;$/;"	m	class:rtc::internal::WeakPtrBase
other	webrtc/base/weak_ptr.h	/^  WeakPtrBase& operator=(const WeakPtrBase& other) = default;$/;"	m	class:rtc::internal::WeakPtrBase
other	webrtc/base/weak_ptr.h	/^  WeakPtrBase(WeakPtrBase&& other) = default;$/;"	m	class:rtc::internal::WeakPtrBase
other	webrtc/base/weak_ptr.h	/^  WeakPtrBase(const WeakPtrBase& other) = default;$/;"	m	class:rtc::internal::WeakPtrBase
other	webrtc/base/weak_ptr.h	/^  WeakReference& operator=(WeakReference&& other) = default;$/;"	m	class:rtc::internal::WeakReference
other	webrtc/base/weak_ptr.h	/^  WeakReference& operator=(const WeakReference& other) = default;$/;"	m	class:rtc::internal::WeakReference
outBuf	webrtc/modules/audio_processing/aec/aec_core.h	/^  float outBuf[PART_LEN];$/;"	m	struct:webrtc::AecCore
outBuf	webrtc/modules/audio_processing/aecm/aecm_core.h	/^    int16_t *outBuf;$/;"	m	struct:__anon164
outBuf_buf	webrtc/modules/audio_processing/aecm/aecm_core.h	/^    int16_t outBuf_buf[PART_LEN + 8];$/;"	m	struct:__anon164
outFile	webrtc/modules/audio_processing/aecm/aecm_core.h	/^    FILE *outFile;$/;"	m	struct:__anon164
outFrameBuf	webrtc/modules/audio_processing/aecm/aecm_core.h	/^    RingBuffer* outFrameBuf;$/;"	m	struct:__anon164
outSamples	webrtc/modules/audio_processing/aec/aec_core.h	/^  int inSamples, outSamples;$/;"	m	struct:webrtc::AecCore
out_	webrtc/base/sslstreamadapter_unittest.cc	/^  rtc::StreamInterface* out_;$/;"	m	class:SSLDummyStreamBase	file:
out_	webrtc/modules/audio_processing/aec/system_delay_unittest.cc	/^  float out_[kSamplesPerChunk];$/;"	m	class:webrtc::__anon162::SystemDelayTest	file:
out_buf_	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^  std::unique_ptr<ChannelBuffer<float>> out_buf_;$/;"	m	class:webrtc::test::AudioProcessingSimulator
out_buffer_	webrtc/base/proxyserver.h	/^  FifoBuffer out_buffer_;$/;"	m	class:rtc::ProxyBinding
out_buffer_	webrtc/common_audio/resampler/include/resampler.h	/^    int16_t* out_buffer_;$/;"	m	class:webrtc::Resampler
out_buffer_	webrtc/modules/audio_processing/three_band_filter_bank.h	/^  std::vector<float> out_buffer_;$/;"	m	class:webrtc::final
out_buffer_	webrtc/modules/audio_processing/transient/transient_suppressor.h	/^  std::unique_ptr<float[]> out_buffer_;$/;"	m	class:webrtc::TransientSuppressor
out_buffer_size_	webrtc/common_audio/resampler/include/resampler.h	/^    size_t out_buffer_size_;$/;"	m	class:webrtc::Resampler
out_buffer_size_max_	webrtc/common_audio/resampler/include/resampler.h	/^    size_t out_buffer_size_max_;$/;"	m	class:webrtc::Resampler
out_config_	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^  StreamConfig out_config_;$/;"	m	class:webrtc::test::AudioProcessingSimulator
out_file_	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^  FILE* out_file_;$/;"	m	class:webrtc::__anon183::ApmTest	file:
out_ptr_	webrtc/modules/audio_processing/aec/system_delay_unittest.cc	/^  float* out_ptr_;$/;"	m	class:webrtc::__anon162::SystemDelayTest	file:
outbuf_	webrtc/base/asynctcpsocket.h	/^  Buffer outbuf_;$/;"	m	class:rtc::AsyncTCPSocketBase
output_	webrtc/modules/audio_processing/test/debug_dump_replayer.h	/^  std::unique_ptr<ChannelBuffer<float>> output_;$/;"	m	class:webrtc::test::DebugDumpReplayer
output_	webrtc/modules/audio_processing/test/debug_dump_test.cc	/^  std::unique_ptr<ChannelBuffer<float>> output_;$/;"	m	class:webrtc::test::__anon223::DebugDumpGenerator	file:
output_block_	webrtc/common_audio/blocker.h	/^  ChannelBuffer<float> output_block_;$/;"	m	class:webrtc::Blocker
output_buffer	webrtc/modules/audio_processing/aec/aec_core.h	/^  float output_buffer[NUM_HIGH_BANDS_MAX + 1][2 * PART_LEN];$/;"	m	struct:webrtc::AecCore
output_buffer_	webrtc/common_audio/blocker.h	/^  ChannelBuffer<float> output_buffer_;$/;"	m	class:webrtc::Blocker
output_buffer_	webrtc/modules/audio_processing/audio_buffer.h	/^  std::unique_ptr<IFChannelBuffer> output_buffer_;$/;"	m	class:webrtc::AudioBuffer
output_buffer_size	webrtc/modules/audio_processing/aec/aec_core.h	/^  size_t output_buffer_size;$/;"	m	struct:webrtc::AecCore
output_channel_layout	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  AudioProcessing::ChannelLayout output_channel_layout =$/;"	m	struct:webrtc::__anon181::AudioFrameData	file:
output_config_	webrtc/modules/audio_processing/test/debug_dump_replayer.h	/^  StreamConfig output_config_;$/;"	m	class:webrtc::test::DebugDumpReplayer
output_config_	webrtc/modules/audio_processing/test/debug_dump_test.cc	/^  StreamConfig output_config_;$/;"	m	class:webrtc::test::__anon223::DebugDumpGenerator	file:
output_file_	webrtc/base/event_tracer.cc	/^  FILE* output_file_ = nullptr;$/;"	m	class:rtc::tracing::__anon12::final	file:
output_file_owned_	webrtc/base/event_tracer.cc	/^  bool output_file_owned_ = false;$/;"	m	class:rtc::tracing::__anon12::final	file:
output_filename	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^  rtc::Optional<std::string> output_filename;$/;"	m	struct:webrtc::test::SimulationSettings
output_frame	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  std::vector<float*> output_frame;$/;"	m	struct:webrtc::__anon181::AudioFrameData	file:
output_frame	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^  std::vector<float*> output_frame;$/;"	m	struct:webrtc::__anon182::AudioFrameData	file:
output_frame_channels	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  std::vector<float> output_frame_channels;$/;"	m	struct:webrtc::__anon181::AudioFrameData	file:
output_frame_channels	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^  std::vector<float> output_frame_channels;$/;"	m	struct:webrtc::__anon182::AudioFrameData	file:
output_mean_	webrtc/modules/audio_processing/transient/moving_moments_unittest.cc	/^  float output_mean_[kMaxOutputLength];$/;"	m	class:webrtc::MovingMomentsTest	file:
output_mean_squares_	webrtc/modules/audio_processing/transient/moving_moments_unittest.cc	/^  float output_mean_squares_[kMaxOutputLength];$/;"	m	class:webrtc::MovingMomentsTest	file:
output_num_channels	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^  rtc::Optional<int> output_num_channels;$/;"	m	struct:webrtc::test::SimulationSettings
output_num_frames_	webrtc/modules/audio_processing/audio_buffer.h	/^  const size_t output_num_frames_;$/;"	m	class:webrtc::AudioBuffer
output_number_of_channels	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  int output_number_of_channels = -1;$/;"	m	struct:webrtc::__anon181::AudioFrameData	file:
output_path_	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^  const std::string output_path_;$/;"	m	class:webrtc::__anon183::ApmTest	file:
output_rate_	webrtc/common_audio/resampler/push_sinc_resampler_unittest.cc	/^  int output_rate_;$/;"	m	class:webrtc::PushSincResamplerTest	file:
output_rate_	webrtc/common_audio/resampler/sinc_resampler_unittest.cc	/^  int output_rate_;$/;"	m	class:webrtc::SincResamplerTest	file:
output_rate_	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^  int output_rate_;$/;"	m	class:webrtc::__anon183::AudioProcessingTest	file:
output_resamplers_	webrtc/modules/audio_processing/audio_buffer.h	/^  std::vector<std::unique_ptr<PushSincResampler>> output_resamplers_;$/;"	m	class:webrtc::AudioBuffer
output_reset_counter_	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^  size_t output_reset_counter_ = 0;$/;"	m	class:webrtc::test::AudioProcessingSimulator
output_sample_rate_hz	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  int output_sample_rate_hz = 16000;$/;"	m	struct:webrtc::__anon181::AudioFrameData	file:
output_sample_rate_hz	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^  rtc::Optional<int> output_sample_rate_hz;$/;"	m	struct:webrtc::test::SimulationSettings
output_sample_rate_hz_	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^  int output_sample_rate_hz_;$/;"	m	class:webrtc::__anon183::ApmTest	file:
output_samples_per_channel	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  int output_samples_per_channel = -1;$/;"	m	struct:webrtc::__anon181::AudioFrameData	file:
output_stream	webrtc/modules/audio_processing/include/audio_processing.h	/^  StreamConfig& output_stream() { return streams[StreamName::kOutputStream]; }$/;"	f	class:webrtc::ProcessingConfig
output_stream	webrtc/modules/audio_processing/include/audio_processing.h	/^  const StreamConfig& output_stream() const {$/;"	f	class:webrtc::ProcessingConfig
output_stream_config	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  StreamConfig output_stream_config;$/;"	m	struct:webrtc::__anon181::AudioFrameData	file:
output_stream_config	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^  StreamConfig output_stream_config;$/;"	m	struct:webrtc::__anon182::AudioFrameData	file:
output_will_be_muted	webrtc/modules/audio_processing/audio_processing_impl.h	/^    bool output_will_be_muted;$/;"	m	struct:webrtc::AudioProcessingImpl::ApmCaptureState
overDrive	webrtc/modules/audio_processing/aec/aec_core.h	/^  float overDrive;$/;"	m	struct:webrtc::AecCore
over_hang	webrtc/common_audio/vad/vad_core.h	/^    int16_t over_hang; \/\/ Over Hang$/;"	m	struct:VadInstT_
over_hang_max_1	webrtc/common_audio/vad/vad_core.h	/^    int16_t over_hang_max_1[3];$/;"	m	struct:VadInstT_
over_hang_max_2	webrtc/common_audio/vad/vad_core.h	/^    int16_t over_hang_max_2[3];$/;"	m	struct:VadInstT_
overdrive	webrtc/modules/audio_processing/ns/ns_core.h	/^  float overdrive;$/;"	m	struct:NoiseSuppressionC_
overdrive	webrtc/modules/audio_processing/ns/nsx_core.h	/^  uint16_t                overdrive; \/* Q8 *\/$/;"	m	struct:NoiseSuppressionFixedC_
overdrive_scaling	webrtc/modules/audio_processing/aec/aec_core.h	/^  float overdrive_scaling;$/;"	m	struct:webrtc::AecCore
override	webrtc/base/asyncinvoker-inl.h	/^  ~NotifyingAsyncClosureBase() override;$/;"	m	class:rtc::NotifyingAsyncClosureBase
override	webrtc/base/asyncinvoker.h	/^  void OnMessage(Message* msg) override;$/;"	m	class:rtc::AsyncInvoker
override	webrtc/base/asyncinvoker.h	/^  ~AsyncInvoker() override;$/;"	m	class:rtc::AsyncInvoker
override	webrtc/base/asyncinvoker.h	/^  ~GuardedAsyncInvoker() override;$/;"	m	class:rtc::GuardedAsyncInvoker
override	webrtc/base/asyncpacketsocket.h	/^  ~AsyncPacketSocket() override;$/;"	m	class:rtc::AsyncPacketSocket
override	webrtc/base/asyncsocket.h	/^               int64_t* timestamp) override;$/;"	m	class:rtc::AsyncSocketAdapter
override	webrtc/base/asyncsocket.h	/^  AsyncSocket* Accept(SocketAddress* paddr) override = 0;$/;"	m	class:rtc::AsyncSocket
override	webrtc/base/asyncsocket.h	/^  AsyncSocket* Accept(SocketAddress* paddr) override;$/;"	m	class:rtc::AsyncSocketAdapter
override	webrtc/base/asyncsocket.h	/^  ConnState GetState() const override;$/;"	m	class:rtc::AsyncSocketAdapter
override	webrtc/base/asyncsocket.h	/^  SocketAddress GetLocalAddress() const override;$/;"	m	class:rtc::AsyncSocketAdapter
override	webrtc/base/asyncsocket.h	/^  SocketAddress GetRemoteAddress() const override;$/;"	m	class:rtc::AsyncSocketAdapter
override	webrtc/base/asyncsocket.h	/^  int Bind(const SocketAddress& addr) override;$/;"	m	class:rtc::AsyncSocketAdapter
override	webrtc/base/asyncsocket.h	/^  int Close() override;$/;"	m	class:rtc::AsyncSocketAdapter
override	webrtc/base/asyncsocket.h	/^  int Connect(const SocketAddress& addr) override;$/;"	m	class:rtc::AsyncSocketAdapter
override	webrtc/base/asyncsocket.h	/^  int EstimateMTU(uint16_t* mtu) override;$/;"	m	class:rtc::AsyncSocketAdapter
override	webrtc/base/asyncsocket.h	/^  int GetError() const override;$/;"	m	class:rtc::AsyncSocketAdapter
override	webrtc/base/asyncsocket.h	/^  int GetOption(Option opt, int* value) override;$/;"	m	class:rtc::AsyncSocketAdapter
override	webrtc/base/asyncsocket.h	/^  int Listen(int backlog) override;$/;"	m	class:rtc::AsyncSocketAdapter
override	webrtc/base/asyncsocket.h	/^  int Recv(void* pv, size_t cb, int64_t* timestamp) override;$/;"	m	class:rtc::AsyncSocketAdapter
override	webrtc/base/asyncsocket.h	/^  int Send(const void* pv, size_t cb) override;$/;"	m	class:rtc::AsyncSocketAdapter
override	webrtc/base/asyncsocket.h	/^  int SendTo(const void* pv, size_t cb, const SocketAddress& addr) override;$/;"	m	class:rtc::AsyncSocketAdapter
override	webrtc/base/asyncsocket.h	/^  int SetOption(Option opt, int value) override;$/;"	m	class:rtc::AsyncSocketAdapter
override	webrtc/base/asyncsocket.h	/^  void SetError(int error) override;$/;"	m	class:rtc::AsyncSocketAdapter
override	webrtc/base/asyncsocket.h	/^  ~AsyncSocket() override;$/;"	m	class:rtc::AsyncSocket
override	webrtc/base/asyncsocket.h	/^  ~AsyncSocketAdapter() override;$/;"	m	class:rtc::AsyncSocketAdapter
override	webrtc/base/asynctcpsocket.h	/^                   const rtc::PacketOptions& options) override = 0;$/;"	m	class:rtc::AsyncTCPSocketBase
override	webrtc/base/asynctcpsocket.h	/^             const rtc::PacketOptions& options) override;$/;"	m	class:rtc::AsyncTCPSocketBase
override	webrtc/base/asynctcpsocket.h	/^           const rtc::PacketOptions& options) override;$/;"	m	class:rtc::AsyncTCPSocket
override	webrtc/base/asynctcpsocket.h	/^  SocketAddress GetLocalAddress() const override;$/;"	m	class:rtc::AsyncTCPSocketBase
override	webrtc/base/asynctcpsocket.h	/^  SocketAddress GetRemoteAddress() const override;$/;"	m	class:rtc::AsyncTCPSocketBase
override	webrtc/base/asynctcpsocket.h	/^  State GetState() const override;$/;"	m	class:rtc::AsyncTCPSocketBase
override	webrtc/base/asynctcpsocket.h	/^  int Close() override;$/;"	m	class:rtc::AsyncTCPSocketBase
override	webrtc/base/asynctcpsocket.h	/^  int GetError() const override;$/;"	m	class:rtc::AsyncTCPSocketBase
override	webrtc/base/asynctcpsocket.h	/^  int GetOption(Socket::Option opt, int* value) override;$/;"	m	class:rtc::AsyncTCPSocketBase
override	webrtc/base/asynctcpsocket.h	/^  int SetOption(Socket::Option opt, int value) override;$/;"	m	class:rtc::AsyncTCPSocketBase
override	webrtc/base/asynctcpsocket.h	/^  void HandleIncomingConnection(AsyncSocket* socket) override;$/;"	m	class:rtc::AsyncTCPSocket
override	webrtc/base/asynctcpsocket.h	/^  void ProcessInput(char* data, size_t* len) override;$/;"	m	class:rtc::AsyncTCPSocket
override	webrtc/base/asynctcpsocket.h	/^  void SetError(int error) override;$/;"	m	class:rtc::AsyncTCPSocketBase
override	webrtc/base/asynctcpsocket.h	/^  ~AsyncTCPSocketBase() override;$/;"	m	class:rtc::AsyncTCPSocketBase
override	webrtc/base/asyncudpsocket.h	/^             const rtc::PacketOptions& options) override;$/;"	m	class:rtc::AsyncUDPSocket
override	webrtc/base/asyncudpsocket.h	/^           const rtc::PacketOptions& options) override;$/;"	m	class:rtc::AsyncUDPSocket
override	webrtc/base/asyncudpsocket.h	/^  SocketAddress GetLocalAddress() const override;$/;"	m	class:rtc::AsyncUDPSocket
override	webrtc/base/asyncudpsocket.h	/^  SocketAddress GetRemoteAddress() const override;$/;"	m	class:rtc::AsyncUDPSocket
override	webrtc/base/asyncudpsocket.h	/^  State GetState() const override;$/;"	m	class:rtc::AsyncUDPSocket
override	webrtc/base/asyncudpsocket.h	/^  int Close() override;$/;"	m	class:rtc::AsyncUDPSocket
override	webrtc/base/asyncudpsocket.h	/^  int GetError() const override;$/;"	m	class:rtc::AsyncUDPSocket
override	webrtc/base/asyncudpsocket.h	/^  int GetOption(Socket::Option opt, int* value) override;$/;"	m	class:rtc::AsyncUDPSocket
override	webrtc/base/asyncudpsocket.h	/^  int SetOption(Socket::Option opt, int value) override;$/;"	m	class:rtc::AsyncUDPSocket
override	webrtc/base/asyncudpsocket.h	/^  void SetError(int error) override;$/;"	m	class:rtc::AsyncUDPSocket
override	webrtc/base/asyncudpsocket.h	/^  ~AsyncUDPSocket() override;$/;"	m	class:rtc::AsyncUDPSocket
override	webrtc/base/autodetectproxy.h	/^  void DoWork() override;$/;"	m	class:rtc::AutoDetectProxy
override	webrtc/base/autodetectproxy.h	/^  void OnMessage(Message* msg) override;$/;"	m	class:rtc::AutoDetectProxy
override	webrtc/base/autodetectproxy.h	/^  ~AutoDetectProxy() override;$/;"	m	class:rtc::AutoDetectProxy
override	webrtc/base/cryptstring.h	/^  CryptStringImpl* Copy() const override;$/;"	m	class:rtc::EmptyCryptStringImpl
override	webrtc/base/cryptstring.h	/^  CryptStringImpl* Copy() const override;$/;"	m	class:rtc::InsecureCryptStringImpl
override	webrtc/base/cryptstring.h	/^  size_t GetLength() const override;$/;"	m	class:rtc::EmptyCryptStringImpl
override	webrtc/base/cryptstring.h	/^  size_t GetLength() const override;$/;"	m	class:rtc::InsecureCryptStringImpl
override	webrtc/base/cryptstring.h	/^  std::string UrlEncode() const override;$/;"	m	class:rtc::EmptyCryptStringImpl
override	webrtc/base/cryptstring.h	/^  std::string UrlEncode() const override;$/;"	m	class:rtc::InsecureCryptStringImpl
override	webrtc/base/cryptstring.h	/^  void CopyRawTo(std::vector<unsigned char>* dest) const override;$/;"	m	class:rtc::EmptyCryptStringImpl
override	webrtc/base/cryptstring.h	/^  void CopyRawTo(std::vector<unsigned char>* dest) const override;$/;"	m	class:rtc::InsecureCryptStringImpl
override	webrtc/base/cryptstring.h	/^  void CopyTo(char* dest, bool nullterminate) const override;$/;"	m	class:rtc::EmptyCryptStringImpl
override	webrtc/base/cryptstring.h	/^  void CopyTo(char* dest, bool nullterminate) const override;$/;"	m	class:rtc::InsecureCryptStringImpl
override	webrtc/base/cryptstring.h	/^  ~InsecureCryptStringImpl() override = default;$/;"	m	class:rtc::InsecureCryptStringImpl
override	webrtc/base/fakeclock.h	/^  uint64_t TimeNanos() const override;$/;"	m	class:rtc::FakeClock
override	webrtc/base/fakeclock.h	/^  ~ScopedFakeClock() override;$/;"	m	class:rtc::ScopedFakeClock
override	webrtc/base/filerotatingstream.h	/^                     int* error) override;$/;"	m	class:rtc::FileRotatingStream
override	webrtc/base/filerotatingstream.h	/^                    int* error) override;$/;"	m	class:rtc::FileRotatingStream
override	webrtc/base/filerotatingstream.h	/^  StreamState GetState() const override;$/;"	m	class:rtc::FileRotatingStream
override	webrtc/base/filerotatingstream.h	/^  bool Flush() override;$/;"	m	class:rtc::FileRotatingStream
override	webrtc/base/filerotatingstream.h	/^  bool GetSize(size_t* size) const override;$/;"	m	class:rtc::FileRotatingStream
override	webrtc/base/filerotatingstream.h	/^  void Close() override;$/;"	m	class:rtc::FileRotatingStream
override	webrtc/base/filerotatingstream.h	/^  void OnRotation() override;$/;"	m	class:rtc::CallSessionFileRotatingStream
override	webrtc/base/filerotatingstream.h	/^  ~FileRotatingStream() override;$/;"	m	class:rtc::FileRotatingStream
override	webrtc/base/firewallsocketserver.h	/^  AsyncSocket* CreateAsyncSocket(int family, int type) override;$/;"	m	class:rtc::FirewallSocketServer
override	webrtc/base/firewallsocketserver.h	/^  AsyncSocket* CreateAsyncSocket(int type) override;$/;"	m	class:rtc::FirewallSocketServer
override	webrtc/base/firewallsocketserver.h	/^  Socket* CreateSocket(int family, int type) override;$/;"	m	class:rtc::FirewallSocketServer
override	webrtc/base/firewallsocketserver.h	/^  Socket* CreateSocket(int type) override;$/;"	m	class:rtc::FirewallSocketServer
override	webrtc/base/firewallsocketserver.h	/^  bool Wait(int cms, bool process_io) override;$/;"	m	class:rtc::FirewallSocketServer
override	webrtc/base/firewallsocketserver.h	/^  void SetMessageQueue(MessageQueue* queue) override;$/;"	m	class:rtc::FirewallSocketServer
override	webrtc/base/firewallsocketserver.h	/^  void WakeUp() override;$/;"	m	class:rtc::FirewallSocketServer
override	webrtc/base/firewallsocketserver.h	/^  ~FirewallSocketServer() override;$/;"	m	class:rtc::FirewallSocketServer
override	webrtc/base/httpbase.h	/^                                      HttpError* error) override;$/;"	m	class:rtc::HttpBase
override	webrtc/base/httpbase.h	/^                              HttpError* error) override;$/;"	m	class:rtc::HttpBase
override	webrtc/base/httpbase.h	/^                            HttpError* error) override;$/;"	m	class:rtc::HttpBase
override	webrtc/base/httpbase.h	/^  void OnComplete(HttpError err) override;$/;"	m	class:rtc::HttpBase
override	webrtc/base/httpbase.h	/^  ~HttpBase() override;$/;"	m	class:rtc::HttpBase
override	webrtc/base/httpclient.h	/^  HttpError onHttpHeaderComplete(bool chunked, size_t& data_size) override;$/;"	m	class:rtc::HttpClient
override	webrtc/base/httpclient.h	/^  void onHttpClosed(HttpError err) override;$/;"	m	class:rtc::HttpClient
override	webrtc/base/httpclient.h	/^  void onHttpComplete(HttpMode mode, HttpError err) override;$/;"	m	class:rtc::HttpClient
override	webrtc/base/httpclient.h	/^  ~HttpClient() override;$/;"	m	class:rtc::HttpClient
override	webrtc/base/httpcommon.h	/^  HttpError parseLeader(const char* line, size_t len) override;$/;"	m	struct:rtc::HttpRequestData
override	webrtc/base/httpcommon.h	/^  HttpError parseLeader(const char* line, size_t len) override;$/;"	m	struct:rtc::HttpResponseData
override	webrtc/base/httpcommon.h	/^  size_t formatLeader(char* buffer, size_t size) const override;$/;"	m	struct:rtc::HttpRequestData
override	webrtc/base/httpcommon.h	/^  size_t formatLeader(char* buffer, size_t size) const override;$/;"	m	struct:rtc::HttpResponseData
override	webrtc/base/httpserver.h	/^    HttpError onHttpHeaderComplete(bool chunked, size_t& data_size) override;$/;"	m	class:rtc::HttpServer::Connection
override	webrtc/base/httpserver.h	/^    void onHttpClosed(HttpError err) override;$/;"	m	class:rtc::HttpServer::Connection
override	webrtc/base/httpserver.h	/^    void onHttpComplete(HttpMode mode, HttpError err) override;$/;"	m	class:rtc::HttpServer::Connection
override	webrtc/base/httpserver.h	/^    ~Connection() override;$/;"	m	class:rtc::HttpServer::Connection
override	webrtc/base/httpserver.h	/^  ~HttpListenServer() override;$/;"	m	class:rtc::HttpListenServer
override	webrtc/base/logsinks.h	/^  void OnLogMessage(const std::string& message) override;$/;"	m	class:rtc::FileRotatingLogSink
override	webrtc/base/logsinks.h	/^  ~CallSessionFileRotatingLogSink() override;$/;"	m	class:rtc::CallSessionFileRotatingLogSink
override	webrtc/base/logsinks.h	/^  ~FileRotatingLogSink() override;$/;"	m	class:rtc::FileRotatingLogSink
override	webrtc/base/macwindowpicker.h	/^                            int* height) override;$/;"	m	class:rtc::MacWindowPicker
override	webrtc/base/macwindowpicker.h	/^  bool GetDesktopList(DesktopDescriptionList* descriptions) override;$/;"	m	class:rtc::MacWindowPicker
override	webrtc/base/macwindowpicker.h	/^  bool GetWindowList(WindowDescriptionList* descriptions) override;$/;"	m	class:rtc::MacWindowPicker
override	webrtc/base/macwindowpicker.h	/^  bool Init() override;$/;"	m	class:rtc::MacWindowPicker
override	webrtc/base/macwindowpicker.h	/^  bool IsVisible(const WindowId& id) override;$/;"	m	class:rtc::MacWindowPicker
override	webrtc/base/macwindowpicker.h	/^  bool MoveToFront(const WindowId& id) override;$/;"	m	class:rtc::MacWindowPicker
override	webrtc/base/macwindowpicker.h	/^  ~MacWindowPicker() override;$/;"	m	class:rtc::MacWindowPicker
override	webrtc/base/md5digest.h	/^  size_t Finish(void* buf, size_t len) override;$/;"	m	class:rtc::Md5Digest
override	webrtc/base/md5digest.h	/^  size_t Size() const override;$/;"	m	class:rtc::Md5Digest
override	webrtc/base/md5digest.h	/^  void Update(const void* buf, size_t len) override;$/;"	m	class:rtc::Md5Digest
override	webrtc/base/natserver.h	/^  ~NATServer() override;$/;"	m	class:rtc::NATServer
override	webrtc/base/natsocketfactory.h	/^                                    SocketAddress* nat_addr) override;$/;"	m	class:rtc::NATSocketFactory
override	webrtc/base/natsocketfactory.h	/^                                    SocketAddress* nat_addr) override;$/;"	m	class:rtc::NATSocketServer
override	webrtc/base/natsocketfactory.h	/^  AsyncSocket* CreateAsyncSocket(int family, int type) override;$/;"	m	class:rtc::NATSocketFactory
override	webrtc/base/natsocketfactory.h	/^  AsyncSocket* CreateAsyncSocket(int family, int type) override;$/;"	m	class:rtc::NATSocketServer
override	webrtc/base/natsocketfactory.h	/^  AsyncSocket* CreateAsyncSocket(int type) override;$/;"	m	class:rtc::NATSocketFactory
override	webrtc/base/natsocketfactory.h	/^  AsyncSocket* CreateAsyncSocket(int type) override;$/;"	m	class:rtc::NATSocketServer
override	webrtc/base/natsocketfactory.h	/^  Socket* CreateSocket(int family, int type) override;$/;"	m	class:rtc::NATSocketFactory
override	webrtc/base/natsocketfactory.h	/^  Socket* CreateSocket(int family, int type) override;$/;"	m	class:rtc::NATSocketServer
override	webrtc/base/natsocketfactory.h	/^  Socket* CreateSocket(int type) override;$/;"	m	class:rtc::NATSocketFactory
override	webrtc/base/natsocketfactory.h	/^  Socket* CreateSocket(int type) override;$/;"	m	class:rtc::NATSocketServer
override	webrtc/base/natsocketfactory.h	/^  bool Wait(int cms, bool process_io) override;$/;"	m	class:rtc::NATSocketServer
override	webrtc/base/natsocketfactory.h	/^  void SetMessageQueue(MessageQueue* queue) override;$/;"	m	class:rtc::NATSocketServer
override	webrtc/base/natsocketfactory.h	/^  void WakeUp() override;$/;"	m	class:rtc::NATSocketServer
override	webrtc/base/nethelpers.h	/^  bool GetResolvedAddress(int family, SocketAddress* addr) const override;$/;"	m	class:rtc::AsyncResolver
override	webrtc/base/nethelpers.h	/^  int GetError() const override;$/;"	m	class:rtc::AsyncResolver
override	webrtc/base/nethelpers.h	/^  void Destroy(bool wait) override;$/;"	m	class:rtc::AsyncResolver
override	webrtc/base/nethelpers.h	/^  void DoWork() override;$/;"	m	class:rtc::AsyncResolver
override	webrtc/base/nethelpers.h	/^  void OnWorkDone() override;$/;"	m	class:rtc::AsyncResolver
override	webrtc/base/nethelpers.h	/^  void Start(const SocketAddress& addr) override;$/;"	m	class:rtc::AsyncResolver
override	webrtc/base/nethelpers.h	/^  ~AsyncResolver() override;$/;"	m	class:rtc::AsyncResolver
override	webrtc/base/network.h	/^  EnumerationPermission enumeration_permission() const override;$/;"	m	class:rtc::NetworkManagerBase
override	webrtc/base/network.h	/^  bool GetDefaultLocalAddress(int family, IPAddress* ipaddr) const override;$/;"	m	class:rtc::NetworkManager
override	webrtc/base/network.h	/^  bool GetDefaultLocalAddress(int family, IPAddress* ipaddr) const override;$/;"	m	class:rtc::NetworkManagerBase
override	webrtc/base/network.h	/^  void DumpNetworks() override;$/;"	m	class:rtc::BasicNetworkManager
override	webrtc/base/network.h	/^  void GetAnyAddressNetworks(NetworkList* networks) override;$/;"	m	class:rtc::NetworkManagerBase
override	webrtc/base/network.h	/^  void GetNetworks(NetworkList* networks) const override;$/;"	m	class:rtc::NetworkManagerBase
override	webrtc/base/network.h	/^  void OnMessage(Message* msg) override;$/;"	m	class:rtc::BasicNetworkManager
override	webrtc/base/network.h	/^  void StartUpdating() override;$/;"	m	class:rtc::BasicNetworkManager
override	webrtc/base/network.h	/^  void StopUpdating() override;$/;"	m	class:rtc::BasicNetworkManager
override	webrtc/base/network.h	/^  ~BasicNetworkManager() override;$/;"	m	class:rtc::BasicNetworkManager
override	webrtc/base/network.h	/^  ~NetworkManager() override;$/;"	m	class:rtc::NetworkManager
override	webrtc/base/network.h	/^  ~NetworkManagerBase() override;$/;"	m	class:rtc::NetworkManagerBase
override	webrtc/base/networkmonitor.h	/^  void OnMessage(Message* msg) override;$/;"	m	class:rtc::NetworkMonitorBase
override	webrtc/base/networkmonitor.h	/^  void OnNetworksChanged() override;$/;"	m	class:rtc::NetworkMonitorBase
override	webrtc/base/networkmonitor.h	/^  ~NetworkMonitorBase() override;$/;"	m	class:rtc::NetworkMonitorBase
override	webrtc/base/nullsocketserver.h	/^  AsyncSocket* CreateAsyncSocket(int family, int type) override;$/;"	m	class:rtc::NullSocketServer
override	webrtc/base/nullsocketserver.h	/^  AsyncSocket* CreateAsyncSocket(int type) override;$/;"	m	class:rtc::NullSocketServer
override	webrtc/base/nullsocketserver.h	/^  Socket* CreateSocket(int family, int type) override;$/;"	m	class:rtc::NullSocketServer
override	webrtc/base/nullsocketserver.h	/^  Socket* CreateSocket(int type) override;$/;"	m	class:rtc::NullSocketServer
override	webrtc/base/nullsocketserver.h	/^  bool Wait(int cms, bool process_io) override;$/;"	m	class:rtc::NullSocketServer
override	webrtc/base/nullsocketserver.h	/^  void WakeUp() override;$/;"	m	class:rtc::NullSocketServer
override	webrtc/base/nullsocketserver.h	/^  ~NullSocketServer() override;$/;"	m	class:rtc::NullSocketServer
override	webrtc/base/openssladapter.h	/^               int64_t* timestamp) override;$/;"	m	class:rtc::OpenSSLAdapter
override	webrtc/base/openssladapter.h	/^  ConnState GetState() const override;$/;"	m	class:rtc::OpenSSLAdapter
override	webrtc/base/openssladapter.h	/^  int Close() override;$/;"	m	class:rtc::OpenSSLAdapter
override	webrtc/base/openssladapter.h	/^  int Recv(void* pv, size_t cb, int64_t* timestamp) override;$/;"	m	class:rtc::OpenSSLAdapter
override	webrtc/base/openssladapter.h	/^  int Send(const void* pv, size_t cb) override;$/;"	m	class:rtc::OpenSSLAdapter
override	webrtc/base/openssladapter.h	/^  int SendTo(const void* pv, size_t cb, const SocketAddress& addr) override;$/;"	m	class:rtc::OpenSSLAdapter
override	webrtc/base/openssladapter.h	/^  int StartSSL(const char* hostname, bool restartable) override;$/;"	m	class:rtc::OpenSSLAdapter
override	webrtc/base/openssladapter.h	/^  void OnMessage(Message* msg) override;$/;"	m	class:rtc::OpenSSLAdapter
override	webrtc/base/openssladapter.h	/^  void SetMode(SSLMode mode) override;$/;"	m	class:rtc::OpenSSLAdapter
override	webrtc/base/openssladapter.h	/^  ~OpenSSLAdapter() override;$/;"	m	class:rtc::OpenSSLAdapter
override	webrtc/base/openssladapter.h	/^ void OnCloseEvent(AsyncSocket* socket, int err) override;$/;"	m	class:rtc::OpenSSLAdapter
override	webrtc/base/openssladapter.h	/^ void OnConnectEvent(AsyncSocket* socket) override;$/;"	m	class:rtc::OpenSSLAdapter
override	webrtc/base/openssladapter.h	/^ void OnReadEvent(AsyncSocket* socket) override;$/;"	m	class:rtc::OpenSSLAdapter
override	webrtc/base/openssladapter.h	/^ void OnWriteEvent(AsyncSocket* socket) override;$/;"	m	class:rtc::OpenSSLAdapter
override	webrtc/base/openssldigest.h	/^  size_t Finish(void* buf, size_t len) override;$/;"	m	class:rtc::OpenSSLDigest
override	webrtc/base/openssldigest.h	/^  size_t Size() const override;$/;"	m	class:rtc::OpenSSLDigest
override	webrtc/base/openssldigest.h	/^  void Update(const void* buf, size_t len) override;$/;"	m	class:rtc::OpenSSLDigest
override	webrtc/base/openssldigest.h	/^  ~OpenSSLDigest() override;$/;"	m	class:rtc::OpenSSLDigest
override	webrtc/base/opensslidentity.h	/^                     size_t* length) const override;$/;"	m	class:rtc::OpenSSLCertificate
override	webrtc/base/opensslidentity.h	/^  OpenSSLCertificate* GetReference() const override;$/;"	m	class:rtc::OpenSSLCertificate
override	webrtc/base/opensslidentity.h	/^  OpenSSLIdentity* GetReference() const override;$/;"	m	class:rtc::OpenSSLIdentity
override	webrtc/base/opensslidentity.h	/^  bool GetSignatureDigestAlgorithm(std::string* algorithm) const override;$/;"	m	class:rtc::OpenSSLCertificate
override	webrtc/base/opensslidentity.h	/^  const OpenSSLCertificate& certificate() const override;$/;"	m	class:rtc::OpenSSLIdentity
override	webrtc/base/opensslidentity.h	/^  int64_t CertificateExpirationTime() const override;$/;"	m	class:rtc::OpenSSLCertificate
override	webrtc/base/opensslidentity.h	/^  std::string PrivateKeyToPEMString() const override;$/;"	m	class:rtc::OpenSSLIdentity
override	webrtc/base/opensslidentity.h	/^  std::string PublicKeyToPEMString() const override;$/;"	m	class:rtc::OpenSSLIdentity
override	webrtc/base/opensslidentity.h	/^  std::string ToPEMString() const override;$/;"	m	class:rtc::OpenSSLCertificate
override	webrtc/base/opensslidentity.h	/^  std::unique_ptr<SSLCertChain> GetChain() const override;$/;"	m	class:rtc::OpenSSLCertificate
override	webrtc/base/opensslidentity.h	/^  void ToDER(Buffer* der_buffer) const override;$/;"	m	class:rtc::OpenSSLCertificate
override	webrtc/base/opensslidentity.h	/^  ~OpenSSLCertificate() override;$/;"	m	class:rtc::OpenSSLCertificate
override	webrtc/base/opensslidentity.h	/^  ~OpenSSLIdentity() override;$/;"	m	class:rtc::OpenSSLIdentity
override	webrtc/base/opensslstreamadapter.h	/^                            size_t result_len) override;$/;"	m	class:rtc::OpenSSLStreamAdapter
override	webrtc/base/opensslstreamadapter.h	/^                     int* error) override;$/;"	m	class:rtc::OpenSSLStreamAdapter
override	webrtc/base/opensslstreamadapter.h	/^                    int* error) override;$/;"	m	class:rtc::OpenSSLStreamAdapter
override	webrtc/base/opensslstreamadapter.h	/^      SSLPeerCertificateDigestError* error = nullptr) override;$/;"	m	class:rtc::OpenSSLStreamAdapter
override	webrtc/base/opensslstreamadapter.h	/^  StreamState GetState() const override;$/;"	m	class:rtc::OpenSSLStreamAdapter
override	webrtc/base/opensslstreamadapter.h	/^  bool GetDtlsSrtpCryptoSuite(int* crypto_suite) override;$/;"	m	class:rtc::OpenSSLStreamAdapter
override	webrtc/base/opensslstreamadapter.h	/^  bool GetSslCipherSuite(int* cipher) override;$/;"	m	class:rtc::OpenSSLStreamAdapter
override	webrtc/base/opensslstreamadapter.h	/^  bool IsTlsConnected() override;$/;"	m	class:rtc::OpenSSLStreamAdapter
override	webrtc/base/opensslstreamadapter.h	/^  bool SetDtlsSrtpCryptoSuites(const std::vector<int>& crypto_suites) override;$/;"	m	class:rtc::OpenSSLStreamAdapter
override	webrtc/base/opensslstreamadapter.h	/^  int GetSslVersion() const override;$/;"	m	class:rtc::OpenSSLStreamAdapter
override	webrtc/base/opensslstreamadapter.h	/^  int StartSSL() override;$/;"	m	class:rtc::OpenSSLStreamAdapter
override	webrtc/base/opensslstreamadapter.h	/^  std::unique_ptr<SSLCertificate> GetPeerCertificate() const override;$/;"	m	class:rtc::OpenSSLStreamAdapter
override	webrtc/base/opensslstreamadapter.h	/^  void Close() override;$/;"	m	class:rtc::OpenSSLStreamAdapter
override	webrtc/base/opensslstreamadapter.h	/^  void OnEvent(StreamInterface* stream, int events, int err) override;$/;"	m	class:rtc::OpenSSLStreamAdapter
override	webrtc/base/opensslstreamadapter.h	/^  void OnMessage(Message* msg) override;$/;"	m	class:rtc::OpenSSLStreamAdapter
override	webrtc/base/opensslstreamadapter.h	/^  void SetIdentity(SSLIdentity* identity) override;$/;"	m	class:rtc::OpenSSLStreamAdapter
override	webrtc/base/opensslstreamadapter.h	/^  void SetMaxProtocolVersion(SSLProtocolVersion version) override;$/;"	m	class:rtc::OpenSSLStreamAdapter
override	webrtc/base/opensslstreamadapter.h	/^  void SetMode(SSLMode mode) override;$/;"	m	class:rtc::OpenSSLStreamAdapter
override	webrtc/base/opensslstreamadapter.h	/^  void SetServerRole(SSLRole role = SSL_SERVER) override;$/;"	m	class:rtc::OpenSSLStreamAdapter
override	webrtc/base/opensslstreamadapter.h	/^  ~OpenSSLStreamAdapter() override;$/;"	m	class:rtc::OpenSSLStreamAdapter
override	webrtc/base/physicalsocketserver.h	/^               int64_t* timestamp) override;$/;"	m	class:rtc::PhysicalSocket
override	webrtc/base/physicalsocketserver.h	/^             const SocketAddress& addr) override;$/;"	m	class:rtc::PhysicalSocket
override	webrtc/base/physicalsocketserver.h	/^  AsyncSocket* Accept(SocketAddress* out_addr) override;$/;"	m	class:rtc::PhysicalSocket
override	webrtc/base/physicalsocketserver.h	/^  AsyncSocket* CreateAsyncSocket(int family, int type) override;$/;"	m	class:rtc::PhysicalSocketServer
override	webrtc/base/physicalsocketserver.h	/^  AsyncSocket* CreateAsyncSocket(int type) override;$/;"	m	class:rtc::PhysicalSocketServer
override	webrtc/base/physicalsocketserver.h	/^  ConnState GetState() const override;$/;"	m	class:rtc::PhysicalSocket
override	webrtc/base/physicalsocketserver.h	/^  SOCKET GetSocket() override;$/;"	m	class:rtc::SocketDispatcher
override	webrtc/base/physicalsocketserver.h	/^  Socket* CreateSocket(int family, int type) override;$/;"	m	class:rtc::PhysicalSocketServer
override	webrtc/base/physicalsocketserver.h	/^  Socket* CreateSocket(int type) override;$/;"	m	class:rtc::PhysicalSocketServer
override	webrtc/base/physicalsocketserver.h	/^  SocketAddress GetLocalAddress() const override;$/;"	m	class:rtc::PhysicalSocket
override	webrtc/base/physicalsocketserver.h	/^  SocketAddress GetRemoteAddress() const override;$/;"	m	class:rtc::PhysicalSocket
override	webrtc/base/physicalsocketserver.h	/^  WSAEVENT GetWSAEvent() override;$/;"	m	class:rtc::SocketDispatcher
override	webrtc/base/physicalsocketserver.h	/^  bool CheckSignalClose() override;$/;"	m	class:rtc::SocketDispatcher
override	webrtc/base/physicalsocketserver.h	/^  bool Create(int family, int type) override;$/;"	m	class:rtc::SocketDispatcher
override	webrtc/base/physicalsocketserver.h	/^  bool IsDescriptorClosed() override;$/;"	m	class:rtc::SocketDispatcher
override	webrtc/base/physicalsocketserver.h	/^  bool Wait(int cms, bool process_io) override;$/;"	m	class:rtc::PhysicalSocketServer
override	webrtc/base/physicalsocketserver.h	/^  int Bind(const SocketAddress& bind_addr) override;$/;"	m	class:rtc::PhysicalSocket
override	webrtc/base/physicalsocketserver.h	/^  int Close() override;$/;"	m	class:rtc::PhysicalSocket
override	webrtc/base/physicalsocketserver.h	/^  int Close() override;$/;"	m	class:rtc::SocketDispatcher
override	webrtc/base/physicalsocketserver.h	/^  int Connect(const SocketAddress& addr) override;$/;"	m	class:rtc::PhysicalSocket
override	webrtc/base/physicalsocketserver.h	/^  int EstimateMTU(uint16_t* mtu) override;$/;"	m	class:rtc::PhysicalSocket
override	webrtc/base/physicalsocketserver.h	/^  int GetDescriptor() override;$/;"	m	class:rtc::SocketDispatcher
override	webrtc/base/physicalsocketserver.h	/^  int GetError() const override;$/;"	m	class:rtc::PhysicalSocket
override	webrtc/base/physicalsocketserver.h	/^  int GetOption(Option opt, int* value) override;$/;"	m	class:rtc::PhysicalSocket
override	webrtc/base/physicalsocketserver.h	/^  int Listen(int backlog) override;$/;"	m	class:rtc::PhysicalSocket
override	webrtc/base/physicalsocketserver.h	/^  int Recv(void* buffer, size_t length, int64_t* timestamp) override;$/;"	m	class:rtc::PhysicalSocket
override	webrtc/base/physicalsocketserver.h	/^  int Send(const void* pv, size_t cb) override;$/;"	m	class:rtc::PhysicalSocket
override	webrtc/base/physicalsocketserver.h	/^  int SetOption(Option opt, int value) override;$/;"	m	class:rtc::PhysicalSocket
override	webrtc/base/physicalsocketserver.h	/^  uint32_t GetRequestedEvents() override;$/;"	m	class:rtc::SocketDispatcher
override	webrtc/base/physicalsocketserver.h	/^  void OnEvent(uint32_t ff, int err) override;$/;"	m	class:rtc::SocketDispatcher
override	webrtc/base/physicalsocketserver.h	/^  void OnPreEvent(uint32_t ff) override;$/;"	m	class:rtc::SocketDispatcher
override	webrtc/base/physicalsocketserver.h	/^  void SetError(int error) override;$/;"	m	class:rtc::PhysicalSocket
override	webrtc/base/physicalsocketserver.h	/^  void WakeUp() override;$/;"	m	class:rtc::PhysicalSocketServer
override	webrtc/base/physicalsocketserver.h	/^  ~PhysicalSocket() override;$/;"	m	class:rtc::PhysicalSocket
override	webrtc/base/physicalsocketserver.h	/^  ~PhysicalSocketServer() override;$/;"	m	class:rtc::PhysicalSocketServer
override	webrtc/base/physicalsocketserver.h	/^  ~SocketDispatcher() override;$/;"	m	class:rtc::SocketDispatcher
override	webrtc/base/physicalsocketserver_unittest.cc	/^               const struct sockaddr* dest_addr, socklen_t addrlen) override;$/;"	m	class:rtc::FakeSocketDispatcher	file:
override	webrtc/base/physicalsocketserver_unittest.cc	/^  SOCKET DoAccept(SOCKET socket, sockaddr* addr, socklen_t* addrlen) override;$/;"	m	class:rtc::FakeSocketDispatcher	file:
override	webrtc/base/physicalsocketserver_unittest.cc	/^  int DoSend(SOCKET socket, const char* buf, int len, int flags) override;$/;"	m	class:rtc::FakeSocketDispatcher	file:
override	webrtc/base/proxyserver.h	/^  AsyncProxyServerSocket* WrapSocket(AsyncSocket* socket) override;$/;"	m	class:rtc::SocksProxyServer
override	webrtc/base/proxyserver.h	/^  ~ProxyBinding() override;$/;"	m	class:rtc::ProxyBinding
override	webrtc/base/proxyserver.h	/^  ~ProxyServer() override;$/;"	m	class:rtc::ProxyServer
override	webrtc/base/rtccertificate.h	/^  ~RTCCertificate() override;$/;"	m	class:rtc::RTCCertificate
override	webrtc/base/rtccertificategenerator.h	/^      const scoped_refptr<RTCCertificateGeneratorCallback>& callback) override;$/;"	m	class:rtc::RTCCertificateGenerator
override	webrtc/base/sha1digest.h	/^  size_t Finish(void* buf, size_t len) override;$/;"	m	class:rtc::Sha1Digest
override	webrtc/base/sha1digest.h	/^  size_t Size() const override;$/;"	m	class:rtc::Sha1Digest
override	webrtc/base/sha1digest.h	/^  void Update(const void* buf, size_t len) override;$/;"	m	class:rtc::Sha1Digest
override	webrtc/base/signalthread.h	/^    void Run() override;$/;"	m	class:rtc::SignalThread::Worker
override	webrtc/base/signalthread.h	/^    ~Worker() override;$/;"	m	class:rtc::SignalThread::Worker
override	webrtc/base/signalthread.h	/^  void OnMessage(Message* msg) override;$/;"	m	class:rtc::SignalThread
override	webrtc/base/signalthread.h	/^  ~SignalThread() override;$/;"	m	class:rtc::SignalThread
override	webrtc/base/socketadapters.h	/^               int64_t* timestamp) override;$/;"	m	class:rtc::LoggingSocketAdapter
override	webrtc/base/socketadapters.h	/^  ConnState GetState() const override;$/;"	m	class:rtc::AsyncHttpsProxySocket
override	webrtc/base/socketadapters.h	/^  ConnState GetState() const override;$/;"	m	class:rtc::AsyncSocksProxySocket
override	webrtc/base/socketadapters.h	/^  SocketAddress GetRemoteAddress() const override;$/;"	m	class:rtc::AsyncHttpsProxySocket
override	webrtc/base/socketadapters.h	/^  SocketAddress GetRemoteAddress() const override;$/;"	m	class:rtc::AsyncSocksProxySocket
override	webrtc/base/socketadapters.h	/^  int Close() override;$/;"	m	class:rtc::AsyncHttpsProxySocket
override	webrtc/base/socketadapters.h	/^  int Close() override;$/;"	m	class:rtc::AsyncSocksProxySocket
override	webrtc/base/socketadapters.h	/^  int Close() override;$/;"	m	class:rtc::LoggingSocketAdapter
override	webrtc/base/socketadapters.h	/^  int Connect(const SocketAddress& addr) override;$/;"	m	class:rtc::AsyncHttpsProxySocket
override	webrtc/base/socketadapters.h	/^  int Connect(const SocketAddress& addr) override;$/;"	m	class:rtc::AsyncSSLSocket
override	webrtc/base/socketadapters.h	/^  int Connect(const SocketAddress& addr) override;$/;"	m	class:rtc::AsyncSocksProxySocket
override	webrtc/base/socketadapters.h	/^  int Recv(void* pv, size_t cb, int64_t* timestamp) override;$/;"	m	class:rtc::BufferedReadAdapter
override	webrtc/base/socketadapters.h	/^  int Recv(void* pv, size_t cb, int64_t* timestamp) override;$/;"	m	class:rtc::LoggingSocketAdapter
override	webrtc/base/socketadapters.h	/^  int Send(const void* pv, size_t cb) override;$/;"	m	class:rtc::BufferedReadAdapter
override	webrtc/base/socketadapters.h	/^  int Send(const void* pv, size_t cb) override;$/;"	m	class:rtc::LoggingSocketAdapter
override	webrtc/base/socketadapters.h	/^  int SendTo(const void* pv, size_t cb, const SocketAddress& addr) override;$/;"	m	class:rtc::LoggingSocketAdapter
override	webrtc/base/socketadapters.h	/^  void OnCloseEvent(AsyncSocket* socket, int err) override;$/;"	m	class:rtc::AsyncHttpsProxySocket
override	webrtc/base/socketadapters.h	/^  void OnCloseEvent(AsyncSocket* socket, int err) override;$/;"	m	class:rtc::LoggingSocketAdapter
override	webrtc/base/socketadapters.h	/^  void OnConnectEvent(AsyncSocket* socket) override;$/;"	m	class:rtc::AsyncHttpsProxySocket
override	webrtc/base/socketadapters.h	/^  void OnConnectEvent(AsyncSocket* socket) override;$/;"	m	class:rtc::AsyncSSLSocket
override	webrtc/base/socketadapters.h	/^  void OnConnectEvent(AsyncSocket* socket) override;$/;"	m	class:rtc::AsyncSocksProxySocket
override	webrtc/base/socketadapters.h	/^  void OnConnectEvent(AsyncSocket* socket) override;$/;"	m	class:rtc::LoggingSocketAdapter
override	webrtc/base/socketadapters.h	/^  void OnReadEvent(AsyncSocket* socket) override;$/;"	m	class:rtc::BufferedReadAdapter
override	webrtc/base/socketadapters.h	/^  void ProcessInput(char* data, size_t* len) override;$/;"	m	class:rtc::AsyncHttpsProxySocket
override	webrtc/base/socketadapters.h	/^  void ProcessInput(char* data, size_t* len) override;$/;"	m	class:rtc::AsyncSSLServerSocket
override	webrtc/base/socketadapters.h	/^  void ProcessInput(char* data, size_t* len) override;$/;"	m	class:rtc::AsyncSSLSocket
override	webrtc/base/socketadapters.h	/^  void ProcessInput(char* data, size_t* len) override;$/;"	m	class:rtc::AsyncSocksProxyServerSocket
override	webrtc/base/socketadapters.h	/^  void ProcessInput(char* data, size_t* len) override;$/;"	m	class:rtc::AsyncSocksProxySocket
override	webrtc/base/socketadapters.h	/^  void SendConnectResult(int result, const SocketAddress& addr) override;$/;"	m	class:rtc::AsyncSocksProxyServerSocket
override	webrtc/base/socketadapters.h	/^  ~AsyncHttpsProxySocket() override;$/;"	m	class:rtc::AsyncHttpsProxySocket
override	webrtc/base/socketadapters.h	/^  ~AsyncProxyServerSocket() override;$/;"	m	class:rtc::AsyncProxyServerSocket
override	webrtc/base/socketadapters.h	/^  ~AsyncSocksProxySocket() override;$/;"	m	class:rtc::AsyncSocksProxySocket
override	webrtc/base/socketadapters.h	/^  ~BufferedReadAdapter() override;$/;"	m	class:rtc::BufferedReadAdapter
override	webrtc/base/socketpool.h	/^                                          int* err) override;$/;"	m	class:rtc::LoggingPoolAdapter
override	webrtc/base/socketpool.h	/^                                          int* err) override;$/;"	m	class:rtc::NewSocketPool
override	webrtc/base/socketpool.h	/^                                          int* err) override;$/;"	m	class:rtc::ReuseSocketPool
override	webrtc/base/socketpool.h	/^                                          int* err) override;$/;"	m	class:rtc::StreamCache
override	webrtc/base/socketpool.h	/^  void ReturnConnectedStream(StreamInterface* stream) override;$/;"	m	class:rtc::LoggingPoolAdapter
override	webrtc/base/socketpool.h	/^  void ReturnConnectedStream(StreamInterface* stream) override;$/;"	m	class:rtc::NewSocketPool
override	webrtc/base/socketpool.h	/^  void ReturnConnectedStream(StreamInterface* stream) override;$/;"	m	class:rtc::ReuseSocketPool
override	webrtc/base/socketpool.h	/^  void ReturnConnectedStream(StreamInterface* stream) override;$/;"	m	class:rtc::StreamCache
override	webrtc/base/socketpool.h	/^  ~LoggingPoolAdapter() override;$/;"	m	class:rtc::LoggingPoolAdapter
override	webrtc/base/socketpool.h	/^  ~NewSocketPool() override;$/;"	m	class:rtc::NewSocketPool
override	webrtc/base/socketpool.h	/^  ~ReuseSocketPool() override;$/;"	m	class:rtc::ReuseSocketPool
override	webrtc/base/socketpool.h	/^  ~StreamCache() override;$/;"	m	class:rtc::StreamCache
override	webrtc/base/socketstream.h	/^                     int* error) override;$/;"	m	class:rtc::SocketStream
override	webrtc/base/socketstream.h	/^                    int* error) override;$/;"	m	class:rtc::SocketStream
override	webrtc/base/socketstream.h	/^  StreamState GetState() const override;$/;"	m	class:rtc::SocketStream
override	webrtc/base/socketstream.h	/^  void Close() override;$/;"	m	class:rtc::SocketStream
override	webrtc/base/socketstream.h	/^  ~SocketStream() override;$/;"	m	class:rtc::SocketStream
override	webrtc/base/sslsocketfactory.h	/^  AsyncSocket* CreateAsyncSocket(int family, int type) override;$/;"	m	class:rtc::SslSocketFactory
override	webrtc/base/sslsocketfactory.h	/^  AsyncSocket* CreateAsyncSocket(int type) override;$/;"	m	class:rtc::SslSocketFactory
override	webrtc/base/sslsocketfactory.h	/^  Socket* CreateSocket(int family, int type) override;$/;"	m	class:rtc::SslSocketFactory
override	webrtc/base/sslsocketfactory.h	/^  Socket* CreateSocket(int type) override;$/;"	m	class:rtc::SslSocketFactory
override	webrtc/base/sslsocketfactory.h	/^  ~SslSocketFactory() override;$/;"	m	class:rtc::SslSocketFactory
override	webrtc/base/sslstreamadapter.h	/^  ~SSLStreamAdapter() override;$/;"	m	class:rtc::SSLStreamAdapter
override	webrtc/base/sslstreamadapter_unittest.cc	/^                          size_t* written, int* error) override;$/;"	m	class:SSLDummyStreamBase	file:
override	webrtc/base/stream.h	/^                     int* error) override;$/;"	m	class:rtc::FifoBuffer
override	webrtc/base/stream.h	/^                     int* error) override;$/;"	m	class:rtc::FileStream
override	webrtc/base/stream.h	/^                     int* error) override;$/;"	m	class:rtc::LoggingAdapter
override	webrtc/base/stream.h	/^                     int* error) override;$/;"	m	class:rtc::MemoryStreamBase
override	webrtc/base/stream.h	/^                     int* error) override;$/;"	m	class:rtc::NullStream
override	webrtc/base/stream.h	/^                     int* error) override;$/;"	m	class:rtc::StreamAdapterInterface
override	webrtc/base/stream.h	/^                     int* error) override;$/;"	m	class:rtc::StreamTap
override	webrtc/base/stream.h	/^                     int* error) override;$/;"	m	class:rtc::StringStream
override	webrtc/base/stream.h	/^                    int* error) override;$/;"	m	class:rtc::FifoBuffer
override	webrtc/base/stream.h	/^                    int* error) override;$/;"	m	class:rtc::FileStream
override	webrtc/base/stream.h	/^                    int* error) override;$/;"	m	class:rtc::LoggingAdapter
override	webrtc/base/stream.h	/^                    int* error) override;$/;"	m	class:rtc::MemoryStreamBase
override	webrtc/base/stream.h	/^                    int* error) override;$/;"	m	class:rtc::NullStream
override	webrtc/base/stream.h	/^                    int* error) override;$/;"	m	class:rtc::StreamAdapterInterface
override	webrtc/base/stream.h	/^                    int* error) override;$/;"	m	class:rtc::StreamTap
override	webrtc/base/stream.h	/^                    int* error) override;$/;"	m	class:rtc::StringStream
override	webrtc/base/stream.h	/^  StreamResult DoReserve(size_t size, int* error) override;$/;"	m	class:rtc::MemoryStream
override	webrtc/base/stream.h	/^  StreamState GetState() const override;$/;"	m	class:rtc::FifoBuffer
override	webrtc/base/stream.h	/^  StreamState GetState() const override;$/;"	m	class:rtc::FileStream
override	webrtc/base/stream.h	/^  StreamState GetState() const override;$/;"	m	class:rtc::MemoryStreamBase
override	webrtc/base/stream.h	/^  StreamState GetState() const override;$/;"	m	class:rtc::NullStream
override	webrtc/base/stream.h	/^  StreamState GetState() const override;$/;"	m	class:rtc::StreamAdapterInterface
override	webrtc/base/stream.h	/^  StreamState GetState() const override;$/;"	m	class:rtc::StringStream
override	webrtc/base/stream.h	/^  bool Flush() override;$/;"	m	class:rtc::FileStream
override	webrtc/base/stream.h	/^  bool Flush() override;$/;"	m	class:rtc::StreamAdapterInterface
override	webrtc/base/stream.h	/^  bool GetAvailable(size_t* size) const override;$/;"	m	class:rtc::FileStream
override	webrtc/base/stream.h	/^  bool GetAvailable(size_t* size) const override;$/;"	m	class:rtc::MemoryStreamBase
override	webrtc/base/stream.h	/^  bool GetAvailable(size_t* size) const override;$/;"	m	class:rtc::StreamAdapterInterface
override	webrtc/base/stream.h	/^  bool GetAvailable(size_t* size) const override;$/;"	m	class:rtc::StringStream
override	webrtc/base/stream.h	/^  bool GetPosition(size_t* position) const override;$/;"	m	class:rtc::FileStream
override	webrtc/base/stream.h	/^  bool GetPosition(size_t* position) const override;$/;"	m	class:rtc::MemoryStreamBase
override	webrtc/base/stream.h	/^  bool GetPosition(size_t* position) const override;$/;"	m	class:rtc::StreamAdapterInterface
override	webrtc/base/stream.h	/^  bool GetPosition(size_t* position) const override;$/;"	m	class:rtc::StringStream
override	webrtc/base/stream.h	/^  bool GetSize(size_t* size) const override;$/;"	m	class:rtc::FileStream
override	webrtc/base/stream.h	/^  bool GetSize(size_t* size) const override;$/;"	m	class:rtc::MemoryStreamBase
override	webrtc/base/stream.h	/^  bool GetSize(size_t* size) const override;$/;"	m	class:rtc::StreamAdapterInterface
override	webrtc/base/stream.h	/^  bool GetSize(size_t* size) const override;$/;"	m	class:rtc::StringStream
override	webrtc/base/stream.h	/^  bool GetWriteRemaining(size_t* size) const override;$/;"	m	class:rtc::FifoBuffer
override	webrtc/base/stream.h	/^  bool GetWriteRemaining(size_t* size) const override;$/;"	m	class:rtc::StreamAdapterInterface
override	webrtc/base/stream.h	/^  bool ReserveSize(size_t size) override;$/;"	m	class:rtc::FileStream
override	webrtc/base/stream.h	/^  bool ReserveSize(size_t size) override;$/;"	m	class:rtc::MemoryStreamBase
override	webrtc/base/stream.h	/^  bool ReserveSize(size_t size) override;$/;"	m	class:rtc::StreamAdapterInterface
override	webrtc/base/stream.h	/^  bool ReserveSize(size_t size) override;$/;"	m	class:rtc::StringStream
override	webrtc/base/stream.h	/^  bool SetPosition(size_t position) override;$/;"	m	class:rtc::FileStream
override	webrtc/base/stream.h	/^  bool SetPosition(size_t position) override;$/;"	m	class:rtc::MemoryStreamBase
override	webrtc/base/stream.h	/^  bool SetPosition(size_t position) override;$/;"	m	class:rtc::StreamAdapterInterface
override	webrtc/base/stream.h	/^  bool SetPosition(size_t position) override;$/;"	m	class:rtc::StringStream
override	webrtc/base/stream.h	/^  const void* GetReadData(size_t* data_len) override;$/;"	m	class:rtc::FifoBuffer
override	webrtc/base/stream.h	/^  void Close() override;$/;"	m	class:rtc::FifoBuffer
override	webrtc/base/stream.h	/^  void Close() override;$/;"	m	class:rtc::FileStream
override	webrtc/base/stream.h	/^  void Close() override;$/;"	m	class:rtc::LoggingAdapter
override	webrtc/base/stream.h	/^  void Close() override;$/;"	m	class:rtc::MemoryStreamBase
override	webrtc/base/stream.h	/^  void Close() override;$/;"	m	class:rtc::NullStream
override	webrtc/base/stream.h	/^  void Close() override;$/;"	m	class:rtc::StreamAdapterInterface
override	webrtc/base/stream.h	/^  void Close() override;$/;"	m	class:rtc::StringStream
override	webrtc/base/stream.h	/^  void ConsumeReadData(size_t used) override;$/;"	m	class:rtc::FifoBuffer
override	webrtc/base/stream.h	/^  void ConsumeWriteBuffer(size_t used) override;$/;"	m	class:rtc::FifoBuffer
override	webrtc/base/stream.h	/^  void OnEvent(StreamInterface* stream, int events, int err) override;$/;"	m	class:rtc::LoggingAdapter
override	webrtc/base/stream.h	/^  void OnMessage(Message* msg) override;$/;"	m	class:rtc::StreamInterface
override	webrtc/base/stream.h	/^  void* GetWriteBuffer(size_t* buf_len) override;$/;"	m	class:rtc::FifoBuffer
override	webrtc/base/stream.h	/^  ~ExternalMemoryStream() override;$/;"	m	class:rtc::ExternalMemoryStream
override	webrtc/base/stream.h	/^  ~FifoBuffer() override;$/;"	m	class:rtc::FifoBuffer
override	webrtc/base/stream.h	/^  ~FileStream() override;$/;"	m	class:rtc::FileStream
override	webrtc/base/stream.h	/^  ~MemoryStream() override;$/;"	m	class:rtc::MemoryStream
override	webrtc/base/stream.h	/^  ~NullStream() override;$/;"	m	class:rtc::NullStream
override	webrtc/base/stream.h	/^  ~StreamAdapterInterface() override;$/;"	m	class:rtc::StreamAdapterInterface
override	webrtc/base/stream.h	/^  ~StreamInterface() override;$/;"	m	class:rtc::StreamInterface
override	webrtc/base/stream.h	/^  ~StreamReference() override;$/;"	m	class:rtc::StreamReference
override	webrtc/base/stream.h	/^  ~StreamTap() override;$/;"	m	class:rtc::StreamTap
override	webrtc/base/task.h	/^  ~Task() override;$/;"	m	class:rtc::Task
override	webrtc/base/taskrunner.h	/^  ~TaskRunner() override;$/;"	m	class:rtc::TaskRunner
override	webrtc/base/testclient.h	/^  ~TestClient() override;$/;"	m	class:rtc::TestClient
override	webrtc/base/thread.h	/^             MessageList* removed = NULL) override;$/;"	m	class:rtc::Thread
override	webrtc/base/thread.h	/^  void ReceiveSends() override;$/;"	m	class:rtc::Thread
override	webrtc/base/thread.h	/^  void Run() override;$/;"	m	class:rtc::ComThread
override	webrtc/base/thread.h	/^  ~AutoThread() override;$/;"	m	class:rtc::AutoThread
override	webrtc/base/thread.h	/^  ~Thread() override;$/;"	m	class:rtc::Thread
override	webrtc/base/transformadapter.h	/^                     int* error) override;$/;"	m	class:rtc::TransformAdapter
override	webrtc/base/transformadapter.h	/^                    int* error) override;$/;"	m	class:rtc::TransformAdapter
override	webrtc/base/transformadapter.h	/^  bool GetAvailable(size_t* size) const override;$/;"	m	class:rtc::TransformAdapter
override	webrtc/base/transformadapter.h	/^  bool ReserveSize(size_t size) override;$/;"	m	class:rtc::TransformAdapter
override	webrtc/base/transformadapter.h	/^  void Close() override;$/;"	m	class:rtc::TransformAdapter
override	webrtc/base/transformadapter.h	/^  ~TransformAdapter() override;$/;"	m	class:rtc::TransformAdapter
override	webrtc/base/unixfilesystem.h	/^                           const std::string& prefix) override;$/;"	m	class:rtc::UnixFilesystem
override	webrtc/base/unixfilesystem.h	/^                          const std::string* append) override;$/;"	m	class:rtc::UnixFilesystem
override	webrtc/base/unixfilesystem.h	/^                       const std::string& mode) override;$/;"	m	class:rtc::UnixFilesystem
override	webrtc/base/unixfilesystem.h	/^                   time_t* time) override;$/;"	m	class:rtc::UnixFilesystem
override	webrtc/base/unixfilesystem.h	/^  bool CopyFile(const Pathname& old_path, const Pathname& new_path) override;$/;"	m	class:rtc::UnixFilesystem
override	webrtc/base/unixfilesystem.h	/^  bool CreateFolder(const Pathname& pathname) override;$/;"	m	class:rtc::UnixFilesystem
override	webrtc/base/unixfilesystem.h	/^  bool DeleteEmptyFolder(const Pathname& folder) override;$/;"	m	class:rtc::UnixFilesystem
override	webrtc/base/unixfilesystem.h	/^  bool DeleteFile(const Pathname& filename) override;$/;"	m	class:rtc::UnixFilesystem
override	webrtc/base/unixfilesystem.h	/^  bool GetAppDataFolder(Pathname* path, bool per_user) override;$/;"	m	class:rtc::UnixFilesystem
override	webrtc/base/unixfilesystem.h	/^  bool GetAppTempFolder(Pathname* path) override;$/;"	m	class:rtc::UnixFilesystem
override	webrtc/base/unixfilesystem.h	/^  bool GetDiskFreeSpace(const Pathname& path, int64_t* freebytes) override;$/;"	m	class:rtc::UnixFilesystem
override	webrtc/base/unixfilesystem.h	/^  bool GetFileSize(const Pathname& path, size_t* size) override;$/;"	m	class:rtc::UnixFilesystem
override	webrtc/base/unixfilesystem.h	/^  bool IsAbsent(const Pathname& pathname) override;$/;"	m	class:rtc::UnixFilesystem
override	webrtc/base/unixfilesystem.h	/^  bool IsFile(const Pathname& pathname) override;$/;"	m	class:rtc::UnixFilesystem
override	webrtc/base/unixfilesystem.h	/^  bool IsFolder(const Pathname& pathname) override;$/;"	m	class:rtc::UnixFilesystem
override	webrtc/base/unixfilesystem.h	/^  bool IsTemporaryPath(const Pathname& pathname) override;$/;"	m	class:rtc::UnixFilesystem
override	webrtc/base/unixfilesystem.h	/^  bool MoveFile(const Pathname& old_path, const Pathname& new_path) override;$/;"	m	class:rtc::UnixFilesystem
override	webrtc/base/unixfilesystem.h	/^  ~UnixFilesystem() override;$/;"	m	class:rtc::UnixFilesystem
override	webrtc/base/virtualsocketserver.h	/^               int64_t* timestamp) override;$/;"	m	class:rtc::VirtualSocket
override	webrtc/base/virtualsocketserver.h	/^  AsyncSocket* CreateAsyncSocket(int family, int type) override;$/;"	m	class:rtc::VirtualSocketServer
override	webrtc/base/virtualsocketserver.h	/^  AsyncSocket* CreateAsyncSocket(int type) override;$/;"	m	class:rtc::VirtualSocketServer
override	webrtc/base/virtualsocketserver.h	/^  ConnState GetState() const override;$/;"	m	class:rtc::VirtualSocket
override	webrtc/base/virtualsocketserver.h	/^  Socket* CreateSocket(int family, int type) override;$/;"	m	class:rtc::VirtualSocketServer
override	webrtc/base/virtualsocketserver.h	/^  Socket* CreateSocket(int type) override;$/;"	m	class:rtc::VirtualSocketServer
override	webrtc/base/virtualsocketserver.h	/^  SocketAddress GetLocalAddress() const override;$/;"	m	class:rtc::VirtualSocket
override	webrtc/base/virtualsocketserver.h	/^  SocketAddress GetRemoteAddress() const override;$/;"	m	class:rtc::VirtualSocket
override	webrtc/base/virtualsocketserver.h	/^  VirtualSocket* Accept(SocketAddress* paddr) override;$/;"	m	class:rtc::VirtualSocket
override	webrtc/base/virtualsocketserver.h	/^  bool Wait(int cms, bool process_io) override;$/;"	m	class:rtc::VirtualSocketServer
override	webrtc/base/virtualsocketserver.h	/^  int Bind(const SocketAddress& addr) override;$/;"	m	class:rtc::VirtualSocket
override	webrtc/base/virtualsocketserver.h	/^  int Close() override;$/;"	m	class:rtc::VirtualSocket
override	webrtc/base/virtualsocketserver.h	/^  int Connect(const SocketAddress& addr) override;$/;"	m	class:rtc::VirtualSocket
override	webrtc/base/virtualsocketserver.h	/^  int EstimateMTU(uint16_t* mtu) override;$/;"	m	class:rtc::VirtualSocket
override	webrtc/base/virtualsocketserver.h	/^  int GetError() const override;$/;"	m	class:rtc::VirtualSocket
override	webrtc/base/virtualsocketserver.h	/^  int GetOption(Option opt, int* value) override;$/;"	m	class:rtc::VirtualSocket
override	webrtc/base/virtualsocketserver.h	/^  int Listen(int backlog) override;$/;"	m	class:rtc::VirtualSocket
override	webrtc/base/virtualsocketserver.h	/^  int Recv(void* pv, size_t cb, int64_t* timestamp) override;$/;"	m	class:rtc::VirtualSocket
override	webrtc/base/virtualsocketserver.h	/^  int Send(const void* pv, size_t cb) override;$/;"	m	class:rtc::VirtualSocket
override	webrtc/base/virtualsocketserver.h	/^  int SendTo(const void* pv, size_t cb, const SocketAddress& addr) override;$/;"	m	class:rtc::VirtualSocket
override	webrtc/base/virtualsocketserver.h	/^  int SetOption(Option opt, int value) override;$/;"	m	class:rtc::VirtualSocket
override	webrtc/base/virtualsocketserver.h	/^  void OnMessage(Message* pmsg) override;$/;"	m	class:rtc::VirtualSocket
override	webrtc/base/virtualsocketserver.h	/^  void SetError(int error) override;$/;"	m	class:rtc::VirtualSocket
override	webrtc/base/virtualsocketserver.h	/^  void SetMessageQueue(MessageQueue* queue) override;$/;"	m	class:rtc::VirtualSocketServer
override	webrtc/base/virtualsocketserver.h	/^  void WakeUp() override;$/;"	m	class:rtc::VirtualSocketServer
override	webrtc/base/virtualsocketserver.h	/^  ~VirtualSocket() override;$/;"	m	class:rtc::VirtualSocket
override	webrtc/base/virtualsocketserver.h	/^  ~VirtualSocketServer() override;$/;"	m	class:rtc::VirtualSocketServer
override	webrtc/base/weak_ptr.h	/^    ~Flag() override;$/;"	m	class:rtc::internal::WeakReference::Flag
override	webrtc/base/x11windowpicker.h	/^                            int* height) override;$/;"	m	class:rtc::X11WindowPicker
override	webrtc/base/x11windowpicker.h	/^  bool GetDesktopList(DesktopDescriptionList* descriptions) override;$/;"	m	class:rtc::X11WindowPicker
override	webrtc/base/x11windowpicker.h	/^  bool GetWindowList(WindowDescriptionList* descriptions) override;$/;"	m	class:rtc::X11WindowPicker
override	webrtc/base/x11windowpicker.h	/^  bool Init() override;$/;"	m	class:rtc::X11WindowPicker
override	webrtc/base/x11windowpicker.h	/^  bool IsVisible(const WindowId& id) override;$/;"	m	class:rtc::X11WindowPicker
override	webrtc/base/x11windowpicker.h	/^  bool MoveToFront(const WindowId& id) override;$/;"	m	class:rtc::X11WindowPicker
override	webrtc/base/x11windowpicker.h	/^  ~X11WindowPicker() override;$/;"	m	class:rtc::X11WindowPicker
override	webrtc/common_audio/fir_filter.cc	/^  void Filter(const float* in, size_t length, float* out) override;$/;"	m	class:webrtc::FIRFilterC	file:
override	webrtc/common_audio/fir_filter_neon.h	/^  void Filter(const float* in, size_t length, float* out) override;$/;"	m	class:webrtc::FIRFilterNEON
override	webrtc/common_audio/fir_filter_sse.h	/^  void Filter(const float* in, size_t length, float* out) override;$/;"	m	class:webrtc::FIRFilterSSE2
override	webrtc/common_audio/lapped_transform.h	/^                              float* const* output) override;$/;"	m	class:webrtc::LappedTransform::BlockThunk
override	webrtc/common_audio/real_fourier_ooura.h	/^  void Forward(const float* src, std::complex<float>* dest) const override;$/;"	m	class:webrtc::RealFourierOoura
override	webrtc/common_audio/real_fourier_ooura.h	/^  void Inverse(const std::complex<float>* src, float* dest) const override;$/;"	m	class:webrtc::RealFourierOoura
override	webrtc/common_audio/real_fourier_openmax.h	/^  void Forward(const float* src, std::complex<float>* dest) const override;$/;"	m	class:webrtc::RealFourierOpenmax
override	webrtc/common_audio/real_fourier_openmax.h	/^  void Inverse(const std::complex<float>* src, float* dest) const override;$/;"	m	class:webrtc::RealFourierOpenmax
override	webrtc/common_audio/real_fourier_openmax.h	/^  ~RealFourierOpenmax() override;$/;"	m	class:webrtc::RealFourierOpenmax
override	webrtc/common_audio/resampler/push_sinc_resampler.h	/^  void Run(size_t frames, float* destination) override;$/;"	m	class:webrtc::PushSincResampler
override	webrtc/common_audio/resampler/push_sinc_resampler.h	/^  ~PushSincResampler() override;$/;"	m	class:webrtc::PushSincResampler
override	webrtc/common_audio/resampler/sinusoidal_linear_chirp_source.h	/^  void Run(size_t frames, float* destination) override;$/;"	m	class:webrtc::SinusoidalLinearChirpSource
override	webrtc/common_audio/wav_file.h	/^  int sample_rate() const override;$/;"	m	class:webrtc::final
override	webrtc/common_audio/wav_file.h	/^  size_t num_channels() const override;$/;"	m	class:webrtc::final
override	webrtc/common_audio/wav_file.h	/^  size_t num_samples() const override;$/;"	m	class:webrtc::final
override	webrtc/common_audio/wav_file.h	/^  ~WavReader() override;$/;"	m	class:webrtc::final
override	webrtc/common_audio/wav_file.h	/^  ~WavWriter() override;$/;"	m	class:webrtc::final
override	webrtc/config.h	/^    void FillVideoCodecH264(VideoCodecH264* h264_settings) const override;$/;"	m	class:webrtc::VideoEncoderConfig::H264EncoderSpecificSettings
override	webrtc/config.h	/^    void FillVideoCodecVp8(VideoCodecVP8* vp8_settings) const override;$/;"	m	class:webrtc::VideoEncoderConfig::Vp8EncoderSpecificSettings
override	webrtc/config.h	/^    void FillVideoCodecVp9(VideoCodecVP9* vp9_settings) const override;$/;"	m	class:webrtc::VideoEncoderConfig::Vp9EncoderSpecificSettings
override	webrtc/modules/audio_processing/audio_processing_impl.h	/^                           ChannelLayout layout) override;$/;"	m	class:webrtc::AudioProcessingImpl
override	webrtc/modules/audio_processing/audio_processing_impl.h	/^                           float* const* dest) override;$/;"	m	class:webrtc::AudioProcessingImpl
override	webrtc/modules/audio_processing/audio_processing_impl.h	/^                          int64_t max_log_size_bytes) override;$/;"	m	class:webrtc::AudioProcessingImpl
override	webrtc/modules/audio_processing/audio_processing_impl.h	/^                    float* const* dest) override;$/;"	m	class:webrtc::AudioProcessingImpl
override	webrtc/modules/audio_processing/audio_processing_impl.h	/^                 ChannelLayout render_input_layout) override;$/;"	m	class:webrtc::AudioProcessingImpl
override	webrtc/modules/audio_processing/audio_processing_impl.h	/^  AudioProcessingStatistics GetStatistics() const override;$/;"	m	class:webrtc::AudioProcessingImpl
override	webrtc/modules/audio_processing/audio_processing_impl.h	/^  EchoCancellation* echo_cancellation() const override;$/;"	m	class:webrtc::AudioProcessingImpl
override	webrtc/modules/audio_processing/audio_processing_impl.h	/^  EchoControlMobile* echo_control_mobile() const override;$/;"	m	class:webrtc::AudioProcessingImpl
override	webrtc/modules/audio_processing/audio_processing_impl.h	/^  GainControl* gain_control() const override;$/;"	m	class:webrtc::AudioProcessingImpl
override	webrtc/modules/audio_processing/audio_processing_impl.h	/^  HighPassFilter* high_pass_filter() const override;$/;"	m	class:webrtc::AudioProcessingImpl
override	webrtc/modules/audio_processing/audio_processing_impl.h	/^  LevelEstimator* level_estimator() const override;$/;"	m	class:webrtc::AudioProcessingImpl
override	webrtc/modules/audio_processing/audio_processing_impl.h	/^  NoiseSuppression* noise_suppression() const override;$/;"	m	class:webrtc::AudioProcessingImpl
override	webrtc/modules/audio_processing/audio_processing_impl.h	/^  VoiceDetection* voice_detection() const override;$/;"	m	class:webrtc::AudioProcessingImpl
override	webrtc/modules/audio_processing/audio_processing_impl.h	/^  int Initialize() override;$/;"	m	class:webrtc::AudioProcessingImpl
override	webrtc/modules/audio_processing/audio_processing_impl.h	/^  int Initialize(const ProcessingConfig& processing_config) override;$/;"	m	class:webrtc::AudioProcessingImpl
override	webrtc/modules/audio_processing/audio_processing_impl.h	/^  int ProcessReverseStream(AudioFrame* frame) override;$/;"	m	class:webrtc::AudioProcessingImpl
override	webrtc/modules/audio_processing/audio_processing_impl.h	/^  int ProcessStream(AudioFrame* frame) override;$/;"	m	class:webrtc::AudioProcessingImpl
override	webrtc/modules/audio_processing/audio_processing_impl.h	/^  int StartDebugRecording(FILE* handle) override;$/;"	m	class:webrtc::AudioProcessingImpl
override	webrtc/modules/audio_processing/audio_processing_impl.h	/^  int StartDebugRecording(FILE* handle, int64_t max_log_size_bytes) override;$/;"	m	class:webrtc::AudioProcessingImpl
override	webrtc/modules/audio_processing/audio_processing_impl.h	/^  int StartDebugRecordingForPlatformFile(rtc::PlatformFile handle) override;$/;"	m	class:webrtc::AudioProcessingImpl
override	webrtc/modules/audio_processing/audio_processing_impl.h	/^  int StopDebugRecording() override;$/;"	m	class:webrtc::AudioProcessingImpl
override	webrtc/modules/audio_processing/audio_processing_impl.h	/^  int delay_offset_ms() const override;$/;"	m	class:webrtc::AudioProcessingImpl
override	webrtc/modules/audio_processing/audio_processing_impl.h	/^  int proc_sample_rate_hz() const override;$/;"	m	class:webrtc::AudioProcessingImpl
override	webrtc/modules/audio_processing/audio_processing_impl.h	/^  int proc_split_sample_rate_hz() const override;$/;"	m	class:webrtc::AudioProcessingImpl
override	webrtc/modules/audio_processing/audio_processing_impl.h	/^  int set_stream_delay_ms(int delay) override;$/;"	m	class:webrtc::AudioProcessingImpl
override	webrtc/modules/audio_processing/audio_processing_impl.h	/^  int stream_delay_ms() const override;$/;"	m	class:webrtc::AudioProcessingImpl
override	webrtc/modules/audio_processing/audio_processing_impl.h	/^  size_t num_input_channels() const override;$/;"	m	class:webrtc::AudioProcessingImpl
override	webrtc/modules/audio_processing/audio_processing_impl.h	/^  size_t num_output_channels() const override;$/;"	m	class:webrtc::AudioProcessingImpl
override	webrtc/modules/audio_processing/audio_processing_impl.h	/^  size_t num_proc_channels() const override;$/;"	m	class:webrtc::AudioProcessingImpl
override	webrtc/modules/audio_processing/audio_processing_impl.h	/^  size_t num_reverse_channels() const override;$/;"	m	class:webrtc::AudioProcessingImpl
override	webrtc/modules/audio_processing/audio_processing_impl.h	/^  void ApplyConfig(const AudioProcessing::Config& config) override;$/;"	m	class:webrtc::AudioProcessingImpl
override	webrtc/modules/audio_processing/audio_processing_impl.h	/^  void SetExtraOptions(const webrtc::Config& config) override;$/;"	m	class:webrtc::AudioProcessingImpl
override	webrtc/modules/audio_processing/audio_processing_impl.h	/^  void UpdateHistogramsOnCallEnd() override;$/;"	m	class:webrtc::AudioProcessingImpl
override	webrtc/modules/audio_processing/audio_processing_impl.h	/^  void set_delay_offset_ms(int offset) override;$/;"	m	class:webrtc::AudioProcessingImpl
override	webrtc/modules/audio_processing/audio_processing_impl.h	/^  void set_output_will_be_muted(bool muted) override;$/;"	m	class:webrtc::AudioProcessingImpl
override	webrtc/modules/audio_processing/audio_processing_impl.h	/^  void set_stream_key_pressed(bool key_pressed) override;$/;"	m	class:webrtc::AudioProcessingImpl
override	webrtc/modules/audio_processing/audio_processing_impl.h	/^  ~AudioProcessingImpl() override;$/;"	m	class:webrtc::AudioProcessingImpl
override	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  void SetUp() override;$/;"	m	class:webrtc::__anon181::AudioProcessingImplLockTest	file:
override	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  void TearDown() override;$/;"	m	class:webrtc::__anon181::AudioProcessingImplLockTest	file:
override	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.h	/^                         complex<float>* const* output) override;$/;"	m	class:webrtc::NonlinearBeamformer
override	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.h	/^                         complex<float>* const* output) override;$/;"	m	class:webrtc::PostFilterTransform
override	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.h	/^  ~NonlinearBeamformer() override;$/;"	m	class:webrtc::NonlinearBeamformer
override	webrtc/modules/audio_processing/echo_cancellation_impl.h	/^                      float* fraction_poor_delays) override;$/;"	m	class:webrtc::EchoCancellationImpl
override	webrtc/modules/audio_processing/echo_cancellation_impl.h	/^  SuppressionLevel suppression_level() const override;$/;"	m	class:webrtc::EchoCancellationImpl
override	webrtc/modules/audio_processing/echo_cancellation_impl.h	/^  bool are_metrics_enabled() const override;$/;"	m	class:webrtc::EchoCancellationImpl
override	webrtc/modules/audio_processing/echo_cancellation_impl.h	/^  bool is_delay_logging_enabled() const override;$/;"	m	class:webrtc::EchoCancellationImpl
override	webrtc/modules/audio_processing/echo_cancellation_impl.h	/^  bool is_drift_compensation_enabled() const override;$/;"	m	class:webrtc::EchoCancellationImpl
override	webrtc/modules/audio_processing/echo_cancellation_impl.h	/^  bool is_enabled() const override;$/;"	m	class:webrtc::EchoCancellationImpl
override	webrtc/modules/audio_processing/echo_cancellation_impl.h	/^  bool stream_has_echo() const override;$/;"	m	class:webrtc::EchoCancellationImpl
override	webrtc/modules/audio_processing/echo_cancellation_impl.h	/^  int Enable(bool enable) override;$/;"	m	class:webrtc::EchoCancellationImpl
override	webrtc/modules/audio_processing/echo_cancellation_impl.h	/^  int GetDelayMetrics(int* median, int* std) override;$/;"	m	class:webrtc::EchoCancellationImpl
override	webrtc/modules/audio_processing/echo_cancellation_impl.h	/^  int GetMetrics(Metrics* metrics) override;$/;"	m	class:webrtc::EchoCancellationImpl
override	webrtc/modules/audio_processing/echo_cancellation_impl.h	/^  int enable_delay_logging(bool enable) override;$/;"	m	class:webrtc::EchoCancellationImpl
override	webrtc/modules/audio_processing/echo_cancellation_impl.h	/^  int enable_drift_compensation(bool enable) override;$/;"	m	class:webrtc::EchoCancellationImpl
override	webrtc/modules/audio_processing/echo_cancellation_impl.h	/^  int enable_metrics(bool enable) override;$/;"	m	class:webrtc::EchoCancellationImpl
override	webrtc/modules/audio_processing/echo_cancellation_impl.h	/^  int set_suppression_level(SuppressionLevel level) override;$/;"	m	class:webrtc::EchoCancellationImpl
override	webrtc/modules/audio_processing/echo_cancellation_impl.h	/^  int stream_drift_samples() const override;$/;"	m	class:webrtc::EchoCancellationImpl
override	webrtc/modules/audio_processing/echo_cancellation_impl.h	/^  struct AecCore* aec_core() const override;$/;"	m	class:webrtc::EchoCancellationImpl
override	webrtc/modules/audio_processing/echo_cancellation_impl.h	/^  void set_stream_drift_samples(int drift) override;$/;"	m	class:webrtc::EchoCancellationImpl
override	webrtc/modules/audio_processing/echo_cancellation_impl.h	/^  ~EchoCancellationImpl() override;$/;"	m	class:webrtc::EchoCancellationImpl
override	webrtc/modules/audio_processing/echo_control_mobile_impl.h	/^  RoutingMode routing_mode() const override;$/;"	m	class:webrtc::EchoControlMobileImpl
override	webrtc/modules/audio_processing/echo_control_mobile_impl.h	/^  bool is_comfort_noise_enabled() const override;$/;"	m	class:webrtc::EchoControlMobileImpl
override	webrtc/modules/audio_processing/echo_control_mobile_impl.h	/^  bool is_enabled() const override;$/;"	m	class:webrtc::EchoControlMobileImpl
override	webrtc/modules/audio_processing/echo_control_mobile_impl.h	/^  int Enable(bool enable) override;$/;"	m	class:webrtc::EchoControlMobileImpl
override	webrtc/modules/audio_processing/echo_control_mobile_impl.h	/^  int GetEchoPath(void* echo_path, size_t size_bytes) const override;$/;"	m	class:webrtc::EchoControlMobileImpl
override	webrtc/modules/audio_processing/echo_control_mobile_impl.h	/^  int SetEchoPath(const void* echo_path, size_t size_bytes) override;$/;"	m	class:webrtc::EchoControlMobileImpl
override	webrtc/modules/audio_processing/echo_control_mobile_impl.h	/^  int enable_comfort_noise(bool enable) override;$/;"	m	class:webrtc::EchoControlMobileImpl
override	webrtc/modules/audio_processing/echo_control_mobile_impl.h	/^  int set_routing_mode(RoutingMode mode) override;$/;"	m	class:webrtc::EchoControlMobileImpl
override	webrtc/modules/audio_processing/echo_control_mobile_impl.h	/^  ~EchoControlMobileImpl() override;$/;"	m	class:webrtc::EchoControlMobileImpl
override	webrtc/modules/audio_processing/gain_control_for_experimental_agc.h	/^  Mode mode() const override;$/;"	m	class:webrtc::GainControlForExperimentalAgc
override	webrtc/modules/audio_processing/gain_control_for_experimental_agc.h	/^  bool is_enabled() const override;$/;"	m	class:webrtc::GainControlForExperimentalAgc
override	webrtc/modules/audio_processing/gain_control_for_experimental_agc.h	/^  bool is_limiter_enabled() const override;$/;"	m	class:webrtc::GainControlForExperimentalAgc
override	webrtc/modules/audio_processing/gain_control_for_experimental_agc.h	/^  bool stream_is_saturated() const override;$/;"	m	class:webrtc::GainControlForExperimentalAgc
override	webrtc/modules/audio_processing/gain_control_for_experimental_agc.h	/^  int Enable(bool enable) override;$/;"	m	class:webrtc::GainControlForExperimentalAgc
override	webrtc/modules/audio_processing/gain_control_for_experimental_agc.h	/^  int GetMicVolume() override;$/;"	m	class:webrtc::GainControlForExperimentalAgc
override	webrtc/modules/audio_processing/gain_control_for_experimental_agc.h	/^  int analog_level_maximum() const override;$/;"	m	class:webrtc::GainControlForExperimentalAgc
override	webrtc/modules/audio_processing/gain_control_for_experimental_agc.h	/^  int analog_level_minimum() const override;$/;"	m	class:webrtc::GainControlForExperimentalAgc
override	webrtc/modules/audio_processing/gain_control_for_experimental_agc.h	/^  int compression_gain_db() const override;$/;"	m	class:webrtc::GainControlForExperimentalAgc
override	webrtc/modules/audio_processing/gain_control_for_experimental_agc.h	/^  int enable_limiter(bool enable) override;$/;"	m	class:webrtc::GainControlForExperimentalAgc
override	webrtc/modules/audio_processing/gain_control_for_experimental_agc.h	/^  int set_analog_level_limits(int minimum, int maximum) override;$/;"	m	class:webrtc::GainControlForExperimentalAgc
override	webrtc/modules/audio_processing/gain_control_for_experimental_agc.h	/^  int set_compression_gain_db(int gain) override;$/;"	m	class:webrtc::GainControlForExperimentalAgc
override	webrtc/modules/audio_processing/gain_control_for_experimental_agc.h	/^  int set_mode(Mode mode) override;$/;"	m	class:webrtc::GainControlForExperimentalAgc
override	webrtc/modules/audio_processing/gain_control_for_experimental_agc.h	/^  int set_stream_analog_level(int level) override;$/;"	m	class:webrtc::GainControlForExperimentalAgc
override	webrtc/modules/audio_processing/gain_control_for_experimental_agc.h	/^  int set_target_level_dbfs(int level) override;$/;"	m	class:webrtc::GainControlForExperimentalAgc
override	webrtc/modules/audio_processing/gain_control_for_experimental_agc.h	/^  int stream_analog_level() override;$/;"	m	class:webrtc::GainControlForExperimentalAgc
override	webrtc/modules/audio_processing/gain_control_for_experimental_agc.h	/^  int target_level_dbfs() const override;$/;"	m	class:webrtc::GainControlForExperimentalAgc
override	webrtc/modules/audio_processing/gain_control_for_experimental_agc.h	/^  void SetMicVolume(int volume) override;$/;"	m	class:webrtc::GainControlForExperimentalAgc
override	webrtc/modules/audio_processing/gain_control_for_experimental_agc.h	/^  ~GainControlForExperimentalAgc() override;$/;"	m	class:webrtc::GainControlForExperimentalAgc
override	webrtc/modules/audio_processing/gain_control_impl.h	/^  Mode mode() const override;$/;"	m	class:webrtc::GainControlImpl
override	webrtc/modules/audio_processing/gain_control_impl.h	/^  bool is_enabled() const override;$/;"	m	class:webrtc::GainControlImpl
override	webrtc/modules/audio_processing/gain_control_impl.h	/^  bool is_limiter_enabled() const override;$/;"	m	class:webrtc::GainControlImpl
override	webrtc/modules/audio_processing/gain_control_impl.h	/^  bool stream_is_saturated() const override;$/;"	m	class:webrtc::GainControlImpl
override	webrtc/modules/audio_processing/gain_control_impl.h	/^  int Enable(bool enable) override;$/;"	m	class:webrtc::GainControlImpl
override	webrtc/modules/audio_processing/gain_control_impl.h	/^  int analog_level_maximum() const override;$/;"	m	class:webrtc::GainControlImpl
override	webrtc/modules/audio_processing/gain_control_impl.h	/^  int analog_level_minimum() const override;$/;"	m	class:webrtc::GainControlImpl
override	webrtc/modules/audio_processing/gain_control_impl.h	/^  int compression_gain_db() const override;$/;"	m	class:webrtc::GainControlImpl
override	webrtc/modules/audio_processing/gain_control_impl.h	/^  int enable_limiter(bool enable) override;$/;"	m	class:webrtc::GainControlImpl
override	webrtc/modules/audio_processing/gain_control_impl.h	/^  int set_analog_level_limits(int minimum, int maximum) override;$/;"	m	class:webrtc::GainControlImpl
override	webrtc/modules/audio_processing/gain_control_impl.h	/^  int set_compression_gain_db(int gain) override;$/;"	m	class:webrtc::GainControlImpl
override	webrtc/modules/audio_processing/gain_control_impl.h	/^  int set_mode(Mode mode) override;$/;"	m	class:webrtc::GainControlImpl
override	webrtc/modules/audio_processing/gain_control_impl.h	/^  int set_stream_analog_level(int level) override;$/;"	m	class:webrtc::GainControlImpl
override	webrtc/modules/audio_processing/gain_control_impl.h	/^  int set_target_level_dbfs(int level) override;$/;"	m	class:webrtc::GainControlImpl
override	webrtc/modules/audio_processing/gain_control_impl.h	/^  int stream_analog_level() override;$/;"	m	class:webrtc::GainControlImpl
override	webrtc/modules/audio_processing/gain_control_impl.h	/^  int target_level_dbfs() const override;$/;"	m	class:webrtc::GainControlImpl
override	webrtc/modules/audio_processing/gain_control_impl.h	/^  ~GainControlImpl() override;$/;"	m	class:webrtc::GainControlImpl
override	webrtc/modules/audio_processing/high_pass_filter_impl.h	/^  bool is_enabled() const override;$/;"	m	class:webrtc::HighPassFilterImpl
override	webrtc/modules/audio_processing/high_pass_filter_impl.h	/^  int Enable(bool enable) override;$/;"	m	class:webrtc::HighPassFilterImpl
override	webrtc/modules/audio_processing/high_pass_filter_impl.h	/^  ~HighPassFilterImpl() override;$/;"	m	class:webrtc::HighPassFilterImpl
override	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer.h	/^                         std::complex<float>* const* out_block) override;$/;"	m	class:webrtc::IntelligibilityEnhancer
override	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer.h	/^  ~IntelligibilityEnhancer() override;$/;"	m	class:webrtc::IntelligibilityEnhancer
override	webrtc/modules/audio_processing/level_estimator_impl.h	/^  bool is_enabled() const override;$/;"	m	class:webrtc::LevelEstimatorImpl
override	webrtc/modules/audio_processing/level_estimator_impl.h	/^  int Enable(bool enable) override;$/;"	m	class:webrtc::LevelEstimatorImpl
override	webrtc/modules/audio_processing/level_estimator_impl.h	/^  int RMS() override;$/;"	m	class:webrtc::LevelEstimatorImpl
override	webrtc/modules/audio_processing/level_estimator_impl.h	/^  ~LevelEstimatorImpl() override;$/;"	m	class:webrtc::LevelEstimatorImpl
override	webrtc/modules/audio_processing/noise_suppression_impl.h	/^  Level level() const override;$/;"	m	class:webrtc::NoiseSuppressionImpl
override	webrtc/modules/audio_processing/noise_suppression_impl.h	/^  bool is_enabled() const override;$/;"	m	class:webrtc::NoiseSuppressionImpl
override	webrtc/modules/audio_processing/noise_suppression_impl.h	/^  float speech_probability() const override;$/;"	m	class:webrtc::NoiseSuppressionImpl
override	webrtc/modules/audio_processing/noise_suppression_impl.h	/^  int Enable(bool enable) override;$/;"	m	class:webrtc::NoiseSuppressionImpl
override	webrtc/modules/audio_processing/noise_suppression_impl.h	/^  int set_level(Level level) override;$/;"	m	class:webrtc::NoiseSuppressionImpl
override	webrtc/modules/audio_processing/noise_suppression_impl.h	/^  std::vector<float> NoiseEstimate() override;$/;"	m	class:webrtc::NoiseSuppressionImpl
override	webrtc/modules/audio_processing/noise_suppression_impl.h	/^  ~NoiseSuppressionImpl() override;$/;"	m	class:webrtc::NoiseSuppressionImpl
override	webrtc/modules/audio_processing/test/aec_dump_based_simulator.h	/^  void Process() override;$/;"	m	class:webrtc::test::final
override	webrtc/modules/audio_processing/test/wav_based_simulator.h	/^  void Process() override;$/;"	m	class:webrtc::test::final
override	webrtc/modules/audio_processing/test/wav_based_simulator.h	/^  ~WavBasedSimulator() override;$/;"	m	class:webrtc::test::final
override	webrtc/modules/audio_processing/voice_detection_impl.h	/^  Likelihood likelihood() const override;$/;"	m	class:webrtc::VoiceDetectionImpl
override	webrtc/modules/audio_processing/voice_detection_impl.h	/^  bool is_enabled() const override;$/;"	m	class:webrtc::VoiceDetectionImpl
override	webrtc/modules/audio_processing/voice_detection_impl.h	/^  bool stream_has_voice() const override;$/;"	m	class:webrtc::VoiceDetectionImpl
override	webrtc/modules/audio_processing/voice_detection_impl.h	/^  int Enable(bool enable) override;$/;"	m	class:webrtc::VoiceDetectionImpl
override	webrtc/modules/audio_processing/voice_detection_impl.h	/^  int frame_size_ms() const override;$/;"	m	class:webrtc::VoiceDetectionImpl
override	webrtc/modules/audio_processing/voice_detection_impl.h	/^  int set_frame_size_ms(int size) override;$/;"	m	class:webrtc::VoiceDetectionImpl
override	webrtc/modules/audio_processing/voice_detection_impl.h	/^  int set_likelihood(Likelihood likelihood) override;$/;"	m	class:webrtc::VoiceDetectionImpl
override	webrtc/modules/audio_processing/voice_detection_impl.h	/^  int set_stream_has_voice(bool has_voice) override;$/;"	m	class:webrtc::VoiceDetectionImpl
override	webrtc/modules/audio_processing/voice_detection_impl.h	/^  ~VoiceDetectionImpl() override;$/;"	m	class:webrtc::VoiceDetectionImpl
override	webrtc/modules/include/module.h	/^  ~RefCountedModule() override = default;$/;"	m	class:webrtc::RefCountedModule
override	webrtc/system_wrappers/include/clock.h	/^  int64_t CurrentNtpInMilliseconds() const override;$/;"	m	class:webrtc::SimulatedClock
override	webrtc/system_wrappers/include/clock.h	/^  int64_t TimeInMicroseconds() const override;$/;"	m	class:webrtc::SimulatedClock
override	webrtc/system_wrappers/include/clock.h	/^  int64_t TimeInMilliseconds() const override;$/;"	m	class:webrtc::SimulatedClock
override	webrtc/system_wrappers/include/clock.h	/^  void CurrentNtp(uint32_t& seconds, uint32_t& fractions) const override;$/;"	m	class:webrtc::SimulatedClock
override	webrtc/system_wrappers/include/clock.h	/^  ~SimulatedClock() override;$/;"	m	class:webrtc::SimulatedClock
override	webrtc/system_wrappers/include/file_wrapper.h	/^  bool Write(const void* buf, size_t length) override;$/;"	m	class:webrtc::FileWrapper
override	webrtc/system_wrappers/include/file_wrapper.h	/^  int Read(void* buf, size_t length) override;$/;"	m	class:webrtc::FileWrapper
override	webrtc/system_wrappers/include/file_wrapper.h	/^  int Rewind() override;$/;"	m	class:webrtc::FileWrapper
override	webrtc/system_wrappers/include/file_wrapper.h	/^  ~FileWrapper() override;$/;"	m	class:webrtc::FileWrapper
override	webrtc/system_wrappers/include/logcat_trace_context.h	/^  void Print(TraceLevel level, const char* message, int length) override;$/;"	m	class:webrtc::LogcatTraceContext
override	webrtc/system_wrappers/include/logcat_trace_context.h	/^  ~LogcatTraceContext() override;$/;"	m	class:webrtc::LogcatTraceContext
override	webrtc/system_wrappers/source/trace_posix.h	/^  int32_t AddDateTimeInfo(char* trace_message) const override;$/;"	m	class:webrtc::TracePosix
override	webrtc/system_wrappers/source/trace_posix.h	/^  int32_t AddTime(char* trace_message, const TraceLevel level) const override;$/;"	m	class:webrtc::TracePosix
override	webrtc/system_wrappers/source/trace_posix.h	/^  ~TracePosix() override;$/;"	m	class:webrtc::TracePosix
own_ss_	webrtc/base/messagequeue.h	/^  std::unique_ptr<SocketServer> own_ss_;$/;"	m	class:rtc::MessageQueue
owned_	webrtc/base/stream.h	/^  bool owned_;$/;"	m	class:rtc::StreamAdapterInterface
owned_	webrtc/base/thread.h	/^  bool owned_;$/;"	m	class:rtc::Thread
owner_	webrtc/base/physicalsocketserver.cc	/^  PhysicalSocketServer *owner_;$/;"	m	class:rtc::PosixSignalDispatcher	file:
owner_	webrtc/base/stream.h	/^  Thread* owner_;$/;"	m	class:rtc::FifoBuffer
owning_thread_	webrtc/base/criticalsection.h	/^  mutable PlatformThreadRef owning_thread_;$/;"	m	class:rtc::CriticalSection
p	webrtc/base/firewallsocketserver.h	/^    FirewallProtocol p;$/;"	m	struct:rtc::FirewallSocketServer::Rule
p1	webrtc/base/bind.h	/^     typename detail::identity<P1>::type p1,$/;"	m	namespace:rtc
p1	webrtc/base/bind.h	/^    typename detail::identity<P1>::type p1,$/;"	m	namespace:rtc
p1_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P1>::type p1_;$/;"	m	class:rtc::Functor1
p1_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P1>::type p1_;$/;"	m	class:rtc::Functor2
p1_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P1>::type p1_;$/;"	m	class:rtc::Functor3
p1_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P1>::type p1_;$/;"	m	class:rtc::Functor4
p1_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P1>::type p1_;$/;"	m	class:rtc::Functor5
p1_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P1>::type p1_;$/;"	m	class:rtc::Functor6
p1_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P1>::type p1_;$/;"	m	class:rtc::Functor7
p1_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P1>::type p1_;$/;"	m	class:rtc::Functor8
p1_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P1>::type p1_;$/;"	m	class:rtc::Functor9
p1_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P1>::type p1_;$/;"	m	class:rtc::MethodFunctor1
p1_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P1>::type p1_;$/;"	m	class:rtc::MethodFunctor2
p1_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P1>::type p1_;$/;"	m	class:rtc::MethodFunctor3
p1_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P1>::type p1_;$/;"	m	class:rtc::MethodFunctor4
p1_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P1>::type p1_;$/;"	m	class:rtc::MethodFunctor5
p1_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P1>::type p1_;$/;"	m	class:rtc::MethodFunctor6
p1_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P1>::type p1_;$/;"	m	class:rtc::MethodFunctor7
p1_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P1>::type p1_;$/;"	m	class:rtc::MethodFunctor8
p1_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P1>::type p1_;$/;"	m	class:rtc::MethodFunctor9
p2	webrtc/base/bind.h	/^     typename detail::identity<P2>::type p2,$/;"	m	namespace:rtc
p2	webrtc/base/bind.h	/^    typename detail::identity<P2>::type p2,$/;"	m	namespace:rtc
p2_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P2>::type p2_;$/;"	m	class:rtc::Functor2
p2_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P2>::type p2_;$/;"	m	class:rtc::Functor3
p2_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P2>::type p2_;$/;"	m	class:rtc::Functor4
p2_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P2>::type p2_;$/;"	m	class:rtc::Functor5
p2_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P2>::type p2_;$/;"	m	class:rtc::Functor6
p2_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P2>::type p2_;$/;"	m	class:rtc::Functor7
p2_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P2>::type p2_;$/;"	m	class:rtc::Functor8
p2_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P2>::type p2_;$/;"	m	class:rtc::Functor9
p2_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P2>::type p2_;$/;"	m	class:rtc::MethodFunctor2
p2_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P2>::type p2_;$/;"	m	class:rtc::MethodFunctor3
p2_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P2>::type p2_;$/;"	m	class:rtc::MethodFunctor4
p2_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P2>::type p2_;$/;"	m	class:rtc::MethodFunctor5
p2_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P2>::type p2_;$/;"	m	class:rtc::MethodFunctor6
p2_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P2>::type p2_;$/;"	m	class:rtc::MethodFunctor7
p2_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P2>::type p2_;$/;"	m	class:rtc::MethodFunctor8
p2_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P2>::type p2_;$/;"	m	class:rtc::MethodFunctor9
p3	webrtc/base/bind.h	/^     typename detail::identity<P3>::type p3,$/;"	m	namespace:rtc
p3	webrtc/base/bind.h	/^    typename detail::identity<P3>::type p3,$/;"	m	namespace:rtc
p3_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P3>::type p3_;$/;"	m	class:rtc::Functor3
p3_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P3>::type p3_;$/;"	m	class:rtc::Functor4
p3_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P3>::type p3_;$/;"	m	class:rtc::Functor5
p3_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P3>::type p3_;$/;"	m	class:rtc::Functor6
p3_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P3>::type p3_;$/;"	m	class:rtc::Functor7
p3_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P3>::type p3_;$/;"	m	class:rtc::Functor8
p3_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P3>::type p3_;$/;"	m	class:rtc::Functor9
p3_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P3>::type p3_;$/;"	m	class:rtc::MethodFunctor3
p3_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P3>::type p3_;$/;"	m	class:rtc::MethodFunctor4
p3_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P3>::type p3_;$/;"	m	class:rtc::MethodFunctor5
p3_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P3>::type p3_;$/;"	m	class:rtc::MethodFunctor6
p3_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P3>::type p3_;$/;"	m	class:rtc::MethodFunctor7
p3_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P3>::type p3_;$/;"	m	class:rtc::MethodFunctor8
p3_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P3>::type p3_;$/;"	m	class:rtc::MethodFunctor9
p4	webrtc/base/bind.h	/^     typename detail::identity<P4>::type p4,$/;"	m	namespace:rtc
p4	webrtc/base/bind.h	/^    typename detail::identity<P4>::type p4,$/;"	m	namespace:rtc
p4_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P4>::type p4_;$/;"	m	class:rtc::Functor4
p4_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P4>::type p4_;$/;"	m	class:rtc::Functor5
p4_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P4>::type p4_;$/;"	m	class:rtc::Functor6
p4_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P4>::type p4_;$/;"	m	class:rtc::Functor7
p4_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P4>::type p4_;$/;"	m	class:rtc::Functor8
p4_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P4>::type p4_;$/;"	m	class:rtc::Functor9
p4_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P4>::type p4_;$/;"	m	class:rtc::MethodFunctor4
p4_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P4>::type p4_;$/;"	m	class:rtc::MethodFunctor5
p4_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P4>::type p4_;$/;"	m	class:rtc::MethodFunctor6
p4_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P4>::type p4_;$/;"	m	class:rtc::MethodFunctor7
p4_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P4>::type p4_;$/;"	m	class:rtc::MethodFunctor8
p4_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P4>::type p4_;$/;"	m	class:rtc::MethodFunctor9
p5	webrtc/base/bind.h	/^     typename detail::identity<P5>::type p5,$/;"	m	namespace:rtc
p5	webrtc/base/bind.h	/^    typename detail::identity<P5>::type p5,$/;"	m	namespace:rtc
p5_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P5>::type p5_;$/;"	m	class:rtc::Functor5
p5_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P5>::type p5_;$/;"	m	class:rtc::Functor6
p5_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P5>::type p5_;$/;"	m	class:rtc::Functor7
p5_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P5>::type p5_;$/;"	m	class:rtc::Functor8
p5_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P5>::type p5_;$/;"	m	class:rtc::Functor9
p5_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P5>::type p5_;$/;"	m	class:rtc::MethodFunctor5
p5_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P5>::type p5_;$/;"	m	class:rtc::MethodFunctor6
p5_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P5>::type p5_;$/;"	m	class:rtc::MethodFunctor7
p5_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P5>::type p5_;$/;"	m	class:rtc::MethodFunctor8
p5_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P5>::type p5_;$/;"	m	class:rtc::MethodFunctor9
p6	webrtc/base/bind.h	/^     typename detail::identity<P6>::type p6,$/;"	m	namespace:rtc
p6	webrtc/base/bind.h	/^    typename detail::identity<P6>::type p6,$/;"	m	namespace:rtc
p6_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P6>::type p6_;$/;"	m	class:rtc::Functor6
p6_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P6>::type p6_;$/;"	m	class:rtc::Functor7
p6_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P6>::type p6_;$/;"	m	class:rtc::Functor8
p6_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P6>::type p6_;$/;"	m	class:rtc::Functor9
p6_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P6>::type p6_;$/;"	m	class:rtc::MethodFunctor6
p6_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P6>::type p6_;$/;"	m	class:rtc::MethodFunctor7
p6_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P6>::type p6_;$/;"	m	class:rtc::MethodFunctor8
p6_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P6>::type p6_;$/;"	m	class:rtc::MethodFunctor9
p7	webrtc/base/bind.h	/^     typename detail::identity<P7>::type p7,$/;"	m	namespace:rtc
p7	webrtc/base/bind.h	/^    typename detail::identity<P7>::type p7,$/;"	m	namespace:rtc
p7_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P7>::type p7_;$/;"	m	class:rtc::Functor7
p7_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P7>::type p7_;$/;"	m	class:rtc::Functor8
p7_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P7>::type p7_;$/;"	m	class:rtc::Functor9
p7_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P7>::type p7_;$/;"	m	class:rtc::MethodFunctor7
p7_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P7>::type p7_;$/;"	m	class:rtc::MethodFunctor8
p7_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P7>::type p7_;$/;"	m	class:rtc::MethodFunctor9
p8	webrtc/base/bind.h	/^     typename detail::identity<P8>::type p8,$/;"	m	namespace:rtc
p8	webrtc/base/bind.h	/^    typename detail::identity<P8>::type p8,$/;"	m	namespace:rtc
p8_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P8>::type p8_;$/;"	m	class:rtc::Functor8
p8_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P8>::type p8_;$/;"	m	class:rtc::Functor9
p8_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P8>::type p8_;$/;"	m	class:rtc::MethodFunctor8
p8_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P8>::type p8_;$/;"	m	class:rtc::MethodFunctor9
p9_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P9>::type p9_;$/;"	m	class:rtc::Functor9
p9_	webrtc/base/bind.h	/^  typename rtc::remove_reference<P9>::type p9_;$/;"	m	class:rtc::MethodFunctor9
p_convertCFNumberToInt	webrtc/base/macconversion.cc	/^bool p_convertCFNumberToInt(CFNumberRef cfn, int* i) {$/;"	f
p_convertHostCFStringRefToCPPString	webrtc/base/macconversion.cc	/^bool p_convertHostCFStringRefToCPPString($/;"	f
p_data_	webrtc/base/trace_event.h	/^  Data* p_data_;$/;"	m	class:webrtc::trace_event_internal::TraceEndOnScopeClose
p_getProxyInfoForTypeFromDictWithKeys	webrtc/base/proxydetect.cc	/^bool p_getProxyInfoForTypeFromDictWithKeys(ProxyInfo* proxy,$/;"	f	namespace:rtc
p_isCFNumberTrue	webrtc/base/macconversion.cc	/^bool p_isCFNumberTrue(CFNumberRef cfn) {$/;"	f
p_prior_	webrtc/modules/audio_processing/vad/pitch_based_vad.h	/^  double p_prior_;$/;"	m	class:webrtc::PitchBasedVad
p_putPasswordInProxyInfo	webrtc/base/proxydetect.cc	/^bool p_putPasswordInProxyInfo(ProxyInfo* proxy) {$/;"	f	namespace:rtc
packet_id	webrtc/base/asyncpacketsocket.h	/^  int packet_id;  \/\/ 16 bits, -1 represents "not set".$/;"	m	struct:rtc::PacketOptions
packet_id	webrtc/base/socket.h	/^  int packet_id;$/;"	m	struct:rtc::SentPacket
packet_rate	webrtc/common_types.h	/^  uint32_t packet_rate;  \/\/ Packet rate in packets per second.$/;"	m	struct:webrtc::BitrateStatistics
packet_size_	webrtc/base/sslstreamadapter_unittest.cc	/^  size_t packet_size_;$/;"	m	class:SSLStreamAdapterTestDTLS	file:
packet_time	webrtc/base/testclient.h	/^    PacketTime packet_time;$/;"	m	struct:rtc::TestClient::Packet
packet_time_params	webrtc/base/asyncpacketsocket.h	/^  PacketTimeUpdateParams packet_time_params;$/;"	m	struct:rtc::PacketOptions
packetization_type	webrtc/modules/include/module_common_types.h	/^  H264PacketizationTypes packetization_type;$/;"	m	struct:webrtc::RTPVideoHeaderH264
packets	webrtc/common_types.h	/^  uint32_t packets;      \/\/ Number of packets.$/;"	m	struct:webrtc::RtpPacketCounter
packets_	webrtc/base/testclient.h	/^  std::vector<Packet*>* packets_;$/;"	m	class:rtc::TestClient
pacsize	webrtc/common_types.h	/^  int pacsize;$/;"	m	struct:webrtc::CodecInst
paddingLength	webrtc/common_types.h	/^  size_t paddingLength;$/;"	m	struct:webrtc::RTPHeader
padding_bytes	webrtc/common_types.h	/^  size_t padding_bytes;  \/\/ Number of padding bytes.$/;"	m	struct:webrtc::RtpPacketCounter
parametricNoise	webrtc/modules/audio_processing/ns/ns_core.h	/^  float parametricNoise[HALF_ANAL_BLOCKL];$/;"	m	struct:NoiseSuppressionC_
params_	webrtc/base/sslidentity.h	/^  } params_;$/;"	m	class:rtc::KeyParams	typeref:union:rtc::KeyParams::__anon60
parent	webrtc/base/taskparent.h	/^  TaskParent *parent() {$/;"	f	class:rtc::TaskParent
parent_	webrtc/base/signalthread.h	/^    SignalThread* parent_;$/;"	m	class:rtc::SignalThread::Worker
parent_	webrtc/base/taskparent.h	/^  TaskParent *parent_;$/;"	m	class:rtc::TaskParent
parent_	webrtc/base/win32socketserver.cc	/^  Win32Socket * parent_;$/;"	m	class:rtc::Win32Socket::EventSink	file:
parent_	webrtc/common_audio/lapped_transform.h	/^    LappedTransform* const parent_;$/;"	m	class:webrtc::LappedTransform::BlockThunk
parent_folder	webrtc/base/pathutils.cc	/^std::string Pathname::parent_folder() const {$/;"	f	class:rtc::Pathname
parseLeader	webrtc/base/httpcommon.cc	/^HttpRequestData::parseLeader(const char* line, size_t len) {$/;"	f	class:rtc::HttpRequestData
parseLeader	webrtc/base/httpcommon.cc	/^HttpResponseData::parseLeader(const char* line, size_t len) {$/;"	f	class:rtc::HttpResponseData
parse_fd	webrtc/base/linuxfdwalk.c	/^static int parse_fd(const char *s) {$/;"	f	file:
partitionId	webrtc/modules/include/module_common_types.h	/^  int partitionId;            \/\/ VP8 partition ID$/;"	m	struct:webrtc::RTPVideoHeaderVP8
pass_	webrtc/base/socketadapters.h	/^  CryptString pass_;$/;"	m	class:rtc::AsyncHttpsProxySocket
pass_	webrtc/base/socketadapters.h	/^  CryptString pass_;$/;"	m	class:rtc::AsyncSocksProxySocket
password	webrtc/base/cryptstring.h	/^  const std::string& password() const { return password_; }$/;"	f	class:rtc::InsecureCryptStringImpl
password	webrtc/base/cryptstring.h	/^  std::string& password() { return password_; }$/;"	f	class:rtc::InsecureCryptStringImpl
password	webrtc/base/proxyinfo.h	/^  CryptString password;$/;"	m	struct:rtc::ProxyInfo
password_	webrtc/base/cryptstring.h	/^  std::string password_;$/;"	m	class:rtc::InsecureCryptStringImpl
past_input_	webrtc/modules/audio_processing/vad/pole_zero_filter.h	/^  int16_t past_input_[kMaxFilterOrder * 2];$/;"	m	class:webrtc::PoleZeroFilter
past_output_	webrtc/modules/audio_processing/vad/pole_zero_filter.h	/^  float past_output_[kMaxFilterOrder * 2];$/;"	m	class:webrtc::PoleZeroFilter
path	webrtc/base/httpcommon.h	/^  const string& path() const { return path_; }$/;"	f	class:rtc::Url
path	webrtc/base/httpcommon.h	/^  std::string path;$/;"	m	struct:rtc::HttpRequestData
path_	webrtc/base/file_unittest.cc	/^  std::string path_;$/;"	m	class:rtc::FileTest	file:
path_	webrtc/base/fileutils_mock.h	/^    std::string path_;$/;"	m	class:rtc::FakeDirectoryIterator
path_	webrtc/base/httpcommon.h	/^  string host_, path_, query_;$/;"	m	class:rtc::Url
path_	webrtc/base/optionsfile.h	/^  std::string path_;$/;"	m	class:rtc::OptionsFile
path_iterator_	webrtc/base/fileutils_mock.h	/^    std::vector<File>::const_iterator path_iterator_;$/;"	m	class:rtc::FakeDirectoryIterator
pathname	webrtc/base/pathutils.cc	/^std::string Pathname::pathname() const {$/;"	f	class:rtc::Pathname
payloadLimitBytes30	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  int16_t         payloadLimitBytes30;$/;"	m	struct:__anon136
payloadLimitBytes60	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  int16_t         payloadLimitBytes60;$/;"	m	struct:__anon136
payloadType	webrtc/common_types.h	/^  uint8_t payloadType;$/;"	m	struct:webrtc::RTPHeader
payload_bytes	webrtc/common_types.h	/^  size_t payload_bytes;  \/\/ Payload bytes, excluding RTP headers and padding.$/;"	m	struct:webrtc::RtpPacketCounter
payload_type_frequency	webrtc/common_types.h	/^  int payload_type_frequency;$/;"	m	struct:webrtc::RTPHeader
pd	webrtc/base/base64.cc	/^static const unsigned char pd = 0xFD;  \/\/ Padding$/;"	m	namespace:rtc	file:
pdata	webrtc/base/messagequeue.h	/^  MessageData *pdata;$/;"	m	struct:rtc::Message
peak_level_	webrtc/modules/audio_processing/level_controller/peak_level_estimator.h	/^  float peak_level_;$/;"	m	class:webrtc::PeakLevelEstimator
peak_level_estimator_	webrtc/modules/audio_processing/level_controller/level_controller.h	/^  PeakLevelEstimator peak_level_estimator_;$/;"	m	class:webrtc::LevelController
peak_level_sum_	webrtc/modules/audio_processing/level_controller/level_controller.h	/^    float peak_level_sum_;$/;"	m	class:webrtc::LevelController::Metrics
peer_certificate_	webrtc/base/opensslstreamadapter.h	/^  std::unique_ptr<OpenSSLCertificate> peer_certificate_;$/;"	m	class:rtc::OpenSSLStreamAdapter
peer_certificate_digest_algorithm_	webrtc/base/opensslstreamadapter.h	/^  std::string peer_certificate_digest_algorithm_;$/;"	m	class:rtc::OpenSSLStreamAdapter
peer_certificate_digest_value_	webrtc/base/opensslstreamadapter.h	/^  Buffer peer_certificate_digest_value_;$/;"	m	class:rtc::OpenSSLStreamAdapter
peer_certificate_verified_	webrtc/base/opensslstreamadapter.h	/^  bool peer_certificate_verified_ = false;$/;"	m	class:rtc::OpenSSLStreamAdapter
pems	webrtc/base/sslidentity_unittest.cc	/^  std::vector<std::string> pems;$/;"	m	struct:IdentityAndInfo	file:
penalty_counter_	webrtc/modules/audio_processing/typing_detection.h	/^  int penalty_counter_;$/;"	m	class:webrtc::TypingDetection
penalty_decay_	webrtc/modules/audio_processing/typing_detection.h	/^  int penalty_decay_;$/;"	m	class:webrtc::TypingDetection
pending_lock_	webrtc/base/task_queue.h	/^  rtc::CriticalSection pending_lock_;$/;"	m	class:rtc::TaskQueue
pending_timers_	webrtc/base/task_queue_libevent.cc	/^  std::list<TimerEvent*> pending_timers_;$/;"	m	struct:rtc::TaskQueue::QueueContext	file:
period_end_	webrtc/base/ratelimiter.h	/^  double period_end_;$/;"	m	class:rtc::RateLimiter
period_length_	webrtc/base/ratelimiter.h	/^  double period_length_;$/;"	m	class:rtc::RateLimiter
period_start_	webrtc/base/ratelimiter.h	/^  double period_start_;$/;"	m	class:rtc::RateLimiter
pf_	webrtc/base/physicalsocketserver.cc	/^  bool *pf_;$/;"	m	class:rtc::Signaler	file:
pfnInternetGetProxyInfo	webrtc/base/proxydetect.cc	/^  typedef BOOL (STDAPICALLTYPE * pfnInternetGetProxyInfo)$/;"	t	file:
pfnWinHttpCloseHandle	webrtc/base/proxydetect.cc	/^  typedef BOOL (STDAPICALLTYPE * pfnWinHttpCloseHandle)$/;"	t	file:
pfnWinHttpGetIEProxyConfig	webrtc/base/proxydetect.cc	/^  typedef BOOL (STDAPICALLTYPE * pfnWinHttpGetIEProxyConfig)$/;"	t	file:
pfnWinHttpGetProxyForUrl	webrtc/base/proxydetect.cc	/^  typedef BOOL (STDAPICALLTYPE * pfnWinHttpGetProxyForUrl)$/;"	t	file:
pfnWinHttpOpen	webrtc/base/proxydetect.cc	/^  typedef HINTERNET (WINAPI * pfnWinHttpOpen)$/;"	t	file:
phandler	webrtc/base/messagequeue.h	/^  MessageHandler *phandler;$/;"	m	struct:rtc::Message
phase	webrtc/base/event_tracer.cc	/^    char phase;$/;"	m	struct:rtc::tracing::__anon12::final::TraceEvent	file:
pictureId	webrtc/modules/include/module_common_types.h	/^  int16_t pictureId;          \/\/ Picture ID index, 15 bits;$/;"	m	struct:webrtc::RTPVideoHeaderVP8
pictureLossIndicationOn	webrtc/common_types.h	/^  bool pictureLossIndicationOn;$/;"	m	struct:webrtc::VideoCodecVP8
picture_id	webrtc/modules/include/module_common_types.h	/^  int16_t picture_id;      \/\/ PictureID index, 15 bits;$/;"	m	struct:webrtc::RTPVideoHeaderVP9
pid	webrtc/base/event_tracer.cc	/^    int pid;$/;"	m	struct:rtc::tracing::__anon12::final::TraceEvent	file:
pid_diff	webrtc/modules/include/module_common_types.h	/^  uint8_t pid_diff[kMaxVp9FramesInGof][kMaxVp9RefPics];$/;"	m	struct:webrtc::GofInfoVP9
pid_diff	webrtc/modules/include/module_common_types.h	/^  uint8_t pid_diff[kMaxVp9RefPics];  \/\/ P_DIFF signaled to derive the PictureID$/;"	m	struct:webrtc::RTPVideoHeaderVP9
pid_start	webrtc/modules/include/module_common_types.h	/^  uint16_t pid_start;$/;"	m	struct:webrtc::GofInfoVP9
piecewise	webrtc/modules/audio_coding/codecs/isac/main/source/arith_routines_logist.c	/^static __inline uint32_t piecewise(int32_t xinQ15) {$/;"	f	file:
pinkNoiseExp	webrtc/modules/audio_processing/ns/ns_core.h	/^  float pinkNoiseExp;  \/\/ Pink noise parameter: power of frequencies.$/;"	m	struct:NoiseSuppressionC_
pinkNoiseExp	webrtc/modules/audio_processing/ns/nsx_core.h	/^  int32_t                 pinkNoiseExp;  \/\/ Power of freq.$/;"	m	struct:NoiseSuppressionFixedC_
pinkNoiseNumerator	webrtc/modules/audio_processing/ns/ns_core.h	/^  float pinkNoiseNumerator;  \/\/ Pink noise parameter: numerator.$/;"	m	struct:NoiseSuppressionC_
pinkNoiseNumerator	webrtc/modules/audio_processing/ns/nsx_core.h	/^  int32_t                 pinkNoiseNumerator;  \/\/ Numerator.$/;"	m	struct:NoiseSuppressionFixedC_
pitchGain_index	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  int         pitchGain_index[2];$/;"	m	struct:__anon134
pitchIndex	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  int         pitchIndex[PITCH_SUBFRAMES*2];$/;"	m	struct:__anon134
pitch_analysis_handle_	webrtc/modules/audio_processing/vad/vad_audio_proc.h	/^  std::unique_ptr<PitchAnalysisStruct> pitch_analysis_handle_;$/;"	m	class:webrtc::VadAudioProc
pitch_based_vad_	webrtc/modules/audio_processing/vad/voice_activity_detector.h	/^  PitchBasedVad pitch_based_vad_;$/;"	m	class:webrtc::VoiceActivityDetector
pitch_lag_hz	webrtc/modules/audio_processing/vad/common.h	/^  double pitch_lag_hz[kMaxNumFrames];$/;"	m	struct:AudioFeatures
pitchanalysisstr_obj	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  PitchAnalysisStruct pitchanalysisstr_obj;$/;"	m	struct:__anon136
pitchfiltstr_obj	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  PitchFiltstr        pitchfiltstr_obj;$/;"	m	struct:__anon136
pitchfiltstr_obj	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  PitchFiltstr    pitchfiltstr_obj;$/;"	m	struct:__anon138
pkey	webrtc/base/opensslidentity.h	/^  EVP_PKEY* pkey() const { return pkey_; }$/;"	f	class:rtc::OpenSSLKeyPair
pkey_	webrtc/base/opensslidentity.h	/^  EVP_PKEY* pkey_;$/;"	m	class:rtc::OpenSSLKeyPair
plName	webrtc/common_types.h	/^  char plName[kPayloadNameSize];$/;"	m	class:webrtc::VideoCodec
plType	webrtc/common_types.h	/^  unsigned char plType;$/;"	m	class:webrtc::VideoCodec
plain_length	webrtc/base/base64_unittest.cc	/^  size_t plain_length;$/;"	m	struct:__anon3	file:
plaintext	webrtc/base/base64_unittest.cc	/^  const char* plaintext;$/;"	m	struct:__anon3	file:
playout_delay	webrtc/common_types.h	/^  PlayoutDelay playout_delay = {-1, -1};$/;"	m	struct:webrtc::RTPHeaderExtension
playout_delay	webrtc/modules/include/module_common_types.h	/^  PlayoutDelay playout_delay;$/;"	m	struct:webrtc::RTPVideoHeader
plfreq	webrtc/common_types.h	/^  int plfreq;$/;"	m	struct:webrtc::CodecInst
pli_packets	webrtc/common_types.h	/^  uint32_t pli_packets;           \/\/ Number of RTCP PLI packets.$/;"	m	struct:webrtc::RtcpPacketTypeCounter
plname	webrtc/common_types.h	/^  char plname[RTP_PAYLOAD_NAME_SIZE];$/;"	m	struct:webrtc::CodecInst
plotDetection	webrtc/modules/audio_processing/transient/test/plotDetection.m	/^function [] = plotDetection(PCMfile, DATfile, fs, chunkSize)$/;"	f
pltype	webrtc/common_types.h	/^  int pltype;$/;"	m	struct:webrtc::CodecInst
pool_	webrtc/base/httpclient.h	/^  StreamPool* pool_;$/;"	m	class:rtc::HttpClient
pool_	webrtc/base/scoped_autorelease_pool.h	/^  NSAutoreleasePool* pool_;$/;"	m	class:rtc::ScopedAutoreleasePool
pool_	webrtc/base/socketpool.h	/^  StreamPool* pool_;$/;"	m	class:rtc::LoggingPoolAdapter
pool_	webrtc/base/socketpool.h	/^  StreamPool* pool_;$/;"	m	class:rtc::StreamCache
populate_ifaddrs	webrtc/base/ifaddrs-android.cc	/^int populate_ifaddrs(struct ifaddrs* ifaddr, ifaddrmsg* msg, void* bytes,$/;"	f	namespace:rtc
port	webrtc/base/httpcommon.h	/^  uint16_t port() const { return port_; }$/;"	f	class:rtc::Url
port	webrtc/base/httprequest.h	/^  int port() { return port_; }$/;"	f	class:rtc::HttpRequest
port	webrtc/base/socketaddress.cc	/^uint16_t SocketAddress::port() const {$/;"	f	class:rtc::SocketAddress
port	webrtc/base/win32socketserver.cc	/^  uint16_t port;$/;"	m	struct:rtc::Win32Socket::DnsLookup	file:
port_	webrtc/base/httpcommon.h	/^  uint16_t port_;$/;"	m	class:rtc::Url
port_	webrtc/base/httprequest.h	/^  int port_;$/;"	m	class:rtc::HttpRequest
port_	webrtc/base/socketaddress.h	/^  uint16_t port_;$/;"	m	class:rtc::SocketAddress
pos_	webrtc/base/stream_unittest.cc	/^  size_t pos_;$/;"	m	class:rtc::TestStream	file:
pos_	webrtc/common_audio/wav_header_unittest.cc	/^  size_t pos_;$/;"	m	class:webrtc::ReadableWavBuffer	file:
position	webrtc/modules/audio_processing/aec/aec_resampler.cc	/^  float position;$/;"	m	struct:webrtc::__anon154	file:
position_	webrtc/system_wrappers/include/file_wrapper.h	/^  size_t position_ = 0;$/;"	m	class:webrtc::FileWrapper
postCompFile	webrtc/modules/audio_processing/aecm/echo_control_mobile.cc	/^    FILE *postCompFile;$/;"	m	struct:__anon165	file:
post_handler_	webrtc/base/thread_unittest.cc	/^  MessageHandler* post_handler_;$/;"	m	class:SocketClient	file:
post_thread_	webrtc/base/thread_unittest.cc	/^  Thread* post_thread_;$/;"	m	class:SocketClient	file:
posted_	webrtc/base/task_queue_libevent.cc	/^  const uint32_t posted_;$/;"	m	class:rtc::TaskQueue::SetTimerTask	file:
posted_	webrtc/base/win32socketserver.h	/^  bool posted_;$/;"	m	class:rtc::Win32SocketServer
posted_from	webrtc/base/messagequeue.h	/^  Location posted_from;$/;"	m	struct:rtc::Message
postfiltbankstr_obj	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  PostFiltBankstr postfiltbankstr_obj;$/;"	m	struct:__anon138
postfiltbankstr_obj	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  PostFiltBankstr postfiltbankstr_obj;$/;"	m	struct:__anon139
postfilter_transform_	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.h	/^  std::unique_ptr<PostFilterTransform> postfilter_transform_;$/;"	m	class:webrtc::NonlinearBeamformer
power	webrtc/modules/audio_processing/intelligibility/intelligibility_utils.h	/^  const std::vector<float>& power() { return power_; };$/;"	f	class:webrtc::intelligibility::PowerEstimator
power_	webrtc/modules/audio_processing/intelligibility/intelligibility_utils.h	/^  std::vector<float> power_;$/;"	m	class:webrtc::intelligibility::PowerEstimator
ppsData	webrtc/common_types.h	/^  const uint8_t* ppsData;$/;"	m	struct:webrtc::VideoCodecH264
ppsLen	webrtc/common_types.h	/^  size_t ppsLen;$/;"	m	struct:webrtc::VideoCodecH264
pps_id	webrtc/modules/include/module_common_types.h	/^  int pps_id;$/;"	m	struct:webrtc::NaluInfo
preCompFile	webrtc/modules/audio_processing/aecm/echo_control_mobile.cc	/^    FILE *preCompFile;$/;"	m	struct:__anon165	file:
pre_filter_handle_	webrtc/modules/audio_processing/vad/vad_audio_proc.h	/^  std::unique_ptr<PreFiltBankstr> pre_filter_handle_;$/;"	m	class:webrtc::VadAudioProc
preference	webrtc/base/network.h	/^  int preference() const { return preference_; }$/;"	f	class:rtc::Network
preference_	webrtc/base/network.h	/^  int preference_;$/;"	m	class:rtc::Network
preferredBufferSize	webrtc/common_types.h	/^  uint16_t preferredBufferSize;$/;"	m	struct:webrtc::NetworkStatistics
prefiltbankstr_obj	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  PreFiltBankstr          prefiltbankstr_obj;$/;"	m	struct:__anon137
prefiltbankstr_obj	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  PreFiltBankstr      prefiltbankstr_obj;$/;"	m	struct:__anon136
prefix	webrtc/base/network.h	/^  const IPAddress& prefix() const { return prefix_; }$/;"	f	class:rtc::Network
prefix_	webrtc/base/network.h	/^  IPAddress prefix_;$/;"	m	class:rtc::Network
prefix_length	webrtc/base/network.h	/^  int prefix_length() const { return prefix_length_; }$/;"	f	class:rtc::Network
prefix_length_	webrtc/base/network.h	/^  int prefix_length_;$/;"	m	class:rtc::Network
prepare_get	webrtc/base/httpclient.cc	/^void HttpClient::prepare_get(const std::string& url) {$/;"	f	class:rtc::HttpClient
prepare_post	webrtc/base/httpclient.cc	/^void HttpClient::prepare_post(const std::string& url,$/;"	f	class:rtc::HttpClient
prevMagnU16	webrtc/modules/audio_processing/ns/nsx_core.h	/^  uint16_t                prevMagnU16[HALF_ANAL_BLOCKL];$/;"	m	struct:NoiseSuppressionFixedC_
prevNoiseU32	webrtc/modules/audio_processing/ns/nsx_core.h	/^  uint32_t                prevNoiseU32[HALF_ANAL_BLOCKL];$/;"	m	struct:NoiseSuppressionFixedC_
prevQMagn	webrtc/modules/audio_processing/ns/nsx_core.h	/^  int                     prevQMagn;$/;"	m	struct:NoiseSuppressionFixedC_
prevQNoise	webrtc/modules/audio_processing/ns/nsx_core.h	/^  int                     prevQNoise;$/;"	m	struct:NoiseSuppressionFixedC_
prev_	webrtc/base/task_queue_posix.h	/^  TaskQueue* const prev_;$/;"	m	class:rtc::internal::AutoSetCurrentQueuePtr
prev_api_tick_count_	webrtc/system_wrappers/source/trace_posix.h	/^  volatile mutable uint32_t  prev_api_tick_count_;$/;"	m	class:webrtc::TracePosix
prev_clock_	webrtc/base/fakeclock.h	/^  ClockInterface* prev_clock_;$/;"	m	class:rtc::ScopedFakeClock
prev_frame_length	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  int32_t    prev_frame_length;$/;"	m	struct:__anon131
prev_packet_timestamp_	webrtc/base/testclient.h	/^  int64_t prev_packet_timestamp_;$/;"	m	class:rtc::TestClient
prev_rec_arr_ts	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  uint32_t    prev_rec_arr_ts;$/;"	m	struct:__anon131
prev_rec_rtp_number	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  int32_t    prev_rec_rtp_number;$/;"	m	struct:__anon131
prev_rec_rtp_rate	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  float   prev_rec_rtp_rate;$/;"	m	struct:__anon131
prev_rec_send_ts	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  uint32_t    prev_rec_send_ts;$/;"	m	struct:__anon131
prev_tick_count_	webrtc/system_wrappers/source/trace_posix.h	/^  volatile mutable uint32_t  prev_tick_count_;$/;"	m	class:webrtc::TracePosix
prev_translated_time_us_	webrtc/base/timestampaligner.h	/^  int64_t prev_translated_time_us_;$/;"	m	class:rtc::TimestampAligner
previous_delay	webrtc/modules/audio_processing/aec/aec_core.h	/^  int previous_delay;$/;"	m	struct:webrtc::AecCore
previous_nearend_block	webrtc/modules/audio_processing/aec/aec_core.h	/^  float previous_nearend_block[NUM_HIGH_BANDS_MAX + 1][PART_LEN];$/;"	m	struct:webrtc::AecCore
previous_results_	webrtc/modules/audio_processing/transient/transient_detector.h	/^  std::deque<float> previous_results_;$/;"	m	class:webrtc::TransientDetector
previous_state_	webrtc/base/thread.h	/^    const bool previous_state_;$/;"	m	class:rtc::Thread::ScopedDisallowBlockingCalls
primary	webrtc/base/windowpicker.h	/^  bool primary() const { return primary_; }$/;"	f	class:rtc::DesktopDescription
primary_	webrtc/base/windowpicker.h	/^  bool primary_;$/;"	m	class:rtc::DesktopDescription
print_processor_statistics	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^  void print_processor_statistics(std::string processor_name) const {$/;"	f	class:webrtc::__anon182::TimedThreadApiProcessor
print_stream_	webrtc/base/logging.h	/^  std::ostringstream print_stream_;$/;"	m	class:rtc::LogMessage
print_stream_	webrtc/system_wrappers/include/logging.h	/^  std::ostringstream print_stream_;$/;"	m	class:webrtc::LogMessage
priorModelPars	webrtc/modules/audio_processing/ns/ns_core.h	/^  float priorModelPars[7];  \/\/ Parameters for prior model.$/;"	m	struct:NoiseSuppressionC_
priorNonSpeechProb	webrtc/modules/audio_processing/ns/nsx_core.h	/^  int16_t                 priorNonSpeechProb;$/;"	m	struct:NoiseSuppressionFixedC_
priorSpeechProb	webrtc/modules/audio_processing/ns/ns_core.h	/^  float priorSpeechProb;  \/\/ Prior speech\/noise probability.$/;"	m	struct:NoiseSuppressionC_
private_key	webrtc/base/rtccertificate.h	/^  const std::string& private_key() const { return private_key_; }$/;"	f	class:rtc::RTCCertificatePEM
private_key_	webrtc/base/rtccertificate.h	/^  std::string private_key_;$/;"	m	class:rtc::RTCCertificatePEM
private_submodules_	webrtc/modules/audio_processing/audio_processing_impl.h	/^  std::unique_ptr<ApmPrivateSubmodules> private_submodules_;$/;"	m	class:webrtc::AudioProcessingImpl
proc_num_frames_	webrtc/modules/audio_processing/audio_buffer.h	/^  const size_t proc_num_frames_;$/;"	m	class:webrtc::AudioBuffer
proc_sample_rate_hz	webrtc/modules/audio_processing/audio_processing_impl.cc	/^int AudioProcessingImpl::proc_sample_rate_hz() const {$/;"	f	class:webrtc::AudioProcessingImpl
proc_split_sample_rate_hz	webrtc/modules/audio_processing/audio_processing_impl.cc	/^int AudioProcessingImpl::proc_split_sample_rate_hz() const {$/;"	f	class:webrtc::AudioProcessingImpl
proc_time	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^  const TickIntervalStats& proc_time() const { return proc_time_; }$/;"	f	class:webrtc::test::AudioProcessingSimulator
proc_time_	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^    TickIntervalStats* const proc_time_;$/;"	m	class:webrtc::test::AudioProcessingSimulator::ScopedTimer
proc_time_	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^  TickIntervalStats proc_time_;$/;"	m	class:webrtc::test::AudioProcessingSimulator
process_buffer_	webrtc/modules/audio_processing/audio_buffer.h	/^  std::unique_ptr<ChannelBuffer<float> > process_buffer_;$/;"	m	class:webrtc::AudioBuffer
process_transform_	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.h	/^  std::unique_ptr<LappedTransform> process_transform_;$/;"	m	class:webrtc::NonlinearBeamformer
processedData	WebRTCAudioProcessing_jni.h	/^	unsigned char*	processedData;$/;"	m	struct:WebRTCAudioProcessing
processedFrameCount	WebRTCAudioProcessing_jni.h	/^	int64_t	processedFrameCount;$/;"	m	struct:WebRTCAudioProcessing
processedSize	WebRTCAudioProcessing_jni.h	/^	int			processedSize;$/;"	m	struct:WebRTCAudioProcessing
processor_type_	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^  const ProcessorType processor_type_;$/;"	m	class:webrtc::__anon182::TimedThreadApiProcessor	file:
protected_media_ssrcs	webrtc/config.h	/^  std::vector<uint32_t> protected_media_ssrcs;$/;"	m	struct:webrtc::FlexfecConfig
provided_app_data_folder_	webrtc/base/unixfilesystem.h	/^  static char* provided_app_data_folder_;$/;"	m	class:rtc::UnixFilesystem
provided_app_temp_folder_	webrtc/base/unixfilesystem.h	/^  static char* provided_app_temp_folder_;$/;"	m	class:rtc::UnixFilesystem
proxy	webrtc/base/autodetectproxy.h	/^  const ProxyInfo& proxy() const { return proxy_; }$/;"	f	class:rtc::AutoDetectProxy
proxy	webrtc/base/httpclient.h	/^  const ProxyInfo& proxy() const { return proxy_; }$/;"	f	class:rtc::HttpClient
proxy	webrtc/base/sslsocketfactory.h	/^  const ProxyInfo& proxy() const { return proxy_; }$/;"	f	class:rtc::SslSocketFactory
proxy_	webrtc/base/autodetectproxy.h	/^  ProxyInfo proxy_;$/;"	m	class:rtc::AutoDetectProxy
proxy_	webrtc/base/httpclient.h	/^  ProxyInfo proxy_;$/;"	m	class:rtc::HttpClient
proxy_	webrtc/base/httprequest.h	/^  ProxyInfo proxy_;$/;"	m	class:rtc::HttpRequest
proxy_	webrtc/base/socketadapters.h	/^  SocketAddress proxy_, dest_;$/;"	m	class:rtc::AsyncHttpsProxySocket
proxy_	webrtc/base/socketadapters.h	/^  SocketAddress proxy_, dest_;$/;"	m	class:rtc::AsyncSocksProxySocket
proxy_	webrtc/base/sslsocketfactory.h	/^  ProxyInfo proxy_;$/;"	m	class:rtc::SslSocketFactory
pss_	webrtc/base/asynctcpsocket_unittest.cc	/^  std::unique_ptr<PhysicalSocketServer> pss_;$/;"	m	class:rtc::AsyncTCPSocketTest	file:
pss_	webrtc/base/asyncudpsocket_unittest.cc	/^  std::unique_ptr<PhysicalSocketServer> pss_;$/;"	m	class:rtc::AsyncUdpSocketTest	file:
ptr_	webrtc/base/scoped_ref_ptr.h	/^  T* ptr_;$/;"	m	class:rtc::scoped_refptr
ptr_	webrtc/base/weak_ptr.h	/^  T* ptr_;$/;"	m	class:rtc::WeakPtr
ptr_	webrtc/base/weak_ptr.h	/^  T* ptr_;$/;"	m	class:rtc::WeakPtrFactory
ptr_crit_sec_	webrtc/system_wrappers/include/critical_section_wrapper.h	/^  CriticalSectionWrapper* ptr_crit_sec_;$/;"	m	class:webrtc::CriticalSectionScoped
pub_exp	webrtc/base/sslidentity.h	/^  unsigned int pub_exp;$/;"	m	struct:rtc::RSAParams
public_submodules_	webrtc/modules/audio_processing/audio_processing_impl.h	/^  std::unique_ptr<ApmPublicSubmodules> public_submodules_;$/;"	m	class:webrtc::AudioProcessingImpl
qNoise	webrtc/modules/audio_processing/ns/nsx_core.h	/^  int                     qNoise;$/;"	m	struct:NoiseSuppressionFixedC_
qpMax	webrtc/common_types.h	/^  unsigned int qpMax;          \/\/ minimum quality$/;"	m	struct:webrtc::SimulcastStream
qpMax	webrtc/common_types.h	/^  unsigned int qpMax;$/;"	m	class:webrtc::VideoCodec
quantile	webrtc/modules/audio_processing/ns/ns_core.h	/^  float quantile[HALF_ANAL_BLOCKL];$/;"	m	struct:NoiseSuppressionC_
query	webrtc/base/httpcommon.h	/^  const string& query() const { return query_; }$/;"	f	class:rtc::Url
query_	webrtc/base/httpcommon.h	/^  string host_, path_, query_;$/;"	m	class:rtc::Url
queue	webrtc/base/natsocketfactory.h	/^  MessageQueue* queue() { return msg_queue_; }$/;"	f	class:rtc::NATSocketServer
queue	webrtc/base/task_queue_gcd.cc	/^  TaskQueue* const queue;$/;"	m	struct:rtc::TaskQueue::QueueContext	file:
queue	webrtc/base/task_queue_libevent.cc	/^  TaskQueue* queue;$/;"	m	struct:rtc::TaskQueue::QueueContext	file:
queue_	webrtc/base/task_queue.h	/^  dispatch_queue_t queue_;$/;"	m	class:rtc::TaskQueue
queue_	webrtc/base/thread_checker_unittest.cc	/^  rtc::TaskQueue* queue_;$/;"	m	class:rtc::ThreadAnnotateTest	file:
queue_	webrtc/modules/audio_processing/transient/moving_moments.h	/^  std::queue<float> queue_;$/;"	m	class:webrtc::MovingMoments
queue_ctx	webrtc/base/task_queue_gcd.cc	/^  QueueContext* const queue_ctx;$/;"	m	struct:rtc::TaskQueue::TaskContext	file:
queue_headers	webrtc/base/httpbase.cc	/^HttpBase::queue_headers() {$/;"	f	class:rtc::HttpBase
quote	webrtc/base/httpcommon.cc	/^std::string quote(const std::string& str) {$/;"	f	namespace:rtc
r0_	webrtc/common_audio/resampler/sinc_resampler.h	/^  float* r0_;$/;"	m	class:webrtc::SincResampler
r1_	webrtc/common_audio/resampler/sinc_resampler.h	/^  float* const r1_;$/;"	m	class:webrtc::SincResampler
r2_	webrtc/common_audio/resampler/sinc_resampler.h	/^  float* const r2_;$/;"	m	class:webrtc::SincResampler
r3_	webrtc/common_audio/resampler/sinc_resampler.h	/^  float* r3_;$/;"	m	class:webrtc::SincResampler
r4_	webrtc/common_audio/resampler/sinc_resampler.h	/^  float* r4_;$/;"	m	class:webrtc::SincResampler
race_check_ok_	webrtc/base/race_checker.h	/^  const bool race_check_ok_;$/;"	m	class:rtc::internal::RaceCheckerScope
race_checker_	webrtc/base/race_checker.h	/^  const RaceChecker* const race_checker_;$/;"	m	class:rtc::internal::RaceCheckerScope
rand_gen_	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  RandomGenerator* const rand_gen_ = nullptr;$/;"	m	class:webrtc::__anon181::CaptureProcessor	file:
rand_gen_	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  RandomGenerator* const rand_gen_ = nullptr;$/;"	m	class:webrtc::__anon181::RenderProcessor	file:
rand_gen_	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  RandomGenerator* rand_gen_ = nullptr;$/;"	m	class:webrtc::__anon181::StatsProcessor	file:
rand_gen_	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  mutable RandomGenerator rand_gen_;$/;"	m	class:webrtc::__anon181::AudioProcessingImplLockTest	file:
rand_gen_	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^  Random rand_gen_;$/;"	m	class:webrtc::__anon182::CallSimulator	file:
rand_gen_	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^  Random* rand_gen_ = nullptr;$/;"	m	class:webrtc::__anon182::TimedThreadApiProcessor	file:
rangeAvgHistLrt	webrtc/modules/audio_processing/ns/ns_core.h	/^  float rangeAvgHistLrt;$/;"	m	struct:NSParaExtract_
rate	webrtc/base/virtualsocket_unittest.cc	/^  uint32_t rate;  \/\/ bytes per second$/;"	m	struct:Sender	file:
rate	webrtc/common_types.h	/^  int rate;  \/\/ bits\/sec unlike {start,min,max}Bitrate elsewhere in this file!$/;"	m	struct:webrtc::CodecInst
rate_data_obj	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  RateModel                 rate_data_obj;$/;"	m	struct:__anon144
rate_factor	webrtc/modules/audio_processing/aec/echo_cancellation.h	/^  int rate_factor;$/;"	m	struct:webrtc::Aec
rate_limiter	webrtc/base/rate_limiter_unittest.cc	/^  std::unique_ptr<RateLimiter> rate_limiter;$/;"	m	class:webrtc::RateLimitTest	file:
rate_limiter_	webrtc/base/rate_limiter_unittest.cc	/^  RateLimiter* const rate_limiter_;$/;"	m	class:webrtc::ThreadTask	file:
raw_files_	webrtc/modules/audio_processing/logging/apm_data_dumper.h	/^      raw_files_;$/;"	m	class:webrtc::ApmDataDumper
rdft_w	webrtc/modules/audio_processing/utility/ooura_fft_tables_common.h	/^const float rdft_w[64] = {$/;"	m	namespace:webrtc
rdft_wk1i	webrtc/modules/audio_processing/utility/ooura_fft_tables_neon_sse2.h	/^ALIGN16_BEG const float ALIGN16_END rdft_wk1i[32] = {$/;"	m	namespace:webrtc
rdft_wk1r	webrtc/modules/audio_processing/utility/ooura_fft_tables_neon_sse2.h	/^ALIGN16_BEG const float ALIGN16_END rdft_wk1r[32] = {$/;"	m	namespace:webrtc
rdft_wk2i	webrtc/modules/audio_processing/utility/ooura_fft_tables_neon_sse2.h	/^ALIGN16_BEG const float ALIGN16_END rdft_wk2i[32] = {$/;"	m	namespace:webrtc
rdft_wk2r	webrtc/modules/audio_processing/utility/ooura_fft_tables_neon_sse2.h	/^ALIGN16_BEG const float ALIGN16_END rdft_wk2r[32] = {$/;"	m	namespace:webrtc
rdft_wk3i	webrtc/modules/audio_processing/utility/ooura_fft_tables_neon_sse2.h	/^ALIGN16_BEG const float ALIGN16_END rdft_wk3i[32] = {$/;"	m	namespace:webrtc
rdft_wk3r	webrtc/modules/audio_processing/utility/ooura_fft_tables_neon_sse2.h	/^ALIGN16_BEG const float ALIGN16_END rdft_wk3r[32] = {$/;"	m	namespace:webrtc
rdft_wk3ri_first	webrtc/modules/audio_processing/utility/ooura_fft_tables_common.h	/^const float rdft_wk3ri_first[16] = {$/;"	m	namespace:webrtc
rdft_wk3ri_second	webrtc/modules/audio_processing/utility/ooura_fft_tables_common.h	/^const float rdft_wk3ri_second[16] = {$/;"	m	namespace:webrtc
readDetection	webrtc/modules/audio_processing/transient/test/readDetection.m	/^function [d, t] = readDetection(file, fs, chunkSize)$/;"	f
readPCM	webrtc/modules/audio_processing/transient/test/readPCM.m	/^function [x, t] = readPCM(file, fs)$/;"	f
read_and_process_data	webrtc/base/httpbase.cc	/^HttpBase::read_and_process_data() {$/;"	f	class:rtc::HttpBase
read_block_	webrtc/base/testutils.h	/^  size_t read_block_, write_block_;$/;"	m	class:testing::StreamSource
read_cb_	webrtc/common_audio/resampler/sinc_resampler.h	/^  SincResamplerCallback* read_cb_;$/;"	m	class:webrtc::SincResampler
read_index_	webrtc/modules/audio_processing/intelligibility/intelligibility_utils.h	/^  size_t read_index_;$/;"	m	class:webrtc::intelligibility::DelayBuffer
read_only_	webrtc/base/stream.h	/^  bool read_only_;$/;"	m	class:rtc::StringStream
read_pos	webrtc/common_audio/ring_buffer.h	/^  size_t read_pos;$/;"	m	struct:RingBuffer
read_pos_	webrtc/base/stream.h	/^  size_t read_pos_;$/;"	m	class:rtc::StringStream
readable_data_	webrtc/base/testutils.h	/^  Buffer readable_data_, written_data_;$/;"	m	class:testing::StreamSource
ready	webrtc/base/thread.h	/^  bool *ready;$/;"	m	struct:rtc::_SendMessage
ready_to_send	webrtc/base/testclient.h	/^  bool ready_to_send() const { return ready_to_send_count() > 0; }$/;"	f	class:rtc::TestClient
ready_to_send_	webrtc/base/asynctcpsocket_unittest.cc	/^  bool ready_to_send_;$/;"	m	class:rtc::AsyncTCPSocketTest	file:
ready_to_send_	webrtc/base/asyncudpsocket_unittest.cc	/^  bool ready_to_send_;$/;"	m	class:rtc::AsyncUdpSocketTest	file:
ready_to_send_	webrtc/base/virtualsocketserver.h	/^  bool ready_to_send_ = true;$/;"	m	class:rtc::VirtualSocket
ready_to_send_count	webrtc/base/testclient.h	/^  int ready_to_send_count() const { return ready_to_send_count_; }$/;"	f	class:rtc::TestClient
ready_to_send_count_	webrtc/base/testclient.h	/^  int ready_to_send_count_ = 0;$/;"	m	class:rtc::TestClient
real	webrtc/modules/audio_processing/aecm/aecm_core.h	/^    int16_t real;$/;"	m	struct:__anon163
real	webrtc/modules/audio_processing/ns/nsx_core.h	/^  int16_t                 real[ANAL_BLOCKL_MAX];$/;"	m	struct:NoiseSuppressionFixedC_
realFFT	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  int16_t realFFT[FRAMESAMPLES_HALF];$/;"	m	struct:__anon135
real_buf_	webrtc/common_audio/lapped_transform.h	/^  AlignedArray<float> real_buf_;$/;"	m	class:webrtc::LappedTransform
real_buffer_	webrtc/common_audio/real_fourier_unittest.cc	/^  const RealFourier::fft_real_scoper real_buffer_;$/;"	m	class:webrtc::RealFourierTest	file:
real_fft	webrtc/modules/audio_processing/aecm/aecm_core.h	/^    struct RealFFT* real_fft;$/;"	m	struct:__anon164	typeref:struct:__anon164::RealFFT
real_fft	webrtc/modules/audio_processing/ns/nsx_core.h	/^  struct RealFFT* real_fft;$/;"	m	struct:NoiseSuppressionFixedC_	typeref:struct:NoiseSuppressionFixedC_::RealFFT
real_gain_control_	webrtc/modules/audio_processing/gain_control_for_experimental_agc.h	/^  GainControl* real_gain_control_;$/;"	m	class:webrtc::GainControlForExperimentalAgc
rec_bw	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  int32_t  rec_bw;$/;"	m	struct:__anon131
rec_bw_avg	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  float   rec_bw_avg;$/;"	m	struct:__anon131
rec_bw_avg_Q	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  float   rec_bw_avg_Q;$/;"	m	struct:__anon131
rec_bw_inv	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  float   rec_bw_inv;$/;"	m	struct:__anon131
rec_header_rate	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  float   rec_header_rate;$/;"	m	struct:__anon131
rec_jitter	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  float   rec_jitter;$/;"	m	struct:__anon131
rec_jitter_short_term	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  float   rec_jitter_short_term;$/;"	m	struct:__anon131
rec_jitter_short_term_abs	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  float   rec_jitter_short_term_abs;$/;"	m	struct:__anon131
rec_max_delay	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  float   rec_max_delay;$/;"	m	struct:__anon131
rec_max_delay_avg_Q	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  float   rec_max_delay_avg_Q;$/;"	m	struct:__anon131
received_	webrtc/base/sslstreamadapter_unittest.cc	/^  std::set<int> received_;$/;"	m	class:SSLStreamAdapterTestDTLS	file:
received_signal_	webrtc/base/physicalsocketserver.cc	/^  volatile uint8_t received_signal_[kNumPosixSignals];$/;"	m	class:rtc::PosixSignalHandler	file:
receiverTimestamp	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  uint32_t                 receiverTimestamp;$/;"	m	struct:__anon131
recording_set_index_	webrtc/modules/audio_processing/logging/apm_data_dumper.h	/^  int recording_set_index_ = 0;$/;"	m	class:webrtc::ApmDataDumper
recurseDir	webrtc/modules/audio_processing/test/apmtest.m	/^function [nErrOut, nCases] = recurseDir(inpath, outpath, refpath, ...$/;"	f
recursion_	webrtc/base/criticalsection.h	/^  mutable int recursion_;$/;"	m	class:rtc::CriticalSection
recv	webrtc/base/httpbase.cc	/^HttpBase::recv(HttpData* data) {$/;"	f	class:rtc::HttpBase
recv_buffer_	webrtc/base/testutils.h	/^  Buffer send_buffer_, recv_buffer_;$/;"	m	class:testing::SocketTestClient
recv_buffer_	webrtc/base/virtualsocketserver.h	/^  RecvBuffer recv_buffer_;$/;"	m	class:rtc::VirtualSocket
recv_buffer_capacity	webrtc/base/virtualsocketserver.h	/^  uint32_t recv_buffer_capacity() const { return recv_buffer_capacity_; }$/;"	f	class:rtc::VirtualSocketServer
recv_buffer_capacity_	webrtc/base/virtualsocketserver.h	/^  uint32_t recv_buffer_capacity_;$/;"	m	class:rtc::VirtualSocketServer
recv_buffer_size_	webrtc/base/virtualsocketserver.h	/^  size_t recv_buffer_size_;$/;"	m	class:rtc::VirtualSocket
recv_stream_	webrtc/base/sslstreamadapter_unittest.cc	/^  rtc::MemoryStream recv_stream_;$/;"	m	class:SSLStreamAdapterTestTLS	file:
recycle_bin_	webrtc/base/socketpool.h	/^  StreamList recycle_bin_;$/;"	m	class:rtc::LoggingPoolAdapter
red_payload_type	webrtc/config.h	/^  int red_payload_type;$/;"	m	struct:webrtc::UlpfecConfig
red_render_signal_queue_	webrtc/modules/audio_processing/audio_processing_impl.h	/^      red_render_signal_queue_;$/;"	m	class:webrtc::AudioProcessingImpl
red_rtx_payload_type	webrtc/config.h	/^  int red_rtx_payload_type;$/;"	m	struct:webrtc::UlpfecConfig
redirect_action	webrtc/base/httpclient.h	/^  RedirectAction redirect_action() const { return redirect_action_; }$/;"	f	class:rtc::HttpClient
redirect_action_	webrtc/base/httpclient.h	/^  RedirectAction redirect_action_;$/;"	m	class:rtc::HttpClient
redirects_	webrtc/base/httpclient.h	/^  size_t retries_, attempt_, redirects_;$/;"	m	class:rtc::HttpClient
reemit	webrtc/base/sigslotrepeater.h	/^    void reemit() { signal0<mt_policy>::emit(); }$/;"	f	class:sigslot::repeater0
reemit	webrtc/base/sigslotrepeater.h	/^    void reemit(arg1_type a1) { signal1<arg1_type, mt_policy>::emit(a1); }$/;"	f	class:sigslot::repeater1
reemit	webrtc/base/sigslotrepeater.h	/^    void reemit(arg1_type a1, arg2_type a2) { signal2<arg1_type, arg2_type, mt_policy>::emit(a1,a2); }$/;"	f	class:sigslot::repeater2
reemit	webrtc/base/sigslotrepeater.h	/^    void reemit(arg1_type a1, arg2_type a2, arg3_type a3) {$/;"	f	class:sigslot::repeater3
ref_	webrtc/base/weak_ptr.h	/^  WeakReference ref_;$/;"	m	class:rtc::internal::WeakPtrBase
ref_count_	webrtc/base/bind_unittest.cc	/^  int ref_count_;$/;"	m	struct:rtc::__anon4::LifeTimeCheck	file:
ref_count_	webrtc/base/refcountedobject.h	/^  mutable volatile int ref_count_ = 0;$/;"	m	class:rtc::RefCountedObject
ref_count_	webrtc/base/stream.h	/^    int ref_count_;$/;"	m	class:rtc::StreamReference::StreamRefCount
ref_filename_	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^  const std::string ref_filename_;$/;"	m	class:webrtc::__anon183::ApmTest	file:
ref_path_	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^  const std::string ref_path_;$/;"	m	class:webrtc::__anon183::ApmTest	file:
ref_picture_id	webrtc/modules/include/module_common_types.h	/^  int16_t ref_picture_id[kMaxVp9RefPics];  \/\/ PictureID of reference pictures.$/;"	m	struct:webrtc::RTPVideoHeaderVP9
refcount_	webrtc/base/signalthread.h	/^  int refcount_;$/;"	m	class:rtc::SignalThread
reference_copied_	webrtc/modules/audio_processing/audio_buffer.h	/^  bool reference_copied_;$/;"	m	class:webrtc::AudioBuffer
reference_energy_	webrtc/modules/audio_processing/transient/transient_detector.h	/^  float reference_energy_;$/;"	m	class:webrtc::TransientDetector
refined_adaptive_filter_enabled	webrtc/modules/audio_processing/aec/aec_core.h	/^  bool refined_adaptive_filter_enabled;$/;"	m	struct:webrtc::AecCore
reg1	webrtc/system_wrappers/include/asm_defines.h	/^strheq \\reg1, \\reg2, \\num$/;"	v
reg2	webrtc/system_wrappers/include/asm_defines.h	/^.macro streqh reg1, reg2, num$/;"	v
reg2	webrtc/system_wrappers/include/asm_defines.h	/^strheq \\reg1, \\reg2, \\num$/;"	v
reheap	webrtc/base/messagequeue.h	/^    void reheap() { make_heap(c.begin(), c.end(), comp); }$/;"	f	class:rtc::MessageQueue::PriorityQueue
relative_change_limit_	webrtc/modules/audio_processing/intelligibility/intelligibility_utils.h	/^  const float relative_change_limit_;$/;"	m	class:webrtc::intelligibility::GainApplier
release	webrtc/base/httpclient.cc	/^void HttpClient::release() {$/;"	f	class:rtc::HttpClient
release	webrtc/base/linked_ptr.h	/^    void release()$/;"	f	class:rtc::linked_ptr
release	webrtc/base/scoped_ref_ptr.h	/^  T* release() {$/;"	f	class:rtc::scoped_refptr
remote_	webrtc/base/socketpool.h	/^  SocketAddress remote_;$/;"	m	class:rtc::ReuseSocketPool
remote_	webrtc/base/sslsocketfactory.cc	/^  SocketAddress remote_;$/;"	m	class:rtc::ProxySocketAdapter	file:
remote_addr_	webrtc/base/natsocketfactory.cc	/^  SocketAddress remote_addr_;$/;"	m	class:rtc::NATSocket	file:
remote_addr_	webrtc/base/virtualsocketserver.h	/^  SocketAddress remote_addr_;$/;"	m	class:rtc::VirtualSocket
remote_address	webrtc/base/testclient.h	/^  SocketAddress remote_address() const { return socket_->GetRemoteAddress(); }$/;"	f	class:rtc::TestClient
remote_network_id	webrtc/base/networkroute.h	/^  uint16_t remote_network_id;$/;"	m	struct:rtc::NetworkRoute
remove_reference	webrtc/base/template_util.h	/^struct remove_reference {$/;"	s	namespace:rtc
remove_reference	webrtc/base/template_util.h	/^struct remove_reference<T&&> {$/;"	s	namespace:rtc
remove_reference	webrtc/base/template_util.h	/^struct remove_reference<T&> {$/;"	s	namespace:rtc
render	webrtc/modules/audio_processing/audio_processing_impl.h	/^    ApmDebugDumpThreadState render;$/;"	m	struct:webrtc::AudioProcessingImpl::ApmDebugDumpState
render_api_function	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  RenderApiImpl render_api_function = RenderApiImpl::ProcessReverseStreamImpl2;$/;"	m	struct:webrtc::__anon181::TestConfig	file:
render_audio	webrtc/modules/audio_processing/audio_processing_impl.h	/^    std::unique_ptr<AudioBuffer> render_audio;$/;"	m	struct:webrtc::AudioProcessingImpl::ApmRenderState
render_buffer_	webrtc/modules/audio_processing/residual_echo_detector.h	/^  CircularBuffer render_buffer_;$/;"	m	class:webrtc::ResidualEchoDetector
render_call_event_	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  rtc::Event render_call_event_;$/;"	m	class:webrtc::__anon181::AudioProcessingImplLockTest	file:
render_call_event_	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  rtc::Event* const render_call_event_ = nullptr;$/;"	m	class:webrtc::__anon181::CaptureProcessor::rtc	file:
render_call_event_	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  rtc::Event* const render_call_event_ = nullptr;$/;"	m	class:webrtc::__anon181::RenderProcessor::rtc	file:
render_converter	webrtc/modules/audio_processing/audio_processing_impl.h	/^    std::unique_ptr<AudioConverter> render_converter;$/;"	m	struct:webrtc::AudioProcessingImpl::ApmRenderState
render_count_	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^  int render_count_ = 0;$/;"	m	class:webrtc::__anon182::FrameCounters	file:
render_filter_bank_	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer.h	/^  std::vector<std::vector<float>> render_filter_bank_;$/;"	m	class:webrtc::IntelligibilityEnhancer
render_input	webrtc/modules/audio_processing/level_controller/level_controller_complexity_unittest.cc	/^  std::vector<float*> render_input;$/;"	m	struct:webrtc::__anon209::SimulatorBuffers	file:
render_input_buffer	webrtc/modules/audio_processing/level_controller/level_controller_complexity_unittest.cc	/^  std::unique_ptr<AudioBuffer> render_input_buffer;$/;"	m	struct:webrtc::__anon209::SimulatorBuffers	file:
render_input_config	webrtc/modules/audio_processing/level_controller/level_controller_complexity_unittest.cc	/^  StreamConfig render_input_config;$/;"	m	struct:webrtc::__anon209::SimulatorBuffers	file:
render_input_samples	webrtc/modules/audio_processing/level_controller/level_controller_complexity_unittest.cc	/^  std::vector<float> render_input_samples;$/;"	m	struct:webrtc::__anon209::SimulatorBuffers	file:
render_mangler_	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer.h	/^  std::unique_ptr<LappedTransform> render_mangler_;$/;"	m	class:webrtc::IntelligibilityEnhancer
render_output	webrtc/modules/audio_processing/level_controller/level_controller_complexity_unittest.cc	/^  std::vector<float*> render_output;$/;"	m	struct:webrtc::__anon209::SimulatorBuffers	file:
render_output_buffer	webrtc/modules/audio_processing/level_controller/level_controller_complexity_unittest.cc	/^  std::unique_ptr<AudioBuffer> render_output_buffer;$/;"	m	struct:webrtc::__anon209::SimulatorBuffers	file:
render_output_config	webrtc/modules/audio_processing/level_controller/level_controller_complexity_unittest.cc	/^  StreamConfig render_output_config;$/;"	m	struct:webrtc::__anon209::SimulatorBuffers	file:
render_output_samples	webrtc/modules/audio_processing/level_controller/level_controller_complexity_unittest.cc	/^  std::vector<float> render_output_samples;$/;"	m	struct:webrtc::__anon209::SimulatorBuffers	file:
render_power_	webrtc/modules/audio_processing/residual_echo_detector.h	/^  std::vector<float> render_power_;$/;"	m	class:webrtc::ResidualEchoDetector
render_power_mean_	webrtc/modules/audio_processing/residual_echo_detector.h	/^  std::vector<float> render_power_mean_;$/;"	m	class:webrtc::ResidualEchoDetector
render_power_std_dev_	webrtc/modules/audio_processing/residual_echo_detector.h	/^  std::vector<float> render_power_std_dev_;$/;"	m	class:webrtc::ResidualEchoDetector
render_processing_format	webrtc/modules/audio_processing/audio_processing_impl.h	/^    StreamConfig render_processing_format;$/;"	m	struct:webrtc::AudioProcessingImpl::ApmFormatState
render_statistics_	webrtc/modules/audio_processing/residual_echo_detector.h	/^  MeanVarianceEstimator render_statistics_;$/;"	m	class:webrtc::ResidualEchoDetector
render_thread_	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  rtc::PlatformThread render_thread_;$/;"	m	class:webrtc::__anon181::AudioProcessingImplLockTest	file:
render_thread_	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^  std::unique_ptr<rtc::PlatformThread> render_thread_;$/;"	m	class:webrtc::__anon182::CallSimulator	file:
render_thread_state_	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  RenderProcessor render_thread_state_;$/;"	m	class:webrtc::__anon181::AudioProcessingImplLockTest	file:
render_thread_state_	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^  std::unique_ptr<TimedThreadApiProcessor> render_thread_state_;$/;"	m	class:webrtc::__anon182::CallSimulator	file:
repeat	webrtc/base/sigslotrepeater.h	/^    void repeat(base_type &s) { s.connect(this, &this_type::reemit); }$/;"	f	class:sigslot::repeater0
repeat	webrtc/base/sigslotrepeater.h	/^    void repeat(base_type& s) { s.connect(this, &this_type::reemit); }$/;"	f	class:sigslot::repeater1
repeat	webrtc/base/sigslotrepeater.h	/^    void repeat(base_type& s) { s.connect(this, &this_type::reemit); }$/;"	f	class:sigslot::repeater2
repeat	webrtc/base/sigslotrepeater.h	/^    void repeat(base_type& s) { s.connect(this, &this_type::reemit); }$/;"	f	class:sigslot::repeater3
repeater0	webrtc/base/sigslotrepeater.h	/^    repeater0() { }$/;"	f	class:sigslot::repeater0
repeater0	webrtc/base/sigslotrepeater.h	/^    repeater0(const this_type& s) : base_type(s) { }$/;"	f	class:sigslot::repeater0
repeater0	webrtc/base/sigslotrepeater.h	/^  class repeater0 : public signal0<mt_policy>,$/;"	c	namespace:sigslot
repeater1	webrtc/base/sigslotrepeater.h	/^    repeater1() { }$/;"	f	class:sigslot::repeater1
repeater1	webrtc/base/sigslotrepeater.h	/^    repeater1(const this_type& s) : base_type(s) { }$/;"	f	class:sigslot::repeater1
repeater1	webrtc/base/sigslotrepeater.h	/^  class repeater1 : public signal1<arg1_type, mt_policy>,$/;"	c	namespace:sigslot
repeater2	webrtc/base/sigslotrepeater.h	/^    repeater2() { }$/;"	f	class:sigslot::repeater2
repeater2	webrtc/base/sigslotrepeater.h	/^    repeater2(const this_type& s) : base_type(s) { }$/;"	f	class:sigslot::repeater2
repeater2	webrtc/base/sigslotrepeater.h	/^  class repeater2 : public signal2<arg1_type, arg2_type, mt_policy>,$/;"	c	namespace:sigslot
repeater3	webrtc/base/sigslotrepeater.h	/^    repeater3() { }$/;"	f	class:sigslot::repeater3
repeater3	webrtc/base/sigslotrepeater.h	/^    repeater3(const this_type& s) : base_type(s) { }$/;"	f	class:sigslot::repeater3
repeater3	webrtc/base/sigslotrepeater.h	/^  class repeater3 : public signal3<arg1_type, arg2_type, arg3_type, mt_policy>,$/;"	c	namespace:sigslot
repeats_	webrtc/base/criticalsection_unittest.cc	/^  int repeats_ = 0;$/;"	m	class:rtc::PerfTestThread	file:
replace_substrs	webrtc/base/stringutils.cc	/^void replace_substrs(const char *search,$/;"	f	namespace:rtc
reply_	webrtc/base/task_queue_libevent.cc	/^  std::unique_ptr<QueuedTask> reply_;$/;"	m	class:rtc::TaskQueue::PostAndReplyTask	file:
reply_	webrtc/base/winping.h	/^    char* reply_;$/;"	m	class:rtc::WinPing
report_bitexactness	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^  bool report_bitexactness = false;$/;"	m	struct:webrtc::test::SimulationSettings
report_detection_update_period_	webrtc/modules/audio_processing/typing_detection.h	/^  int report_detection_update_period_;$/;"	m	class:webrtc::TypingDetection
report_performance	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^  bool report_performance = false;$/;"	m	struct:webrtc::test::SimulationSettings
reporting_threshold_	webrtc/modules/audio_processing/typing_detection.h	/^  int reporting_threshold_;$/;"	m	class:webrtc::TypingDetection
request	webrtc/base/httpclient.h	/^  HttpRequestData& request() { return transaction_->request; }$/;"	f	class:rtc::HttpClient
request	webrtc/base/httpclient.h	/^  const HttpRequestData& request() const { return transaction_->request; }$/;"	f	class:rtc::HttpClient
request	webrtc/base/httpcommon.h	/^  HttpRequestData request;$/;"	m	struct:rtc::HttpTransaction
request	webrtc/base/httprequest.h	/^  HttpRequestData& request() { return client_.request(); }$/;"	f	class:rtc::HttpRequest
request_frames	webrtc/common_audio/resampler/sinc_resampler.h	/^  size_t request_frames() const { return request_frames_; }$/;"	f	class:webrtc::SincResampler
request_frames_	webrtc/common_audio/resampler/sinc_resampler.h	/^  const size_t request_frames_;$/;"	m	class:webrtc::SincResampler
request_retries	webrtc/base/httpclient.h	/^  size_t request_retries() const { return retries_; }$/;"	f	class:rtc::HttpClient
rerl	webrtc/modules/audio_processing/aec/aec_core.h	/^  Stats rerl;$/;"	m	struct:webrtc::AecCore
rerl	webrtc/modules/audio_processing/aec/echo_cancellation.h	/^  AecLevel rerl;$/;"	m	struct:webrtc::__anon161
resample	webrtc/modules/audio_processing/aec/echo_cancellation.h	/^  int resample;  \/\/ if the skew is small enough we don't resample$/;"	m	struct:webrtc::Aec
resampled_	webrtc/modules/audio_processing/vad/voice_activity_detector.h	/^  int16_t resampled_[kLength10Ms];$/;"	m	class:webrtc::VoiceActivityDetector
resampler	webrtc/modules/audio_processing/aec/echo_cancellation.h	/^  void* resampler;$/;"	m	struct:webrtc::Aec
resampler_	webrtc/common_audio/resampler/push_sinc_resampler.h	/^  std::unique_ptr<SincResampler> resampler_;$/;"	m	class:webrtc::PushSincResampler
resampler_	webrtc/modules/audio_processing/vad/voice_activity_detector.h	/^  Resampler resampler_;$/;"	m	class:webrtc::VoiceActivityDetector
resamplers_	webrtc/common_audio/audio_converter.cc	/^  std::vector<std::unique_ptr<PushSincResampler>> resamplers_;$/;"	m	class:webrtc::ResampleConverter	file:
reset	webrtc/base/httpbase.cc	/^HttpParser::reset() {$/;"	f	class:rtc::HttpParser
reset	webrtc/base/httpclient.cc	/^void HttpClient::reset() {$/;"	f	class:rtc::HttpClient
reset	webrtc/base/httprequest.h	/^  void reset() {$/;"	f	class:rtc::HttpMonitor
reset	webrtc/base/optional.h	/^  void reset() {$/;"	f	class:rtc::final
reset	webrtc/base/weak_ptr.h	/^  void reset() {$/;"	f	class:rtc::WeakPtr
resetFlag_8kHz	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  int16_t               resetFlag_8kHz;$/;"	m	struct:__anon144
residual_echo_detector	webrtc/modules/audio_processing/audio_processing_impl.cc	/^  std::unique_ptr<ResidualEchoDetector> residual_echo_detector;$/;"	m	struct:webrtc::AudioProcessingImpl::ApmPrivateSubmodules	file:
residual_echo_detector	webrtc/modules/audio_processing/include/audio_processing.h	/^    } residual_echo_detector;$/;"	m	struct:webrtc::AudioProcessing::Config	typeref:struct:webrtc::AudioProcessing::Config::ResidualEchoDetector
residual_echo_detector_enabled_	webrtc/modules/audio_processing/audio_processing_impl.h	/^    bool residual_echo_detector_enabled_ = false;$/;"	m	class:webrtc::AudioProcessingImpl::ApmSubmoduleStates
residual_echo_likelihood	webrtc/modules/audio_processing/include/audio_processing.h	/^    float residual_echo_likelihood = 0.0f;$/;"	m	struct:webrtc::AudioProcessing::AudioProcessingStatistics
residual_echo_return_loss	webrtc/modules/audio_processing/include/audio_processing.h	/^    AudioProcessing::Statistic residual_echo_return_loss;$/;"	m	struct:webrtc::EchoCancellation::Metrics
residual_echo_return_loss	webrtc/modules/audio_processing/include/audio_processing.h	/^    Stat residual_echo_return_loss;$/;"	m	struct:webrtc::AudioProcessing::AudioProcessingStatistics
resilience	webrtc/common_types.h	/^  VP8ResilienceMode resilience;$/;"	m	struct:webrtc::VideoCodecVP8
resilience	webrtc/common_types.h	/^  int resilience;$/;"	m	struct:webrtc::VideoCodecVP9
resolver_	webrtc/base/autodetectproxy.h	/^  AsyncResolverInterface* resolver_;$/;"	m	class:rtc::AutoDetectProxy
resolver_	webrtc/base/httpclient.h	/^  AsyncResolverInterface* resolver_;$/;"	m	class:rtc::HttpClient
resolver_	webrtc/base/physicalsocketserver.h	/^  AsyncResolver* resolver_;$/;"	m	class:rtc::PhysicalSocket
response	webrtc/base/httpclient.h	/^  HttpResponseData& response() { return transaction_->response; }$/;"	f	class:rtc::HttpClient
response	webrtc/base/httpclient.h	/^  const HttpResponseData& response() const { return transaction_->response; }$/;"	f	class:rtc::HttpClient
response	webrtc/base/httpcommon.h	/^  HttpResponseData response;$/;"	m	struct:rtc::HttpTransaction
response	webrtc/base/httprequest.h	/^  HttpResponseData& response() { return client_.response(); }$/;"	f	class:rtc::HttpRequest
response_redirect	webrtc/base/httprequest.h	/^  const std::string& response_redirect() { return response_redirect_; }$/;"	f	class:rtc::HttpRequest
response_redirect_	webrtc/base/httprequest.h	/^  std::string response_redirect_;$/;"	m	class:rtc::HttpRequest
restartable_	webrtc/base/openssladapter.h	/^  bool restartable_;$/;"	m	class:rtc::OpenSSLAdapter
result	webrtc/base/messagehandler.h	/^  const ReturnT& result() const { return result_; }$/;"	f	class:rtc::FunctorMessageHandler
result	webrtc/base/messagehandler.h	/^  std::unique_ptr<ReturnT> result() { return std::move(result_); }$/;"	f	class:rtc::FunctorMessageHandler
result	webrtc/base/messagehandler.h	/^  void result() const {}$/;"	f	class:rtc::FunctorMessageHandler
result_	webrtc/base/messagehandler.h	/^  ReturnT result_;$/;"	m	class:rtc::FunctorMessageHandler
result_	webrtc/base/messagehandler.h	/^  std::unique_ptr<ReturnT> result_;$/;"	m	class:rtc::FunctorMessageHandler
retransmitted	webrtc/common_types.h	/^  RtpPacketCounter retransmitted;  \/\/ Number of retransmitted packets\/bytes.$/;"	m	struct:webrtc::StreamDataCounters
retries_	webrtc/base/httpclient.h	/^  size_t retries_, attempt_, redirects_;$/;"	m	class:rtc::HttpClient
rev_frame_	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^  AudioFrame rev_frame_;$/;"	m	class:webrtc::test::AudioProcessingSimulator
reverse_	webrtc/modules/audio_processing/test/debug_dump_replayer.h	/^  std::unique_ptr<ChannelBuffer<float>> reverse_;$/;"	m	class:webrtc::test::DebugDumpReplayer
reverse_	webrtc/modules/audio_processing/test/debug_dump_test.cc	/^  std::unique_ptr<ChannelBuffer<float>> reverse_;$/;"	m	class:webrtc::test::__anon223::DebugDumpGenerator	file:
reverse_audio_	webrtc/modules/audio_processing/test/debug_dump_test.cc	/^  ResampleInputAudioFile reverse_audio_;$/;"	m	class:webrtc::test::__anon223::DebugDumpGenerator	file:
reverse_buffer_reader_	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^  std::unique_ptr<ChannelBufferWavReader> reverse_buffer_reader_;$/;"	m	class:webrtc::test::AudioProcessingSimulator
reverse_buffer_writer_	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^  std::unique_ptr<ChannelBufferWavWriter> reverse_buffer_writer_;$/;"	m	class:webrtc::test::AudioProcessingSimulator
reverse_config_	webrtc/modules/audio_processing/test/debug_dump_replayer.h	/^  StreamConfig reverse_config_;$/;"	m	class:webrtc::test::DebugDumpReplayer
reverse_config_	webrtc/modules/audio_processing/test/debug_dump_test.cc	/^  StreamConfig reverse_config_;$/;"	m	class:webrtc::test::__anon223::DebugDumpGenerator	file:
reverse_file_channels_	webrtc/modules/audio_processing/test/debug_dump_test.cc	/^  const int reverse_file_channels_;$/;"	m	class:webrtc::test::__anon223::DebugDumpGenerator	file:
reverse_file_name_	webrtc/modules/audio_processing/test/debug_dump_test.cc	/^  const std::string reverse_file_name_;$/;"	m	class:webrtc::test::__anon223::DebugDumpGenerator	file:
reverse_in_buf_	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^  std::unique_ptr<ChannelBuffer<float>> reverse_in_buf_;$/;"	m	class:webrtc::test::AudioProcessingSimulator
reverse_in_config_	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^  StreamConfig reverse_in_config_;$/;"	m	class:webrtc::test::AudioProcessingSimulator
reverse_input_filename	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^  rtc::Optional<std::string> reverse_input_filename;$/;"	m	struct:webrtc::test::SimulationSettings
reverse_input_rate_	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^  int reverse_input_rate_;$/;"	m	class:webrtc::__anon183::AudioProcessingTest	file:
reverse_input_stream	webrtc/modules/audio_processing/include/audio_processing.h	/^  StreamConfig& reverse_input_stream() {$/;"	f	class:webrtc::ProcessingConfig
reverse_input_stream	webrtc/modules/audio_processing/include/audio_processing.h	/^  const StreamConfig& reverse_input_stream() const {$/;"	f	class:webrtc::ProcessingConfig
reverse_order_f32x4	webrtc/modules/audio_processing/utility/ooura_fft_neon.cc	/^__inline static float32x4_t reverse_order_f32x4(float32x4_t in) {$/;"	f	namespace:webrtc
reverse_out_buf_	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^  std::unique_ptr<ChannelBuffer<float>> reverse_out_buf_;$/;"	m	class:webrtc::test::AudioProcessingSimulator
reverse_out_config_	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^  StreamConfig reverse_out_config_;$/;"	m	class:webrtc::test::AudioProcessingSimulator
reverse_output_filename	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^  rtc::Optional<std::string> reverse_output_filename;$/;"	m	struct:webrtc::test::SimulationSettings
reverse_output_num_channels	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^  rtc::Optional<int> reverse_output_num_channels;$/;"	m	struct:webrtc::test::SimulationSettings
reverse_output_rate_	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^  int reverse_output_rate_;$/;"	m	class:webrtc::__anon183::AudioProcessingTest	file:
reverse_output_sample_rate_hz	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^  rtc::Optional<int> reverse_output_sample_rate_hz;$/;"	m	struct:webrtc::test::SimulationSettings
reverse_output_stream	webrtc/modules/audio_processing/include/audio_processing.h	/^  StreamConfig& reverse_output_stream() {$/;"	f	class:webrtc::ProcessingConfig
reverse_output_stream	webrtc/modules/audio_processing/include/audio_processing.h	/^  const StreamConfig& reverse_output_stream() const {$/;"	f	class:webrtc::ProcessingConfig
revfloat_cb_	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^  std::unique_ptr<ChannelBuffer<float> > revfloat_cb_;$/;"	m	class:webrtc::__anon183::ApmTest	file:
revframe_	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^  AudioFrame* revframe_;$/;"	m	class:webrtc::__anon183::ApmTest	file:
rewrap_	webrtc/base/messagequeue_unittest.cc	/^  bool rewrap_;$/;"	m	struct:UnwrapMainThreadScope	file:
rf_	webrtc/common_audio/real_fourier_unittest.cc	/^  T rf_;$/;"	m	class:webrtc::RealFourierTest	file:
rfc_name	webrtc/base/opensslstreamadapter.cc	/^  const char* rfc_name;$/;"	m	struct:rtc::SslCipherMapEntry	file:
rftbsub	webrtc/common_audio/fft4g.c	/^static void rftbsub(size_t n, float *a, size_t nc, float *c)$/;"	f	file:
rftbsub_128	webrtc/modules/audio_processing/utility/ooura_fft.cc	/^void OouraFft::rftbsub_128(float* a) const {$/;"	f	class:webrtc::OouraFft
rftbsub_128_C	webrtc/modules/audio_processing/utility/ooura_fft.cc	/^static void rftbsub_128_C(float* a) {$/;"	f	namespace:webrtc::__anon240
rftbsub_128_SSE2	webrtc/modules/audio_processing/utility/ooura_fft_sse2.cc	/^void rftbsub_128_SSE2(float* a) {$/;"	f	namespace:webrtc
rftbsub_128_mips	webrtc/modules/audio_processing/utility/ooura_fft_mips.cc	/^void rftbsub_128_mips(float* a) {$/;"	f	namespace:webrtc
rftbsub_128_neon	webrtc/modules/audio_processing/utility/ooura_fft_neon.cc	/^void rftbsub_128_neon(float* a) {$/;"	f	namespace:webrtc
rftfsub	webrtc/common_audio/fft4g.c	/^static void rftfsub(size_t n, float *a, size_t nc, float *c)$/;"	f	file:
rftfsub_128	webrtc/modules/audio_processing/utility/ooura_fft.cc	/^void OouraFft::rftfsub_128(float* a) const {$/;"	f	class:webrtc::OouraFft
rftfsub_128_C	webrtc/modules/audio_processing/utility/ooura_fft.cc	/^static void rftfsub_128_C(float* a) {$/;"	f	namespace:webrtc::__anon240
rftfsub_128_SSE2	webrtc/modules/audio_processing/utility/ooura_fft_sse2.cc	/^void rftfsub_128_SSE2(float* a) {$/;"	f	namespace:webrtc
rftfsub_128_mips	webrtc/modules/audio_processing/utility/ooura_fft_mips.cc	/^void rftfsub_128_mips(float* a) {$/;"	f	namespace:webrtc
rftfsub_128_neon	webrtc/modules/audio_processing/utility/ooura_fft_neon.cc	/^void rftfsub_128_neon(float* a) {$/;"	f	namespace:webrtc
riff	webrtc/common_audio/wav_header.cc	/^  } riff;$/;"	m	struct:webrtc::__anon112::WavHeader	typeref:struct:webrtc::__anon112::WavHeader::__anon113	file:
rlen_	webrtc/base/winping.h	/^    uint32_t rlen_;$/;"	m	class:rtc::WinPing
rms	webrtc/modules/audio_processing/agc/loudness_histogram_unittest.cc	/^  double rms;$/;"	m	struct:webrtc::InputOutput	file:
rms	webrtc/modules/audio_processing/vad/common.h	/^  double rms[kMaxNumFrames];$/;"	m	struct:AudioFeatures
rms_error_	webrtc/common_audio/resampler/push_sinc_resampler_unittest.cc	/^  double rms_error_;$/;"	m	class:webrtc::PushSincResamplerTest	file:
rms_error_	webrtc/common_audio/resampler/sinc_resampler_unittest.cc	/^  double rms_error_;$/;"	m	class:webrtc::SincResamplerTest	file:
robust_validation_enabled	webrtc/modules/audio_processing/utility/delay_estimator.h	/^  int robust_validation_enabled;$/;"	m	struct:__anon228
rol	webrtc/base/sha1.cc	/^#define rol(/;"	d	file:
role_	webrtc/base/opensslstreamadapter.h	/^  SSLRole role_;$/;"	m	class:rtc::OpenSSLStreamAdapter
rollback_	webrtc/base/diskcache.h	/^  bool rollback_, locked_;$/;"	m	class:rtc::CacheLock
rotation	webrtc/modules/include/module_common_types.h	/^  VideoRotation rotation;$/;"	m	struct:webrtc::RTPVideoHeader
rotation_index_	webrtc/base/filerotatingstream.h	/^  size_t rotation_index_;$/;"	m	class:rtc::FileRotatingStream
roundTripDelay	webrtc/modules/include/module_common_types.h	/^  uint16_t roundTripDelay;$/;"	m	struct:webrtc::RTCPVoIPMetric
route	webrtc/base/natserver.h	/^    SocketAddressPair route;$/;"	m	struct:rtc::NATServer::TransEntry
routing_mode	webrtc/modules/audio_processing/echo_control_mobile_impl.cc	/^EchoControlMobile::RoutingMode EchoControlMobileImpl::routing_mode()$/;"	f	class:webrtc::EchoControlMobileImpl
rows	webrtc/system_wrappers/include/aligned_array.h	/^  size_t rows() const {$/;"	f	class:webrtc::AlignedArray
rows_	webrtc/system_wrappers/include/aligned_array.h	/^  size_t rows_;$/;"	m	class:webrtc::AlignedArray
rpsiws_	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.h	/^  std::vector<float> rpsiws_[kNumFreqBins];$/;"	m	class:webrtc::NonlinearBeamformer
rs_	webrtc/common_audio/resampler/resampler_unittest.cc	/^  Resampler rs_;$/;"	m	class:webrtc::__anon86::ResamplerTest	file:
rsa	webrtc/base/sslidentity.h	/^    RSAParams rsa;$/;"	m	union:rtc::KeyParams::__anon60
rsa_params	webrtc/base/sslidentity.cc	/^RSAParams KeyParams::rsa_params() const {$/;"	f	class:rtc::KeyParams
rtc	webrtc/base/array_view.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/array_view_unittest.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/asyncfile.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/asyncfile.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/asyncinvoker-inl.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/asyncinvoker.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/asyncinvoker.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/asyncpacketsocket.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/asyncpacketsocket.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/asyncresolverinterface.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/asyncresolverinterface.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/asyncsocket.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/asyncsocket.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/asynctcpsocket.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/asynctcpsocket.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/asynctcpsocket_unittest.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/asyncudpsocket.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/asyncudpsocket.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/asyncudpsocket_unittest.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/atomicops.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/autodetectproxy.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/autodetectproxy.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/autodetectproxy_unittest.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/base64.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/base64.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/basictypes_unittest.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/bind.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/bind_unittest.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/bitbuffer.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/bitbuffer.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/bitbuffer_unittest.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/buffer.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/buffer_unittest.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/bufferqueue.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/bufferqueue.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/bufferqueue_unittest.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/bytebuffer.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/bytebuffer.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/bytebuffer_unittest.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/byteorder.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/byteorder_unittest.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/callback.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/callback_unittest.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/checks.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/checks.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/common.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/common.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/copyonwritebuffer.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/copyonwritebuffer.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/copyonwritebuffer_unittest.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/crc32.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/crc32.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/crc32_unittest.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/criticalsection.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/criticalsection.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/criticalsection_unittest.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/cryptstring.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/cryptstring.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/dbus.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/dbus.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/dbus_unittest.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/diskcache.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/diskcache.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/diskcache_win32.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/diskcache_win32.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/dscp.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/event.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/event.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/event_tracer.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/event_tracer.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/event_unittest.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/exp_filter.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/exp_filter.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/exp_filter_unittest.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/fakeclock.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/fakeclock.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/fakenetwork.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/fakesslidentity.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/faketaskrunner.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/file.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/file.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/file_posix.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/file_unittest.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/file_win.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/filerotatingstream.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/filerotatingstream.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/filerotatingstream_unittest.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/fileutils.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/fileutils.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/fileutils_mock.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/fileutils_unittest.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/firewallsocketserver.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/firewallsocketserver.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/flags.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/flags.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/function_view.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/function_view_unittest.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/helpers.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/helpers.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/helpers_unittest.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/httpbase.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/httpbase.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/httpbase_unittest.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/httpclient.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/httpclient.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/httpcommon-inl.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/httpcommon.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/httpcommon.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/httpcommon_unittest.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/httprequest.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/httpserver.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/httpserver.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/httpserver_unittest.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/ifaddrs-android.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/ifaddrs-android.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/ifaddrs_converter.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/ifaddrs_converter.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/ipaddress.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/ipaddress.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/ipaddress_unittest.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/json.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/json.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/json_unittest.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/keep_ref_until_done.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/latebindingsymboltable.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/latebindingsymboltable.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/latebindingsymboltable_unittest.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/libdbusglibsymboltable.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/libdbusglibsymboltable.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/linked_ptr.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/linux.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/linux.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/linux_unittest.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/location.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/location.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/logging.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/logging.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/logging_unittest.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/logsinks.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/logsinks.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/maccocoathreadhelper.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/macifaddrs_converter.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/macutils.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/macutils.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/macwindowpicker.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/macwindowpicker.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/macwindowpicker_unittest.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/md5.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/md5.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/md5digest.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/md5digest.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/md5digest_unittest.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/messagedigest.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/messagedigest.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/messagedigest_unittest.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/messagehandler.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/messagehandler.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/messagequeue.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/messagequeue.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/natserver.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/natserver.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/natsocketfactory.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/natsocketfactory.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/nattypes.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/nattypes.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/nethelpers.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/nethelpers.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/network.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/network.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/network_unittest.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/networkmonitor.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/networkmonitor.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/networkroute.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/nullsocketserver.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/nullsocketserver.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/nullsocketserver_unittest.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/openssladapter.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/openssladapter.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/openssldigest.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/openssldigest.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/opensslidentity.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/opensslidentity.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/opensslstreamadapter.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/opensslstreamadapter.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/optional.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/optional.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/optional_unittest.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/optionsfile.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/optionsfile.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/optionsfile_unittest.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/pathutils.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/pathutils.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/physicalsocketserver.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/physicalsocketserver.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/physicalsocketserver_unittest.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/platform_file.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/platform_file.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/platform_thread.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/platform_thread.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/platform_thread_types.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/platform_thread_unittest.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/proxydetect.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/proxydetect.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/proxydetect_unittest.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/proxyinfo.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/proxyinfo.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/proxyserver.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/proxyserver.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/race_checker.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/race_checker.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/ratelimiter.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/ratelimiter.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/ratelimiter_unittest.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/ratetracker.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/ratetracker.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/ratetracker_unittest.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/refcount.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/refcountedobject.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/refcountedobject_unittest.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/rollingaccumulator.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/rollingaccumulator_unittest.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/rtccertificate.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/rtccertificate.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/rtccertificate_unittest.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/rtccertificategenerator.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/rtccertificategenerator.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/rtccertificategenerator_unittest.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/safe_conversions.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/safe_conversions_impl.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/sanitizer.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/scoped_autorelease_pool.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/scoped_ref_ptr.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/scopedptrcollection.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/scopedptrcollection_unittest.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/sequenced_task_checker.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/sequenced_task_checker_impl.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/sequenced_task_checker_impl.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/sequenced_task_checker_unittest.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/sha1.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/sha1.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/sha1digest.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/sha1digest.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/sha1digest_unittest.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/sharedexclusivelock.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/sharedexclusivelock.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/sharedexclusivelock_unittest.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/signalthread.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/signalthread.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/sigslottester.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/sigslottester_unittest.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/socket.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/socket_unittest.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/socket_unittest.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/socketadapters.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/socketadapters.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/socketaddress.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/socketaddress.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/socketaddress_unittest.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/socketaddresspair.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/socketaddresspair.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/socketfactory.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/socketpool.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/socketpool.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/socketserver.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/socketstream.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/socketstream.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/ssladapter.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/ssladapter.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/sslfingerprint.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/sslfingerprint.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/sslidentity.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/sslidentity.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/sslsocketfactory.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/sslsocketfactory.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/sslstreamadapter.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/sslstreamadapter.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/stream.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/stream.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/stream_unittest.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/stringencode.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/stringencode.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/stringencode_unittest.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/stringutils.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/stringutils.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/stringutils_unittest.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/systeminfo.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/systeminfo.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/task.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/task.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/task_queue.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/task_queue_gcd.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/task_queue_libevent.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/task_queue_posix.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/task_queue_posix.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/task_queue_unittest.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/task_queue_win.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/task_unittest.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/taskparent.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/taskparent.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/taskrunner.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/taskrunner.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/template_util.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/testclient.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/testclient.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/testechoserver.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/thread.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/thread.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/thread_checker.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/thread_checker_impl.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/thread_checker_impl.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/thread_checker_unittest.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/timedelta.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/timestampaligner.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/timestampaligner.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/timestampaligner_unittest.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/timeutils.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/timeutils.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/timeutils_unittest.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/transformadapter.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/transformadapter.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/type_traits.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/unixfilesystem.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/unixfilesystem.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/urlencode.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/urlencode.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/virtualsocketserver.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/virtualsocketserver.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/weak_ptr.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/weak_ptr.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/weak_ptr_unittest.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/win32.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/win32.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/win32_unittest.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/win32filesystem.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/win32filesystem.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/win32regkey.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/win32regkey.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/win32regkey_unittest.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/win32securityerrors.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/win32socketinit.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/win32socketinit.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/win32socketserver.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/win32socketserver.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/win32socketserver_unittest.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/win32window.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/win32window.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/win32windowpicker.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/win32windowpicker.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/win32windowpicker_unittest.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/window.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/windowpicker.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/windowpickerfactory.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/winping.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/winping.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/x11windowpicker.cc	/^namespace rtc {$/;"	n	file:
rtc	webrtc/base/x11windowpicker.h	/^namespace rtc {$/;"	n
rtc	webrtc/base/x11windowpicker_unittest.cc	/^namespace rtc {$/;"	n	file:
rtc_AsanPoison	webrtc/base/sanitizer.h	/^static inline void rtc_AsanPoison(const volatile void* ptr,$/;"	f
rtc_AsanUnpoison	webrtc/base/sanitizer.h	/^static inline void rtc_AsanUnpoison(const volatile void* ptr,$/;"	f
rtc_FatalMessage	webrtc/base/checks.cc	/^NO_RETURN void rtc_FatalMessage(const char* file, int line, const char* msg) {$/;"	f
rtc_MsanCheckInitialized	webrtc/base/sanitizer.h	/^static inline void rtc_MsanCheckInitialized(const volatile void* ptr,$/;"	f
rtc_MsanMarkUninitialized	webrtc/base/sanitizer.h	/^static inline void rtc_MsanMarkUninitialized(const volatile void* ptr,$/;"	f
rtc_WavClose	webrtc/common_audio/wav_file.cc	/^void rtc_WavClose(rtc_WavWriter* wf) {$/;"	f
rtc_WavNumChannels	webrtc/common_audio/wav_file.cc	/^size_t rtc_WavNumChannels(const rtc_WavWriter* wf) {$/;"	f
rtc_WavNumSamples	webrtc/common_audio/wav_file.cc	/^size_t rtc_WavNumSamples(const rtc_WavWriter* wf) {$/;"	f
rtc_WavOpen	webrtc/common_audio/wav_file.cc	/^rtc_WavWriter* rtc_WavOpen(const char* filename,$/;"	f
rtc_WavSampleRate	webrtc/common_audio/wav_file.cc	/^int rtc_WavSampleRate(const rtc_WavWriter* wf) {$/;"	f
rtc_WavWriteSamples	webrtc/common_audio/wav_file.cc	/^void rtc_WavWriteSamples(rtc_WavWriter* wf,$/;"	f
rtc_WavWriter	webrtc/common_audio/wav_file.h	/^typedef struct rtc_WavWriter rtc_WavWriter;$/;"	t	typeref:struct:rtc_WavWriter
rtl_gen_random_	webrtc/base/helpers.cc	/^  RtlGenRandomProc rtl_gen_random_;$/;"	m	class:rtc::SecureRandomGenerator	file:
rtp_history_ms	webrtc/config.h	/^  int rtp_history_ms;$/;"	m	struct:webrtc::NackConfig
rtp_sendtime_extension_id	webrtc/base/asyncpacketsocket.h	/^  int rtp_sendtime_extension_id;    \/\/ extension header id present in packet.$/;"	m	struct:rtc::PacketTimeUpdateParams
rtp_timestamp	webrtc/system_wrappers/include/rtp_to_ntp.h	/^  uint32_t rtp_timestamp;$/;"	m	struct:webrtc::RtcpMeasurement
rules_	webrtc/base/firewallsocketserver.h	/^  std::vector<Rule> rules_;$/;"	m	class:rtc::FirewallSocketServer
run	webrtc/base/java/src/org/webrtc/ThreadUtils.java	/^  public interface BlockingOperation { void run() throws InterruptedException; }$/;"	m	interface:ThreadUtils.BlockingOperation
run_function_	webrtc/base/platform_thread.h	/^  ThreadRunFunction const run_function_;$/;"	m	class:rtc::PlatformThread
runnable	webrtc/base/thread.cc	/^  Runnable* runnable;$/;"	m	struct:rtc::ThreadInit	file:
runner_	webrtc/base/taskparent.h	/^  TaskRunner *runner_;$/;"	m	class:rtc::TaskParent
running	webrtc/base/thread.h	/^  bool running() { return running_.Wait(0); }$/;"	f	class:rtc::Thread
running_	webrtc/base/thread.h	/^  Event running_;  \/\/ Signalled means running.$/;"	m	class:rtc::Thread
runtime_parameter_setting_scheme	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  RuntimeParameterSettingScheme runtime_parameter_setting_scheme =$/;"	m	struct:webrtc::__anon181::TestConfig	file:
rw_lock_	webrtc/system_wrappers/include/rw_lock_wrapper.h	/^  RWLockWrapper& rw_lock_;$/;"	m	class:webrtc::ReadLockScoped
rw_lock_	webrtc/system_wrappers/include/rw_lock_wrapper.h	/^  RWLockWrapper& rw_lock_;$/;"	m	class:webrtc::WriteLockScoped
rw_wrap	webrtc/common_audio/ring_buffer.h	/^  enum Wrap rw_wrap;$/;"	m	struct:RingBuffer	typeref:enum:RingBuffer::Wrap
rxiws_	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.h	/^  float rxiws_[kNumFreqBins];$/;"	m	class:webrtc::NonlinearBeamformer
s	webrtc/base/flags.h	/^  const char* s;$/;"	m	union:rtc::FlagValue
s	webrtc/modules/audio_processing/beamformer/array_util.h	/^  T s[3];$/;"	m	struct:webrtc::SphericalPoint
s2nr	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  double              s2nr;$/;"	m	struct:__anon136
s_	webrtc/base/physicalsocketserver.h	/^  SOCKET s_;$/;"	m	class:rtc::PhysicalSocket
s_transform	webrtc/base/stringencode.cc	/^std::string s_transform(const std::string& source, Transform t) {$/;"	f	namespace:rtc
s_url_decode	webrtc/base/stringencode.h	/^inline std::string s_url_decode(const std::string& source) {$/;"	f	namespace:rtc
s_url_encode	webrtc/base/stringencode.h	/^inline std::string s_url_encode(const std::string& source) {$/;"	f	namespace:rtc
s_wm_wakeup_id	webrtc/base/win32socketserver.cc	/^static UINT s_wm_wakeup_id = 0;$/;"	m	namespace:rtc	file:
sampFactor	webrtc/modules/audio_processing/aec/echo_cancellation.h	/^  float sampFactor;  \/\/ scSampRate \/ sampFreq$/;"	m	struct:webrtc::Aec
sampFreq	webrtc/modules/audio_processing/aec/aec_core.h	/^  int sampFreq = 16000;$/;"	m	struct:webrtc::AecCore
sampFreq	webrtc/modules/audio_processing/aec/echo_cancellation.h	/^  int sampFreq;$/;"	m	struct:webrtc::Aec
sampFreq	webrtc/modules/audio_processing/aecm/echo_control_mobile.cc	/^    int sampFreq;$/;"	m	struct:__anon165	file:
sampMsNb	webrtc/modules/audio_processing/aec/echo_cancellation.cc	/^static const int sampMsNb = 8;           \/\/ samples per ms in nb$/;"	m	namespace:webrtc	file:
sample_buckets_	webrtc/base/ratetracker.h	/^  size_t* sample_buckets_;$/;"	m	class:rtc::RateTracker
sample_count_	webrtc/modules/audio_processing/rms_level.h	/^  size_t sample_count_;$/;"	m	class:webrtc::RMSLevel
sample_rate	webrtc/common_audio/wav_file.cc	/^int WavReader::sample_rate() const {$/;"	f	class:webrtc::WavReader
sample_rate	webrtc/common_audio/wav_file.cc	/^int WavWriter::sample_rate() const {$/;"	f	class:webrtc::WavWriter
sample_rate_	webrtc/common_audio/resampler/sinusoidal_linear_chirp_source.h	/^  int sample_rate_;$/;"	m	class:webrtc::SinusoidalLinearChirpSource
sample_rate_	webrtc/common_audio/wav_file.h	/^  const int sample_rate_;$/;"	m	class:webrtc::final
sample_rate_	webrtc/common_audio/wav_file.h	/^  int sample_rate_;$/;"	m	class:webrtc::final
sample_rate_hz	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^  int sample_rate_hz = 16000;$/;"	m	struct:webrtc::__anon182::SimulationConfig	file:
sample_rate_hz	webrtc/modules/audio_processing/echo_cancellation_impl.cc	/^  const int sample_rate_hz;$/;"	m	struct:webrtc::EchoCancellationImpl::StreamProperties	file:
sample_rate_hz	webrtc/modules/audio_processing/echo_control_mobile_impl.cc	/^  int sample_rate_hz;$/;"	m	struct:webrtc::EchoControlMobileImpl::StreamProperties	file:
sample_rate_hz	webrtc/modules/audio_processing/include/audio_processing.h	/^  int sample_rate_hz() const { return sample_rate_hz_; }$/;"	f	class:webrtc::StreamConfig
sample_rate_hz_	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.h	/^  int sample_rate_hz_;$/;"	m	class:webrtc::NonlinearBeamformer
sample_rate_hz_	webrtc/modules/audio_processing/include/audio_processing.h	/^  int sample_rate_hz_;$/;"	m	class:webrtc::StreamConfig
sample_rate_hz_	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer.h	/^  const int sample_rate_hz_;$/;"	m	class:webrtc::IntelligibilityEnhancer
sample_rate_hz_	webrtc/modules/audio_processing/level_controller/down_sampler.h	/^  int sample_rate_hz_;$/;"	m	class:webrtc::DownSampler
sample_rate_hz_	webrtc/modules/audio_processing/level_controller/level_controller.h	/^  rtc::Optional<int> sample_rate_hz_;$/;"	m	class:webrtc::LevelController
sample_rate_hz_	webrtc/modules/audio_processing/level_controller/signal_classifier.h	/^  int sample_rate_hz_;$/;"	m	class:webrtc::SignalClassifier
sample_rate_hz_	webrtc/modules/include/module_common_types.h	/^  int sample_rate_hz_;$/;"	m	class:webrtc::AudioFrame
sample_rate_hz_dummy	webrtc/modules/audio_processing/transient/transient_suppression_test.cc	/^static const bool sample_rate_hz_dummy =$/;"	v	file:
samples	webrtc/base/rate_statistics.h	/^    size_t samples;  \/\/ Number of samples in this bucket.$/;"	m	struct:webrtc::RateStatistics::Bucket
samples	webrtc/base/virtualsocket_unittest.cc	/^  uint32_t samples;$/;"	m	struct:Receiver	file:
samples	webrtc/system_wrappers/include/metrics_default.h	/^  std::map<int, int> samples;  \/\/ <value, # of events>$/;"	m	struct:webrtc::metrics::SampleInfo
samples_	webrtc/base/rollingaccumulator.h	/^  std::vector<T> samples_;$/;"	m	class:rtc::RollingAccumulator
samples_per_channel_	webrtc/modules/include/module_common_types.h	/^  size_t samples_per_channel_;$/;"	m	class:webrtc::AudioFrame
samples_per_chunk_	webrtc/modules/audio_processing/transient/transient_detector.h	/^  size_t samples_per_chunk_;$/;"	m	class:webrtc::TransientDetector
samples_per_frame_	webrtc/modules/audio_processing/aec/system_delay_unittest.cc	/^  size_t samples_per_frame_;$/;"	m	class:webrtc::__anon162::SystemDelayTest	file:
saturated_cast	webrtc/base/safe_conversions.h	/^inline Dst saturated_cast(Src value) {$/;"	f	namespace:rtc
saturating_gain_	webrtc/modules/audio_processing/level_controller/saturating_gain_estimator.h	/^  float saturating_gain_;$/;"	m	class:webrtc::SaturatingGainEstimator
saturating_gain_estimator_	webrtc/modules/audio_processing/level_controller/level_controller.h	/^  SaturatingGainEstimator saturating_gain_estimator_;$/;"	m	class:webrtc::LevelController
saturating_gain_hold_counter_	webrtc/modules/audio_processing/level_controller/saturating_gain_estimator.h	/^  int saturating_gain_hold_counter_;$/;"	m	class:webrtc::SaturatingGainEstimator
saved_state	webrtc/modules/audio_processing/test/android/apmtest/jni/main.c	/^struct saved_state {$/;"	s	file:
scSampFreq	webrtc/modules/audio_processing/aec/echo_cancellation.h	/^  int scSampFreq;$/;"	m	struct:webrtc::Aec
scSampFreq	webrtc/modules/audio_processing/aecm/echo_control_mobile.cc	/^    int scSampFreq;$/;"	m	struct:__anon165	file:
scale	webrtc/modules/audio_processing/agc/legacy/analog_agc.h	/^  int16_t scale;  \/\/ Scale factor for internal volume levels$/;"	m	struct:__anon171
scaleEnergyIn	webrtc/modules/audio_processing/ns/nsx_core.h	/^  int                     scaleEnergyIn;$/;"	m	struct:NoiseSuppressionFixedC_
scale_	webrtc/base/rate_statistics.h	/^  const float scale_;$/;"	m	class:webrtc::RateStatistics
scaling_factor_den	webrtc/common_types.h	/^  int scaling_factor_den;$/;"	m	struct:webrtc::SpatialLayer
scaling_factor_num	webrtc/common_types.h	/^  int scaling_factor_num;$/;"	m	struct:webrtc::SpatialLayer
scode	webrtc/base/httpcommon.h	/^  uint32_t scode;$/;"	m	struct:rtc::HttpResponseData
scope_	webrtc/base/physicalsocketserver_unittest.cc	/^  SocketServerScope scope_;$/;"	m	class:rtc::PhysicalSocketTest	file:
scope_	webrtc/base/win32socketserver_unittest.cc	/^  SocketServerScope scope_;$/;"	m	class:rtc::Win32SocketTest	file:
scope_id	webrtc/base/network.h	/^  int scope_id() const { return scope_id_; }$/;"	f	class:rtc::Network
scope_id	webrtc/base/socketaddress.h	/^  int scope_id() const {return scope_id_; }$/;"	f	class:rtc::SocketAddress
scope_id_	webrtc/base/network.h	/^  int scope_id_;$/;"	m	class:rtc::Network
scope_id_	webrtc/base/socketaddress.h	/^  int scope_id_;$/;"	m	class:rtc::SocketAddress
scoped_refptr	webrtc/base/scoped_ref_ptr.h	/^  scoped_refptr() : ptr_(NULL) {$/;"	f	class:rtc::scoped_refptr
scoped_refptr	webrtc/base/scoped_ref_ptr.h	/^  scoped_refptr(T* p) : ptr_(p) {$/;"	f	class:rtc::scoped_refptr
scoped_refptr	webrtc/base/scoped_ref_ptr.h	/^  scoped_refptr(const scoped_refptr<T>& r) : ptr_(r.ptr_) {$/;"	f	class:rtc::scoped_refptr
scoped_refptr	webrtc/base/scoped_ref_ptr.h	/^  scoped_refptr(const scoped_refptr<U>& r) : ptr_(r.get()) {$/;"	f	class:rtc::scoped_refptr
scoped_refptr	webrtc/base/scoped_ref_ptr.h	/^  scoped_refptr(scoped_refptr<T>&& r) : ptr_(r.release()) {}$/;"	f	class:rtc::scoped_refptr
scoped_refptr	webrtc/base/scoped_ref_ptr.h	/^  scoped_refptr(scoped_refptr<U>&& r) : ptr_(r.release()) {}$/;"	f	class:rtc::scoped_refptr
scoped_refptr	webrtc/base/scoped_ref_ptr.h	/^class scoped_refptr {$/;"	c	namespace:rtc
scoped_ring_buffer	webrtc/common_audio/ring_buffer_unittest.cc	/^typedef std::unique_ptr<RingBuffer, FreeBufferDeleter> scoped_ring_buffer;$/;"	t	namespace:webrtc	file:
scratch_data_	webrtc/modules/audio_processing/beamformer/matrix.h	/^  std::vector<T> scratch_data_;$/;"	m	class:webrtc::Matrix
scratch_elements	webrtc/modules/audio_processing/beamformer/matrix.h	/^  const T* const* scratch_elements() const { return &scratch_elements_[0]; }$/;"	f	class:webrtc::Matrix
scratch_elements_	webrtc/modules/audio_processing/beamformer/matrix.h	/^  std::vector<T*> scratch_elements_;$/;"	m	class:webrtc::Matrix
sd	webrtc/modules/audio_processing/aec/aec_core.h	/^  float sx[PART_LEN1], sd[PART_LEN1], se[PART_LEN1];  \/\/ far, near, error psd$/;"	m	struct:webrtc::CoherenceState
sde	webrtc/modules/audio_processing/aec/aec_core.h	/^  complex_t sde[PART_LEN1];  \/\/ cross-psd of nearend and error$/;"	m	struct:webrtc::CoherenceState
se	webrtc/modules/audio_processing/aec/aec_core.h	/^  float sx[PART_LEN1], sd[PART_LEN1], se[PART_LEN1];  \/\/ far, near, error psd$/;"	m	struct:webrtc::CoherenceState
sec_count	webrtc/base/virtualsocket_unittest.cc	/^  size_t sec_count;$/;"	m	struct:Receiver	file:
second_moments_	webrtc/modules/audio_processing/transient/transient_detector.h	/^  std::unique_ptr<float[]> second_moments_;$/;"	m	class:webrtc::TransientDetector
seconds	webrtc/system_wrappers/include/ntp_time.h	/^  uint32_t seconds() const { return seconds_; }$/;"	f	class:webrtc::NtpTime
seconds_	webrtc/system_wrappers/include/ntp_time.h	/^  uint32_t seconds_;$/;"	m	class:webrtc::NtpTime
sections_	webrtc/base/linux.h	/^  ConfigParser::MapVector sections_;$/;"	m	class:rtc::ProcCpuInfo
secure	webrtc/base/httpcommon.h	/^  bool secure() const { return secure_; }$/;"	f	class:rtc::Url
secure	webrtc/base/httprequest.h	/^  bool secure() { return secure_; }$/;"	f	class:rtc::HttpRequest
secure_	webrtc/base/httpcommon.h	/^  bool secure_;$/;"	m	class:rtc::Url
secure_	webrtc/base/httprequest.h	/^  bool secure_;$/;"	m	class:rtc::HttpRequest
seed	webrtc/modules/audio_processing/aec/aec_core.h	/^  uint32_t seed;$/;"	m	struct:webrtc::AecCore
seed	webrtc/modules/audio_processing/aecm/aecm_core.h	/^    uint32_t seed;$/;"	m	struct:__anon164
seed_	webrtc/base/helpers.cc	/^  int seed_;$/;"	m	class:rtc::TestRandomGenerator	file:
seed_	webrtc/modules/audio_processing/transient/transient_suppressor.h	/^  uint32_t seed_;$/;"	m	class:webrtc::TransientSuppressor
seek_position_	webrtc/base/stream.h	/^  size_t seek_position_;$/;"	m	class:rtc::MemoryStreamBase
self_	webrtc/modules/audio_processing/aec/system_delay_unittest.cc	/^  Aec* self_;$/;"	m	class:webrtc::__anon162::SystemDelayTest	file:
self_	webrtc/modules/audio_processing/utility/delay_estimator_unittest.cc	/^  DelayEstimator* self_;$/;"	m	class:__anon232::DelayEstimatorTest	file:
semaphore_	webrtc/base/criticalsection.h	/^  mutable dispatch_semaphore_t semaphore_;$/;"	m	class:rtc::CriticalSection
send	webrtc/base/httpbase.cc	/^HttpBase::send(HttpData* data) {$/;"	f	class:rtc::HttpBase
send6_	webrtc/base/winping.h	/^    PIcmp6SendEcho2 send6_;$/;"	m	class:rtc::WinPing
send_	webrtc/base/winping.h	/^    PIcmpSendEcho send_;$/;"	m	class:rtc::WinPing
send_buffer_	webrtc/base/testutils.h	/^  Buffer send_buffer_, recv_buffer_;$/;"	m	class:testing::SocketTestClient
send_buffer_	webrtc/base/virtualsocketserver.h	/^  SendBuffer send_buffer_;$/;"	m	class:rtc::VirtualSocket
send_buffer_capacity	webrtc/base/virtualsocketserver.h	/^  uint32_t send_buffer_capacity() const { return send_buffer_capacity_; }$/;"	f	class:rtc::VirtualSocketServer
send_buffer_capacity_	webrtc/base/virtualsocketserver.h	/^  uint32_t send_buffer_capacity_;$/;"	m	class:rtc::VirtualSocketServer
send_bw_avg	webrtc/modules/audio_coding/codecs/isac/bandwidth_info.h	/^  int32_t send_bw_avg;$/;"	m	struct:__anon122
send_bw_avg	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  float    send_bw_avg;$/;"	m	struct:__anon131
send_max_delay_avg	webrtc/modules/audio_coding/codecs/isac/bandwidth_info.h	/^  int32_t send_max_delay_avg;$/;"	m	struct:__anon122
send_max_delay_avg	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  float   send_max_delay_avg;$/;"	m	struct:__anon131
send_stream_	webrtc/base/sslstreamadapter_unittest.cc	/^  rtc::MemoryStream send_stream_;$/;"	m	class:SSLStreamAdapterTestTLS	file:
send_time_ms	webrtc/base/socket.h	/^  int64_t send_time_ms;$/;"	m	struct:rtc::SentPacket
senderTimestamp	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  uint32_t                 senderTimestamp;$/;"	m	struct:__anon131
sender_set	webrtc/base/sigslot.h	/^		typedef std::set<_signal_base_interface*> sender_set;$/;"	t	class:sigslot::has_slots
sending_blocked_	webrtc/base/virtualsocketserver.h	/^  bool sending_blocked_ = false;$/;"	m	class:rtc::VirtualSocketServer
sendlist_	webrtc/base/thread.h	/^  std::list<_SendMessage> sendlist_;$/;"	m	class:rtc::Thread
sensorEventQueue	webrtc/modules/audio_processing/test/android/apmtest/jni/main.c	/^    ASensorEventQueue* sensorEventQueue;$/;"	m	struct:engine	file:
sensorManager	webrtc/modules/audio_processing/test/android/apmtest/jni/main.c	/^    ASensorManager* sensorManager;$/;"	m	struct:engine	file:
sent_	webrtc/base/sslstreamadapter_unittest.cc	/^  int sent_;$/;"	m	class:SSLStreamAdapterTestDTLS	file:
sent_first_update_	webrtc/base/fakenetwork.h	/^  bool sent_first_update_ = false;$/;"	m	class:rtc::FakeNetworkManager
sent_first_update_	webrtc/base/network.h	/^  bool sent_first_update_;$/;"	m	class:rtc::BasicNetworkManager
sequenceNumber	webrtc/common_types.h	/^  uint16_t sequenceNumber;$/;"	m	struct:webrtc::RTPHeader
sequenced_task_checker_	webrtc/base/sequenced_task_checker_unittest.cc	/^  SequencedTaskChecker* const sequenced_task_checker_;$/;"	m	class:rtc::__anon56::CallCalledSequentiallyOnThread	file:
sequenced_task_checker_	webrtc/base/sequenced_task_checker_unittest.cc	/^  std::unique_ptr<SequencedTaskChecker> sequenced_task_checker_;$/;"	m	class:rtc::__anon56::DeleteSequencedCheckerOnThread	file:
server	webrtc/base/httpclient.h	/^  const SocketAddress& server() const { return server_; }$/;"	f	class:rtc::HttpClient
server_	webrtc/base/firewallsocketserver.cc	/^  FirewallSocketServer* server_;$/;"	m	class:rtc::FirewallSocket	file:
server_	webrtc/base/firewallsocketserver.h	/^  SocketServer * server_;$/;"	m	class:rtc::FirewallSocketServer
server_	webrtc/base/httpclient.h	/^  SocketAddress server_;$/;"	m	class:rtc::HttpClient
server_	webrtc/base/httpserver.h	/^    HttpServer* server_;$/;"	m	class:rtc::HttpServer::Connection
server_	webrtc/base/nat_unittest.cc	/^  std::unique_ptr<AsyncSocket> server_;$/;"	m	class:NatTcpTest	file:
server_	webrtc/base/natsocketfactory.h	/^    NATSocketServer* server_;$/;"	m	class:rtc::NATSocketServer::Translator
server_	webrtc/base/natsocketfactory.h	/^  SocketServer* server_;$/;"	m	class:rtc::NATSocketServer
server_	webrtc/base/physicalsocketserver_unittest.cc	/^  std::unique_ptr<FakePhysicalSocketServer> server_;$/;"	m	class:rtc::PhysicalSocketTest	file:
server_	webrtc/base/ssladapter_unittest.cc	/^  std::unique_ptr<SSLAdapterTestDummyServer> server_;$/;"	m	class:SSLAdapterTestBase	file:
server_	webrtc/base/virtualsocketserver.h	/^  SocketServer* server_;$/;"	m	class:rtc::VirtualSocketServer
server_	webrtc/base/virtualsocketserver.h	/^  VirtualSocketServer* server_;$/;"	m	class:rtc::VirtualSocket
server_	webrtc/base/win32socketserver_unittest.cc	/^  Win32SocketServer server_;$/;"	m	class:rtc::Win32SocketTest	file:
server_addr_	webrtc/base/natsocketfactory.cc	/^  SocketAddress server_addr_;  \/\/ address of the NAT server$/;"	m	class:rtc::NATSocket	file:
server_buffer_	webrtc/base/sslstreamadapter_unittest.cc	/^  BufferQueueStream server_buffer_;$/;"	m	class:SSLStreamAdapterTestDTLS	file:
server_buffer_	webrtc/base/sslstreamadapter_unittest.cc	/^  rtc::FifoBuffer server_buffer_;$/;"	m	class:SSLStreamAdapterTestTLS	file:
server_closed	webrtc/base/httpserver_unittest.cc	/^    bool server_closed, connection_closed;$/;"	m	struct:rtc::__anon20::HttpServerMonitor	file:
server_identity_	webrtc/base/sslstreamadapter_unittest.cc	/^  rtc::SSLIdentity *server_identity_;  \/\/ freed by server_ssl_ destructor$/;"	m	class:SSLStreamAdapterTestBase	file:
server_key_type_	webrtc/base/sslstreamadapter_unittest.cc	/^  rtc::KeyParams server_key_type_;$/;"	m	class:SSLStreamAdapterTestBase	file:
server_owned_	webrtc/base/virtualsocketserver.h	/^  bool server_owned_;$/;"	m	class:rtc::VirtualSocketServer
server_socket_	webrtc/base/proxyserver.h	/^  std::unique_ptr<AsyncSocket> server_socket_;$/;"	m	class:rtc::ProxyServer
server_socket_	webrtc/base/ssladapter_unittest.cc	/^  std::unique_ptr<rtc::AsyncSocket> server_socket_;$/;"	m	class:SSLAdapterTestDummyServer	file:
server_socket_	webrtc/base/testechoserver.h	/^  std::unique_ptr<AsyncSocket> server_socket_;$/;"	m	class:rtc::TestEchoServer
server_ssl_	webrtc/base/sslstreamadapter_unittest.cc	/^  std::unique_ptr<rtc::SSLStreamAdapter> server_ssl_;$/;"	m	class:SSLStreamAdapterTestBase	file:
server_stream_	webrtc/base/sslstreamadapter_unittest.cc	/^  SSLDummyStreamBase *server_stream_;  \/\/ freed by server_ssl_ destructor$/;"	m	class:SSLStreamAdapterTestBase	file:
server_url_	webrtc/base/autodetectproxy.h	/^  std::string server_url_;$/;"	m	class:rtc::AutoDetectProxy
servers_	webrtc/base/firewallsocketserver.h	/^  std::vector<FirewallSocketServer *> servers_;$/;"	m	class:rtc::FirewallManager
setContent	webrtc/base/httpcommon.cc	/^void HttpData::setContent(const std::string& content_type,$/;"	f	class:rtc::HttpData
setDocumentAndLength	webrtc/base/httpcommon.cc	/^void HttpData::setDocumentAndLength(StreamInterface* document) {$/;"	f	class:rtc::HttpData
setHeader	webrtc/base/httpcommon.h	/^  inline void setHeader(HttpHeader header, const std::string& value,$/;"	f	struct:rtc::HttpData
setHeader	webrtc/base/httpcommon.h	/^  inline void setHeader(const std::string& name, const std::string& value,$/;"	f	struct:rtc::HttpData
set_active	webrtc/base/network.h	/^  void set_active(bool active) {$/;"	f	class:rtc::Network
set_activity	webrtc/modules/audio_processing/audio_buffer.cc	/^void AudioBuffer::set_activity(AudioFrame::VADActivity activity) {$/;"	f	class:webrtc::AudioBuffer
set_address	webrtc/base/httpcommon.h	/^  void set_address(const string& val) {$/;"	f	class:rtc::Url
set_addresses	webrtc/base/ifaddrs-android.cc	/^int set_addresses(struct ifaddrs* ifaddr, ifaddrmsg* msg, void* data,$/;"	f	namespace:rtc
set_agent	webrtc/base/httpclient.h	/^  void set_agent(const std::string& agent) { agent_ = agent; }$/;"	f	class:rtc::HttpClient
set_analog_level_limits	webrtc/modules/audio_processing/gain_control_for_experimental_agc.cc	/^int GainControlForExperimentalAgc::set_analog_level_limits(int minimum,$/;"	f	class:webrtc::GainControlForExperimentalAgc
set_analog_level_limits	webrtc/modules/audio_processing/gain_control_impl.cc	/^int GainControlImpl::set_analog_level_limits(int minimum,$/;"	f	class:webrtc::GainControlImpl
set_auth_info	webrtc/base/autodetectproxy.h	/^  void set_auth_info(bool use_auth, const std::string& username,$/;"	f	class:rtc::AutoDetectProxy
set_bandwidth	webrtc/base/virtualsocketserver.h	/^  void set_bandwidth(uint32_t bandwidth) { bandwidth_ = bandwidth; }$/;"	f	class:rtc::VirtualSocketServer
set_cache	webrtc/base/httpclient.h	/^  void set_cache(DiskCache* cache) { ASSERT(!IsCacheActive()); cache_ = cache; }$/;"	f	class:rtc::HttpClient
set_capture_level	webrtc/modules/audio_processing/gain_control_impl.cc	/^  void set_capture_level(int capture_level) {$/;"	f	class:webrtc::GainControlImpl::GainController
set_client_auth_enabled	webrtc/base/sslstreamadapter.h	/^  void set_client_auth_enabled(bool enabled) { client_auth_enabled_ = enabled; }$/;"	f	class:rtc::SSLStreamAdapter
set_compression_gain_db	webrtc/modules/audio_processing/gain_control_for_experimental_agc.cc	/^int GainControlForExperimentalAgc::set_compression_gain_db(int gain) {$/;"	f	class:webrtc::GainControlForExperimentalAgc
set_compression_gain_db	webrtc/modules/audio_processing/gain_control_impl.cc	/^int GainControlImpl::set_compression_gain_db(int gain) {$/;"	f	class:webrtc::GainControlImpl
set_data	webrtc/modules/audio_processing/transient/wpd_node.cc	/^int WPDNode::set_data(const float* new_data, size_t length) {$/;"	f	class:webrtc::WPDNode
set_default_filesystem	webrtc/base/fileutils.h	/^  static void set_default_filesystem(FilesystemInterface *filesystem) {$/;"	f	class:rtc::Filesystem
set_default_local_address_provider	webrtc/base/network.h	/^  void set_default_local_address_provider($/;"	f	class:rtc::Network
set_default_local_addresses	webrtc/base/network.cc	/^void NetworkManagerBase::set_default_local_addresses(const IPAddress& ipv4,$/;"	f	class:rtc::NetworkManagerBase
set_delay_mean	webrtc/base/virtualsocketserver.h	/^  void set_delay_mean(uint32_t delay_mean) { delay_mean_ = delay_mean; }$/;"	f	class:rtc::VirtualSocketServer
set_delay_offset_ms	webrtc/modules/audio_processing/audio_processing_impl.cc	/^void AudioProcessingImpl::set_delay_offset_ms(int offset) {$/;"	f	class:webrtc::AudioProcessingImpl
set_delay_samples	webrtc/base/virtualsocketserver.h	/^  void set_delay_samples(uint32_t delay_samples) {$/;"	f	class:rtc::VirtualSocketServer
set_delay_stddev	webrtc/base/virtualsocketserver.h	/^  void set_delay_stddev(uint32_t delay_stddev) { delay_stddev_ = delay_stddev; }$/;"	f	class:rtc::VirtualSocketServer
set_digest_algorithm	webrtc/base/fakesslidentity.h	/^  void set_digest_algorithm(const std::string& algorithm) {$/;"	f	class:rtc::FakeSSLCertificate
set_drop_probability	webrtc/base/virtualsocketserver.h	/^  void set_drop_probability(double drop_prob) {$/;"	f	class:rtc::VirtualSocketServer
set_enumeration_permission	webrtc/base/network.h	/^  void set_enumeration_permission(EnumerationPermission state) {$/;"	f	class:rtc::NetworkManagerBase
set_error	webrtc/base/httpcommon.cc	/^void HttpResponseData::set_error(uint32_t scode) {$/;"	f	class:rtc::HttpResponseData
set_error	webrtc/base/httprequest.h	/^  void set_error(HttpErrorType error) { error_ = error; }$/;"	f	class:rtc::HttpRequest
set_error	webrtc/base/nethelpers.h	/^  void set_error(int error) { error_ = error; }$/;"	f	class:rtc::AsyncResolver
set_fail_redirect	webrtc/base/httprequest.h	/^  void set_fail_redirect(bool fail_redirect) { fail_redirect_ = fail_redirect; }$/;"	f	class:rtc::HttpRequest
set_feature_extraction_parameters	webrtc/modules/audio_processing/ns/ns_core.c	/^static void set_feature_extraction_parameters(NoiseSuppressionC* self) {$/;"	f	file:
set_firewall	webrtc/base/httprequest.h	/^  void set_firewall(FirewallManager * firewall) {$/;"	f	class:rtc::HttpRequest
set_flag	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^  void set_flag() {$/;"	f	class:webrtc::__anon182::LockedFlag
set_flags	webrtc/base/ifaddrs-android.cc	/^int set_flags(struct ifaddrs* ifaddr) {$/;"	f	namespace:rtc
set_frame_size_ms	webrtc/modules/audio_processing/voice_detection_impl.cc	/^int VoiceDetectionImpl::set_frame_size_ms(int size) {$/;"	f	class:webrtc::VoiceDetectionImpl
set_full_path	webrtc/base/httpcommon.h	/^  void set_full_path(const string& val) {$/;"	f	class:rtc::Url
set_has_keyboard	webrtc/modules/audio_processing/include/audio_processing.h	/^  void set_has_keyboard(bool value) { has_keyboard_ = value; }$/;"	f	class:webrtc::StreamConfig
set_host	webrtc/base/httpcommon.h	/^  void set_host(const string& val) { host_ = val; }$/;"	f	class:rtc::Url
set_host	webrtc/base/httprequest.h	/^  void set_host(const std::string& host) { host_ = host; }$/;"	f	class:rtc::HttpRequest
set_id	webrtc/base/network.h	/^  void set_id(uint16_t id) { id_ = id; }$/;"	f	class:rtc::Network
set_id	webrtc/base/windowpicker.h	/^  void set_id(const DesktopId& id) { id_ = id; }$/;"	f	class:rtc::DesktopDescription
set_id	webrtc/base/windowpicker.h	/^  void set_id(const WindowId& id) { id_ = id; }$/;"	f	class:rtc::WindowDescription
set_ifname	webrtc/base/ifaddrs-android.cc	/^int set_ifname(struct ifaddrs* ifaddr, int interface) {$/;"	f	namespace:rtc
set_ignore_bad_cert	webrtc/base/ssladapter.h	/^  void set_ignore_bad_cert(bool ignore) { ignore_bad_cert_ = ignore; }$/;"	f	class:rtc::SSLAdapter
set_ignore_bad_cert	webrtc/base/sslstreamadapter.h	/^  void set_ignore_bad_cert(bool ignore) { ignore_bad_cert_ = ignore; }$/;"	f	class:rtc::SSLStreamAdapter
set_ignore_data	webrtc/base/httpbase.h	/^  void set_ignore_data(bool ignore) { ignore_data_ = ignore; }$/;"	f	class:rtc::HttpBase
set_ignore_non_default_routes	webrtc/base/network.h	/^  void set_ignore_non_default_routes(bool value) {$/;"	f	class:rtc::BasicNetworkManager
set_ignored	webrtc/base/network.h	/^  void set_ignored(bool ignored) { ignored_ = ignored; }$/;"	f	class:rtc::Network
set_ipv6_enabled	webrtc/base/network.h	/^  void set_ipv6_enabled(bool enabled) { ipv6_enabled_ = enabled; }$/;"	f	class:rtc::NetworkManagerBase
set_label	webrtc/base/stream.cc	/^void LoggingAdapter::set_label(const std::string& label) {$/;"	f	class:rtc::LoggingAdapter
set_level	webrtc/modules/audio_processing/noise_suppression_impl.cc	/^int NoiseSuppressionImpl::set_level(Level level) {$/;"	f	class:webrtc::NoiseSuppressionImpl
set_level_filter	webrtc/system_wrappers/source/trace_impl.cc	/^void Trace::set_level_filter(int filter) {$/;"	f	class:webrtc::Trace
set_likelihood	webrtc/modules/audio_processing/voice_detection_impl.cc	/^int VoiceDetectionImpl::set_likelihood(VoiceDetection::Likelihood likelihood) {$/;"	f	class:webrtc::VoiceDetectionImpl
set_max_ipv6_networks	webrtc/base/network.h	/^  void set_max_ipv6_networks(int networks) { max_ipv6_networks_ = networks; }$/;"	f	class:rtc::NetworkManagerBase
set_mode	webrtc/modules/audio_processing/gain_control_for_experimental_agc.cc	/^int GainControlForExperimentalAgc::set_mode(Mode mode) {$/;"	f	class:webrtc::GainControlForExperimentalAgc
set_mode	webrtc/modules/audio_processing/gain_control_impl.cc	/^int GainControlImpl::set_mode(Mode mode) {$/;"	f	class:webrtc::GainControlImpl
set_mode	webrtc/modules/audio_processing/vad/standalone_vad.cc	/^int StandaloneVad::set_mode(int mode) {$/;"	f	class:webrtc::StandaloneVad
set_modeless_dialog	webrtc/base/win32socketserver.h	/^  void set_modeless_dialog(HWND hdlg) {$/;"	f	class:rtc::Win32SocketServer
set_network_binder	webrtc/base/socketserver.h	/^  void set_network_binder(NetworkBinderInterface* binder) {$/;"	f	class:rtc::SocketServer
set_network_capacity	webrtc/base/virtualsocketserver.h	/^  void set_network_capacity(uint32_t capacity) { network_capacity_ = capacity; }$/;"	f	class:rtc::VirtualSocketServer
set_network_ignore_list	webrtc/base/network.h	/^  void set_network_ignore_list(const std::vector<std::string>& list) {$/;"	f	class:rtc::BasicNetworkManager
set_num_channels	webrtc/common_audio/channel_buffer.h	/^  void set_num_channels(size_t num_channels) {$/;"	f	class:webrtc::ChannelBuffer
set_num_channels	webrtc/common_audio/channel_buffer.h	/^  void set_num_channels(size_t num_channels) {$/;"	f	class:webrtc::IFChannelBuffer
set_num_channels	webrtc/modules/audio_processing/audio_buffer.cc	/^void AudioBuffer::set_num_channels(size_t num_channels) {$/;"	f	class:webrtc::AudioBuffer
set_num_channels	webrtc/modules/audio_processing/include/audio_processing.h	/^  void set_num_channels(size_t value) { num_channels_ = value; }$/;"	f	class:webrtc::StreamConfig
set_output_will_be_muted	webrtc/modules/audio_processing/audio_processing_impl.cc	/^void AudioProcessingImpl::set_output_will_be_muted(bool muted) {$/;"	f	class:webrtc::AudioProcessingImpl
set_path	webrtc/base/httpcommon.h	/^  void set_path(const string& val) {$/;"	f	class:rtc::Url
set_pool	webrtc/base/httpclient.h	/^  void set_pool(StreamPool* pool) { pool_ = pool; }$/;"	f	class:rtc::HttpClient
set_port	webrtc/base/httpcommon.h	/^  void set_port(uint16_t val) { port_ = val; }$/;"	f	class:rtc::Url
set_port	webrtc/base/httprequest.h	/^  void set_port(int port) { port_ = port; }$/;"	f	class:rtc::HttpRequest
set_preference	webrtc/base/network.h	/^  void set_preference(int preference) { preference_ = preference; }$/;"	f	class:rtc::Network
set_primary	webrtc/base/windowpicker.h	/^  void set_primary(bool primary) { primary_ = primary; }$/;"	f	class:rtc::DesktopDescription
set_proxy	webrtc/base/autodetectproxy.h	/^  void set_proxy(const SocketAddress& proxy) {$/;"	f	class:rtc::AutoDetectProxy
set_proxy	webrtc/base/httpclient.h	/^  void set_proxy(const ProxyInfo& proxy) { proxy_ = proxy; }$/;"	f	class:rtc::HttpClient
set_proxy	webrtc/base/httprequest.h	/^  void set_proxy(const ProxyInfo& proxy) {$/;"	f	class:rtc::HttpRequest
set_query	webrtc/base/httpcommon.h	/^  void set_query(const string& val) {$/;"	f	class:rtc::Url
set_recv_buffer_capacity	webrtc/base/virtualsocketserver.h	/^  void set_recv_buffer_capacity(uint32_t capacity) {$/;"	f	class:rtc::VirtualSocketServer
set_redirect	webrtc/base/httpcommon.cc	/^void HttpResponseData::set_redirect(const std::string& location,$/;"	f	class:rtc::HttpResponseData
set_redirect_action	webrtc/base/httpclient.h	/^  void set_redirect_action(RedirectAction action) { redirect_action_ = action; }$/;"	f	class:rtc::HttpClient
set_request_retries	webrtc/base/httpclient.h	/^  void set_request_retries(size_t retries) { retries_ = retries; }$/;"	f	class:rtc::HttpClient
set_routing_mode	webrtc/modules/audio_processing/echo_control_mobile_impl.cc	/^int EchoControlMobileImpl::set_routing_mode(RoutingMode mode) {$/;"	f	class:webrtc::EchoControlMobileImpl
set_sample_rate_hz	webrtc/modules/audio_processing/include/audio_processing.h	/^  void set_sample_rate_hz(int value) {$/;"	f	class:webrtc::StreamConfig
set_scope_id	webrtc/base/network.h	/^  void set_scope_id(int id) { scope_id_ = id; }$/;"	f	class:rtc::Network
set_secure	webrtc/base/httpcommon.h	/^  void set_secure(bool val) { secure_ = val; }$/;"	f	class:rtc::Url
set_secure	webrtc/base/httprequest.h	/^  void set_secure(bool secure) { secure_ = secure; }$/;"	f	class:rtc::HttpRequest
set_send_buffer_capacity	webrtc/base/virtualsocketserver.h	/^  void set_send_buffer_capacity(uint32_t capacity) {$/;"	f	class:rtc::VirtualSocketServer
set_server	webrtc/base/httpclient.cc	/^void HttpClient::set_server(const SocketAddress& address) {$/;"	f	class:rtc::HttpClient
set_server_url	webrtc/base/autodetectproxy.h	/^  void set_server_url(const std::string& url) {$/;"	f	class:rtc::AutoDetectProxy
set_socketserver	webrtc/base/firewallsocketserver.h	/^  void set_socketserver(SocketServer* server) {$/;"	f	class:rtc::FirewallSocketServer
set_socketserver	webrtc/base/messagequeue.cc	/^void MessageQueue::set_socketserver(SocketServer* ss) {$/;"	f	class:rtc::MessageQueue
set_stream_analog_level	webrtc/modules/audio_processing/gain_control_for_experimental_agc.cc	/^int GainControlForExperimentalAgc::set_stream_analog_level(int level) {$/;"	f	class:webrtc::GainControlForExperimentalAgc
set_stream_analog_level	webrtc/modules/audio_processing/gain_control_impl.cc	/^int GainControlImpl::set_stream_analog_level(int level) {$/;"	f	class:webrtc::GainControlImpl
set_stream_delay_ms	webrtc/modules/audio_processing/audio_processing_impl.cc	/^int AudioProcessingImpl::set_stream_delay_ms(int delay) {$/;"	f	class:webrtc::AudioProcessingImpl
set_stream_drift_samples	webrtc/modules/audio_processing/echo_cancellation_impl.cc	/^void EchoCancellationImpl::set_stream_drift_samples(int drift) {$/;"	f	class:webrtc::EchoCancellationImpl
set_stream_has_voice	webrtc/modules/audio_processing/voice_detection_impl.cc	/^int VoiceDetectionImpl::set_stream_has_voice(bool has_voice) {$/;"	f	class:webrtc::VoiceDetectionImpl
set_stream_key_pressed	webrtc/modules/audio_processing/audio_processing_impl.cc	/^void AudioProcessingImpl::set_stream_key_pressed(bool key_pressed) {$/;"	f	class:webrtc::AudioProcessingImpl
set_success	webrtc/base/httpcommon.cc	/^void HttpResponseData::set_success(const std::string& content_type,$/;"	f	class:rtc::HttpResponseData
set_success	webrtc/base/httpcommon.cc	/^void HttpResponseData::set_success(uint32_t scode) {$/;"	f	class:rtc::HttpResponseData
set_suppression_level	webrtc/modules/audio_processing/echo_cancellation_impl.cc	/^int EchoCancellationImpl::set_suppression_level(SuppressionLevel level) {$/;"	f	class:webrtc::EchoCancellationImpl
set_target_level_dbfs	webrtc/modules/audio_processing/agc/agc.cc	/^int Agc::set_target_level_dbfs(int level) {$/;"	f	class:webrtc::Agc
set_target_level_dbfs	webrtc/modules/audio_processing/gain_control_for_experimental_agc.cc	/^int GainControlForExperimentalAgc::set_target_level_dbfs(int level) {$/;"	f	class:webrtc::GainControlForExperimentalAgc
set_target_level_dbfs	webrtc/modules/audio_processing/gain_control_impl.cc	/^int GainControlImpl::set_target_level_dbfs(int level) {$/;"	f	class:webrtc::GainControlImpl
set_tcp_listen_enabled	webrtc/base/firewallsocketserver.h	/^  void set_tcp_listen_enabled(bool enabled) { tcp_listen_enabled_ = enabled; }$/;"	f	class:rtc::FirewallSocketServer
set_tcp_sockets_enabled	webrtc/base/firewallsocketserver.h	/^  void set_tcp_sockets_enabled(bool enabled) { tcp_sockets_enabled_ = enabled; }$/;"	f	class:rtc::FirewallSocketServer
set_timeout	webrtc/base/httprequest.h	/^  void set_timeout(int timeout) { timeout_ = timeout; }$/;"	f	class:rtc::HttpRequest
set_timeout_seconds	webrtc/base/task.cc	/^void Task::set_timeout_seconds(const int timeout_seconds) {$/;"	f	class:rtc::Task
set_title	webrtc/base/windowpicker.h	/^  void set_title(const std::string& title) { title_ = title; }$/;"	f	class:rtc::DesktopDescription
set_title	webrtc/base/windowpicker.h	/^  void set_title(const std::string& title) { title_ = title; }$/;"	f	class:rtc::WindowDescription
set_type	webrtc/base/network.h	/^  void set_type(AdapterType type) {$/;"	f	class:rtc::Network
set_udp_sockets_enabled	webrtc/base/firewallsocketserver.h	/^  void set_udp_sockets_enabled(bool enabled) { udp_sockets_enabled_ = enabled; }$/;"	f	class:rtc::FirewallSocketServer
set_uri_form	webrtc/base/httpclient.h	/^  void set_uri_form(UriForm form) { uri_form_ = form; }$/;"	f	class:rtc::HttpClient
set_url	webrtc/base/httpcommon.h	/^  void set_url(const string& val) {$/;"	f	class:rtc::Url
set_was_any	webrtc/base/virtualsocketserver.h	/^  void set_was_any(bool was_any) { was_any_ = was_any; }$/;"	f	class:rtc::VirtualSocket
set_when_deleted_	webrtc/base/task_unittest.cc	/^  bool* set_when_deleted_;$/;"	m	class:rtc::SetBoolOnDeleteTask	file:
settings_	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^  const SimulationSettings settings_;$/;"	m	class:webrtc::test::AudioProcessingSimulator
severity_	webrtc/base/logging.h	/^  LoggingSeverity severity_;$/;"	m	class:rtc::LogMessage
severity_	webrtc/system_wrappers/include/logging.h	/^  LoggingSeverity severity_;$/;"	m	class:webrtc::LogMessage
sf_	webrtc/base/natsocketfactory.cc	/^  NATInternalSocketFactory* sf_;$/;"	m	class:rtc::NATSocket	file:
shared_count_	webrtc/base/sharedexclusivelock.h	/^  int shared_count_;$/;"	m	class:rtc::SharedExclusiveLock
shared_count_is_zero_	webrtc/base/sharedexclusivelock.h	/^  rtc::Event shared_count_is_zero_;$/;"	m	class:rtc::SharedExclusiveLock
shared_exclusive_lock_	webrtc/base/sharedexclusivelock_unittest.cc	/^  SharedExclusiveLock* shared_exclusive_lock_;$/;"	m	class:rtc::SharedExclusiveTask	file:
shared_exclusive_lock_	webrtc/base/sharedexclusivelock_unittest.cc	/^  std::unique_ptr<SharedExclusiveLock> shared_exclusive_lock_;$/;"	m	class:rtc::SharedExclusiveLockTest	file:
shared_value	webrtc/base/criticalsection_unittest.cc	/^  int shared_value() const { return shared_value_; }$/;"	f	class:rtc::__anon10::RunnerBase
shared_value_	webrtc/base/criticalsection_unittest.cc	/^  int shared_value_;$/;"	m	class:rtc::__anon10::RunnerBase	file:
shift_amount_	webrtc/common_audio/blocker.h	/^  size_t shift_amount_;$/;"	m	class:webrtc::Blocker
shift_offset	webrtc/modules/audio_processing/aec/aec_core.h	/^  int shift_offset;$/;"	m	struct:webrtc::AecCore
should_delete_server_	webrtc/base/firewallsocketserver.h	/^  bool should_delete_server_;$/;"	m	class:rtc::FirewallSocketServer
shutdown_event_	webrtc/base/event_tracer.cc	/^  rtc::Event shutdown_event_;$/;"	m	class:rtc::tracing::__anon12::final	file:
side_	webrtc/base/sslstreamadapter_unittest.cc	/^  const std::string side_;$/;"	m	class:SSLDummyStreamBase	file:
signal0	webrtc/base/sigslot.h	/^		signal0()$/;"	f	class:sigslot::signal0
signal0	webrtc/base/sigslot.h	/^		signal0(const signal0<mt_policy>& s)$/;"	f	class:sigslot::signal0
signal0	webrtc/base/sigslot.h	/^	class signal0 : public _signal_base0<mt_policy>$/;"	c	namespace:sigslot
signal1	webrtc/base/sigslot.h	/^		signal1()$/;"	f	class:sigslot::signal1
signal1	webrtc/base/sigslot.h	/^		signal1(const signal1<arg1_type, mt_policy>& s)$/;"	f	class:sigslot::signal1
signal1	webrtc/base/sigslot.h	/^	class signal1 : public _signal_base1<arg1_type, mt_policy>$/;"	c	namespace:sigslot
signal2	webrtc/base/sigslot.h	/^		signal2()$/;"	f	class:sigslot::signal2
signal2	webrtc/base/sigslot.h	/^		signal2(const signal2<arg1_type, arg2_type, mt_policy>& s)$/;"	f	class:sigslot::signal2
signal2	webrtc/base/sigslot.h	/^	class signal2 : public _signal_base2<arg1_type, arg2_type, mt_policy>$/;"	c	namespace:sigslot
signal3	webrtc/base/sigslot.h	/^		signal3()$/;"	f	class:sigslot::signal3
signal3	webrtc/base/sigslot.h	/^		signal3(const signal3<arg1_type, arg2_type, arg3_type, mt_policy>& s)$/;"	f	class:sigslot::signal3
signal3	webrtc/base/sigslot.h	/^	class signal3 : public _signal_base3<arg1_type, arg2_type, arg3_type, mt_policy>$/;"	c	namespace:sigslot
signal4	webrtc/base/sigslot.h	/^		signal4()$/;"	f	class:sigslot::signal4
signal4	webrtc/base/sigslot.h	/^		signal4(const signal4<arg1_type, arg2_type, arg3_type, arg4_type, mt_policy>& s)$/;"	f	class:sigslot::signal4
signal4	webrtc/base/sigslot.h	/^	class signal4 : public _signal_base4<arg1_type, arg2_type, arg3_type,$/;"	c	namespace:sigslot
signal5	webrtc/base/sigslot.h	/^		signal5()$/;"	f	class:sigslot::signal5
signal5	webrtc/base/sigslot.h	/^		signal5(const signal5<arg1_type, arg2_type, arg3_type, arg4_type,$/;"	f	class:sigslot::signal5
signal5	webrtc/base/sigslot.h	/^	class signal5 : public _signal_base5<arg1_type, arg2_type, arg3_type,$/;"	c	namespace:sigslot
signal6	webrtc/base/sigslot.h	/^		signal6()$/;"	f	class:sigslot::signal6
signal6	webrtc/base/sigslot.h	/^		signal6(const signal6<arg1_type, arg2_type, arg3_type, arg4_type,$/;"	f	class:sigslot::signal6
signal6	webrtc/base/sigslot.h	/^	class signal6 : public _signal_base6<arg1_type, arg2_type, arg3_type,$/;"	c	namespace:sigslot
signal7	webrtc/base/sigslot.h	/^		signal7()$/;"	f	class:sigslot::signal7
signal7	webrtc/base/sigslot.h	/^		signal7(const signal7<arg1_type, arg2_type, arg3_type, arg4_type,$/;"	f	class:sigslot::signal7
signal7	webrtc/base/sigslot.h	/^	class signal7 : public _signal_base7<arg1_type, arg2_type, arg3_type,$/;"	c	namespace:sigslot
signal8	webrtc/base/sigslot.h	/^		signal8()$/;"	f	class:sigslot::signal8
signal8	webrtc/base/sigslot.h	/^		signal8(const signal8<arg1_type, arg2_type, arg3_type, arg4_type,$/;"	f	class:sigslot::signal8
signal8	webrtc/base/sigslot.h	/^	class signal8 : public _signal_base8<arg1_type, arg2_type, arg3_type,$/;"	c	namespace:sigslot
signalEnergy	webrtc/modules/audio_processing/ns/ns_core.h	/^  float signalEnergy;  \/\/ Energy of |magn|.$/;"	m	struct:NoiseSuppressionC_
signalLevel	webrtc/modules/include/module_common_types.h	/^  uint8_t signalLevel;$/;"	m	struct:webrtc::RTCPVoIPMetric
signal_	webrtc/base/sigslot_unittest.cc	/^  sigslot::signal0<> signal_;$/;"	m	class:SigslotDefault	file:
signal_	webrtc/base/sigslot_unittest.cc	/^  sigslot::signal0<signal_policy>* signal_;$/;"	m	class:SigslotReceiver	file:
signal_classifier_	webrtc/modules/audio_processing/level_controller/level_controller.h	/^  SignalClassifier signal_classifier_;$/;"	m	class:webrtc::LevelController
signal_close_	webrtc/base/physicalsocketserver.h	/^  bool signal_close_;$/;"	m	class:rtc::SocketDispatcher
signal_connect	webrtc/base/sigslot.h	/^		void signal_connect(_signal_base_interface* sender)$/;"	f	class:sigslot::has_slots
signal_count	webrtc/base/sigslot_unittest.cc	/^  int signal_count() { return mt_loop_back_count(); }$/;"	f	class:SigslotMTLockTest
signal_count	webrtc/base/sigslot_unittest.cc	/^  int signal_count() { return signal_count_; }$/;"	f	class:SigslotReceiver
signal_count_	webrtc/base/sigslot_unittest.cc	/^  int signal_count_;$/;"	m	class:SigslotReceiver	file:
signal_disconnect	webrtc/base/sigslot.h	/^		void signal_disconnect(_signal_base_interface* sender)$/;"	f	class:sigslot::has_slots
signal_dispatcher	webrtc/base/physicalsocketserver.cc	/^Dispatcher* PhysicalSocketServer::signal_dispatcher() {$/;"	f	class:rtc::PhysicalSocketServer
signal_dispatcher_	webrtc/base/physicalsocketserver.h	/^  std::unique_ptr<PosixSignalDispatcher> signal_dispatcher_;$/;"	m	class:rtc::PhysicalSocketServer
signal_err_	webrtc/base/physicalsocketserver.h	/^  int signal_err_;$/;"	m	class:rtc::SocketDispatcher
signal_wakeup_	webrtc/base/physicalsocketserver.h	/^  Signaler* signal_wakeup_;$/;"	m	class:rtc::PhysicalSocketServer
signaled_thread_	webrtc/base/physicalsocketserver_unittest.cc	/^  static Thread *signaled_thread_;$/;"	m	class:rtc::PosixSignalDeliveryTest	file:
signaled_thread_	webrtc/base/physicalsocketserver_unittest.cc	/^Thread *PosixSignalDeliveryTest::signaled_thread_ = NULL;$/;"	m	class:rtc::PosixSignalDeliveryTest	file:
signaling_thread_	webrtc/base/rtccertificategenerator.cc	/^  Thread* const signaling_thread_;$/;"	m	class:rtc::__anon53::RTCCertificateGenerationTask	file:
signaling_thread_	webrtc/base/rtccertificategenerator.h	/^  Thread* const signaling_thread_;$/;"	m	class:rtc::RTCCertificateGenerator
signaling_thread_	webrtc/base/rtccertificategenerator_unittest.cc	/^  Thread* const signaling_thread_;$/;"	m	class:rtc::RTCCertificateGeneratorFixture	file:
signalling_	webrtc/base/httpserver.h	/^    bool signalling_, close_;$/;"	m	class:rtc::HttpServer::Connection
signals_received_	webrtc/base/physicalsocketserver_unittest.cc	/^  static std::vector<int> signals_received_;$/;"	m	class:rtc::PosixSignalDeliveryTest	file:
signals_received_	webrtc/base/physicalsocketserver_unittest.cc	/^std::vector<int> PosixSignalDeliveryTest::signals_received_;$/;"	m	class:rtc::PosixSignalDeliveryTest	file:
sigslot	webrtc/base/sigslot.cc	/^namespace sigslot {$/;"	n	file:
sigslot	webrtc/base/sigslot.h	/^namespace sigslot {$/;"	n
sigslot	webrtc/base/sigslotrepeater.h	/^namespace sigslot {$/;"	n
silence	webrtc/modules/audio_processing/vad/common.h	/^  bool silence;$/;"	m	struct:AudioFeatures
simulation_config_	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^  const SimulationConfig simulation_config_;$/;"	m	class:webrtc::__anon182::CallSimulator	file:
simulation_config_	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^  const SimulationConfig* const simulation_config_ = nullptr;$/;"	m	class:webrtc::__anon182::TimedThreadApiProcessor	file:
simulation_settings	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^  SettingsType simulation_settings = SettingsType::kDefaultApmDesktop;$/;"	m	struct:webrtc::__anon182::SimulationConfig	file:
simulcastIdx	webrtc/modules/include/module_common_types.h	/^  uint8_t simulcastIdx;  \/\/ Index if the simulcast encoder creating$/;"	m	struct:webrtc::RTPVideoHeader
simulcastStream	webrtc/common_types.h	/^  SimulcastStream simulcastStream[kMaxSimulcastStreams];$/;"	m	class:webrtc::VideoCodec
sinc_resampler_	webrtc/common_audio/resampler/include/push_resampler.h	/^  std::unique_ptr<PushSincResampler> sinc_resampler_;$/;"	m	class:webrtc::PushResampler
sinc_resampler_right_	webrtc/common_audio/resampler/include/push_resampler.h	/^  std::unique_ptr<PushSincResampler> sinc_resampler_right_;$/;"	m	class:webrtc::PushResampler
single_threaded	webrtc/base/sigslot.h	/^		single_threaded()$/;"	f	class:sigslot::single_threaded
single_threaded	webrtc/base/sigslot.h	/^	class single_threaded$/;"	c	namespace:sigslot
sink	webrtc/base/httpbase_unittest.cc	/^  testing::StreamSink sink;$/;"	m	class:rtc::HttpBaseTest	file:
sink_	webrtc/base/win32socketserver.h	/^  EventSink * sink_;$/;"	m	class:rtc::Win32Socket
sintab1	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  double sintab1[FRAMESAMPLES_HALF];$/;"	m	struct:__anon143
sintab2	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  double sintab2[FRAMESAMPLES_QUARTER];$/;"	m	struct:__anon143
size	webrtc/base/array_view.h	/^  size_t size() const { return size_; }$/;"	f	class:rtc::final
size	webrtc/base/buffer.h	/^  size_t size() const {$/;"	f	class:rtc::BufferT
size	webrtc/base/bufferqueue.cc	/^size_t BufferQueue::size() const {$/;"	f	class:rtc::BufferQueue
size	webrtc/base/copyonwritebuffer.h	/^  size_t size() const {$/;"	f	class:rtc::CopyOnWriteBuffer
size	webrtc/base/diskcache.h	/^    size_t size;$/;"	m	struct:rtc::DiskCache::Entry
size	webrtc/base/messagequeue.h	/^  size_t size() const {$/;"	f	class:rtc::MessageQueue
size	webrtc/base/testclient.h	/^    size_t size;$/;"	m	struct:rtc::TestClient::Packet
size	webrtc/base/testutils.h	/^  size_t size() const { return clients_.size(); }$/;"	f	class:testing::SocketTestServer
size	webrtc/base/type_traits.h	/^  size_t size;$/;"	m	struct:rtc::test_has_data_and_size::Test2
size	webrtc/base/virtualsocketserver.cc	/^  size_t size() const { return size_ - consumed_; }$/;"	f	class:rtc::Packet
size	webrtc/base/virtualsocketserver.h	/^    size_t size;$/;"	m	struct:rtc::VirtualSocket::NetworkEntry
size	webrtc/base/x11windowpicker.cc	/^  size_t size() const { return size_; }$/;"	f	class:rtc::XWindowProperty
size	webrtc/common_audio/channel_buffer.h	/^  size_t size() const {return num_frames_ * num_allocated_channels_; }$/;"	f	class:webrtc::ChannelBuffer
size_	webrtc/base/array_view.h	/^  size_t size_;$/;"	m	class:rtc::final
size_	webrtc/base/asyncudpsocket.h	/^  size_t size_;$/;"	m	class:rtc::AsyncUDPSocket
size_	webrtc/base/buffer.h	/^  size_t size_;$/;"	m	class:rtc::BufferT
size_	webrtc/base/bytebuffer.h	/^  size_t size_;$/;"	m	class:rtc::ByteBufferReader
size_	webrtc/base/bytebuffer.h	/^  size_t size_;$/;"	m	class:rtc::ByteBufferWriter
size_	webrtc/base/natsocketfactory.cc	/^  size_t size_;$/;"	m	class:rtc::NATSocket	file:
size_	webrtc/base/virtualsocketserver.cc	/^  size_t size_, consumed_;$/;"	m	class:rtc::Packet	file:
size_	webrtc/base/x11windowpicker.cc	/^  unsigned long size_;  \/\/ NOLINT: type required by XGetWindowProperty$/;"	m	class:rtc::XWindowProperty	file:
size_	webrtc/common_audio/wav_header_unittest.cc	/^  const size_t size_;$/;"	m	class:webrtc::ReadableWavBuffer	file:
sizeof	webrtc/base/event_tracer.cc	/^    static_assert(sizeof(TraceArgValue) == sizeof(unsigned long long),$/;"	m	struct:rtc::tracing::__anon12::final::TraceArg	file:
skew	webrtc/modules/audio_processing/aec/echo_cancellation.h	/^  float skew;$/;"	m	struct:webrtc::Aec
skewData	webrtc/modules/audio_processing/aec/aec_resampler.cc	/^  int skewData[kEstimateLengthFrames];$/;"	m	struct:webrtc::__anon154	file:
skewDataIndex	webrtc/modules/audio_processing/aec/aec_resampler.cc	/^  int skewDataIndex;$/;"	m	struct:webrtc::__anon154	file:
skewEstimate	webrtc/modules/audio_processing/aec/aec_resampler.cc	/^  float skewEstimate;$/;"	m	struct:webrtc::__anon154	file:
skewFrCtr	webrtc/modules/audio_processing/aec/echo_cancellation.h	/^  int skewFrCtr;$/;"	m	struct:webrtc::Aec
skewMode	webrtc/modules/audio_processing/aec/echo_cancellation.h	/^  int16_t skewMode;     \/\/ default kAecFalse$/;"	m	struct:webrtc::__anon159
skewMode	webrtc/modules/audio_processing/aec/echo_cancellation.h	/^  short skewMode;$/;"	m	struct:webrtc::Aec
slave_left_	webrtc/common_audio/resampler/include/resampler.h	/^    Resampler* slave_left_;$/;"	m	class:webrtc::Resampler
slave_right_	webrtc/common_audio/resampler/include/resampler.h	/^    Resampler* slave_right_;$/;"	m	class:webrtc::Resampler
slot_disconnect	webrtc/base/sigslot.h	/^		void slot_disconnect(has_slots_interface* pslot)$/;"	f	class:sigslot::_signal_base0
slot_disconnect	webrtc/base/sigslot.h	/^		void slot_disconnect(has_slots_interface* pslot)$/;"	f	class:sigslot::_signal_base1
slot_disconnect	webrtc/base/sigslot.h	/^		void slot_disconnect(has_slots_interface* pslot)$/;"	f	class:sigslot::_signal_base2
slot_disconnect	webrtc/base/sigslot.h	/^		void slot_disconnect(has_slots_interface* pslot)$/;"	f	class:sigslot::_signal_base3
slot_disconnect	webrtc/base/sigslot.h	/^		void slot_disconnect(has_slots_interface* pslot)$/;"	f	class:sigslot::_signal_base4
slot_disconnect	webrtc/base/sigslot.h	/^		void slot_disconnect(has_slots_interface* pslot)$/;"	f	class:sigslot::_signal_base5
slot_disconnect	webrtc/base/sigslot.h	/^		void slot_disconnect(has_slots_interface* pslot)$/;"	f	class:sigslot::_signal_base6
slot_disconnect	webrtc/base/sigslot.h	/^		void slot_disconnect(has_slots_interface* pslot)$/;"	f	class:sigslot::_signal_base7
slot_disconnect	webrtc/base/sigslot.h	/^		void slot_disconnect(has_slots_interface* pslot)$/;"	f	class:sigslot::_signal_base8
slot_duplicate	webrtc/base/sigslot.h	/^		void slot_duplicate(const has_slots_interface* oldtarget, has_slots_interface* newtarget)$/;"	f	class:sigslot::_signal_base0
slot_duplicate	webrtc/base/sigslot.h	/^		void slot_duplicate(const has_slots_interface* oldtarget, has_slots_interface* newtarget)$/;"	f	class:sigslot::_signal_base1
slot_duplicate	webrtc/base/sigslot.h	/^		void slot_duplicate(const has_slots_interface* oldtarget, has_slots_interface* newtarget)$/;"	f	class:sigslot::_signal_base2
slot_duplicate	webrtc/base/sigslot.h	/^		void slot_duplicate(const has_slots_interface* oldtarget, has_slots_interface* newtarget)$/;"	f	class:sigslot::_signal_base3
slot_duplicate	webrtc/base/sigslot.h	/^		void slot_duplicate(const has_slots_interface* oldtarget, has_slots_interface* newtarget)$/;"	f	class:sigslot::_signal_base4
slot_duplicate	webrtc/base/sigslot.h	/^		void slot_duplicate(const has_slots_interface* oldtarget, has_slots_interface* newtarget)$/;"	f	class:sigslot::_signal_base5
slot_duplicate	webrtc/base/sigslot.h	/^		void slot_duplicate(const has_slots_interface* oldtarget, has_slots_interface* newtarget)$/;"	f	class:sigslot::_signal_base6
slot_duplicate	webrtc/base/sigslot.h	/^		void slot_duplicate(const has_slots_interface* oldtarget, has_slots_interface* newtarget)$/;"	f	class:sigslot::_signal_base7
slot_duplicate	webrtc/base/sigslot.h	/^		void slot_duplicate(const has_slots_interface* oldtarget, has_slots_interface* newtarget)$/;"	f	class:sigslot::_signal_base8
smooth	webrtc/modules/audio_processing/ns/ns_core.h	/^  float smooth[HALF_ANAL_BLOCKL];$/;"	m	struct:NoiseSuppressionC_
snprintf	webrtc/base/logging.cc	/^#define snprintf /;"	d	file:
snr_	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer.h	/^  float snr_;$/;"	m	class:webrtc::IntelligibilityEnhancer
socket	webrtc/base/natserver.h	/^    AsyncUDPSocket* socket;$/;"	m	struct:rtc::NATServer::TransEntry
socket	webrtc/base/testutils.h	/^  AsyncSocket* socket() { return socket_.get(); }$/;"	f	class:testing::SocketTestClient
socket	webrtc/base/virtualsocket_unittest.cc	/^  std::unique_ptr<AsyncUDPSocket> socket;$/;"	m	struct:Receiver	file:
socket	webrtc/base/virtualsocket_unittest.cc	/^  std::unique_ptr<AsyncUDPSocket> socket;$/;"	m	struct:Sender	file:
socket_	webrtc/base/asyncsocket.h	/^  AsyncSocket* socket_;$/;"	m	class:rtc::AsyncSocketAdapter
socket_	webrtc/base/asynctcpsocket.h	/^  std::unique_ptr<AsyncSocket> socket_;$/;"	m	class:rtc::AsyncTCPSocketBase
socket_	webrtc/base/asynctcpsocket_unittest.cc	/^  AsyncSocket* socket_;$/;"	m	class:rtc::AsyncTCPSocketTest	file:
socket_	webrtc/base/asyncudpsocket.h	/^  std::unique_ptr<AsyncSocket> socket_;$/;"	m	class:rtc::AsyncUDPSocket
socket_	webrtc/base/asyncudpsocket_unittest.cc	/^  AsyncSocket* socket_;$/;"	m	class:rtc::AsyncUdpSocketTest	file:
socket_	webrtc/base/autodetectproxy.h	/^  AsyncSocket* socket_;$/;"	m	class:rtc::AutoDetectProxy
socket_	webrtc/base/natsocketfactory.cc	/^  AsyncSocket* socket_;$/;"	m	class:rtc::NATSocket	file:
socket_	webrtc/base/socketstream.h	/^  AsyncSocket* socket_;$/;"	m	class:rtc::SocketStream
socket_	webrtc/base/testclient.h	/^  AsyncPacketSocket* socket_;$/;"	m	class:rtc::TestClient
socket_	webrtc/base/testutils.h	/^  std::unique_ptr<AsyncSocket> socket_;$/;"	m	class:testing::SocketTestClient
socket_	webrtc/base/testutils.h	/^  std::unique_ptr<AsyncSocket> socket_;$/;"	m	class:testing::SocketTestServer
socket_	webrtc/base/thread_unittest.cc	/^  AsyncUDPSocket* socket_;$/;"	m	class:SocketClient	file:
socket_	webrtc/base/thread_unittest.cc	/^  Socket* socket_;$/;"	m	class:MessageClient	file:
socket_	webrtc/base/win32socketserver.h	/^  SOCKET socket_;$/;"	m	class:rtc::Win32Socket
socket_ctrl	webrtc/base/openssladapter.cc	/^static long socket_ctrl(BIO* b, int cmd, long num, void* ptr) {$/;"	f	file:
socket_ev_	webrtc/base/physicalsocketserver.h	/^  WSAEVENT socket_ev_;$/;"	m	class:rtc::PhysicalSocketServer
socket_free	webrtc/base/openssladapter.cc	/^static int socket_free(BIO* b) {$/;"	f	file:
socket_new	webrtc/base/openssladapter.cc	/^static int socket_new(BIO* b) {$/;"	f	file:
socket_puts	webrtc/base/openssladapter.cc	/^static int socket_puts(BIO* b, const char* str) {$/;"	f	file:
socket_read	webrtc/base/openssladapter.cc	/^static int socket_read(BIO* b, char* out, int outl) {$/;"	f	file:
socket_write	webrtc/base/openssladapter.cc	/^static int socket_write(BIO* b, const char* in, int inl) {$/;"	f	file:
socketserver	webrtc/base/firewallsocketserver.h	/^  SocketServer* socketserver() const { return server_; }$/;"	f	class:rtc::FirewallSocketServer
socketserver	webrtc/base/messagequeue.cc	/^SocketServer* MessageQueue::socketserver() {$/;"	f	class:rtc::MessageQueue
socketserver	webrtc/base/natsocketfactory.h	/^  SocketServer* socketserver() { return server_; }$/;"	f	class:rtc::NATSocketServer
socketserver	webrtc/base/physicalsocketserver.cc	/^  SocketServer* socketserver() { return ss_; }$/;"	f	class:rtc::FileDispatcher
socketserver	webrtc/base/physicalsocketserver.h	/^  SocketServer* socketserver() { return ss_; }$/;"	f	class:rtc::PhysicalSocket
socketserver	webrtc/base/virtualsocketserver.h	/^  SocketServer* socketserver() { return server_; }$/;"	f	class:rtc::VirtualSocketServer
socklen_t	webrtc/base/basictypes.h	/^typedef int socklen_t;$/;"	t
socks_	webrtc/base/proxy_unittest.cc	/^  std::unique_ptr<rtc::SocksProxyServer> socks_;$/;"	m	class:ProxyTest	file:
source	webrtc/base/socketaddresspair.h	/^  const SocketAddress& source() const { return src_; }$/;"	f	class:rtc::SocketAddressPair
source_available_	webrtc/common_audio/resampler/push_sinc_resampler.h	/^  size_t source_available_;$/;"	m	class:webrtc::PushSincResampler
source_ptr_	webrtc/common_audio/resampler/push_sinc_resampler.h	/^  const float* source_ptr_;$/;"	m	class:webrtc::PushSincResampler
source_ptr_int_	webrtc/common_audio/resampler/push_sinc_resampler.h	/^  const int16_t* source_ptr_int_;$/;"	m	class:webrtc::PushSincResampler
sp	webrtc/base/base64.cc	/^static const unsigned char sp = 0xFE;  \/\/ Whitespace$/;"	m	namespace:rtc	file:
sparsity_	webrtc/common_audio/sparse_fir_filter.h	/^  const size_t sparsity_;$/;"	m	class:webrtc::final
spatialLayers	webrtc/common_types.h	/^  SpatialLayer spatialLayers[kMaxSpatialLayers];$/;"	m	class:webrtc::VideoCodec
spatial_idx	webrtc/modules/include/module_common_types.h	/^  uint8_t spatial_idx;     \/\/ Spatial layer index, or kNoSpatialIdx.$/;"	m	struct:webrtc::RTPVideoHeaderVP9
spatial_layer_resolution_present	webrtc/modules/include/module_common_types.h	/^  bool spatial_layer_resolution_present;$/;"	m	struct:webrtc::RTPVideoHeaderVP9
spatial_layers	webrtc/config.h	/^  std::vector<SpatialLayer> spatial_layers;$/;"	m	class:webrtc::VideoEncoderConfig
specifics_	webrtc/config.h	/^    VideoCodecH264 specifics_;$/;"	m	class:webrtc::VideoEncoderConfig::H264EncoderSpecificSettings
specifics_	webrtc/config.h	/^    VideoCodecVP8 specifics_;$/;"	m	class:webrtc::VideoEncoderConfig::Vp8EncoderSpecificSettings
specifics_	webrtc/config.h	/^    VideoCodecVP9 specifics_;$/;"	m	class:webrtc::VideoEncoderConfig::Vp9EncoderSpecificSettings
specified_credentials	webrtc/base/httpcommon.cc	/^  bool specified_credentials;$/;"	m	struct:rtc::NegotiateAuthContext	file:
spectral_mean_	webrtc/modules/audio_processing/transient/transient_suppressor.h	/^  std::unique_ptr<float[]> spectral_mean_;$/;"	m	class:webrtc::TransientSuppressor
spectral_peak	webrtc/modules/audio_processing/vad/common.h	/^  double spectral_peak[kMaxNumFrames];$/;"	m	struct:AudioFeatures
spectrum_size	webrtc/modules/audio_processing/utility/delay_estimator_internal.h	/^  int spectrum_size;$/;"	m	struct:__anon230
spectrum_size	webrtc/modules/audio_processing/utility/delay_estimator_internal.h	/^  int spectrum_size;$/;"	m	struct:__anon231
spectrum_size_	webrtc/modules/audio_processing/utility/delay_estimator_unittest.cc	/^  int spectrum_size_;$/;"	m	class:__anon232::DelayEstimatorTest	file:
speechProb	webrtc/modules/audio_processing/ns/ns_core.h	/^  float speechProb[HALF_ANAL_BLOCKL];  \/\/ Final speech\/noise prob: prior + LRT.$/;"	m	struct:NoiseSuppressionC_
speech_means	webrtc/common_audio/vad/vad_core.h	/^    int16_t speech_means[kTableSize];$/;"	m	struct:VadInstT_
speech_probability	webrtc/modules/audio_processing/noise_suppression_impl.cc	/^float NoiseSuppressionImpl::speech_probability() const {$/;"	f	class:webrtc::NoiseSuppressionImpl
speech_stds	webrtc/common_audio/vad/vad_core.h	/^    int16_t speech_stds[kTableSize];$/;"	m	struct:VadInstT_
speech_type_	webrtc/modules/include/module_common_types.h	/^  SpeechType speech_type_;$/;"	m	class:webrtc::AudioFrame
split	webrtc/base/stringencode.cc	/^size_t split(const std::string& source, char delimiter,$/;"	f	namespace:rtc
splitSampFreq	webrtc/modules/audio_processing/aec/echo_cancellation.h	/^  int splitSampFreq;$/;"	m	struct:webrtc::Aec
split_bands	webrtc/modules/audio_processing/audio_buffer.cc	/^int16_t* const* AudioBuffer::split_bands(size_t channel) {$/;"	f	class:webrtc::AudioBuffer
split_bands_const	webrtc/modules/audio_processing/audio_buffer.cc	/^const int16_t* const* AudioBuffer::split_bands_const(size_t channel) const {$/;"	f	class:webrtc::AudioBuffer
split_bands_const_f	webrtc/modules/audio_processing/audio_buffer.cc	/^const float* const* AudioBuffer::split_bands_const_f(size_t channel) const {$/;"	f	class:webrtc::AudioBuffer
split_bands_f	webrtc/modules/audio_processing/audio_buffer.cc	/^float* const* AudioBuffer::split_bands_f(size_t channel) {$/;"	f	class:webrtc::AudioBuffer
split_channels	webrtc/modules/audio_processing/audio_buffer.cc	/^int16_t* const* AudioBuffer::split_channels(Band band) {$/;"	f	class:webrtc::AudioBuffer
split_channels_const	webrtc/modules/audio_processing/audio_buffer.cc	/^const int16_t* const* AudioBuffer::split_channels_const(Band band) const {$/;"	f	class:webrtc::AudioBuffer
split_channels_const_f	webrtc/modules/audio_processing/audio_buffer.cc	/^const float* const* AudioBuffer::split_channels_const_f(Band band) const {$/;"	f	class:webrtc::AudioBuffer
split_channels_f	webrtc/modules/audio_processing/audio_buffer.cc	/^float* const* AudioBuffer::split_channels_f(Band band) {$/;"	f	class:webrtc::AudioBuffer
split_data	webrtc/modules/audio_processing/audio_buffer.cc	/^ChannelBuffer<int16_t>* AudioBuffer::split_data() {$/;"	f	class:webrtc::AudioBuffer
split_data	webrtc/modules/audio_processing/audio_buffer.cc	/^const ChannelBuffer<int16_t>* AudioBuffer::split_data() const {$/;"	f	class:webrtc::AudioBuffer
split_data_	webrtc/modules/audio_processing/audio_buffer.h	/^  std::unique_ptr<IFChannelBuffer> split_data_;$/;"	m	class:webrtc::AudioBuffer
split_data_f	webrtc/modules/audio_processing/audio_buffer.cc	/^ChannelBuffer<float>* AudioBuffer::split_data_f() {$/;"	f	class:webrtc::AudioBuffer
split_data_f	webrtc/modules/audio_processing/audio_buffer.cc	/^const ChannelBuffer<float>* AudioBuffer::split_data_f() const {$/;"	f	class:webrtc::AudioBuffer
split_rate	webrtc/modules/audio_processing/audio_processing_impl.h	/^    int split_rate;$/;"	m	struct:webrtc::AudioProcessingImpl::ApmCaptureNonLockedState
split_rate	webrtc/modules/audio_processing/audio_processing_impl.h	/^    int split_rate;$/;"	m	struct:webrtc::AudioProcessingImpl::ApmCaptureState
splitting_filter_	webrtc/modules/audio_processing/audio_buffer.h	/^  std::unique_ptr<SplittingFilter> splitting_filter_;$/;"	m	class:webrtc::AudioBuffer
sprintfn	webrtc/base/stringutils.h	/^size_t sprintfn(CTYPE* buffer, size_t buflen, const CTYPE* format, ...) {$/;"	f	namespace:rtc
sprop_parameter_sets	webrtc/config.h	/^  std::string sprop_parameter_sets;$/;"	m	struct:webrtc::VideoDecoderH264Settings
spsData	webrtc/common_types.h	/^  const uint8_t* spsData;$/;"	m	struct:webrtc::VideoCodecH264
spsLen	webrtc/common_types.h	/^  size_t spsLen;$/;"	m	struct:webrtc::VideoCodecH264
sps_id	webrtc/modules/include/module_common_types.h	/^  int sps_id;$/;"	m	struct:webrtc::NaluInfo
sqrt_wrapper	webrtc/modules/audio_processing/beamformer/matrix.h	/^T sqrt_wrapper(T x) {$/;"	f	namespace:__anon186
sqrt_wrapper	webrtc/modules/audio_processing/beamformer/matrix.h	/^std::complex<S> sqrt_wrapper(std::complex<S> x) {$/;"	f	namespace:__anon186
src	webrtc/base/firewallsocketserver.h	/^    SocketAddress src;$/;"	m	struct:rtc::FirewallSocketServer::Rule
src	webrtc/base/httpbase_unittest.cc	/^  testing::StreamSource src;$/;"	m	class:rtc::HttpBaseTest	file:
src_	webrtc/base/socketaddresspair.h	/^  SocketAddress src_;$/;"	m	class:rtc::SocketAddressPair
src_channels	webrtc/common_audio/audio_converter.h	/^  size_t src_channels() const { return src_channels_; }$/;"	f	class:webrtc::AudioConverter
src_channels_	webrtc/common_audio/audio_converter.h	/^  const size_t src_channels_;$/;"	m	class:webrtc::AudioConverter
src_frames	webrtc/common_audio/audio_converter.h	/^  size_t src_frames() const { return src_frames_; }$/;"	f	class:webrtc::AudioConverter
src_frames_	webrtc/common_audio/audio_converter.h	/^  const size_t src_frames_;$/;"	m	class:webrtc::AudioConverter
src_left_	webrtc/common_audio/resampler/include/push_resampler.h	/^  std::unique_ptr<T[]> src_left_;$/;"	m	class:webrtc::PushResampler
src_right_	webrtc/common_audio/resampler/include/push_resampler.h	/^  std::unique_ptr<T[]> src_right_;$/;"	m	class:webrtc::PushResampler
src_sample_rate_hz_	webrtc/common_audio/resampler/include/push_resampler.h	/^  int src_sample_rate_hz_;$/;"	m	class:webrtc::PushResampler
srtp_auth_key	webrtc/base/asyncpacketsocket.h	/^  std::vector<char> srtp_auth_key;  \/\/ Authentication key.$/;"	m	struct:rtc::PacketTimeUpdateParams
srtp_auth_tag_len	webrtc/base/asyncpacketsocket.h	/^  int srtp_auth_tag_len;            \/\/ Authentication tag length.$/;"	m	struct:rtc::PacketTimeUpdateParams
srtp_ciphers_	webrtc/base/opensslstreamadapter.h	/^  std::string srtp_ciphers_;$/;"	m	class:rtc::OpenSSLStreamAdapter
srtp_packet_index	webrtc/base/asyncpacketsocket.h	/^  int64_t srtp_packet_index;        \/\/ Required for Rtp Packet authentication.$/;"	m	struct:rtc::PacketTimeUpdateParams
ss	webrtc/base/proxy_unittest.cc	/^  rtc::SocketServer* ss() { return ss_.get(); }$/;"	f	class:ProxyTest
ss_	webrtc/base/httprequest.h	/^  SocketServer *ss_;$/;"	m	class:rtc::HttpMonitor
ss_	webrtc/base/nat_unittest.cc	/^  std::unique_ptr<SocketServer> ss_;$/;"	m	class:__anon33::TestVirtualSocketServer	file:
ss_	webrtc/base/nullsocketserver_unittest.cc	/^  NullSocketServer ss_;$/;"	m	class:rtc::NullSocketServerTest	file:
ss_	webrtc/base/physicalsocketserver.cc	/^  PhysicalSocketServer *ss_;$/;"	m	class:rtc::EventDispatcher	file:
ss_	webrtc/base/physicalsocketserver.cc	/^  PhysicalSocketServer* ss_;$/;"	m	class:rtc::EventDispatcher	file:
ss_	webrtc/base/physicalsocketserver.cc	/^  PhysicalSocketServer* ss_;$/;"	m	class:rtc::FileDispatcher	file:
ss_	webrtc/base/physicalsocketserver.h	/^  PhysicalSocketServer* ss_;$/;"	m	class:rtc::PhysicalSocket
ss_	webrtc/base/physicalsocketserver_unittest.cc	/^  std::unique_ptr<PhysicalSocketServer> ss_;$/;"	m	class:rtc::PosixSignalDeliveryTest	file:
ss_	webrtc/base/proxy_unittest.cc	/^  std::unique_ptr<rtc::SocketServer> ss_;$/;"	m	class:ProxyTest	file:
ss_	webrtc/base/socket_unittest.h	/^  SocketServer* ss_;$/;"	m	class:rtc::SocketTest
ss_	webrtc/base/virtualsocket_unittest.cc	/^  VirtualSocketServer* ss_;$/;"	m	class:VirtualSocketServerTest	file:
ss_	webrtc/base/win32socketserver.h	/^    Win32SocketServer* ss_;$/;"	m	class:rtc::Win32SocketServer::MessageWindow
ss_	webrtc/base/win32socketserver.h	/^  Win32SocketServer ss_;$/;"	m	class:rtc::Win32Thread
ss_data_available	webrtc/modules/include/module_common_types.h	/^  bool ss_data_available;  \/\/ True if SS data is available in this payload$/;"	m	struct:webrtc::RTPVideoHeaderVP9
ss_lock_	webrtc/base/messagequeue.h	/^  SharedExclusiveLock ss_lock_;$/;"	m	class:rtc::MessageQueue
ss_scope_	webrtc/base/ssladapter_unittest.cc	/^  const rtc::SocketServerScope ss_scope_;$/;"	m	class:SSLAdapterTestBase	file:
ssl_	webrtc/base/openssladapter.h	/^  SSL* ssl_;$/;"	m	class:rtc::OpenSSLAdapter
ssl_	webrtc/base/opensslstreamadapter.h	/^  SSL* ssl_;$/;"	m	class:rtc::OpenSSLStreamAdapter
ssl_adapter_	webrtc/base/ssladapter_unittest.cc	/^  std::unique_ptr<rtc::SSLAdapter> ssl_adapter_;$/;"	m	class:SSLAdapterTestDummyClient	file:
ssl_certificate	webrtc/base/rtccertificate.cc	/^const SSLCertificate& RTCCertificate::ssl_certificate() const {$/;"	f	class:rtc::RTCCertificate
ssl_ctx_	webrtc/base/openssladapter.h	/^  SSL_CTX* ssl_ctx_;$/;"	m	class:rtc::OpenSSLAdapter
ssl_ctx_	webrtc/base/opensslstreamadapter.h	/^  SSL_CTX* ssl_ctx_;$/;"	m	class:rtc::OpenSSLStreamAdapter
ssl_error_code_	webrtc/base/opensslstreamadapter.h	/^  int ssl_error_code_;  \/\/ valid when state_ == SSL_ERROR or SSL_CLOSED$/;"	m	class:rtc::OpenSSLStreamAdapter
ssl_host_name_	webrtc/base/openssladapter.h	/^  std::string ssl_host_name_;$/;"	m	class:rtc::OpenSSLAdapter
ssl_identity_	webrtc/base/ssladapter_unittest.cc	/^  std::unique_ptr<rtc::SSLIdentity> ssl_identity_;$/;"	m	class:SSLAdapterTestDummyServer	file:
ssl_max_version_	webrtc/base/opensslstreamadapter.h	/^  SSLProtocolVersion ssl_max_version_;$/;"	m	class:rtc::OpenSSLStreamAdapter
ssl_mode_	webrtc/base/openssladapter.h	/^  SSLMode ssl_mode_;$/;"	m	class:rtc::OpenSSLAdapter
ssl_mode_	webrtc/base/opensslstreamadapter.h	/^  SSLMode ssl_mode_;$/;"	m	class:rtc::OpenSSLStreamAdapter
ssl_mode_	webrtc/base/ssladapter_unittest.cc	/^  const rtc::SSLMode ssl_mode_;$/;"	m	class:SSLAdapterTestBase	file:
ssl_mode_	webrtc/base/ssladapter_unittest.cc	/^  const rtc::SSLMode ssl_mode_;$/;"	m	class:SSLAdapterTestDummyClient	file:
ssl_mode_	webrtc/base/ssladapter_unittest.cc	/^  const rtc::SSLMode ssl_mode_;$/;"	m	class:SSLAdapterTestDummyServer	file:
ssl_read_needs_write_	webrtc/base/openssladapter.h	/^  bool ssl_read_needs_write_;$/;"	m	class:rtc::OpenSSLAdapter
ssl_read_needs_write_	webrtc/base/opensslstreamadapter.h	/^  bool ssl_read_needs_write_;$/;"	m	class:rtc::OpenSSLStreamAdapter
ssl_stream_adapter_	webrtc/base/ssladapter_unittest.cc	/^  std::unique_ptr<rtc::SSLStreamAdapter> ssl_stream_adapter_;$/;"	m	class:SSLAdapterTestDummyServer	file:
ssl_write_needs_read_	webrtc/base/openssladapter.h	/^  bool ssl_write_needs_read_;$/;"	m	class:rtc::OpenSSLAdapter
ssl_write_needs_read_	webrtc/base/opensslstreamadapter.h	/^  bool ssl_write_needs_read_;$/;"	m	class:rtc::OpenSSLStreamAdapter
ssrc	webrtc/common_types.h	/^  uint32_t ssrc;$/;"	m	struct:webrtc::RTPHeader
stNearState	webrtc/modules/audio_processing/aec/aec_core.h	/^  short stNearState, echoState;$/;"	m	struct:webrtc::AecCore
st_loop_back_count	webrtc/base/sigslot_unittest.cc	/^  int st_loop_back_count() { return st_receiver_.signal_count(); }$/;"	f	class:SigslotSlotTest
st_receiver_	webrtc/base/sigslot_unittest.cc	/^  SigslotReceiver<slot_policy, sigslot::single_threaded> st_receiver_;$/;"	m	class:SigslotSlotTest	file:
stages	webrtc/modules/audio_processing/ns/nsx_core.h	/^  int                     stages;$/;"	m	struct:NoiseSuppressionFixedC_
standalone_vad_	webrtc/modules/audio_processing/vad/voice_activity_detector.h	/^  std::unique_ptr<StandaloneVad> standalone_vad_;$/;"	m	class:webrtc::VoiceActivityDetector
start	webrtc/base/httpclient.cc	/^void HttpClient::start() {$/;"	f	class:rtc::HttpClient
startBitrate	webrtc/common_types.h	/^  unsigned int startBitrate;   \/\/ kilobits\/sec.$/;"	m	class:webrtc::VideoCodec
startIdx	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  int         startIdx;$/;"	m	struct:__anon134
startLowerLimit	webrtc/modules/audio_processing/agc/legacy/analog_agc.h	/^  int32_t startLowerLimit;      \/\/ = RXX_BUFFER_LEN * 672641;       -23 dBfs$/;"	m	struct:__anon171
startUpperLimit	webrtc/modules/audio_processing/agc/legacy/analog_agc.h	/^  int32_t startUpperLimit;      \/\/ = RXX_BUFFER_LEN * 1066064;      -21 dBfs$/;"	m	struct:__anon171
start_	webrtc/base/bytebuffer.h	/^  size_t start_;$/;"	m	class:rtc::ByteBufferReader
start_count_	webrtc/base/fakenetwork.h	/^  int start_count_ = 0;$/;"	m	class:rtc::FakeNetworkManager
start_count_	webrtc/base/network.h	/^  int start_count_;$/;"	m	class:rtc::BasicNetworkManager
start_event_	webrtc/base/criticalsection_unittest.cc	/^  Event start_event_;$/;"	m	class:rtc::__anon10::RunnerBase	file:
start_freq_	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer.h	/^  size_t start_freq_;$/;"	m	class:webrtc::IntelligibilityEnhancer
start_signal_	webrtc/base/rate_limiter_unittest.cc	/^  rtc::Event start_signal_;$/;"	m	class:webrtc::ThreadTask	file:
start_time_	webrtc/base/task.h	/^  int64_t start_time_;$/;"	m	class:rtc::Task
start_time_	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^    int64_t start_time_;$/;"	m	class:webrtc::test::AudioProcessingSimulator::ScopedTimer
start_timestamp_us_	webrtc/modules/audio_processing/level_controller/level_controller_complexity_unittest.cc	/^  rtc::Optional<int64_t> start_timestamp_us_;$/;"	m	class:webrtc::__anon209::SubmodulePerformanceTimer	file:
start_wait_period	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  uint32_t start_wait_period;$/;"	m	struct:__anon131
started	webrtc/base/network.h	/^  bool started() { return start_count_ > 0; }$/;"	f	class:rtc::BasicNetworkManager
started	webrtc/base/network_unittest.cc	/^  bool started() { return started_; }$/;"	f	class:rtc::__anon36::FakeNetworkMonitor
started	webrtc/base/task_queue_win.cc	/^  Event* started;$/;"	m	struct:rtc::__anon67::ThreadStartupData	file:
started_	webrtc/base/network_unittest.cc	/^  bool started_ = false;$/;"	m	class:rtc::__anon36::FakeNetworkMonitor	file:
starts_with	webrtc/base/stringutils.cc	/^bool starts_with(const char *s1, const char *s2) {$/;"	f	namespace:rtc
startupState	webrtc/modules/audio_processing/aecm/aecm_core.h	/^    int16_t startupState;$/;"	m	struct:__anon164
startup_	webrtc/modules/audio_processing/agc/agc_manager_direct.h	/^  bool startup_;$/;"	m	class:webrtc::final
startup_min_level_	webrtc/modules/audio_processing/agc/agc_manager_direct.h	/^  int startup_min_level_;$/;"	m	class:webrtc::final
startup_min_volume	webrtc/modules/audio_processing/include/audio_processing.h	/^  int startup_min_volume;$/;"	m	struct:webrtc::ExperimentalAgc
startup_phase	webrtc/modules/audio_processing/aec/echo_cancellation.h	/^  int startup_phase;$/;"	m	struct:webrtc::Aec
stat_	webrtc/base/fileutils.h	/^  struct stat stat_;$/;"	m	class:rtc::DirectoryIterator	typeref:struct:rtc::DirectoryIterator::stat
state	webrtc/base/sha1.h	/^  uint32_t state[5];$/;"	m	struct:rtc::SHA1_CTX
state	webrtc/modules/audio_processing/echo_cancellation_impl.cc	/^  void* state() { return state_; }$/;"	f	class:webrtc::EchoCancellationImpl::Canceller
state	webrtc/modules/audio_processing/echo_control_mobile_impl.cc	/^  void* state() {$/;"	f	class:webrtc::EchoControlMobileImpl::Canceller
state	webrtc/modules/audio_processing/gain_control_impl.cc	/^  Handle* state() {$/;"	f	class:webrtc::GainControlImpl::GainController
state	webrtc/modules/audio_processing/noise_suppression_impl.cc	/^  NsState* state() { return state_; }$/;"	f	class:webrtc::NoiseSuppressionImpl::Suppressor
state	webrtc/modules/audio_processing/test/android/apmtest/jni/main.c	/^    struct saved_state state;$/;"	m	struct:engine	typeref:struct:engine::saved_state	file:
state	webrtc/modules/audio_processing/voice_detection_impl.cc	/^  VadInst* state() { return state_; }$/;"	f	class:webrtc::VoiceDetectionImpl::Vad
state1_	webrtc/common_audio/resampler/include/resampler.h	/^    void* state1_;$/;"	m	class:webrtc::Resampler
state2_	webrtc/common_audio/resampler/include/resampler.h	/^    void* state2_;$/;"	m	class:webrtc::Resampler
state3_	webrtc/common_audio/resampler/include/resampler.h	/^    void* state3_;$/;"	m	class:webrtc::Resampler
stateCounter	webrtc/modules/audio_processing/aec/aec_core.h	/^  int stateCounter;$/;"	m	struct:webrtc::AecCore
state_	webrtc/base/httpbase.h	/^  } state_;$/;"	m	class:rtc::HttpParser	typeref:enum:rtc::HttpParser::State
state_	webrtc/base/openssladapter.h	/^  SSLState state_;$/;"	m	class:rtc::OpenSSLAdapter
state_	webrtc/base/opensslstreamadapter.h	/^  SSLState state_;$/;"	m	class:rtc::OpenSSLStreamAdapter
state_	webrtc/base/physicalsocketserver.h	/^  ConnState state_;$/;"	m	class:rtc::PhysicalSocket
state_	webrtc/base/random.h	/^  uint64_t state_;$/;"	m	class:webrtc::Random
state_	webrtc/base/signalthread.h	/^  State state_;$/;"	m	class:rtc::SignalThread
state_	webrtc/base/socketadapters.h	/^  State state_;$/;"	m	class:rtc::AsyncSocksProxyServerSocket
state_	webrtc/base/socketadapters.h	/^  State state_;$/;"	m	class:rtc::AsyncSocksProxySocket
state_	webrtc/base/socketadapters.h	/^  } state_;$/;"	m	class:rtc::AsyncHttpsProxySocket	typeref:enum:rtc::AsyncHttpsProxySocket::ProxyState
state_	webrtc/base/task.h	/^  int state_;$/;"	m	class:rtc::Task
state_	webrtc/base/testutils.h	/^  StreamState state_;$/;"	m	class:testing::StreamSource
state_	webrtc/base/transformadapter.h	/^  State state_;$/;"	m	class:rtc::TransformAdapter
state_	webrtc/base/virtualsocketserver.h	/^  ConnState state_;$/;"	m	class:rtc::VirtualSocket
state_	webrtc/base/win32socketserver.h	/^  ConnState state_;$/;"	m	class:rtc::Win32Socket
state_	webrtc/common_audio/fir_filter.cc	/^  std::unique_ptr<float[]> state_;$/;"	m	class:webrtc::FIRFilterC	file:
state_	webrtc/common_audio/fir_filter_neon.h	/^  std::unique_ptr<float[], AlignedFreeDeleter> state_;$/;"	m	class:webrtc::FIRFilterNEON
state_	webrtc/common_audio/fir_filter_sse.h	/^  std::unique_ptr<float[], AlignedFreeDeleter> state_;$/;"	m	class:webrtc::FIRFilterSSE2
state_	webrtc/common_audio/sparse_fir_filter.h	/^  std::vector<float> state_;$/;"	m	class:webrtc::final
state_	webrtc/modules/audio_processing/echo_cancellation_impl.cc	/^  void* state_;$/;"	m	class:webrtc::EchoCancellationImpl::Canceller	file:
state_	webrtc/modules/audio_processing/echo_control_mobile_impl.cc	/^  void* state_;$/;"	m	class:webrtc::EchoControlMobileImpl::Canceller	file:
state_	webrtc/modules/audio_processing/gain_control_impl.cc	/^  Handle* state_;$/;"	m	class:webrtc::GainControlImpl::GainController	file:
state_	webrtc/modules/audio_processing/noise_suppression_impl.cc	/^  NsState* state_ = nullptr;$/;"	m	class:webrtc::NoiseSuppressionImpl::Suppressor	file:
state_	webrtc/modules/audio_processing/voice_detection_impl.cc	/^  VadInst* state_ = nullptr;$/;"	m	class:webrtc::VoiceDetectionImpl::Vad	file:
state_48_to_8	webrtc/common_audio/vad/vad_core.h	/^    WebRtcSpl_State48khzTo8khz state_48_to_8;$/;"	m	struct:VadInstT_
state_length_	webrtc/common_audio/fir_filter.cc	/^  size_t state_length_;$/;"	m	class:webrtc::FIRFilterC	file:
state_length_	webrtc/common_audio/fir_filter_neon.h	/^  size_t state_length_;$/;"	m	class:webrtc::FIRFilterNEON
state_length_	webrtc/common_audio/fir_filter_sse.h	/^  size_t state_length_;$/;"	m	class:webrtc::FIRFilterSSE2
stats_	webrtc/base/rate_statistics_unittest.cc	/^  RateStatistics stats_;$/;"	m	class:__anon48::RateStatisticsTest	file:
stats_thread_	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  rtc::PlatformThread stats_thread_;$/;"	m	class:webrtc::__anon181::AudioProcessingImplLockTest	file:
stats_thread_state_	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  StatsProcessor stats_thread_state_;$/;"	m	class:webrtc::__anon181::AudioProcessingImplLockTest	file:
status_	webrtc/base/dbus.h	/^  DBusMonitorStatus status_;$/;"	m	class:rtc::DBusMonitor
stdLongTerm	webrtc/modules/audio_processing/agc/legacy/digital_agc.h	/^  int16_t stdLongTerm;        \/\/ Q10$/;"	m	struct:__anon173
stdShortTerm	webrtc/modules/audio_processing/agc/legacy/digital_agc.h	/^  int16_t stdShortTerm;       \/\/ Q10$/;"	m	struct:__anon173
std_deviation	webrtc/modules/audio_processing/echo_detector/mean_variance_estimator.cc	/^float MeanVarianceEstimator::std_deviation() const {$/;"	f	class:webrtc::MeanVarianceEstimator
steps	webrtc/base/httpcommon.cc	/^  size_t steps;$/;"	m	struct:rtc::NegotiateAuthContext	file:
stop	webrtc/base/sigslotrepeater.h	/^    void stop(base_type &s) { s.disconnect(this); }$/;"	f	class:sigslot::repeater0
stop	webrtc/base/sigslotrepeater.h	/^    void stop(base_type &s) { s.disconnect(this); }$/;"	f	class:sigslot::repeater1
stop	webrtc/base/sigslotrepeater.h	/^    void stop(base_type &s) { s.disconnect(this); }$/;"	f	class:sigslot::repeater2
stop	webrtc/base/sigslotrepeater.h	/^    void stop(base_type &s) { s.disconnect(this); }$/;"	f	class:sigslot::repeater3
stop_	webrtc/base/messagequeue.h	/^  volatile int stop_;$/;"	m	class:rtc::MessageQueue
stop_	webrtc/base/platform_thread.h	/^  bool stop_;$/;"	m	class:rtc::PlatformThread
stop_event_	webrtc/base/platform_thread.h	/^  rtc::Event stop_event_;$/;"	m	class:rtc::PlatformThread
stop_on_idle_	webrtc/base/virtualsocketserver.h	/^  bool stop_on_idle_;$/;"	m	class:rtc::VirtualSocketServer
storage_	webrtc/base/cryptstring.h	/^  char * storage_;$/;"	m	class:rtc::FormatCryptString
store_	webrtc/base/optionsfile_unittest.cc	/^  std::unique_ptr<OptionsFile> store_;$/;"	m	class:rtc::MAYBE_OptionsFileTest	file:
store_intermediate_output	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^  bool store_intermediate_output = false;$/;"	m	struct:webrtc::test::SimulationSettings
str_	webrtc/base/stream.h	/^  std::string& str_;$/;"	m	class:rtc::StringStream
str_	webrtc/base/trace_event.h	/^  const char* str_;$/;"	m	class:webrtc::trace_event_internal::TraceStringWithCopy
strcatn	webrtc/base/stringutils.h	/^size_t strcatn(CTYPE* buffer, size_t buflen,$/;"	f	namespace:rtc
strchr	webrtc/base/stringutils.h	/^const CTYPE* strchr(const CTYPE* str, const CTYPE* chs) {$/;"	f	namespace:rtc
strchr	webrtc/base/stringutils.h	/^inline const wchar_t* strchr(const wchar_t* s, wchar_t c) {$/;"	f
strchrn	webrtc/base/stringutils.h	/^const CTYPE* strchrn(const CTYPE* str, size_t slen, CTYPE ch) {$/;"	f	namespace:rtc
strcmp	webrtc/base/stringutils.h	/^inline int strcmp(const wchar_t* s1, const wchar_t* s2) {$/;"	f
strcpyn	webrtc/base/stringutils.h	/^size_t strcpyn(CTYPE* buffer, size_t buflen,$/;"	f	namespace:rtc
stream	webrtc/base/checks.h	/^  std::ostream& stream() { return stream_; }$/;"	f	class:rtc::FatalMessage
stream	webrtc/base/httpbase.h	/^  StreamInterface* stream() { return http_stream_; }$/;"	f	class:rtc::HttpBase
stream	webrtc/base/logging.h	/^  std::ostream& stream() { return print_stream_; }$/;"	f	class:rtc::LogMessage
stream	webrtc/base/stream.h	/^  StreamInterface* stream() { return stream_; }$/;"	f	class:rtc::StreamAdapterInterface
stream	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  uint8_t   stream[STREAM_SIZE_MAX];$/;"	m	struct:Bitstreamstruct
stream	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  uint8_t  stream[3];$/;"	m	struct:__anon142
stream	webrtc/system_wrappers/include/logging.h	/^  std::ostream& stream() { return print_stream_; }$/;"	f	class:webrtc::LogMessage
stream_	webrtc/base/checks.h	/^  std::ostringstream stream_;$/;"	m	class:rtc::FatalMessage
stream_	webrtc/base/filerotatingstream_unittest.cc	/^  std::unique_ptr<CallSessionFileRotatingStream> stream_;$/;"	m	class:rtc::MAYBE_CallSessionFileRotatingStreamTest	file:
stream_	webrtc/base/filerotatingstream_unittest.cc	/^  std::unique_ptr<FileRotatingStream> stream_;$/;"	m	class:rtc::MAYBE_FileRotatingStreamTest	file:
stream_	webrtc/base/logsinks.h	/^  std::unique_ptr<FileRotatingStream> stream_;$/;"	m	class:rtc::FileRotatingLogSink
stream_	webrtc/base/socketpool.h	/^  SocketStream* stream_;$/;"	m	class:rtc::ReuseSocketPool
stream_	webrtc/base/stream.h	/^    StreamInterface* stream_;$/;"	m	class:rtc::StreamReference::StreamRefCount
stream_	webrtc/base/stream.h	/^  StreamInterface* stream_;$/;"	m	class:rtc::StreamAdapterInterface
stream_analog_level	webrtc/modules/audio_processing/gain_control_for_experimental_agc.cc	/^int GainControlForExperimentalAgc::stream_analog_level() {$/;"	f	class:webrtc::GainControlForExperimentalAgc
stream_analog_level	webrtc/modules/audio_processing/gain_control_impl.cc	/^int GainControlImpl::stream_analog_level() {$/;"	f	class:webrtc::GainControlImpl
stream_config_	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer_unittest.cc	/^  StreamConfig stream_config_;$/;"	m	class:webrtc::IntelligibilityEnhancerTest	file:
stream_ctrl	webrtc/base/opensslstreamadapter.cc	/^static long stream_ctrl(BIO* b, int cmd, long num, void* ptr) {$/;"	f	namespace:rtc
stream_delay	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^  rtc::Optional<int> stream_delay;$/;"	m	struct:webrtc::test::SimulationSettings
stream_delay_jumps	webrtc/modules/audio_processing/audio_processing_impl.h	/^    int stream_delay_jumps;$/;"	m	struct:webrtc::AudioProcessingImpl::ApmCaptureState
stream_delay_ms	webrtc/modules/audio_processing/audio_processing_impl.cc	/^int AudioProcessingImpl::stream_delay_ms() const {$/;"	f	class:webrtc::AudioProcessingImpl
stream_delay_ms	webrtc/modules/audio_processing/audio_processing_impl.h	/^    int stream_delay_ms;$/;"	m	struct:webrtc::AudioProcessingImpl::ApmCaptureNonLockedState
stream_drift_samples	webrtc/modules/audio_processing/echo_cancellation_impl.cc	/^int EchoCancellationImpl::stream_drift_samples() const {$/;"	f	class:webrtc::EchoCancellationImpl
stream_drift_samples	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^  rtc::Optional<int> stream_drift_samples;$/;"	m	struct:webrtc::test::SimulationSettings
stream_free	webrtc/base/opensslstreamadapter.cc	/^static int stream_free(BIO* b) {$/;"	f	namespace:rtc
stream_has_echo	webrtc/modules/audio_processing/echo_cancellation_impl.cc	/^bool EchoCancellationImpl::stream_has_echo() const {$/;"	f	class:webrtc::EchoCancellationImpl
stream_has_voice	webrtc/modules/audio_processing/voice_detection_impl.cc	/^bool VoiceDetectionImpl::stream_has_voice() const {$/;"	f	class:webrtc::VoiceDetectionImpl
stream_index	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  uint32_t  stream_index;$/;"	m	struct:Bitstreamstruct
stream_index	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  uint32_t stream_index;$/;"	m	struct:__anon142
stream_is_saturated	webrtc/modules/audio_processing/gain_control_for_experimental_agc.cc	/^bool GainControlForExperimentalAgc::stream_is_saturated() const {$/;"	f	class:webrtc::GainControlForExperimentalAgc
stream_is_saturated	webrtc/modules/audio_processing/gain_control_impl.cc	/^bool GainControlImpl::stream_is_saturated() const {$/;"	f	class:webrtc::GainControlImpl
stream_new	webrtc/base/opensslstreamadapter.cc	/^static int stream_new(BIO* b) {$/;"	f	namespace:rtc
stream_properties_	webrtc/modules/audio_processing/echo_cancellation_impl.h	/^  std::unique_ptr<StreamProperties> stream_properties_;$/;"	m	class:webrtc::EchoCancellationImpl
stream_properties_	webrtc/modules/audio_processing/echo_control_mobile_impl.h	/^  std::unique_ptr<StreamProperties> stream_properties_;$/;"	m	class:webrtc::EchoControlMobileImpl
stream_puts	webrtc/base/opensslstreamadapter.cc	/^static int stream_puts(BIO* b, const char* str) {$/;"	f	namespace:rtc
stream_read	webrtc/base/opensslstreamadapter.cc	/^static int stream_read(BIO* b, char* out, int outl) {$/;"	f	namespace:rtc
stream_ref_count_	webrtc/base/stream.h	/^  StreamRefCount* stream_ref_count_;$/;"	m	class:rtc::StreamReference
stream_write	webrtc/base/opensslstreamadapter.cc	/^static int stream_write(BIO* b, const char* in, int inl) {$/;"	f	namespace:rtc
streams	webrtc/base/diskcache.h	/^    size_t streams;$/;"	m	struct:rtc::DiskCache::Entry
streams	webrtc/modules/audio_processing/include/audio_processing.h	/^  StreamConfig streams[StreamName::kNumStreamNames];$/;"	m	class:webrtc::ProcessingConfig
streams_	webrtc/base/logging.h	/^  static StreamList streams_;$/;"	m	class:rtc::LogMessage
streamval	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  uint32_t  streamval;$/;"	m	struct:Bitstreamstruct
streamval	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  uint32_t streamval;$/;"	m	struct:__anon142
stricmp	webrtc/base/common.h	/^#define stricmp(/;"	d
stricmp	webrtc/base/stringutils.h	/^inline int stricmp(const wchar_t* s1, const wchar_t* s2) {$/;"	f
string	webrtc/base/httpcommon.h	/^  typedef typename Traits<CTYPE>::string string;$/;"	t	class:rtc::Url
string	webrtc/base/stringutils.h	/^  typedef std::string string;$/;"	t	struct:rtc::Traits
string	webrtc/base/stringutils.h	/^  typedef std::wstring string;$/;"	t	struct:rtc::Traits
string_as_array	webrtc/system_wrappers/include/stl_util.h	/^inline char* string_as_array(std::string* str) {$/;"	f	namespace:webrtc
string_default	webrtc/base/flags.h	/^  const char* string_default() const {$/;"	f	class:rtc::Flag
string_match	webrtc/base/stringutils.cc	/^bool string_match(const char* target, const char* pattern) {$/;"	f	namespace:rtc
string_stream_	webrtc/base/fileutils_mock.h	/^    StringStream string_stream_;$/;"	m	class:rtc::FakeFileStream
string_trim	webrtc/base/stringutils.cc	/^std::string string_trim(const std::string& s) {$/;"	f	namespace:rtc
string_variable	webrtc/base/flags.h	/^  const char** string_variable() const {$/;"	f	class:rtc::Flag
strlen	webrtc/base/stringutils.h	/^inline size_t strlen(const wchar_t* s) {$/;"	f
strlenn	webrtc/base/stringutils.h	/^size_t strlenn(const CTYPE* buffer, size_t buflen) {$/;"	f	namespace:rtc
strncmp	webrtc/base/stringutils.h	/^inline int strncmp(const wchar_t* s1, const wchar_t* s2, size_t n) {$/;"	f
strnicmp	webrtc/base/common.h	/^#define strnicmp(/;"	d
strnicmp	webrtc/base/stringutils.h	/^inline int strnicmp(const wchar_t* s1, const wchar_t* s2, size_t n) {$/;"	f
strstr	webrtc/base/stringutils.h	/^inline const wchar_t* strstr(const wchar_t* haystack, const wchar_t* needle) {$/;"	f
strtoul	webrtc/base/stringutils.h	/^inline unsigned long strtoul(const wchar_t* snum, wchar_t** end, int base) {$/;"	f
stuck_	webrtc/base/task_unittest.cc	/^  TaskInfo stuck_[STUCK_TASK_COUNT];$/;"	m	class:rtc::TaskTest	file:
stuck_tasks_	webrtc/base/task_unittest.cc	/^  StuckTask* (stuck_tasks_[3]);$/;"	m	class:rtc::TimeoutChangeTest	file:
sub_frame	webrtc/modules/audio_coding/codecs/isac/main/source/pitch_filter.c	/^  int sub_frame;$/;"	m	struct:__anon124	file:
submodule_states_	webrtc/modules/audio_processing/audio_processing_impl.h	/^  ApmSubmoduleStates submodule_states_;$/;"	m	class:webrtc::AudioProcessingImpl
succeeded	webrtc/base/x11windowpicker.cc	/^  bool succeeded() const { return succeeded_; }$/;"	f	class:rtc::XWindowProperty
succeeded_	webrtc/base/x11windowpicker.cc	/^  bool succeeded_;$/;"	m	class:rtc::XWindowProperty	file:
sum	webrtc/base/rate_statistics.h	/^    size_t sum;      \/\/ Sum of all samples in this bucket.$/;"	m	struct:webrtc::RateStatistics::Bucket
sum	webrtc/base/virtualsocket_unittest.cc	/^  double sum;$/;"	m	struct:Receiver	file:
sum	webrtc/modules/audio_processing/aec/aec_core.h	/^  float sum;$/;"	m	struct:webrtc::Stats
sum	webrtc/modules/audio_processing/aec/echo_cancellation.h	/^  int sum;$/;"	m	struct:webrtc::Aec
sum	webrtc/modules/audio_processing/aecm/echo_control_mobile.cc	/^    short sum;$/;"	m	struct:__anon165	file:
sum	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^  int64_t sum;$/;"	m	struct:webrtc::test::TickIntervalStats
sumMagn	webrtc/modules/audio_processing/ns/ns_core.h	/^  float sumMagn;$/;"	m	struct:NoiseSuppressionC_
sumMagn	webrtc/modules/audio_processing/ns/nsx_core.h	/^  uint32_t                sumMagn;$/;"	m	struct:NoiseSuppressionFixedC_
sum_	webrtc/base/rollingaccumulator.h	/^  double sum_;    \/\/ Sum(x) - double to avoid overflow$/;"	m	class:rtc::RollingAccumulator
sum_	webrtc/modules/audio_processing/transient/moving_moments.h	/^  float sum_;$/;"	m	class:webrtc::MovingMoments
sum_	webrtc/modules/audio_processing/utility/block_mean_calculator.h	/^  float sum_;$/;"	m	class:webrtc::BlockMeanCalculator
sum_	webrtc/modules/audio_processing/vad/vad_circular_buffer.h	/^  double sum_;$/;"	m	class:webrtc::VadCircularBuffer
sum_2_	webrtc/base/rollingaccumulator.h	/^  double sum_2_;  \/\/ Sum(x*x) - double to avoid overflow$/;"	m	class:rtc::RollingAccumulator
sum_of_squares_	webrtc/modules/audio_processing/transient/moving_moments.h	/^  float sum_of_squares_;$/;"	m	class:webrtc::MovingMoments
sum_sq	webrtc/base/virtualsocket_unittest.cc	/^  double sum_sq;$/;"	m	struct:Receiver	file:
sum_square_	webrtc/modules/audio_processing/rms_level.h	/^  float sum_square_;$/;"	m	class:webrtc::RMSLevel
supGain	webrtc/modules/audio_processing/aecm/aecm_core.h	/^    int16_t supGain;$/;"	m	struct:__anon164
supGainErrParamA	webrtc/modules/audio_processing/aecm/aecm_core.h	/^    int16_t supGainErrParamA;$/;"	m	struct:__anon164
supGainErrParamD	webrtc/modules/audio_processing/aecm/aecm_core.h	/^    int16_t supGainErrParamD;$/;"	m	struct:__anon164
supGainErrParamDiffAB	webrtc/modules/audio_processing/aecm/aecm_core.h	/^    int16_t supGainErrParamDiffAB;$/;"	m	struct:__anon164
supGainErrParamDiffBD	webrtc/modules/audio_processing/aecm/aecm_core.h	/^    int16_t supGainErrParamDiffBD;$/;"	m	struct:__anon164
supGainOld	webrtc/modules/audio_processing/aecm/aecm_core.h	/^    int16_t supGainOld;$/;"	m	struct:__anon164
suppression_enabled_	webrtc/modules/audio_processing/transient/transient_suppressor.h	/^  bool suppression_enabled_;$/;"	m	class:webrtc::TransientSuppressor
suppression_level	webrtc/modules/audio_processing/echo_cancellation_impl.cc	/^EchoCancellation::SuppressionLevel EchoCancellationImpl::suppression_level()$/;"	f	class:webrtc::EchoCancellationImpl
surface	webrtc/modules/audio_processing/test/android/apmtest/jni/main.c	/^    EGLSurface surface;$/;"	m	struct:engine	file:
swap	webrtc/base/buffer.h	/^  friend void swap(BufferT& a, BufferT& b) {$/;"	f	class:rtc::BufferT
swap	webrtc/base/copyonwritebuffer.h	/^  friend void swap(CopyOnWriteBuffer& a, CopyOnWriteBuffer& b) {$/;"	f	class:rtc::CopyOnWriteBuffer
swap	webrtc/base/optional.h	/^  friend void swap(Optional& m1, Optional& m2) {$/;"	f	class:rtc::final
swap	webrtc/base/optional_unittest.cc	/^  friend void swap(Logger& a, Logger& b) {$/;"	f	class:rtc::__anon41::Logger
swap	webrtc/base/scoped_ref_ptr.h	/^  void swap(T** pp) {$/;"	f	class:rtc::scoped_refptr
swap	webrtc/base/scoped_ref_ptr.h	/^  void swap(scoped_refptr<T>& r) {$/;"	f	class:rtc::scoped_refptr
swap_default_filesystem	webrtc/base/fileutils.h	/^  static FilesystemInterface *swap_default_filesystem($/;"	f	class:rtc::Filesystem
sx	webrtc/modules/audio_processing/aec/aec_core.h	/^  float sx[PART_LEN1], sd[PART_LEN1], se[PART_LEN1];  \/\/ far, near, error psd$/;"	m	struct:webrtc::CoherenceState
sxd	webrtc/modules/audio_processing/aec/aec_core.h	/^  complex_t sxd[PART_LEN1];  \/\/ cross-psd of farend and nearend$/;"	m	struct:webrtc::CoherenceState
symbol_names	webrtc/base/latebindingsymboltable.h	/^    const char *const *symbol_names;$/;"	m	struct:rtc::LateBindingSymbolTable::TableInfo
symmetric	webrtc/base/natserver.h	/^  bool symmetric;$/;"	m	struct:rtc::RouteCmp
syntBuf	webrtc/modules/audio_processing/ns/ns_core.h	/^  float syntBuf[ANAL_BLOCKL_MAX];$/;"	m	struct:NoiseSuppressionC_
synthesisBuffer	webrtc/modules/audio_processing/ns/nsx_core.h	/^  int16_t                 synthesisBuffer[ANAL_BLOCKL_MAX];$/;"	m	struct:NoiseSuppressionFixedC_
synthesisFBState1	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  int32_t               synthesisFBState1[FB_STATE_SIZE_WORD32];$/;"	m	struct:__anon144
synthesisFBState2	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  int32_t               synthesisFBState2[FB_STATE_SIZE_WORD32];$/;"	m	struct:__anon144
synthesis_filters_	webrtc/modules/audio_processing/three_band_filter_bank.h	/^  std::vector<std::unique_ptr<SparseFIRFilter>> synthesis_filters_;$/;"	m	class:webrtc::final
synthesis_state1	webrtc/modules/audio_processing/splitting_filter.h	/^  int synthesis_state1[kStateSize];$/;"	m	struct:webrtc::TwoBandsStates
synthesis_state2	webrtc/modules/audio_processing/splitting_filter.h	/^  int synthesis_state2[kStateSize];$/;"	m	struct:webrtc::TwoBandsStates
system_delay	webrtc/modules/audio_processing/aec/aec_core.h	/^  int system_delay;  \/\/ Current system delay buffered in AEC.$/;"	m	struct:webrtc::AecCore
t_	webrtc/base/signalthread.h	/^        : t_(t) {$/;"	f	class:rtc::SignalThread::EnterExit
t_	webrtc/base/signalthread.h	/^    SignalThread* t_;$/;"	m	class:rtc::SignalThread::EnterExit
table_	webrtc/base/latebindingsymboltable.h	/^  void **table_;$/;"	m	class:rtc::LateBindingSymbolTable
tag_	webrtc/base/logging.h	/^  std::string tag_;$/;"	m	class:rtc::LogMessage
tap_	webrtc/base/stream.h	/^  std::unique_ptr<StreamInterface> tap_;$/;"	m	class:rtc::StreamTap
tap_error_	webrtc/base/stream.h	/^  int tap_error_;$/;"	m	class:rtc::StreamTap
tap_result_	webrtc/base/stream.h	/^  StreamResult tap_result_;$/;"	m	class:rtc::StreamTap
target	webrtc/base/weak_ptr_unittest.cc	/^  WeakPtr<Target> target;$/;"	m	struct:rtc::__anon74::Arrow	file:
target	webrtc/modules/audio_processing/intelligibility/intelligibility_utils.h	/^  float* target() { return target_.data(); }$/;"	f	class:webrtc::intelligibility::GainApplier
targetBitrate	webrtc/common_types.h	/^  unsigned int targetBitrate;  \/\/ kilobits\/sec.$/;"	m	class:webrtc::VideoCodec
targetBitrate	webrtc/common_types.h	/^  unsigned int targetBitrate;  \/\/ kilobits\/sec.$/;"	m	struct:webrtc::SimulcastStream
targetIdx	webrtc/modules/audio_processing/agc/legacy/analog_agc.h	/^  uint16_t targetIdx;           \/\/ Table index for corresponding target level$/;"	m	struct:__anon171
targetIdxOffset	webrtc/modules/audio_processing/agc/legacy/analog_agc.h	/^  uint16_t targetIdxOffset;  \/\/ Table index offset for level compensation$/;"	m	struct:__anon171
targetLevelDbfs	webrtc/modules/audio_processing/agc/legacy/analog_agc.h	/^  int16_t targetLevelDbfs;    \/\/ Target level in -dBfs of envelope (default -3)$/;"	m	struct:__anon171
targetLevelDbfs	webrtc/modules/audio_processing/agc/legacy/gain_control.h	/^  int16_t targetLevelDbfs;    \/\/ default 3 (-3 dBOv)$/;"	m	struct:__anon177
targetLeveldBOv	webrtc/common_types.h	/^  unsigned short targetLeveldBOv;$/;"	m	struct:webrtc::AgcConfig
target_	webrtc/modules/audio_processing/intelligibility/intelligibility_utils.h	/^  std::vector<float> target_;$/;"	m	class:webrtc::intelligibility::GainApplier
target_angle_degrees	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^  int target_angle_degrees = 90;$/;"	m	struct:webrtc::test::SimulationSettings
target_angle_radians_	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.h	/^  float target_angle_radians_;$/;"	m	class:webrtc::NonlinearBeamformer
target_bitrate_bps	webrtc/common_types.h	/^  int target_bitrate_bps;$/;"	m	struct:webrtc::SpatialLayer
target_bitrate_bps	webrtc/config.h	/^  int target_bitrate_bps;$/;"	m	struct:webrtc::VideoStream
target_compression_	webrtc/modules/audio_processing/agc/agc_manager_direct.h	/^  int target_compression_;$/;"	m	class:webrtc::final
target_cov_mats_	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.h	/^  ComplexMatrixF target_cov_mats_[kNumFreqBins];$/;"	m	class:webrtc::NonlinearBeamformer
target_direction	webrtc/modules/audio_processing/audio_processing_impl.h	/^    SphericalPointf target_direction;$/;"	m	struct:webrtc::AudioProcessingImpl::ApmCaptureState
target_direction	webrtc/modules/audio_processing/include/audio_processing.h	/^  const SphericalPointf target_direction;$/;"	m	struct:webrtc::Beamforming
target_level_dbfs	webrtc/modules/audio_processing/agc/agc.cc	/^int Agc::target_level_dbfs() const {$/;"	f	class:webrtc::Agc
target_level_dbfs	webrtc/modules/audio_processing/gain_control_for_experimental_agc.cc	/^int GainControlForExperimentalAgc::target_level_dbfs() const {$/;"	f	class:webrtc::GainControlForExperimentalAgc
target_level_dbfs	webrtc/modules/audio_processing/gain_control_impl.cc	/^int GainControlImpl::target_level_dbfs() const {$/;"	f	class:webrtc::GainControlImpl
target_level_dbfs_	webrtc/modules/audio_processing/agc/agc.h	/^  int target_level_dbfs_;$/;"	m	class:webrtc::Agc
target_level_loudness_	webrtc/modules/audio_processing/agc/agc.h	/^  double target_level_loudness_;$/;"	m	class:webrtc::Agc
task	webrtc/base/task_queue_gcd.cc	/^  std::unique_ptr<QueuedTask> task;$/;"	m	struct:rtc::TaskQueue::TaskContext	file:
task	webrtc/base/task_queue_libevent.cc	/^  std::unique_ptr<QueuedTask> task;$/;"	m	struct:rtc::__anon65::TimerEvent	file:
task_	webrtc/base/task_queue_libevent.cc	/^  std::unique_ptr<QueuedTask> task_;$/;"	m	class:rtc::TaskQueue::PostAndReplyTask	file:
task_	webrtc/base/task_queue_libevent.cc	/^  std::unique_ptr<QueuedTask> task_;$/;"	m	class:rtc::TaskQueue::SetTimerTask	file:
task_	webrtc/base/task_unittest.cc	/^    IdTimeoutTask *task_;$/;"	m	struct:rtc::TaskTest::TaskInfo	file:
task_count_	webrtc/base/task_unittest.cc	/^  int task_count_;$/;"	m	class:rtc::TimeoutChangeTest	file:
task_runner_	webrtc/base/task_unittest.cc	/^  MyTaskRunner task_runner_;$/;"	m	class:rtc::AbortShouldWakeTest	file:
task_runner_	webrtc/base/task_unittest.cc	/^  MyTaskRunner task_runner_;$/;"	m	class:rtc::TaskAbortTest	file:
task_runner_	webrtc/base/task_unittest.cc	/^  MyTaskRunner task_runner_;$/;"	m	class:rtc::TaskTest	file:
task_runner_	webrtc/base/task_unittest.cc	/^  MyTaskRunner task_runner_;$/;"	m	class:rtc::TimeoutChangeTest	file:
tasks_	webrtc/base/taskrunner.h	/^  std::vector<Task *> tasks_;$/;"	m	class:rtc::TaskRunner
tasks_running_	webrtc/base/taskrunner.h	/^  bool tasks_running_;$/;"	m	class:rtc::TaskRunner
tcp_listen_enabled	webrtc/base/firewallsocketserver.h	/^  bool tcp_listen_enabled() const { return tcp_listen_enabled_; }$/;"	f	class:rtc::FirewallSocketServer
tcp_listen_enabled_	webrtc/base/firewallsocketserver.h	/^  bool tcp_listen_enabled_;$/;"	m	class:rtc::FirewallSocketServer
tcp_proxy_server_	webrtc/base/natserver.h	/^  ProxyServer* tcp_proxy_server_;$/;"	m	class:rtc::NATServer
tcp_socket_	webrtc/base/asynctcpsocket_unittest.cc	/^  std::unique_ptr<AsyncTCPSocket> tcp_socket_;$/;"	m	class:rtc::AsyncTCPSocketTest	file:
tcp_sockets_enabled_	webrtc/base/firewallsocketserver.h	/^  bool tcp_sockets_enabled_;$/;"	m	class:rtc::FirewallSocketServer
temp_filenames	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^std::map<std::string, std::string> temp_filenames;$/;"	m	namespace:webrtc::__anon183	file:
temp_filenames_	webrtc/modules/audio_processing/transient/file_utils_unittest.cc	/^  std::vector<std::string> temp_filenames_;$/;"	m	class:webrtc::TransientFileUtilsTest	file:
temporalIdx	webrtc/modules/include/module_common_types.h	/^  uint8_t temporalIdx;        \/\/ Temporal layer index, or kNoTemporalIdx.$/;"	m	struct:webrtc::RTPVideoHeaderVP8
temporal_idx	webrtc/modules/include/module_common_types.h	/^  uint8_t temporal_idx;    \/\/ Temporal layer index, or kNoTemporalIdx.$/;"	m	struct:webrtc::RTPVideoHeaderVP9
temporal_idx	webrtc/modules/include/module_common_types.h	/^  uint8_t temporal_idx[kMaxVp9FramesInGof];$/;"	m	struct:webrtc::GofInfoVP9
temporal_layer_thresholds_bps	webrtc/config.h	/^  std::vector<int> temporal_layer_thresholds_bps;$/;"	m	struct:webrtc::VideoStream
temporal_up_switch	webrtc/modules/include/module_common_types.h	/^  bool temporal_up_switch;  \/\/ True if upswitch to higher frame rate is possible$/;"	m	struct:webrtc::RTPVideoHeaderVP9
temporal_up_switch	webrtc/modules/include/module_common_types.h	/^  bool temporal_up_switch[kMaxVp9FramesInGof];$/;"	m	struct:webrtc::GofInfoVP9
test	webrtc/base/messagequeue_unittest.cc	/^  MessageQueueTest* test;$/;"	m	struct:DeletedLockChecker	file:
test	webrtc/modules/audio_processing/include/mock_audio_processing.h	/^namespace test {$/;"	n	namespace:webrtc
test	webrtc/modules/audio_processing/test/aec_dump_based_simulator.cc	/^namespace test {$/;"	n	namespace:webrtc	file:
test	webrtc/modules/audio_processing/test/aec_dump_based_simulator.h	/^namespace test {$/;"	n	namespace:webrtc
test	webrtc/modules/audio_processing/test/audio_buffer_tools.cc	/^namespace test {$/;"	n	namespace:webrtc	file:
test	webrtc/modules/audio_processing/test/audio_buffer_tools.h	/^namespace test {$/;"	n	namespace:webrtc
test	webrtc/modules/audio_processing/test/audio_processing_simulator.cc	/^namespace test {$/;"	n	namespace:webrtc	file:
test	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^namespace test {$/;"	n	namespace:webrtc
test	webrtc/modules/audio_processing/test/audioproc_float.cc	/^namespace test {$/;"	n	namespace:webrtc	file:
test	webrtc/modules/audio_processing/test/bitexactness_tools.cc	/^namespace test {$/;"	n	namespace:webrtc	file:
test	webrtc/modules/audio_processing/test/bitexactness_tools.h	/^namespace test {$/;"	n	namespace:webrtc
test	webrtc/modules/audio_processing/test/debug_dump_replayer.cc	/^namespace test {$/;"	n	namespace:webrtc	file:
test	webrtc/modules/audio_processing/test/debug_dump_replayer.h	/^namespace test {$/;"	n	namespace:webrtc
test	webrtc/modules/audio_processing/test/debug_dump_test.cc	/^namespace test {$/;"	n	namespace:webrtc	file:
test	webrtc/modules/audio_processing/test/wav_based_simulator.cc	/^namespace test {$/;"	n	namespace:webrtc	file:
test	webrtc/modules/audio_processing/test/wav_based_simulator.h	/^namespace test {$/;"	n	namespace:webrtc
test_	webrtc/base/physicalsocketserver_unittest.cc	/^  PhysicalSocketTest* test_;$/;"	m	class:rtc::FakePhysicalSocketServer	file:
test_	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  AudioProcessingImplLockTest* const test_ = nullptr;$/;"	m	class:webrtc::__anon181::CaptureProcessor	file:
test_	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  AudioProcessingImplLockTest* const test_ = nullptr;$/;"	m	class:webrtc::__anon181::RenderProcessor	file:
test_	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^  CallSimulator* test_ = nullptr;$/;"	m	class:webrtc::__anon182::TimedThreadApiProcessor	file:
test_base_	webrtc/base/sslstreamadapter_unittest.cc	/^  SSLStreamAdapterTestBase* test_base_;$/;"	m	class:SSLDummyStreamBase	file:
test_buffer_even_len	webrtc/modules/audio_processing/transient/dyadic_decimator_unittest.cc	/^int16_t const test_buffer_even_len[] = {0, 1, 2, 3, 4, 5};$/;"	m	namespace:webrtc	file:
test_buffer_odd_len	webrtc/modules/audio_processing/transient/dyadic_decimator_unittest.cc	/^int16_t const test_buffer_odd_len[]  = {0, 1, 2, 3, 4};$/;"	m	namespace:webrtc	file:
test_buffer_out	webrtc/modules/audio_processing/transient/dyadic_decimator_unittest.cc	/^int16_t test_buffer_out[kOutBufferLength];$/;"	m	namespace:webrtc	file:
test_cert_	webrtc/base/sslidentity_unittest.cc	/^  std::unique_ptr<rtc::SSLCertificate> test_cert_;$/;"	m	class:SSLIdentityTest	file:
test_complete_	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  rtc::Event test_complete_;$/;"	m	class:webrtc::__anon181::AudioProcessingImplLockTest	file:
test_complete_	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^  const std::unique_ptr<EventWrapper> test_complete_;$/;"	m	class:webrtc::__anon182::CallSimulator	file:
test_config_	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  TestConfig test_config_;$/;"	m	class:webrtc::__anon181::AudioProcessingImplLockTest	file:
test_config_	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  TestConfig* test_config_ = nullptr;$/;"	m	class:webrtc::__anon181::StatsProcessor	file:
test_config_	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  const TestConfig* const test_config_ = nullptr;$/;"	m	class:webrtc::__anon181::CaptureProcessor	file:
test_config_	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^  const TestConfig* const test_config_ = nullptr;$/;"	m	class:webrtc::__anon181::RenderProcessor	file:
test_file_	webrtc/base/optionsfile_unittest.cc	/^  std::string test_file_;$/;"	m	class:rtc::MAYBE_OptionsFileTest	file:
test_has_data_and_size	webrtc/base/type_traits.h	/^namespace test_has_data_and_size {$/;"	n	namespace:rtc
testbase64	webrtc/base/testbase64.h	/^static unsigned char testbase64[] = {$/;"	v
testfile	webrtc/modules/audio_processing/aecm/aecm_core.cc	/^FILE *testfile;$/;"	v
testing	webrtc/base/testutils.h	/^namespace testing {$/;"	n
thawte_Primary_Root_CA___G2_certificate	webrtc/base/sslroots.h	/^const unsigned char thawte_Primary_Root_CA___G2_certificate[652]={$/;"	v
thawte_Primary_Root_CA___G3_certificate	webrtc/base/sslroots.h	/^const unsigned char thawte_Primary_Root_CA___G3_certificate[1070]={$/;"	v
thawte_Primary_Root_CA_certificate	webrtc/base/sslroots.h	/^const unsigned char thawte_Primary_Root_CA_certificate[1060]={$/;"	v
this_type	webrtc/base/sigslotrepeater.h	/^    typedef repeater0<mt_policy> this_type;$/;"	t	class:sigslot::repeater0
this_type	webrtc/base/sigslotrepeater.h	/^    typedef repeater1<arg1_type, mt_policy> this_type;$/;"	t	class:sigslot::repeater1
this_type	webrtc/base/sigslotrepeater.h	/^    typedef repeater2<arg1_type, arg2_type, mt_policy> this_type;$/;"	t	class:sigslot::repeater2
this_type	webrtc/base/sigslotrepeater.h	/^    typedef repeater3<arg1_type, arg2_type, arg3_type, mt_policy> this_type;$/;"	t	class:sigslot::repeater3
thread	webrtc/base/java/src/org/webrtc/ThreadUtils.java	/^    private Thread thread = Thread.currentThread();$/;"	f	class:ThreadUtils.ThreadChecker	file:
thread	webrtc/base/thread.cc	/^  Thread* thread;$/;"	m	struct:rtc::ThreadInit	file:
thread	webrtc/base/thread.h	/^  Thread *thread;$/;"	m	struct:rtc::_SendMessage
thread	webrtc/base/virtualsocket_unittest.cc	/^  Thread* thread;$/;"	m	struct:Receiver	file:
thread	webrtc/base/virtualsocket_unittest.cc	/^  Thread* thread;$/;"	m	struct:Sender	file:
thread_	webrtc/base/criticalsection_unittest.cc	/^  PlatformThread thread_;$/;"	m	class:rtc::PerfTestThread	file:
thread_	webrtc/base/logging.cc	/^bool LogMessage::thread_, LogMessage::timestamp_;$/;"	m	class:rtc::LogMessage	file:
thread_	webrtc/base/logging.h	/^  static bool thread_, timestamp_;$/;"	m	class:rtc::LogMessage
thread_	webrtc/base/network.h	/^  Thread* thread_;$/;"	m	class:rtc::BasicNetworkManager
thread_	webrtc/base/platform_thread.h	/^  HANDLE thread_;$/;"	m	class:rtc::PlatformThread
thread_	webrtc/base/platform_thread.h	/^  pthread_t thread_;$/;"	m	class:rtc::PlatformThread
thread_	webrtc/base/sequenced_task_checker_unittest.cc	/^  PlatformThread thread_;$/;"	m	class:rtc::__anon56::CallCalledSequentiallyOnThread	file:
thread_	webrtc/base/sequenced_task_checker_unittest.cc	/^  PlatformThread thread_;$/;"	m	class:rtc::__anon56::DeleteSequencedCheckerOnThread	file:
thread_	webrtc/base/signalthread_unittest.cc	/^  SlowSignalThread* thread_;$/;"	m	class:SignalThreadTest	file:
thread_	webrtc/base/task_queue.h	/^  PlatformThread thread_;$/;"	m	class:rtc::TaskQueue
thread_	webrtc/base/task_queue.h	/^  WorkerThread thread_;$/;"	m	class:rtc::TaskQueue
thread_	webrtc/base/thread.h	/^    Thread* const thread_;$/;"	m	class:rtc::Thread::ScopedDisallowBlockingCalls
thread_	webrtc/base/thread.h	/^  HANDLE thread_;$/;"	m	class:rtc::Thread
thread_	webrtc/base/thread.h	/^  pthread_t thread_;$/;"	m	class:rtc::Thread
thread_	webrtc/base/thread_checker_unittest.cc	/^  rtc::Thread* thread_;$/;"	m	class:rtc::ThreadAnnotateTest	file:
thread_	webrtc/base/thread_unittest.cc	/^  Thread* thread_;$/;"	m	class:SetNameOnSignalQueueDestroyedTester	file:
thread_checker_	webrtc/base/event_tracer.cc	/^  rtc::ThreadChecker thread_checker_;$/;"	m	class:rtc::tracing::__anon12::final	file:
thread_checker_	webrtc/base/platform_thread.h	/^  rtc::ThreadChecker thread_checker_;$/;"	m	class:rtc::PlatformThread
thread_checker_	webrtc/base/sequenced_task_checker_impl.h	/^  ThreadChecker thread_checker_;$/;"	m	class:rtc::SequencedTaskCheckerImpl
thread_checker_class_	webrtc/base/thread_checker_unittest.cc	/^  ThreadCheckerClass* thread_checker_class_;$/;"	m	class:rtc::__anon69::CallDoStuffOnThread	file:
thread_checker_class_	webrtc/base/thread_checker_unittest.cc	/^  std::unique_ptr<ThreadCheckerClass> thread_checker_class_;$/;"	m	class:rtc::__anon69::DeleteThreadCheckerClassOnThread	file:
thread_completed_	webrtc/base/signalthread_unittest.cc	/^  int thread_completed_;$/;"	m	class:SignalThreadTest	file:
thread_context	webrtc/base/task_queue_win.cc	/^  void* thread_context;$/;"	m	struct:rtc::__anon67::ThreadStartupData	file:
thread_deleted_	webrtc/base/signalthread_unittest.cc	/^  int thread_deleted_;$/;"	m	class:SignalThreadTest	file:
thread_done_	webrtc/base/signalthread_unittest.cc	/^  int thread_done_;$/;"	m	class:SignalThreadTest	file:
thread_has_run_event_	webrtc/base/sequenced_task_checker_unittest.cc	/^  Event thread_has_run_event_;$/;"	m	class:rtc::__anon56::CallCalledSequentiallyOnThread	file:
thread_has_run_event_	webrtc/base/sequenced_task_checker_unittest.cc	/^  Event thread_has_run_event_;$/;"	m	class:rtc::__anon56::DeleteSequencedCheckerOnThread	file:
thread_id_	webrtc/base/platform_thread.h	/^  DWORD thread_id_;$/;"	m	class:rtc::PlatformThread
thread_id_	webrtc/base/thread.h	/^  DWORD thread_id_;$/;"	m	class:rtc::Thread
thread_started_	webrtc/base/signalthread_unittest.cc	/^  int thread_started_;$/;"	m	class:SignalThreadTest	file:
thread_stopped_	webrtc/base/signalthread_unittest.cc	/^  int thread_stopped_;$/;"	m	class:SignalThreadTest	file:
threads_active_	webrtc/base/criticalsection_unittest.cc	/^  int threads_active_;$/;"	m	class:rtc::__anon10::RunnerBase	file:
three_band_filter_banks_	webrtc/modules/audio_processing/splitting_filter.h	/^  std::vector<std::unique_ptr<ThreeBandFilterBank>> three_band_filter_banks_;$/;"	m	class:webrtc::SplittingFilter
thresFluctLrt	webrtc/modules/audio_processing/ns/ns_core.h	/^  float thresFluctLrt;$/;"	m	struct:NSParaExtract_
thresPosSpecFlat	webrtc/modules/audio_processing/ns/ns_core.h	/^  float thresPosSpecFlat;$/;"	m	struct:NSParaExtract_
thresWeightSpecDiff	webrtc/modules/audio_processing/ns/ns_core.h	/^  int thresWeightSpecDiff;$/;"	m	struct:NSParaExtract_
thresWeightSpecFlat	webrtc/modules/audio_processing/ns/ns_core.h	/^  int thresWeightSpecFlat;$/;"	m	struct:NSParaExtract_
thresholdLogLrt	webrtc/modules/audio_processing/ns/nsx_core.h	/^  int32_t                 thresholdLogLrt;$/;"	m	struct:NoiseSuppressionFixedC_
thresholdSpecDiff	webrtc/modules/audio_processing/ns/nsx_core.h	/^  uint32_t                thresholdSpecDiff;$/;"	m	struct:NoiseSuppressionFixedC_
thresholdSpecFlat	webrtc/modules/audio_processing/ns/nsx_core.h	/^  uint32_t                thresholdSpecFlat;$/;"	m	struct:NoiseSuppressionFixedC_
tid	webrtc/base/event_tracer.cc	/^    rtc::PlatformThreadId tid;$/;"	m	struct:rtc::tracing::__anon12::final::TraceEvent	file:
timeAvgMagnEnergy	webrtc/modules/audio_processing/ns/nsx_core.h	/^  uint32_t                timeAvgMagnEnergy;$/;"	m	struct:NoiseSuppressionFixedC_
timeAvgMagnEnergyTmp	webrtc/modules/audio_processing/ns/nsx_core.h	/^  uint32_t                timeAvgMagnEnergyTmp;$/;"	m	struct:NoiseSuppressionFixedC_
timeForDelayChange	webrtc/modules/audio_processing/aec/echo_cancellation.h	/^  int timeForDelayChange;$/;"	m	struct:webrtc::Aec
timeForDelayChange	webrtc/modules/audio_processing/aecm/echo_control_mobile.cc	/^    int timeForDelayChange;$/;"	m	struct:__anon165	file:
time_	webrtc/base/ratetracker_unittest.cc	/^  int64_t time_;$/;"	m	class:rtc::RateTrackerForTest	file:
time_active_	webrtc/modules/audio_processing/typing_detection.h	/^  int time_active_;$/;"	m	class:webrtc::TypingDetection
time_since_last_typing_	webrtc/modules/audio_processing/typing_detection.h	/^  int time_since_last_typing_;$/;"	m	class:webrtc::TypingDetection
time_smooth_mask_	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.h	/^  float time_smooth_mask_[kNumFreqBins];$/;"	m	class:webrtc::NonlinearBeamformer
time_to_perform_	webrtc/base/task_unittest.cc	/^  int time_to_perform_;$/;"	m	class:rtc::HappyTask	file:
time_us_	webrtc/system_wrappers/include/clock.h	/^  int64_t time_us_;$/;"	m	class:webrtc::SimulatedClock
time_window_	webrtc/modules/audio_processing/typing_detection.h	/^  int time_window_;$/;"	m	class:webrtc::TypingDetection
timed_out_	webrtc/base/task_unittest.cc	/^    bool timed_out_;$/;"	m	struct:rtc::TaskTest::TaskInfo	file:
timeout	webrtc/base/httprequest.h	/^  int timeout() { return timeout_; }$/;"	f	class:rtc::HttpRequest
timeout_	webrtc/base/httprequest.h	/^  int timeout_;$/;"	m	class:rtc::HttpRequest
timeout_change	webrtc/base/task_unittest.cc	/^  bool timeout_change() const {$/;"	f	class:rtc::MyTaskRunner
timeout_change_	webrtc/base/task_unittest.cc	/^  bool timeout_change_;$/;"	m	class:rtc::MyTaskRunner	file:
timeout_seconds	webrtc/base/task.h	/^  int timeout_seconds() const { return timeout_seconds_; }$/;"	f	class:rtc::Task
timeout_seconds_	webrtc/base/task.h	/^  int timeout_seconds_;$/;"	m	class:rtc::Task
timeout_suspended_	webrtc/base/task.h	/^  bool timeout_suspended_;$/;"	m	class:rtc::Task
timeout_time	webrtc/base/task.h	/^  int64_t timeout_time() const { return timeout_time_; }$/;"	f	class:rtc::Task
timeout_time_	webrtc/base/task.h	/^  int64_t timeout_time_;$/;"	m	class:rtc::Task
timestamp	webrtc/base/asyncpacketsocket.h	/^  int64_t timestamp;   \/\/ Receive time after socket delivers the data.$/;"	m	struct:rtc::PacketTime
timestamp	webrtc/base/event_tracer.cc	/^    uint64_t timestamp;$/;"	m	struct:rtc::tracing::__anon12::final::TraceEvent	file:
timestamp	webrtc/common_types.h	/^  int64_t timestamp;   \/\/ Receive time after socket delivers the data.$/;"	m	struct:webrtc::PacketTime
timestamp	webrtc/common_types.h	/^  uint32_t timestamp;$/;"	m	struct:webrtc::RTPHeader
timestamp_	webrtc/base/logging.cc	/^bool LogMessage::thread_, LogMessage::timestamp_;$/;"	m	class:rtc::LogMessage	file:
timestamp_	webrtc/base/logging.h	/^  static bool thread_, timestamp_;$/;"	m	class:rtc::LogMessage
timestamp_	webrtc/modules/include/module_common_types.h	/^  uint32_t timestamp_;$/;"	m	class:webrtc::AudioFrame
timestamps_us_	webrtc/modules/audio_processing/level_controller/level_controller_complexity_unittest.cc	/^  std::vector<int64_t> timestamps_us_;$/;"	m	class:webrtc::__anon209::SubmodulePerformanceTimer	file:
title	webrtc/base/windowpicker.h	/^  const std::string& title() const { return title_; }$/;"	f	class:rtc::DesktopDescription
title	webrtc/base/windowpicker.h	/^  const std::string& title() const { return title_; }$/;"	f	class:rtc::WindowDescription
title_	webrtc/base/windowpicker.h	/^  std::string title_;$/;"	m	class:rtc::DesktopDescription
title_	webrtc/base/windowpicker.h	/^  std::string title_;$/;"	m	class:rtc::WindowDescription
tl0PicIdx	webrtc/modules/include/module_common_types.h	/^  int16_t tl0PicIdx;          \/\/ TL0PIC_IDX, 8 bits;$/;"	m	struct:webrtc::RTPVideoHeaderVP8
tl0_pic_idx	webrtc/modules/include/module_common_types.h	/^  int16_t tl0_pic_idx;     \/\/ TL0PIC_IDX, 8 bits;$/;"	m	struct:webrtc::RTPVideoHeaderVP9
tl_factory	webrtc/common_types.h	/^  const TemporalLayersFactory* tl_factory;$/;"	m	struct:webrtc::VideoCodecVP8
toString	webrtc/base/java/src/org/webrtc/Size.java	/^  public String toString() {$/;"	m	class:Size
tokenize	webrtc/base/stringencode.cc	/^size_t tokenize(const std::string& source, char delimiter, char start_mark,$/;"	f	namespace:rtc
tokenize	webrtc/base/stringencode.cc	/^size_t tokenize(const std::string& source, char delimiter,$/;"	f	namespace:rtc
tokenize_append	webrtc/base/stringencode.cc	/^size_t tokenize_append(const std::string& source, char delimiter,$/;"	f	namespace:rtc
tokenize_first	webrtc/base/stringencode.cc	/^bool tokenize_first(const std::string& source,$/;"	f	namespace:rtc
tokenize_with_empty_tokens	webrtc/base/stringencode.cc	/^size_t tokenize_with_empty_tokens(const std::string& source,$/;"	f	namespace:rtc
tolowercase	webrtc/base/stringutils.h	/^inline char tolowercase(char c) {$/;"	f
tolowercase	webrtc/base/stringutils.h	/^inline wchar_t tolowercase(wchar_t c) {$/;"	f
totCount	webrtc/modules/audio_processing/aecm/aecm_core.h	/^    uint32_t totCount;$/;"	m	struct:__anon164
total	webrtc/base/criticalsection_unittest.cc	/^  int64_t total() const {$/;"	f	class:rtc::PerfTestData
total	webrtc/common_audio/vad/vad_core.h	/^    int16_t total[3];$/;"	m	struct:VadInstT_
total_accessors_	webrtc/base/diskcache.h	/^  mutable size_t total_accessors_;$/;"	m	class:rtc::DiskCache
total_sample_count_	webrtc/base/ratetracker.h	/^  size_t total_sample_count_;$/;"	m	class:rtc::RateTracker
total_samples_	webrtc/common_audio/resampler/sinusoidal_linear_chirp_source.h	/^  size_t total_samples_;$/;"	m	class:webrtc::SinusoidalLinearChirpSource
total_size_	webrtc/base/diskcache.h	/^  size_t max_cache_, total_size_;$/;"	m	class:rtc::DiskCache
trace_event_internal	webrtc/base/trace_event.h	/^namespace trace_event_internal {$/;"	n	namespace:webrtc
trace_to_stderr	webrtc/modules/audio_processing/agc/agc_manager_direct_unittest.cc	/^  test::TraceToStderr trace_to_stderr;$/;"	m	class:webrtc::AgcManagerDirectTest	file:
tracing	webrtc/base/event_tracer.cc	/^namespace tracing {$/;"	n	namespace:rtc	file:
tracing	webrtc/base/event_tracer.h	/^namespace tracing {$/;"	n	namespace:rtc
tracingEnabled	webrtc/base/java/src/org/webrtc/Logging.java	/^  private static volatile boolean tracingEnabled;$/;"	f	class:Logging	file:
transaction	webrtc/base/httpclient.h	/^  HttpTransaction* transaction() { return transaction_; }$/;"	f	class:rtc::HttpClient
transaction	webrtc/base/httpclient.h	/^  const HttpTransaction* transaction() const { return transaction_; }$/;"	f	class:rtc::HttpClient
transaction	webrtc/base/httpserver_unittest.cc	/^    HttpServerTransaction* transaction;$/;"	m	struct:rtc::__anon20::HttpServerMonitor	file:
transaction_	webrtc/base/httpclient.h	/^  HttpTransaction* transaction_;$/;"	m	class:rtc::HttpClient
transcode_obj	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^} transcode_obj;$/;"	t	typeref:struct:__anon142
transform	webrtc/base/stringencode.cc	/^size_t transform(std::string& value, size_t maxlen, const std::string& source,$/;"	f	namespace:rtc
transform_	webrtc/base/transformadapter.h	/^  TransformInterface * transform_;$/;"	m	class:rtc::TransformAdapter
transform_	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.h	/^  LappedTransform transform_;$/;"	m	class:webrtc::PostFilterTransform
transform_tables	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  TransformTables transform_tables;$/;"	m	struct:__anon144
transient_suppressor	webrtc/modules/audio_processing/audio_processing_impl.cc	/^  std::unique_ptr<TransientSuppressor> transient_suppressor;$/;"	m	struct:webrtc::AudioProcessingImpl::ApmPublicSubmodules	file:
transient_suppressor_enabled	webrtc/modules/audio_processing/audio_processing_impl.h	/^    bool transient_suppressor_enabled;$/;"	m	struct:webrtc::AudioProcessingImpl::ApmCaptureState
transient_suppressor_enabled_	webrtc/modules/audio_processing/audio_processing_impl.h	/^    bool transient_suppressor_enabled_ = false;$/;"	m	class:webrtc::AudioProcessingImpl::ApmSubmoduleStates
transmissionTimeOffset	webrtc/common_types.h	/^  int32_t transmissionTimeOffset;$/;"	m	struct:webrtc::RTPHeaderExtension
transmitted	webrtc/common_types.h	/^  RtpPacketCounter transmitted;    \/\/ Number of transmitted packets\/bytes.$/;"	m	struct:webrtc::StreamDataCounters
transportSequenceNumber	webrtc/common_types.h	/^  uint16_t transportSequenceNumber;$/;"	m	struct:webrtc::RTPHeaderExtension
tree_leaves_data_length_	webrtc/modules/audio_processing/transient/transient_detector.h	/^  size_t tree_leaves_data_length_;$/;"	m	class:webrtc::TransientDetector
true_type	webrtc/base/template_util.h	/^typedef integral_constant<bool, true> true_type;$/;"	t	namespace:rtc
ts	webrtc/modules/audio_processing/transient/common.h	/^namespace ts {$/;"	n	namespace:webrtc
ts_sensitive	webrtc/base/messagequeue.h	/^  int64_t ts_sensitive;$/;"	m	struct:rtc::Message
tstring	webrtc/base/proxydetect.cc	/^typedef std::wstring tstring;$/;"	t	namespace:rtc	file:
two_bands_states_	webrtc/modules/audio_processing/splitting_filter.h	/^  std::vector<TwoBandsStates> two_bands_states_;$/;"	m	class:webrtc::SplittingFilter
type	webrtc/base/bind.h	/^                                       T*>::type type;$/;"	t	struct:rtc::detail::PointerType
type	webrtc/base/bind.h	/^  typedef IfFalseT type;$/;"	t	struct:rtc::detail::TernaryTypeOperator
type	webrtc/base/bind.h	/^  typedef IfTrueT type;$/;"	t	struct:rtc::detail::TernaryTypeOperator
type	webrtc/base/bind.h	/^template <class T> struct identity { typedef T type; };$/;"	t	struct:rtc::detail::identity
type	webrtc/base/event_tracer.cc	/^    unsigned char type;$/;"	m	struct:rtc::tracing::__anon12::final::TraceArg	file:
type	webrtc/base/flags.h	/^  Type type() const  { return type_; }$/;"	f	class:rtc::Flag
type	webrtc/base/network.h	/^  AdapterType type() const { return type_; }$/;"	f	class:rtc::Network
type	webrtc/base/proxyinfo.h	/^  ProxyType type;$/;"	m	struct:rtc::ProxyInfo
type	webrtc/base/sslidentity.h	/^  KeyType type() const { return type_; }$/;"	f	class:rtc::KeyParams
type	webrtc/base/template_util.h	/^  typedef T type;$/;"	t	struct:rtc::remove_reference
type	webrtc/base/template_util.h	/^  typedef integral_constant<T, v> type;$/;"	t	struct:rtc::integral_constant
type	webrtc/modules/include/module_common_types.h	/^  RTPTypeHeader type;$/;"	m	struct:webrtc::WebRtcRTPHeader
type	webrtc/modules/include/module_common_types.h	/^  uint8_t type;$/;"	m	struct:webrtc::NaluInfo
type_	webrtc/base/dbus.h	/^  DBusBusType type_;$/;"	m	class:rtc::DBusMonitor
type_	webrtc/base/firewallsocketserver.cc	/^  int type_;$/;"	m	class:rtc::FirewallSocket	file:
type_	webrtc/base/flags.h	/^  Type type_;$/;"	m	class:rtc::Flag
type_	webrtc/base/natsocketfactory.cc	/^  int type_;$/;"	m	class:rtc::NATSocket	file:
type_	webrtc/base/network.h	/^  AdapterType type_;$/;"	m	class:rtc::Network
type_	webrtc/base/sslidentity.h	/^  KeyType type_;$/;"	m	class:rtc::KeyParams
type_	webrtc/base/sslsocketfactory.cc	/^  int type_;$/;"	m	class:rtc::ProxySocketAdapter	file:
type_	webrtc/base/virtualsocketserver.h	/^  int type_;$/;"	m	class:rtc::VirtualSocket
type_event_delay_	webrtc/modules/audio_processing/typing_detection.h	/^  int type_event_delay_;$/;"	m	class:webrtc::TypingDetection
u_	webrtc/base/ipaddress.h	/^  } u_;$/;"	m	class:rtc::IPAddress	typeref:union:rtc::IPAddress::__anon22
ubuf	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  double    ubuf[PITCH_BUFFSIZE];$/;"	m	struct:__anon128
udp_	webrtc/base/physicalsocketserver.h	/^  bool udp_;$/;"	m	class:rtc::PhysicalSocket
udp_server_socket_	webrtc/base/natserver.h	/^  AsyncUDPSocket* udp_server_socket_;$/;"	m	class:rtc::NATServer
udp_socket_	webrtc/base/asyncudpsocket_unittest.cc	/^  std::unique_ptr<AsyncUDPSocket> udp_socket_;$/;"	m	class:rtc::AsyncUdpSocketTest	file:
udp_sockets_enabled_	webrtc/base/firewallsocketserver.h	/^  bool udp_sockets_enabled_;$/;"	m	class:rtc::FirewallSocketServer
ulmax	webrtc/base/mod_ops_unittest.cc	/^  static const unsigned long ulmax = ~0ul;  \/\/ NOLINT$/;"	m	class:webrtc::TestModOps	file:
ulpfec_payload_type	webrtc/config.h	/^  int ulpfec_payload_type;$/;"	m	struct:webrtc::UlpfecConfig
unProcessedData	WebRTCAudioProcessing_jni.h	/^	unsigned char*	unProcessedData;$/;"	m	struct:WebRTCAudioProcessing
unProcessedSize	WebRTCAudioProcessing_jni.h	/^	int			unProcessedSize;$/;"	m	struct:WebRTCAudioProcessing
undefined_symbols_	webrtc/base/latebindingsymboltable.h	/^  bool undefined_symbols_;$/;"	m	class:rtc::LateBindingSymbolTable
unescape	webrtc/base/stringencode.cc	/^size_t unescape(char * buffer, size_t buflen,$/;"	f	namespace:rtc
uniform_cov_mat_	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.h	/^  ComplexMatrixF uniform_cov_mat_[kNumFreqBins];$/;"	m	class:webrtc::NonlinearBeamformer
unique	webrtc/base/linked_ptr.h	/^    bool unique()   const throw()   {return itsPrev ? itsPrev==this : true;}$/;"	f	class:rtc::linked_ptr
unique_id	webrtc/base/task.h	/^  int32_t unique_id() { return unique_id_; }$/;"	f	class:rtc::Task
unique_id_	webrtc/base/task.h	/^  int32_t unique_id_;$/;"	m	class:rtc::Task
unique_id_seed_	webrtc/base/task.cc	/^int32_t Task::unique_id_seed_ = 0;$/;"	m	class:rtc::Task	file:
unique_id_seed_	webrtc/base/task.h	/^  static int32_t unique_id_seed_;$/;"	m	class:rtc::Task
unique_nack_requests	webrtc/common_types.h	/^  uint32_t unique_nack_requests;  \/\/ Number of unique NACKed RTP packets.$/;"	m	struct:webrtc::RtcpPacketTypeCounter
unknown_mechanisms_	webrtc/base/socketadapters.h	/^  std::string unknown_mechanisms_;$/;"	m	class:rtc::AsyncHttpsProxySocket
unlock	webrtc/base/sigslot.cc	/^void multi_threaded_global::unlock() {$/;"	f	class:sigslot::multi_threaded_global
unlock	webrtc/base/sigslot.cc	/^void multi_threaded_local::unlock() {$/;"	f	class:sigslot::multi_threaded_local
unlock	webrtc/base/sigslot.h	/^		virtual void unlock()$/;"	f	class:sigslot::multi_threaded_global
unlock	webrtc/base/sigslot.h	/^		virtual void unlock()$/;"	f	class:sigslot::multi_threaded_local
unlock	webrtc/base/sigslot.h	/^                virtual void unlock() {}$/;"	f	class:sigslot::single_threaded
unlock	webrtc/base/sigslot_unittest.cc	/^  virtual void unlock() {$/;"	f	class:multi_threaded_local_fake
unlock_count_	webrtc/base/sigslot_unittest.cc	/^  int unlock_count_;$/;"	m	class:multi_threaded_local_fake	file:
unprintable_count_	webrtc/base/logging.h	/^  size_t unprintable_count_[2];$/;"	m	class:rtc::LogMultilineState
unprotected_	webrtc/base/thread_annotations_unittest.cc	/^  int unprotected_ = 0;$/;"	m	class:__anon68::ThreadSafe	file:
unsafe_filename_characters	webrtc/base/stringencode.cc	/^const char* unsafe_filename_characters() {$/;"	f	namespace:rtc
unsigned_difference	webrtc/base/mathutils.h	/^typename std::make_unsigned<T>::type unsigned_difference(T x, T y) {$/;"	f
updates	webrtc/modules/audio_processing/ns/ns_core.h	/^  int updates;$/;"	m	struct:NoiseSuppressionC_
upperLimit	webrtc/modules/audio_processing/agc/legacy/analog_agc.h	/^  int32_t upperLimit;      \/\/ Upper limit for mic energy$/;"	m	struct:__anon171
upperPrimaryLimit	webrtc/modules/audio_processing/agc/legacy/analog_agc.h	/^  int32_t upperPrimaryLimit;    \/\/ = RXX_BUFFER_LEN * 1342095;      -20 dBfs$/;"	m	struct:__anon171
upperSecondaryLimit	webrtc/modules/audio_processing/agc/legacy/analog_agc.h	/^  int32_t upperSecondaryLimit;  \/\/ = RXX_BUFFER_LEN * 2677832;      -17 dBfs$/;"	m	struct:__anon171
upper_state	webrtc/common_audio/vad/vad_core.h	/^    int16_t upper_state[5];$/;"	m	struct:VadInstT_
uri	webrtc/config.h	/^  std::string uri;$/;"	m	struct:webrtc::RtpExtension
uri_form	webrtc/base/httpclient.h	/^  UriForm uri_form() const { return uri_form_; }$/;"	f	class:rtc::HttpClient
uri_form_	webrtc/base/httpclient.h	/^  UriForm uri_form_;$/;"	m	class:rtc::HttpClient
url	webrtc/base/httpcommon.h	/^  string url() const {$/;"	f	class:rtc::Url
url	webrtc/base/pathutils.cc	/^std::string Pathname::url() const {$/;"	f	class:rtc::Pathname
url_decode	webrtc/base/stringencode.cc	/^size_t url_decode(char * buffer, size_t buflen,$/;"	f	namespace:rtc
url_encode	webrtc/base/stringencode.cc	/^size_t url_encode(char * buffer, size_t buflen,$/;"	f	namespace:rtc
use_aec	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^  rtc::Optional<bool> use_aec;$/;"	m	struct:webrtc::test::SimulationSettings
use_aec3	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^  rtc::Optional<bool> use_aec3;$/;"	m	struct:webrtc::test::SimulationSettings
use_aecm	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^  rtc::Optional<bool> use_aecm;$/;"	m	struct:webrtc::test::SimulationSettings
use_aecm_comfort_noise	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^  rtc::Optional<bool> use_aecm_comfort_noise;$/;"	m	struct:webrtc::test::SimulationSettings
use_agc	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^  rtc::Optional<bool> use_agc;$/;"	m	struct:webrtc::test::SimulationSettings
use_agc_limiter	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^  rtc::Optional<bool> use_agc_limiter;$/;"	m	struct:webrtc::test::SimulationSettings
use_all	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^  rtc::Optional<bool> use_all;$/;"	m	struct:webrtc::test::SimulationSettings
use_bf	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^  rtc::Optional<bool> use_bf;$/;"	m	struct:webrtc::test::SimulationSettings
use_delay_agnostic	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^  rtc::Optional<bool> use_delay_agnostic;$/;"	m	struct:webrtc::test::SimulationSettings
use_drift_compensation	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^  rtc::Optional<bool> use_drift_compensation;$/;"	m	struct:webrtc::test::SimulationSettings
use_experimental_agc	webrtc/modules/audio_processing/audio_processing_impl.h	/^    bool use_experimental_agc;$/;"	m	struct:webrtc::AudioProcessingImpl::ApmConstants
use_extended_filter	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^  rtc::Optional<bool> use_extended_filter;$/;"	m	struct:webrtc::test::SimulationSettings
use_hard_restoration_	webrtc/modules/audio_processing/transient/transient_suppressor.h	/^  bool use_hard_restoration_;$/;"	m	class:webrtc::TransientSuppressor
use_hpf	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^  rtc::Optional<bool> use_hpf;$/;"	m	struct:webrtc::test::SimulationSettings
use_ie	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^  rtc::Optional<bool> use_ie;$/;"	m	struct:webrtc::test::SimulationSettings
use_ip	webrtc/base/natserver.h	/^  bool use_ip;$/;"	m	struct:rtc::AddrCmp
use_lc	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^  rtc::Optional<bool> use_lc;$/;"	m	struct:webrtc::test::SimulationSettings
use_le	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^  rtc::Optional<bool> use_le;$/;"	m	struct:webrtc::test::SimulationSettings
use_ns	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^  rtc::Optional<bool> use_ns;$/;"	m	struct:webrtc::test::SimulationSettings
use_port	webrtc/base/natserver.h	/^  bool use_port;$/;"	m	struct:rtc::AddrCmp
use_refined_adaptive_filter	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^  rtc::Optional<bool> use_refined_adaptive_filter;$/;"	m	struct:webrtc::test::SimulationSettings
use_sse2_	webrtc/modules/audio_processing/utility/ooura_fft.h	/^  bool use_sse2_;$/;"	m	class:webrtc::OouraFft
use_ts	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^  rtc::Optional<bool> use_ts;$/;"	m	struct:webrtc::test::SimulationSettings
use_vad	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^  rtc::Optional<bool> use_vad;$/;"	m	struct:webrtc::test::SimulationSettings
use_verbose_logging	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^  bool use_verbose_logging = false;$/;"	m	struct:webrtc::test::SimulationSettings
usedConfig	webrtc/modules/audio_processing/agc/legacy/analog_agc.h	/^  WebRtcAgcConfig usedConfig;$/;"	m	struct:__anon171
used_in_period	webrtc/base/ratelimiter.h	/^  size_t used_in_period() const {$/;"	f	class:rtc::RateLimiter
used_in_period_	webrtc/base/ratelimiter.h	/^  size_t used_in_period_;$/;"	m	class:rtc::RateLimiter
user_	webrtc/base/socketadapters.h	/^  std::string agent_, user_, headers_;$/;"	m	class:rtc::AsyncHttpsProxySocket
user_	webrtc/base/socketadapters.h	/^  std::string user_;$/;"	m	class:rtc::AsyncSocksProxySocket
username	webrtc/base/proxyinfo.h	/^  std::string username;$/;"	m	struct:rtc::ProxyInfo
using_reference	webrtc/modules/audio_processing/transient/transient_detector.h	/^  bool using_reference() { return using_reference_; }$/;"	f	class:webrtc::TransientDetector
using_reference_	webrtc/modules/audio_processing/transient/transient_detector.h	/^  bool using_reference_;$/;"	m	class:webrtc::TransientDetector
using_reference_	webrtc/modules/audio_processing/transient/transient_suppressor.h	/^  bool using_reference_;$/;"	m	class:webrtc::TransientSuppressor
utf8_decode	webrtc/base/stringencode.cc	/^size_t utf8_decode(const char* source, size_t srclen, unsigned long* value) {$/;"	f	namespace:rtc
utf8_encode	webrtc/base/stringencode.cc	/^size_t utf8_encode(char* buffer, size_t buflen, unsigned long value) {$/;"	f	namespace:rtc
v	webrtc/base/java/src/org/webrtc/Logging.java	/^  public static void v(String tag, String message) {$/;"	m	class:Logging
v4AddressAsHostOrderInteger	webrtc/base/ipaddress.cc	/^uint32_t IPAddress::v4AddressAsHostOrderInteger() const {$/;"	f	class:rtc::IPAddress
vad	webrtc/common_audio/vad/vad_core.h	/^    int vad;$/;"	m	struct:VadInstT_
vadFarend	webrtc/modules/audio_processing/agc/legacy/digital_agc.h	/^  AgcVad vadFarend;$/;"	m	struct:__anon174
vadMic	webrtc/modules/audio_processing/agc/legacy/analog_agc.h	/^  AgcVad vadMic;$/;"	m	struct:__anon171
vadNearend	webrtc/modules/audio_processing/agc/legacy/digital_agc.h	/^  AgcVad vadNearend;$/;"	m	struct:__anon174
vadThreshold	webrtc/modules/audio_processing/agc/legacy/analog_agc.h	/^  int16_t vadThreshold;      \/\/ Threshold for VAD decision$/;"	m	struct:__anon171
vadUpdateCount	webrtc/modules/audio_processing/aecm/aecm_core.h	/^    int16_t vadUpdateCount;$/;"	m	struct:__anon164
vad_	webrtc/modules/audio_processing/agc/agc.h	/^  VoiceActivityDetector vad_;$/;"	m	class:webrtc::Agc
vad_	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer.h	/^  VoiceActivityDetector vad_;$/;"	m	class:webrtc::IntelligibilityEnhancer
vad_	webrtc/modules/audio_processing/vad/standalone_vad.h	/^  VadInst* vad_;$/;"	m	class:webrtc::StandaloneVad
vad_activity_	webrtc/modules/include/module_common_types.h	/^  VADActivity vad_activity_;$/;"	m	class:webrtc::AudioFrame
vad_likelihood	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^  rtc::Optional<int> vad_likelihood;$/;"	m	struct:webrtc::test::SimulationSettings
val	webrtc/base/httpcommon.cc	/^  E val;$/;"	m	struct:rtc::Enum	file:
valid	webrtc/base/httpcommon.h	/^  bool valid() const { return !host_.empty(); }$/;"	f	class:rtc::Url
valid_	webrtc/base/winping.h	/^    bool valid_;$/;"	m	class:rtc::WinPing
valid_queue_	webrtc/base/sequenced_task_checker_impl.h	/^  mutable TaskQueue* valid_queue_;$/;"	m	class:rtc::SequencedTaskCheckerImpl
valid_thread_	webrtc/base/thread_checker_impl.h	/^  mutable PlatformThreadRef valid_thread_;$/;"	m	class:rtc::ThreadCheckerImpl
value	webrtc/base/bind.h	/^  static const bool value = sizeof(test<T>((T*)nullptr, 42)) == sizeof(Yes);$/;"	m	class:rtc::detail::IsRefCounted
value	webrtc/base/buffer.h	/^  static constexpr bool value =$/;"	m	struct:rtc::internal::BufferCompat
value	webrtc/base/event_tracer.cc	/^    } value;$/;"	m	struct:rtc::tracing::__anon12::final::TraceArg	typeref:union:rtc::tracing::__anon12::final::TraceArg::TraceArgValue	file:
value	webrtc/base/logging.h	/^struct ConstantLabel { int value; const char * label; };$/;"	m	struct:rtc::ConstantLabel
value	webrtc/base/safe_conversions_impl.h	/^  static const DstRange value = OVERLAPS_RANGE;$/;"	m	struct:rtc::internal::StaticRangeCheck
value	webrtc/base/safe_conversions_impl.h	/^  static const DstRange value = kDstMaxExponent >= kSrcMaxExponent ?$/;"	m	struct:rtc::internal::StaticRangeCheck
value	webrtc/base/safe_conversions_impl.h	/^  static const DstRange value = sizeof(Dst) >= sizeof(Src) ?$/;"	m	struct:rtc::internal::StaticRangeCheck
value	webrtc/base/template_util.h	/^  static const T value = v;$/;"	m	struct:rtc::integral_constant
value	webrtc/base/template_util.h	/^template <class T, T v> const T integral_constant<T, v>::value;$/;"	m	class:rtc::integral_constant
value	webrtc/base/thread_unittest.cc	/^  int value;$/;"	m	struct:TestMessage	file:
value	webrtc/base/type_traits.h	/^  static constexpr bool value = std::is_same<decltype(Test<DS>(0)), int>::value;$/;"	m	class:rtc::HasDataAndSize
value	webrtc/modules/audio_processing/include/config.h	/^    T* value;$/;"	m	struct:webrtc::Config::Option
value_	webrtc/base/optional.h	/^    T value_;$/;"	m	union:rtc::final::__anon40
value_	webrtc/base/sharedexclusivelock_unittest.cc	/^  int value_;$/;"	m	class:rtc::SharedExclusiveLockTest	file:
value_	webrtc/base/sharedexclusivelock_unittest.cc	/^  int* value_;$/;"	m	class:rtc::SharedExclusiveTask	file:
value_	webrtc/system_wrappers/include/atomic32.h	/^  int32_t value_;$/;"	m	class:webrtc::Atomic32
value_or	webrtc/base/optional.h	/^  const T& value_or(const T& default_val) const {$/;"	f	class:rtc::final
value_type	webrtc/base/template_util.h	/^  typedef T value_type;$/;"	t	struct:rtc::integral_constant
variable_	webrtc/base/flags.h	/^  FlagValue* variable_;$/;"	m	class:rtc::Flag
varianceLongTerm	webrtc/modules/audio_processing/agc/legacy/digital_agc.h	/^  int32_t varianceLongTerm;   \/\/ Q8$/;"	m	struct:__anon173
varianceShortTerm	webrtc/modules/audio_processing/agc/legacy/digital_agc.h	/^  int32_t varianceShortTerm;  \/\/ Q8$/;"	m	struct:__anon173
variance_	webrtc/modules/audio_processing/echo_detector/mean_variance_estimator.h	/^  float variance_ = 0.f;$/;"	m	class:webrtc::MeanVarianceEstimator
vdivq_f32	webrtc/modules/audio_processing/aec/aec_core_neon.cc	/^static float32x4_t vdivq_f32(float32x4_t a, float32x4_t b) {$/;"	f	namespace:webrtc
vector16	webrtc/common_audio/signal_processing/signal_processing_unittest.cc	/^static const int16_t vector16[kVector16Size] = {1, -15511, 4323, 1963,$/;"	v	file:
vector_as_array	webrtc/system_wrappers/include/stl_util.h	/^inline T* vector_as_array(std::vector<T>* v) {$/;"	f	namespace:webrtc
vector_as_array	webrtc/system_wrappers/include/stl_util.h	/^inline const T* vector_as_array(const std::vector<T>* v) {$/;"	f	namespace:webrtc
verb	webrtc/base/httpcommon.h	/^  HttpVerb verb;$/;"	m	struct:rtc::HttpRequestData
verifier_	webrtc/base/criticalsection_unittest.cc	/^  Verifier verifier_;$/;"	m	class:rtc::__anon10::AtomicOpRunner	file:
version	webrtc/base/httpcommon.h	/^  HttpVersion version;$/;"	m	struct:rtc::HttpData
videoRotation	webrtc/common_types.h	/^  VideoRotation videoRotation;$/;"	m	struct:webrtc::RTPHeaderExtension
video_stream_factory	webrtc/config.h	/^  rtc::scoped_refptr<VideoStreamFactoryInterface> video_stream_factory;$/;"	m	class:webrtc::VideoEncoderConfig
virtual_source_idx_	webrtc/common_audio/resampler/sinc_resampler.h	/^  double virtual_source_idx_;$/;"	m	class:webrtc::SincResampler
visible_window	webrtc/base/win32windowpicker_unittest.cc	/^  Win32Window* visible_window() {$/;"	f	class:rtc::Win32WindowPickerForTest
visible_window_	webrtc/base/win32windowpicker_unittest.cc	/^  Win32Window visible_window_;$/;"	m	class:rtc::Win32WindowPickerForTest	file:
voiceActivity	webrtc/common_types.h	/^  bool voiceActivity;$/;"	m	struct:webrtc::RTPHeaderExtension
voice_activity_detector_enabled_	webrtc/modules/audio_processing/audio_processing_impl.h	/^    bool voice_activity_detector_enabled_ = false;$/;"	m	class:webrtc::AudioProcessingImpl::ApmSubmoduleStates
voice_detection	webrtc/modules/audio_processing/audio_processing_impl.cc	/^  std::unique_ptr<VoiceDetectionImpl> voice_detection;$/;"	m	struct:webrtc::AudioProcessingImpl::ApmPublicSubmodules	file:
voice_detection	webrtc/modules/audio_processing/audio_processing_impl.cc	/^VoiceDetection* AudioProcessingImpl::voice_detection() const {$/;"	f	class:webrtc::AudioProcessingImpl
voice_detection	webrtc/modules/audio_processing/include/mock_audio_processing.h	/^  virtual MockVoiceDetection* voice_detection() const {$/;"	f	class:webrtc::test::MockAudioProcessing
voice_detection_	webrtc/modules/audio_processing/include/mock_audio_processing.h	/^  std::unique_ptr<MockVoiceDetection> voice_detection_;$/;"	m	class:webrtc::test::MockAudioProcessing
voice_gmm_	webrtc/modules/audio_processing/vad/pitch_based_vad.h	/^  GmmParameters voice_gmm_;$/;"	m	class:webrtc::PitchBasedVad
voice_probability	webrtc/modules/audio_processing/agc/agc.cc	/^float Agc::voice_probability() const {$/;"	f	class:webrtc::Agc
voice_probability	webrtc/modules/audio_processing/agc/agc_manager_direct.cc	/^float AgcManagerDirect::voice_probability() {$/;"	f	class:webrtc::AgcManagerDirect
void_main	webrtc/modules/audio_processing/intelligibility/test/intelligibility_proc.cc	/^void void_main(int argc, char* argv[]) {$/;"	f	namespace:webrtc::__anon205
void_main	webrtc/modules/audio_processing/transient/transient_suppression_test.cc	/^void void_main() {$/;"	f	namespace:webrtc
void_ptr	webrtc/base/function_view.h	/^    void* void_ptr;$/;"	m	union:rtc::final::VoidUnion
volume_	webrtc/modules/audio_processing/agc/agc_manager_direct_unittest.cc	/^  TestVolumeCallbacks volume_;$/;"	m	class:webrtc::AgcManagerDirectTest	file:
volume_	webrtc/modules/audio_processing/agc/agc_manager_direct_unittest.cc	/^  int volume_;$/;"	m	class:webrtc::__anon170::TestVolumeCallbacks	file:
volume_	webrtc/modules/audio_processing/gain_control_for_experimental_agc.h	/^  int volume_;$/;"	m	class:webrtc::GainControlForExperimentalAgc
volume_callbacks_	webrtc/modules/audio_processing/agc/agc_manager_direct.h	/^  VolumeCallbacks* volume_callbacks_;$/;"	m	class:webrtc::final
vpowq_f32	webrtc/modules/audio_processing/aec/aec_core_neon.cc	/^static float32x4_t vpowq_f32(float32x4_t a, float32x4_t b) {$/;"	f	namespace:webrtc
vsnprintf	webrtc/base/stringutils.h	/^inline int vsnprintf(wchar_t* buf, size_t n, const wchar_t* fmt, va_list args) {$/;"	f
vsprintfn	webrtc/base/stringutils.h	/^size_t vsprintfn(CTYPE* buffer, size_t buflen, const CTYPE* format,$/;"	f	namespace:rtc
vsqrtq_f32	webrtc/modules/audio_processing/aec/aec_core_neon.cc	/^static float32x4_t vsqrtq_f32(float32x4_t s) {$/;"	f	namespace:webrtc
vss_	webrtc/base/asynctcpsocket_unittest.cc	/^  std::unique_ptr<VirtualSocketServer> vss_;$/;"	m	class:rtc::AsyncTCPSocketTest	file:
vss_	webrtc/base/asyncudpsocket_unittest.cc	/^  std::unique_ptr<VirtualSocketServer> vss_;$/;"	m	class:rtc::AsyncUdpSocketTest	file:
w	webrtc/base/java/src/org/webrtc/Logging.java	/^  public static void w(String tag, String message) {$/;"	m	class:Logging
w	webrtc/base/java/src/org/webrtc/Logging.java	/^  public static void w(String tag, String message, Throwable e) {$/;"	m	class:Logging
w_fft_	webrtc/modules/audio_processing/vad/vad_audio_proc.h	/^  float w_fft_[kWLength];$/;"	m	class:webrtc::VadAudioProc
waitUninterruptibly	webrtc/base/java/src/org/webrtc/ThreadUtils.java	/^  public static void waitUninterruptibly(final Object object) {$/;"	m	class:ThreadUtils
waiting_to_verify_peer_certificate	webrtc/base/opensslstreamadapter.h	/^  bool waiting_to_verify_peer_certificate() const {$/;"	f	class:rtc::OpenSSLStreamAdapter
wakeup_event_	webrtc/base/task_queue.h	/^  std::unique_ptr<event> wakeup_event_;$/;"	m	class:rtc::TaskQueue
wakeup_pipe_in_	webrtc/base/task_queue.h	/^  int wakeup_pipe_in_ = -1;$/;"	m	class:rtc::TaskQueue
wakeup_pipe_out_	webrtc/base/task_queue.h	/^  int wakeup_pipe_out_ = -1;$/;"	m	class:rtc::TaskQueue
was_any	webrtc/base/virtualsocketserver.h	/^  bool was_any() { return was_any_; }$/;"	f	class:rtc::VirtualSocket
was_any_	webrtc/base/virtualsocketserver.h	/^  bool was_any_;$/;"	m	class:rtc::VirtualSocket
was_locked	webrtc/base/messagequeue_unittest.cc	/^  bool* was_locked;$/;"	m	struct:DeletedLockChecker	file:
was_stream_delay_set	webrtc/modules/audio_processing/audio_processing_impl.cc	/^bool AudioProcessingImpl::was_stream_delay_set() const {$/;"	f	class:webrtc::AudioProcessingImpl
was_stream_delay_set	webrtc/modules/audio_processing/audio_processing_impl.h	/^    bool was_stream_delay_set;$/;"	m	struct:webrtc::AudioProcessingImpl::ApmCaptureState
wav_files_	webrtc/modules/audio_processing/logging/apm_data_dumper.h	/^  std::unordered_map<std::string, std::unique_ptr<WavWriter>> wav_files_;$/;"	m	class:webrtc::ApmDataDumper
wave_numbers_	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.h	/^  float wave_numbers_[kNumFreqBins];$/;"	m	class:webrtc::NonlinearBeamformer
weak_reference_owner_	webrtc/base/weak_ptr.h	/^  internal::WeakReferenceOwner weak_reference_owner_;$/;"	m	class:rtc::WeakPtrFactory
webrtc	webrtc/base/event_tracer.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/base/event_tracer.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/base/event_tracer_unittest.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/base/mod_ops.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/base/mod_ops_unittest.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/base/onetimeevent.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/base/onetimeevent_unittest.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/base/random.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/base/random.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/base/random_unittest.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/base/rate_limiter.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/base/rate_limiter.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/base/rate_limiter_unittest.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/base/rate_statistics.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/base/rate_statistics.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/base/swap_queue.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/base/swap_queue_unittest.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/base/trace_event.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/common_audio/audio_converter.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/common_audio/audio_converter.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/common_audio/audio_converter_unittest.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/common_audio/audio_ring_buffer.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/common_audio/audio_ring_buffer.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/common_audio/audio_ring_buffer_unittest.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/common_audio/audio_util.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/common_audio/audio_util_unittest.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/common_audio/blocker.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/common_audio/blocker.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/common_audio/blocker_unittest.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/common_audio/channel_buffer.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/common_audio/channel_buffer.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/common_audio/channel_buffer_unittest.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/common_audio/fir_filter.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/common_audio/fir_filter.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/common_audio/fir_filter_neon.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/common_audio/fir_filter_neon.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/common_audio/fir_filter_sse.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/common_audio/fir_filter_sse.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/common_audio/fir_filter_unittest.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/common_audio/include/audio_util.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/common_audio/lapped_transform.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/common_audio/lapped_transform.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/common_audio/lapped_transform_unittest.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/common_audio/real_fourier.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/common_audio/real_fourier.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/common_audio/real_fourier_ooura.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/common_audio/real_fourier_ooura.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/common_audio/real_fourier_openmax.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/common_audio/real_fourier_openmax.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/common_audio/real_fourier_unittest.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/common_audio/resampler/include/push_resampler.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/common_audio/resampler/include/resampler.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/common_audio/resampler/push_resampler.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/common_audio/resampler/push_resampler_unittest.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/common_audio/resampler/push_sinc_resampler.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/common_audio/resampler/push_sinc_resampler.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/common_audio/resampler/push_sinc_resampler_unittest.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/common_audio/resampler/resampler.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/common_audio/resampler/resampler_unittest.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/common_audio/resampler/sinc_resampler.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/common_audio/resampler/sinc_resampler.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/common_audio/resampler/sinc_resampler_neon.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/common_audio/resampler/sinc_resampler_sse.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/common_audio/resampler/sinc_resampler_unittest.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/common_audio/resampler/sinusoidal_linear_chirp_source.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/common_audio/resampler/sinusoidal_linear_chirp_source.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/common_audio/ring_buffer_unittest.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/common_audio/signal_processing/real_fft_unittest.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/common_audio/sparse_fir_filter.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/common_audio/sparse_fir_filter.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/common_audio/sparse_fir_filter_unittest.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/common_audio/vad/include/vad.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/common_audio/vad/mock/mock_vad.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/common_audio/vad/vad.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/common_audio/wav_file.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/common_audio/wav_file.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/common_audio/wav_file_unittest.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/common_audio/wav_header.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/common_audio/wav_header.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/common_audio/wav_header_unittest.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/common_audio/window_generator.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/common_audio/window_generator.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/common_audio/window_generator_unittest.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/common_types.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/common_types.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/common_video/rotation.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/config.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/config.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/aec/aec_common.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/aec/aec_core.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/aec/aec_core.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/aec/aec_core_mips.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/aec/aec_core_neon.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/aec/aec_core_optimized_methods.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/aec/aec_core_sse2.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/aec/aec_resampler.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/aec/aec_resampler.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/aec/echo_cancellation.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/aec/echo_cancellation.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/aec/echo_cancellation_unittest.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/aec/system_delay_unittest.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/agc/agc.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/agc/agc.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/agc/agc_manager_direct.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/agc/agc_manager_direct.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/agc/agc_manager_direct_unittest.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/agc/loudness_histogram.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/agc/loudness_histogram.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/agc/loudness_histogram_unittest.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/agc/mock_agc.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/audio_buffer.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/audio_buffer.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/audio_buffer_unittest.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/audio_processing_impl.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/audio_processing_impl.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/audio_processing_impl_locking_unittest.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/audio_processing_impl_unittest.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/audio_processing_performance_unittest.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/beamformer/array_util.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/beamformer/array_util.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/beamformer/array_util_unittest.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/beamformer/complex_matrix.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/beamformer/complex_matrix_unittest.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/beamformer/covariance_matrix_generator.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/beamformer/covariance_matrix_generator.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/beamformer/covariance_matrix_generator_unittest.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/beamformer/matrix.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/beamformer/matrix_test_helpers.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/beamformer/matrix_unittest.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/beamformer/mock_nonlinear_beamformer.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer_test.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer_unittest.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/common.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/config_unittest.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/echo_cancellation_bit_exact_unittest.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/echo_cancellation_impl.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/echo_cancellation_impl.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/echo_cancellation_impl_unittest.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/echo_control_mobile_impl.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/echo_control_mobile_impl.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/echo_control_mobile_unittest.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/echo_detector/circular_buffer.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/echo_detector/circular_buffer.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/echo_detector/circular_buffer_unittest.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/echo_detector/mean_variance_estimator.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/echo_detector/mean_variance_estimator.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/echo_detector/mean_variance_estimator_unittest.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/echo_detector/normalized_covariance_estimator.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/echo_detector/normalized_covariance_estimator.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/echo_detector/normalized_covariance_estimator_unittest.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/gain_control_for_experimental_agc.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/gain_control_for_experimental_agc.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/gain_control_impl.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/gain_control_impl.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/gain_control_unittest.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/high_pass_filter_impl.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/high_pass_filter_impl.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/high_pass_filter_unittest.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/include/audio_processing.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/include/audio_processing.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/include/config.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/include/config.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/include/mock_audio_processing.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer_unittest.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/intelligibility/intelligibility_utils.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/intelligibility/intelligibility_utils.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/intelligibility/intelligibility_utils_unittest.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/intelligibility/test/intelligibility_proc.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/level_controller/biquad_filter.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/level_controller/biquad_filter.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/level_controller/down_sampler.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/level_controller/down_sampler.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/level_controller/gain_applier.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/level_controller/gain_applier.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/level_controller/gain_selector.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/level_controller/gain_selector.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/level_controller/level_controller.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/level_controller/level_controller.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/level_controller/level_controller_complexity_unittest.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/level_controller/level_controller_constants.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/level_controller/level_controller_unittest.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/level_controller/noise_level_estimator.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/level_controller/noise_level_estimator.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/level_controller/noise_spectrum_estimator.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/level_controller/noise_spectrum_estimator.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/level_controller/peak_level_estimator.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/level_controller/peak_level_estimator.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/level_controller/saturating_gain_estimator.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/level_controller/saturating_gain_estimator.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/level_controller/signal_classifier.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/level_controller/signal_classifier.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/level_estimator_impl.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/level_estimator_impl.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/level_estimator_unittest.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/logging/apm_data_dumper.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/logging/apm_data_dumper.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/noise_suppression_impl.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/noise_suppression_impl.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/noise_suppression_unittest.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/render_queue_item_verifier.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/residual_echo_detector.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/residual_echo_detector.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/residual_echo_detector_unittest.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/rms_level.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/rms_level.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/splitting_filter.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/splitting_filter.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/splitting_filter_unittest.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/test/aec_dump_based_simulator.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/test/aec_dump_based_simulator.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/test/audio_buffer_tools.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/test/audio_buffer_tools.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/test/audio_processing_simulator.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/test/audio_processing_simulator.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/test/audioproc_float.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/test/bitexactness_tools.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/test/bitexactness_tools.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/test/debug_dump_replayer.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/test/debug_dump_replayer.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/test/debug_dump_test.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/test/protobuf_utils.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/test/protobuf_utils.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/test/test_utils.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/test/test_utils.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/test/unpack.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/test/wav_based_simulator.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/test/wav_based_simulator.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/three_band_filter_bank.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/three_band_filter_bank.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/transient/common.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/transient/daubechies_8_wavelet_coeffs.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/transient/dyadic_decimator.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/transient/dyadic_decimator_unittest.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/transient/file_utils.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/transient/file_utils.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/transient/file_utils_unittest.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/transient/moving_moments.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/transient/moving_moments.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/transient/moving_moments_unittest.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/transient/transient_detector.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/transient/transient_detector.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/transient/transient_detector_unittest.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/transient/transient_suppression_test.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/transient/transient_suppressor.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/transient/transient_suppressor.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/transient/transient_suppressor_unittest.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/transient/wpd_node.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/transient/wpd_node.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/transient/wpd_node_unittest.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/transient/wpd_tree.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/transient/wpd_tree.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/transient/wpd_tree_unittest.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/typing_detection.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/typing_detection.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/utility/block_mean_calculator.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/utility/block_mean_calculator.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/utility/block_mean_calculator_unittest.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/utility/ooura_fft.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/utility/ooura_fft.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/utility/ooura_fft_mips.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/utility/ooura_fft_neon.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/utility/ooura_fft_sse2.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/utility/ooura_fft_tables_common.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/utility/ooura_fft_tables_neon_sse2.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/vad/gmm.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/vad/gmm.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/vad/gmm_unittest.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/vad/pitch_based_vad.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/vad/pitch_based_vad.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/vad/pitch_based_vad_unittest.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/vad/pole_zero_filter.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/vad/pole_zero_filter.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/vad/pole_zero_filter_unittest.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/vad/standalone_vad.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/vad/standalone_vad.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/vad/standalone_vad_unittest.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/vad/vad_audio_proc.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/vad/vad_audio_proc.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/vad/vad_audio_proc_internal.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/vad/vad_audio_proc_unittest.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/vad/vad_circular_buffer.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/vad/vad_circular_buffer.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/vad/vad_circular_buffer_unittest.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/vad/voice_activity_detector.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/vad/voice_activity_detector.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/vad/voice_activity_detector_unittest.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/voice_detection_impl.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/audio_processing/voice_detection_impl.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/audio_processing/voice_detection_unittest.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/modules/include/module.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/include/module_common_types.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/modules/utility/include/audio_frame_operations.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/system_wrappers/include/aligned_array.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/system_wrappers/include/aligned_malloc.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/system_wrappers/include/atomic32.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/system_wrappers/include/clock.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/system_wrappers/include/cpu_info.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/system_wrappers/include/critical_section_wrapper.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/system_wrappers/include/event_wrapper.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/system_wrappers/include/field_trial.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/system_wrappers/include/field_trial_default.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/system_wrappers/include/file_wrapper.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/system_wrappers/include/logcat_trace_context.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/system_wrappers/include/logging.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/system_wrappers/include/metrics.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/system_wrappers/include/metrics_default.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/system_wrappers/include/ntp_time.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/system_wrappers/include/rtp_to_ntp.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/system_wrappers/include/rw_lock_wrapper.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/system_wrappers/include/sleep.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/system_wrappers/include/sort.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/system_wrappers/include/static_instance.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/system_wrappers/include/stl_util.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/system_wrappers/include/timestamp_extrapolator.h	/^namespace webrtc$/;"	n
webrtc	webrtc/system_wrappers/include/trace.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/system_wrappers/include/utf_util_win.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/system_wrappers/source/aligned_malloc.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/system_wrappers/source/file_impl.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/system_wrappers/source/logging.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/system_wrappers/source/metrics_default.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/system_wrappers/source/trace_impl.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/system_wrappers/source/trace_impl.h	/^namespace webrtc {$/;"	n
webrtc	webrtc/system_wrappers/source/trace_posix.cc	/^namespace webrtc {$/;"	n	file:
webrtc	webrtc/system_wrappers/source/trace_posix.h	/^namespace webrtc {$/;"	n
weight	webrtc/modules/audio_processing/vad/gmm.h	/^  const double* weight;$/;"	m	struct:webrtc::GmmParameters
weightLogLrt	webrtc/modules/audio_processing/ns/nsx_core.h	/^  int16_t                 weightLogLrt;$/;"	m	struct:NoiseSuppressionFixedC_
weightSpecDiff	webrtc/modules/audio_processing/ns/nsx_core.h	/^  int16_t                 weightSpecDiff;$/;"	m	struct:NoiseSuppressionFixedC_
weightSpecFlat	webrtc/modules/audio_processing/ns/nsx_core.h	/^  int16_t                 weightSpecFlat;$/;"	m	struct:NoiseSuppressionFixedC_
weostate	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  double    weostate[PITCH_WLPCORDER];$/;"	m	struct:__anon129
wfBuf	webrtc/modules/audio_processing/aec/aec_core.h	/^  float wfBuf[2][kExtendedNumPartitions * PART_LEN1];  \/\/ filter fft$/;"	m	struct:webrtc::AecCore
wfft	webrtc/modules/audio_processing/ns/ns_core.h	/^  float wfft[W_LENGTH];$/;"	m	struct:NoiseSuppressionC_
wfft_	webrtc/modules/audio_processing/transient/transient_suppressor.h	/^  std::unique_ptr<float[]> wfft_;$/;"	m	class:webrtc::TransientSuppressor
whiteNoiseLevel	webrtc/modules/audio_processing/ns/ns_core.h	/^  float whiteNoiseLevel;  \/\/ Initial noise estimate.$/;"	m	struct:NoiseSuppressionC_
whiteNoiseLevel	webrtc/modules/audio_processing/ns/nsx_core.h	/^  uint32_t                whiteNoiseLevel;  \/\/ Initial noise estimate.$/;"	m	struct:NoiseSuppressionFixedC_
whitelist	webrtc/base/natserver.h	/^    AddressSet* whitelist;$/;"	m	struct:rtc::NATServer::TransEntry
whitened_buf	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  double        whitened_buf[QLOOKAHEAD];$/;"	m	struct:__anon130
whostate	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  double    whostate[PITCH_WLPCORDER];$/;"	m	struct:__anon129
width	webrtc/base/java/src/org/webrtc/Size.java	/^  public int width;$/;"	f	class:Size
width	webrtc/common_types.h	/^  unsigned short width;$/;"	m	class:webrtc::VideoCodec
width	webrtc/common_types.h	/^  unsigned short width;$/;"	m	struct:webrtc::SimulcastStream
width	webrtc/config.h	/^  size_t width;$/;"	m	struct:webrtc::VideoStream
width	webrtc/modules/audio_processing/test/android/apmtest/jni/main.c	/^    int32_t width;$/;"	m	struct:engine	file:
width	webrtc/modules/include/module_common_types.h	/^  uint16_t width;  \/\/ size$/;"	m	struct:webrtc::RTPVideoHeader
width	webrtc/modules/include/module_common_types.h	/^  uint16_t width[kMaxVp9NumberOfSpatialLayers];$/;"	m	struct:webrtc::RTPVideoHeaderVP9
win32_inet_ntop	webrtc/base/win32.cc	/^const char* win32_inet_ntop(int af, const void *src,$/;"	f	namespace:rtc
win32_inet_pton	webrtc/base/win32.cc	/^int win32_inet_pton(int af, const char* src, void* dst) {$/;"	f	namespace:rtc
windShift	webrtc/modules/audio_processing/ns/ns_core.h	/^  size_t windShift;$/;"	m	struct:NoiseSuppressionC_
window	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  double    window[PITCH_WLPCWINLEN];$/;"	m	struct:__anon129
window	webrtc/modules/audio_processing/ns/ns_core.h	/^  const float* window;$/;"	m	struct:NoiseSuppressionC_
window	webrtc/modules/audio_processing/ns/nsx_core.h	/^  const int16_t*          window;$/;"	m	struct:NoiseSuppressionFixedC_
window_	webrtc/common_audio/blocker.h	/^  std::unique_ptr<float[]> window_;$/;"	m	class:webrtc::Blocker
window_	webrtc/modules/audio_processing/beamformer/nonlinear_beamformer.h	/^  float window_[kFftSize];$/;"	m	class:webrtc::NonlinearBeamformer
window_	webrtc/modules/audio_processing/transient/transient_suppressor.h	/^  const float* window_;$/;"	m	class:webrtc::TransientSuppressor
window_class_	webrtc/base/win32window.cc	/^ATOM Win32Window::window_class_ = 0;$/;"	m	class:rtc::Win32Window	file:
window_class_	webrtc/base/win32window.h	/^  static ATOM window_class_;$/;"	m	class:rtc::Win32Window
wm_state_	webrtc/base/x11windowpicker.cc	/^  Atom wm_state_;$/;"	m	class:rtc::XWindowEnumerator	file:
wnd_	webrtc/base/win32socketserver.h	/^  MessageWindow wnd_;$/;"	m	class:rtc::Win32SocketServer
wnd_	webrtc/base/win32window.h	/^  HWND wnd_;$/;"	m	class:rtc::Win32Window
work_ip_	webrtc/common_audio/real_fourier_ooura.h	/^  const std::unique_ptr<size_t[]> work_ip_;$/;"	m	class:webrtc::RealFourierOoura
work_w_	webrtc/common_audio/real_fourier_ooura.h	/^  const std::unique_ptr<float[]> work_w_;$/;"	m	class:webrtc::RealFourierOoura
worker	webrtc/base/signalthread.h	/^  Thread* worker() { return &worker_; }$/;"	f	class:rtc::SignalThread
worker_	webrtc/base/signalthread.h	/^  Worker worker_;$/;"	m	class:rtc::SignalThread
worker_thread	webrtc/base/networkmonitor.h	/^  Thread* worker_thread() { return worker_thread_; }$/;"	f	class:rtc::NetworkMonitorBase
worker_thread_	webrtc/base/networkmonitor.h	/^  Thread* worker_thread_;$/;"	m	class:rtc::NetworkMonitorBase
worker_thread_	webrtc/base/rtccertificategenerator.cc	/^  Thread* const worker_thread_;$/;"	m	class:rtc::__anon53::RTCCertificateGenerationTask	file:
worker_thread_	webrtc/base/rtccertificategenerator.h	/^  Thread* const worker_thread_;$/;"	m	class:rtc::RTCCertificateGenerator
worker_thread_	webrtc/base/rtccertificategenerator_unittest.cc	/^  std::unique_ptr<Thread> worker_thread_;$/;"	m	class:rtc::RTCCertificateGeneratorFixture	file:
worker_thread_	webrtc/base/sharedexclusivelock_unittest.cc	/^  std::unique_ptr<Thread> worker_thread_;$/;"	m	class:rtc::SharedExclusiveTask	file:
wpd_tree_	webrtc/modules/audio_processing/transient/transient_detector.h	/^  std::unique_ptr<WPDTree> wpd_tree_;$/;"	m	class:webrtc::TransientDetector
wraparound_handler_	webrtc/base/timeutils_unittest.cc	/^  TimestampWrapAroundHandler wraparound_handler_;$/;"	m	class:rtc::TimestampWrapAroundHandlerTest	file:
writable_bytes_	webrtc/base/bitbuffer.h	/^  uint8_t* const writable_bytes_;$/;"	m	class:rtc::BitBufferWriter
write_block_	webrtc/base/testutils.h	/^  size_t read_block_, write_block_;$/;"	m	class:testing::StreamSource
write_pos	webrtc/common_audio/ring_buffer.h	/^  size_t write_pos;$/;"	m	struct:RingBuffer
write_ref_data	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^bool write_ref_data = false;$/;"	m	namespace:webrtc::__anon183	file:
written_data_	webrtc/base/testutils.h	/^  Buffer readable_data_, written_data_;$/;"	m	class:testing::StreamSource
x	webrtc/modules/audio_processing/beamformer/array_util.h	/^  T x() const { return c[0]; }$/;"	f	struct:webrtc::CartesianPoint
x	webrtc/modules/audio_processing/test/android/apmtest/jni/main.c	/^    int32_t x;$/;"	m	struct:saved_state	file:
x509	webrtc/base/opensslidentity.h	/^  X509* x509() const { return x509_; }$/;"	f	class:rtc::OpenSSLCertificate
x509_	webrtc/base/opensslidentity.h	/^  X509* x509_;$/;"	m	class:rtc::OpenSSLCertificate
xBuf	webrtc/modules/audio_processing/aecm/aecm_core.h	/^    int16_t *xBuf;$/;"	m	struct:__anon164
xBuf_buf	webrtc/modules/audio_processing/aecm/aecm_core.h	/^    int16_t xBuf_buf[PART_LEN2 + 16];  \/\/ farend$/;"	m	struct:__anon164
xPow	webrtc/modules/audio_processing/aec/aec_core.h	/^  float xPow[PART_LEN1];$/;"	m	struct:webrtc::AecCore
x_	webrtc/modules/audio_processing/high_pass_filter_impl.cc	/^  int16_t x_[2];$/;"	m	class:webrtc::HighPassFilterImpl::BiquadFilter	file:
x_old_	webrtc/modules/audio_processing/level_controller/signal_classifier.h	/^    std::vector<float> x_old_;$/;"	m	class:webrtc::SignalClassifier::FrameExtender
xfBuf	webrtc/modules/audio_processing/aec/aec_core.h	/^  float xfBuf[2][kExtendedNumPartitions * PART_LEN1];  \/\/ farend fft buffer$/;"	m	struct:webrtc::AecCore
xfBufBlockPos	webrtc/modules/audio_processing/aec/aec_core.h	/^  int xfBufBlockPos;$/;"	m	struct:webrtc::AecCore
xfwBuf	webrtc/modules/audio_processing/aec/aec_core.h	/^  complex_t xfwBuf[kExtendedNumPartitions * PART_LEN1];$/;"	m	struct:webrtc::AecCore
xlat_	webrtc/base/task_unittest.cc	/^    int xlat_;$/;"	m	struct:rtc::TaskTest::TaskInfo	file:
xml_decode	webrtc/base/stringencode.cc	/^size_t xml_decode(char * buffer, size_t buflen,$/;"	f	namespace:rtc
xml_encode	webrtc/base/stringencode.cc	/^size_t xml_encode(char * buffer, size_t buflen,$/;"	f	namespace:rtc
y	webrtc/modules/audio_processing/beamformer/array_util.h	/^  T y() const { return c[1]; }$/;"	f	struct:webrtc::CartesianPoint
y	webrtc/modules/audio_processing/test/android/apmtest/jni/main.c	/^    int32_t y;$/;"	m	struct:saved_state	file:
y_	webrtc/modules/audio_processing/high_pass_filter_impl.cc	/^  int16_t y_[4];$/;"	m	class:webrtc::HighPassFilterImpl::BiquadFilter	file:
ystate	webrtc/modules/audio_coding/codecs/isac/main/source/structs.h	/^  double    ystate[PITCH_DAMPORDER];$/;"	m	struct:__anon128
z	webrtc/modules/audio_processing/beamformer/array_util.h	/^  T z() const { return c[2]; }$/;"	f	struct:webrtc::CartesianPoint
zeroCtrlMax	webrtc/modules/audio_processing/agc/legacy/analog_agc.h	/^  int32_t zeroCtrlMax;    \/\/ Remember max gain => don't amp low input$/;"	m	struct:__anon171
zeroInputSignal	webrtc/modules/audio_processing/ns/nsx_core.h	/^  int                     zeroInputSignal;  \/\/ Zero input signal flag.$/;"	m	struct:NoiseSuppressionFixedC_
zero_count_	webrtc/base/criticalsection_unittest.cc	/^  int zero_count_;$/;"	m	class:rtc::__anon10::CompareAndSwapVerifier	file:
~AbortShouldWakeTest	webrtc/base/task_unittest.cc	/^  ~AbortShouldWakeTest() {}$/;"	f	class:rtc::AbortShouldWakeTest
~AecCore	webrtc/modules/audio_processing/aec/aec_core.cc	/^AecCore::~AecCore() {}$/;"	f	class:webrtc::AecCore
~Agc	webrtc/modules/audio_processing/agc/agc.cc	/^Agc::~Agc() {}$/;"	f	class:webrtc::Agc
~AgcManagerDirect	webrtc/modules/audio_processing/agc/agc_manager_direct.cc	/^AgcManagerDirect::~AgcManagerDirect() {}$/;"	f	class:webrtc::AgcManagerDirect
~Algo1_CostFunction	webrtc/modules/audio_processing/config_unittest.cc	/^  virtual ~Algo1_CostFunction() {}$/;"	f	struct:webrtc::__anon191::Algo1_CostFunction
~AlignedArray	webrtc/system_wrappers/include/aligned_array.h	/^  ~AlignedArray() {$/;"	f	class:webrtc::AlignedArray
~ApmDataDumper	webrtc/modules/audio_processing/logging/apm_data_dumper.cc	/^ApmDataDumper::~ApmDataDumper() {}$/;"	f	class:webrtc::ApmDataDumper
~ApmDebugDumpState	webrtc/modules/audio_processing/audio_processing_impl.cc	/^AudioProcessingImpl::ApmDebugDumpState::~ApmDebugDumpState() {}$/;"	f	class:webrtc::AudioProcessingImpl::ApmDebugDumpState
~ApmDebugDumpThreadState	webrtc/modules/audio_processing/audio_processing_impl.cc	/^AudioProcessingImpl::ApmDebugDumpThreadState::~ApmDebugDumpThreadState() {}$/;"	f	class:webrtc::AudioProcessingImpl::ApmDebugDumpThreadState
~AsyncFile	webrtc/base/asyncfile.cc	/^AsyncFile::~AsyncFile() {$/;"	f	class:rtc::AsyncFile
~AsyncHttpsProxySocket	webrtc/base/socketadapters.cc	/^AsyncHttpsProxySocket::~AsyncHttpsProxySocket() {$/;"	f	class:rtc::AsyncHttpsProxySocket
~AsyncInvoker	webrtc/base/asyncinvoker.cc	/^AsyncInvoker::~AsyncInvoker() {$/;"	f	class:rtc::AsyncInvoker
~AsyncPacketSocket	webrtc/base/asyncpacketsocket.cc	/^AsyncPacketSocket::~AsyncPacketSocket() {$/;"	f	class:rtc::AsyncPacketSocket
~AsyncSocket	webrtc/base/asyncsocket.cc	/^AsyncSocket::~AsyncSocket() {$/;"	f	class:rtc::AsyncSocket
~AsyncSocketAdapter	webrtc/base/asyncsocket.cc	/^AsyncSocketAdapter::~AsyncSocketAdapter() {$/;"	f	class:rtc::AsyncSocketAdapter
~AsyncTCPSocketBase	webrtc/base/asynctcpsocket.cc	/^AsyncTCPSocketBase::~AsyncTCPSocketBase() {}$/;"	f	class:rtc::AsyncTCPSocketBase
~AsyncUDPSocket	webrtc/base/asyncudpsocket.cc	/^AsyncUDPSocket::~AsyncUDPSocket() {$/;"	f	class:rtc::AsyncUDPSocket
~AudioBuffer	webrtc/modules/audio_processing/audio_buffer.cc	/^AudioBuffer::~AudioBuffer() {}$/;"	f	class:webrtc::AudioBuffer
~AudioConverter	webrtc/common_audio/audio_converter.h	/^  virtual ~AudioConverter() {};$/;"	f	class:webrtc::AudioConverter
~AudioProcessing	webrtc/modules/audio_processing/include/audio_processing.h	/^  virtual ~AudioProcessing() {}$/;"	f	class:webrtc::AudioProcessing
~AudioProcessingImpl	webrtc/modules/audio_processing/audio_processing_impl.cc	/^AudioProcessingImpl::~AudioProcessingImpl() {$/;"	f	class:webrtc::AudioProcessingImpl
~AudioProcessingTest	webrtc/modules/audio_processing/audio_processing_unittest.cc	/^  virtual ~AudioProcessingTest() {}$/;"	f	class:webrtc::__anon183::AudioProcessingTest
~AudioRingBuffer	webrtc/common_audio/audio_ring_buffer.cc	/^AudioRingBuffer::~AudioRingBuffer() {$/;"	f	class:webrtc::AudioRingBuffer
~AutoDetectProxy	webrtc/base/autodetectproxy.cc	/^AutoDetectProxy::~AutoDetectProxy() {$/;"	f	class:rtc::AutoDetectProxy
~AutoSetCurrentQueuePtr	webrtc/base/task_queue_posix.cc	/^AutoSetCurrentQueuePtr::~AutoSetCurrentQueuePtr() {$/;"	f	class:rtc::internal::AutoSetCurrentQueuePtr
~AutoThread	webrtc/base/thread.cc	/^AutoThread::~AutoThread() {$/;"	f	class:rtc::AutoThread
~BaseOption	webrtc/modules/audio_processing/include/config.h	/^    virtual ~BaseOption() {}$/;"	f	struct:webrtc::Config::BaseOption
~BasicNetworkManager	webrtc/base/network.cc	/^BasicNetworkManager::~BasicNetworkManager() {$/;"	f	class:rtc::BasicNetworkManager
~Beamforming	webrtc/modules/audio_processing/include/audio_processing.cc	/^Beamforming::~Beamforming() {}$/;"	f	class:webrtc::Beamforming
~BitrateStatisticsObserver	webrtc/common_types.h	/^  virtual ~BitrateStatisticsObserver() {}$/;"	f	class:webrtc::BitrateStatisticsObserver
~BlockBuffer	webrtc/modules/audio_processing/aec/aec_core.cc	/^BlockBuffer::~BlockBuffer() {$/;"	f	class:webrtc::BlockBuffer
~BlockerCallback	webrtc/common_audio/blocker.h	/^  virtual ~BlockerCallback() {}$/;"	f	class:webrtc::BlockerCallback
~BufferQueue	webrtc/base/bufferqueue.cc	/^BufferQueue::~BufferQueue() {$/;"	f	class:rtc::BufferQueue
~BufferedReadAdapter	webrtc/base/socketadapters.cc	/^BufferedReadAdapter::~BufferedReadAdapter() {$/;"	f	class:rtc::BufferedReadAdapter
~ByteBufferWriter	webrtc/base/bytebuffer.cc	/^ByteBufferWriter::~ByteBufferWriter() {$/;"	f	class:rtc::ByteBufferWriter
~CacheLock	webrtc/base/diskcache.h	/^  ~CacheLock() {$/;"	f	class:rtc::CacheLock
~CallCalledSequentiallyOnThread	webrtc/base/sequenced_task_checker_unittest.cc	/^  ~CallCalledSequentiallyOnThread() {$/;"	f	class:rtc::__anon56::CallCalledSequentiallyOnThread
~CallSessionFileRotatingLogSink	webrtc/base/logsinks.cc	/^CallSessionFileRotatingLogSink::~CallSessionFileRotatingLogSink() {$/;"	f	class:rtc::CallSessionFileRotatingLogSink
~CallStatsObserver	webrtc/modules/include/module_common_types.h	/^  virtual ~CallStatsObserver() {}$/;"	f	class:webrtc::CallStatsObserver
~Callback	webrtc/common_audio/lapped_transform.h	/^    virtual ~Callback() {}$/;"	f	class:webrtc::LappedTransform::Callback
~Canceller	webrtc/modules/audio_processing/echo_cancellation_impl.cc	/^  ~Canceller() {$/;"	f	class:webrtc::EchoCancellationImpl::Canceller
~Canceller	webrtc/modules/audio_processing/echo_control_mobile_impl.cc	/^  ~Canceller() {$/;"	f	class:webrtc::EchoControlMobileImpl::Canceller
~Clock	webrtc/system_wrappers/include/clock.h	/^  virtual ~Clock() {}$/;"	f	class:webrtc::Clock
~ClockInterface	webrtc/base/timeutils.h	/^  virtual ~ClockInterface() {}$/;"	f	class:rtc::ClockInterface
~ClosureTaskWithCleanup	webrtc/base/task_queue.h	/^  ~ClosureTaskWithCleanup() { cleanup_(); }$/;"	f	class:rtc::ClosureTaskWithCleanup
~Config	webrtc/modules/audio_processing/include/config.cc	/^Config::~Config() {$/;"	f	class:webrtc::Config
~ConfigParser	webrtc/base/linux.cc	/^ConfigParser::~ConfigParser() {}$/;"	f	class:rtc::ConfigParser
~Connection	webrtc/base/httpserver.cc	/^HttpServer::Connection::~Connection() {$/;"	f	class:rtc::HttpServer::Connection
~CritScope	webrtc/base/criticalsection.cc	/^CritScope::~CritScope() { cs_->Leave(); }$/;"	f	class:rtc::CritScope
~CriticalSection	webrtc/base/criticalsection.cc	/^CriticalSection::~CriticalSection() {$/;"	f	class:rtc::CriticalSection
~CriticalSectionWrapper	webrtc/system_wrappers/include/critical_section_wrapper.h	/^  ~CriticalSectionWrapper() {}$/;"	f	class:webrtc::CriticalSectionWrapper
~CryptStringImpl	webrtc/base/cryptstring.h	/^  virtual ~CryptStringImpl() {}$/;"	f	class:rtc::CryptStringImpl
~CustomThread	webrtc/base/thread_unittest.cc	/^  virtual ~CustomThread() { Stop(); }$/;"	f	class:CustomThread
~DBusMonitor	webrtc/base/dbus.cc	/^DBusMonitor::~DBusMonitor() {$/;"	f	class:rtc::DBusMonitor
~DBusMonitoringThread	webrtc/base/dbus.cc	/^  virtual ~DBusMonitoringThread() {$/;"	f	class:rtc::DBusMonitor::DBusMonitoringThread
~DBusSigMessageData	webrtc/base/dbus.cc	/^DBusSigMessageData::~DBusSigMessageData() {$/;"	f	class:rtc::DBusSigMessageData
~DebugDumpGenerator	webrtc/modules/audio_processing/test/debug_dump_test.cc	/^DebugDumpGenerator::~DebugDumpGenerator() {$/;"	f	class:webrtc::test::__anon223::DebugDumpGenerator
~DebugDumpReplayer	webrtc/modules/audio_processing/test/debug_dump_replayer.cc	/^DebugDumpReplayer::~DebugDumpReplayer() {$/;"	f	class:webrtc::test::DebugDumpReplayer
~DebugFile	webrtc/modules/audio_processing/agc/agc_manager_direct.cc	/^  ~DebugFile() {$/;"	f	class:webrtc::DebugFile
~DelayBuffer	webrtc/modules/audio_processing/intelligibility/intelligibility_utils.cc	/^DelayBuffer::~DelayBuffer() {}$/;"	f	class:webrtc::intelligibility::DelayBuffer
~DeleteSequencedCheckerOnThread	webrtc/base/sequenced_task_checker_unittest.cc	/^  ~DeleteSequencedCheckerOnThread() {$/;"	f	class:rtc::__anon56::DeleteSequencedCheckerOnThread
~DeletedLockChecker	webrtc/base/messagequeue_unittest.cc	/^  ~DeletedLockChecker() {$/;"	f	struct:DeletedLockChecker
~DeletedMessageHandler	webrtc/base/messagequeue_unittest.cc	/^  ~DeletedMessageHandler() {$/;"	f	class:DeletedMessageHandler
~DirectoryIterator	webrtc/base/fileutils.cc	/^DirectoryIterator::~DirectoryIterator() {$/;"	f	class:rtc::DirectoryIterator
~DiskCache	webrtc/base/diskcache.cc	/^DiskCache::~DiskCache() {$/;"	f	class:rtc::DiskCache
~Dispatcher	webrtc/base/physicalsocketserver.h	/^  virtual ~Dispatcher() {}$/;"	f	class:rtc::Dispatcher
~DisposeData	webrtc/base/messagequeue.h	/^  virtual ~DisposeData() { delete data_; }$/;"	f	class:rtc::DisposeData
~EchoCancellation	webrtc/modules/audio_processing/include/audio_processing.h	/^  virtual ~EchoCancellation() {}$/;"	f	class:webrtc::EchoCancellation
~EchoControlMobile	webrtc/modules/audio_processing/include/audio_processing.h	/^  virtual ~EchoControlMobile() {}$/;"	f	class:webrtc::EchoControlMobile
~EchoControlMobileImpl	webrtc/modules/audio_processing/echo_control_mobile_impl.cc	/^EchoControlMobileImpl::~EchoControlMobileImpl() {$/;"	f	class:webrtc::EchoControlMobileImpl
~Event	webrtc/base/event.cc	/^Event::~Event() {$/;"	f	class:rtc::Event
~EventDispatcher	webrtc/base/physicalsocketserver.cc	/^  ~EventDispatcher() {$/;"	f	class:rtc::EventDispatcher
~EventLogger	webrtc/base/event_tracer.cc	/^  ~EventLogger() { RTC_DCHECK(thread_checker_.CalledOnValidThread()); }$/;"	f	class:rtc::tracing::__anon12::final
~EventWrapper	webrtc/system_wrappers/include/event_wrapper.h	/^  virtual ~EventWrapper() {}$/;"	f	class:webrtc::EventWrapper
~ExternalMemoryStream	webrtc/base/stream.cc	/^ExternalMemoryStream::~ExternalMemoryStream() {$/;"	f	class:rtc::ExternalMemoryStream
~FIRFilter	webrtc/common_audio/fir_filter.h	/^  virtual ~FIRFilter() {}$/;"	f	class:webrtc::FIRFilter
~FakeTaskRunner	webrtc/base/faketaskrunner.h	/^  virtual ~FakeTaskRunner() {}$/;"	f	class:rtc::FakeTaskRunner
~FatalMessage	webrtc/base/checks.cc	/^NO_RETURN FatalMessage::~FatalMessage() {$/;"	f	class:rtc::FatalMessage
~FifoBuffer	webrtc/base/stream.cc	/^FifoBuffer::~FifoBuffer() {$/;"	f	class:rtc::FifoBuffer
~File	webrtc/base/file.cc	/^File::~File() {$/;"	f	class:rtc::File
~FileRotatingLogSink	webrtc/base/logsinks.cc	/^FileRotatingLogSink::~FileRotatingLogSink() {$/;"	f	class:rtc::FileRotatingLogSink
~FileRotatingStream	webrtc/base/filerotatingstream.cc	/^FileRotatingStream::~FileRotatingStream() {$/;"	f	class:rtc::FileRotatingStream
~FileStream	webrtc/base/stream.cc	/^FileStream::~FileStream() {$/;"	f	class:rtc::FileStream
~FileWrapper	webrtc/system_wrappers/source/file_impl.cc	/^FileWrapper::~FileWrapper() {$/;"	f	class:webrtc::FileWrapper
~FilesystemInterface	webrtc/base/fileutils.h	/^  virtual ~FilesystemInterface() {}$/;"	f	class:rtc::FilesystemInterface
~FilesystemScope	webrtc/base/fileutils.h	/^  ~FilesystemScope() {$/;"	f	class:rtc::FilesystemScope
~FirewallManager	webrtc/base/firewallsocketserver.cc	/^FirewallManager::~FirewallManager() {$/;"	f	class:rtc::FirewallManager
~FirewallSocketServer	webrtc/base/firewallsocketserver.cc	/^FirewallSocketServer::~FirewallSocketServer() {$/;"	f	class:rtc::FirewallSocketServer
~Flag	webrtc/base/weak_ptr.cc	/^WeakReference::Flag::~Flag() {}$/;"	f	class:rtc::internal::WeakReference::Flag
~FormatCryptString	webrtc/base/cryptstring.h	/^  ~FormatCryptString() {$/;"	f	class:rtc::FormatCryptString
~FrameCountObserver	webrtc/common_types.h	/^  virtual ~FrameCountObserver() {}$/;"	f	class:webrtc::FrameCountObserver
~GainApplier	webrtc/modules/audio_processing/intelligibility/intelligibility_utils.cc	/^GainApplier::~GainApplier() {}$/;"	f	class:webrtc::intelligibility::GainApplier
~GainControl	webrtc/modules/audio_processing/include/audio_processing.h	/^  virtual ~GainControl() {}$/;"	f	class:webrtc::GainControl
~GainControlImpl	webrtc/modules/audio_processing/gain_control_impl.cc	/^GainControlImpl::~GainControlImpl() {}$/;"	f	class:webrtc::GainControlImpl
~GainController	webrtc/modules/audio_processing/gain_control_impl.cc	/^  ~GainController() {$/;"	f	class:webrtc::GainControlImpl::GainController
~GlobalLockScope	webrtc/base/criticalsection.cc	/^GlobalLockScope::~GlobalLockScope() {$/;"	f	class:rtc::GlobalLockScope
~GuardedAsyncInvoker	webrtc/base/asyncinvoker.cc	/^GuardedAsyncInvoker::~GuardedAsyncInvoker() {$/;"	f	class:rtc::GuardedAsyncInvoker
~Helper	webrtc/base/callback.h	/^    virtual ~Helper() {}$/;"	f	struct:rtc::Callback0::Helper
~Helper	webrtc/base/callback.h	/^    virtual ~Helper() {}$/;"	f	struct:rtc::Callback1::Helper
~Helper	webrtc/base/callback.h	/^    virtual ~Helper() {}$/;"	f	struct:rtc::Callback2::Helper
~Helper	webrtc/base/callback.h	/^    virtual ~Helper() {}$/;"	f	struct:rtc::Callback3::Helper
~Helper	webrtc/base/callback.h	/^    virtual ~Helper() {}$/;"	f	struct:rtc::Callback4::Helper
~Helper	webrtc/base/callback.h	/^    virtual ~Helper() {}$/;"	f	struct:rtc::Callback5::Helper
~HighPassFilter	webrtc/modules/audio_processing/include/audio_processing.h	/^  virtual ~HighPassFilter() {}$/;"	f	class:webrtc::HighPassFilter
~HighPassFilterImpl	webrtc/modules/audio_processing/high_pass_filter_impl.cc	/^HighPassFilterImpl::~HighPassFilterImpl() {}$/;"	f	class:webrtc::HighPassFilterImpl
~HttpAuthContext	webrtc/base/httpcommon.h	/^  virtual ~HttpAuthContext() { }$/;"	f	struct:rtc::HttpAuthContext
~HttpBase	webrtc/base/httpbase.cc	/^HttpBase::~HttpBase() {$/;"	f	class:rtc::HttpBase
~HttpClient	webrtc/base/httpclient.cc	/^HttpClient::~HttpClient() {$/;"	f	class:rtc::HttpClient
~HttpListenServer	webrtc/base/httpserver.cc	/^HttpListenServer::~HttpListenServer() {$/;"	f	class:rtc::HttpListenServer
~HttpParser	webrtc/base/httpbase.cc	/^HttpParser::~HttpParser() {$/;"	f	class:rtc::HttpParser
~HttpServer	webrtc/base/httpserver.cc	/^HttpServer::~HttpServer() {$/;"	f	class:rtc::HttpServer
~IHttpNotify	webrtc/base/httpbase.h	/^  virtual ~IHttpNotify() {}$/;"	f	class:rtc::IHttpNotify
~IPAddress	webrtc/base/ipaddress.h	/^  virtual ~IPAddress() {}$/;"	f	class:rtc::IPAddress
~IPv6AttributesGetter	webrtc/base/macifaddrs_converter.cc	/^IPv6AttributesGetter::~IPv6AttributesGetter() {$/;"	f	class:rtc::__anon29::IPv6AttributesGetter
~IfAddrsConverter	webrtc/base/ifaddrs_converter.cc	/^IfAddrsConverter::~IfAddrsConverter() {}$/;"	f	class:rtc::IfAddrsConverter
~InstanceCounter	webrtc/base/scopedptrcollection_unittest.cc	/^  ~InstanceCounter() {$/;"	f	class:rtc::__anon55::InstanceCounter
~IntelligibilityEnhancer	webrtc/modules/audio_processing/intelligibility/intelligibility_enhancer.cc	/^IntelligibilityEnhancer::~IntelligibilityEnhancer() {$/;"	f	class:webrtc::IntelligibilityEnhancer
~LateBindingSymbolTable	webrtc/base/latebindingsymboltable.cc	/^LateBindingSymbolTable::~LateBindingSymbolTable() {$/;"	f	class:rtc::LateBindingSymbolTable
~LevelController	webrtc/modules/audio_processing/level_controller/level_controller.cc	/^LevelController::~LevelController() {}$/;"	f	class:webrtc::LevelController
~LevelEstimator	webrtc/modules/audio_processing/include/audio_processing.h	/^  virtual ~LevelEstimator() {}$/;"	f	class:webrtc::LevelEstimator
~LevelEstimatorImpl	webrtc/modules/audio_processing/level_estimator_impl.cc	/^LevelEstimatorImpl::~LevelEstimatorImpl() {}$/;"	f	class:webrtc::LevelEstimatorImpl
~LogMessage	webrtc/base/logging.cc	/^LogMessage::~LogMessage() {$/;"	f	class:rtc::LogMessage
~LogMessage	webrtc/system_wrappers/source/logging.cc	/^LogMessage::~LogMessage() {$/;"	f	class:webrtc::LogMessage
~LogSink	webrtc/base/logging.h	/^  virtual ~LogSink() {}$/;"	f	class:rtc::LogSink
~LogThread	webrtc/base/logging_unittest.cc	/^  virtual ~LogThread() {$/;"	f	class:rtc::LogThread
~Logger	webrtc/base/optional_unittest.cc	/^  ~Logger() { Log("destructor"); }$/;"	f	class:rtc::__anon41::Logger
~LoggingPoolAdapter	webrtc/base/socketpool.cc	/^LoggingPoolAdapter::~LoggingPoolAdapter() {$/;"	f	class:rtc::LoggingPoolAdapter
~LoudnessHistogram	webrtc/modules/audio_processing/agc/loudness_histogram.cc	/^LoudnessHistogram::~LoudnessHistogram() {}$/;"	f	class:webrtc::LoudnessHistogram
~MacWindowPicker	webrtc/base/macwindowpicker.cc	/^MacWindowPicker::~MacWindowPicker() {$/;"	f	class:rtc::MacWindowPicker
~Matrix	webrtc/modules/audio_processing/beamformer/matrix.h	/^  virtual ~Matrix() {}$/;"	f	class:webrtc::Matrix
~MemoryStream	webrtc/base/stream.cc	/^MemoryStream::~MemoryStream() {$/;"	f	class:rtc::MemoryStream
~MessageClient	webrtc/base/thread_unittest.cc	/^  virtual ~MessageClient() {$/;"	f	class:MessageClient
~MessageData	webrtc/base/messagequeue.h	/^  virtual ~MessageData() {}$/;"	f	class:rtc::MessageData
~MessageDigest	webrtc/base/messagedigest.h	/^  virtual ~MessageDigest() {}$/;"	f	class:rtc::MessageDigest
~MessageHandler	webrtc/base/messagehandler.cc	/^MessageHandler::~MessageHandler() {$/;"	f	class:rtc::MessageHandler
~MessageQueue	webrtc/base/messagequeue.cc	/^MessageQueue::~MessageQueue() {$/;"	f	class:rtc::MessageQueue
~MessageQueueManager	webrtc/base/messagequeue.cc	/^MessageQueueManager::~MessageQueueManager() {$/;"	f	class:rtc::MessageQueueManager
~MockAudioProcessing	webrtc/modules/audio_processing/include/mock_audio_processing.h	/^  virtual ~MockAudioProcessing() {}$/;"	f	class:webrtc::test::MockAudioProcessing
~MockEchoCancellation	webrtc/modules/audio_processing/include/mock_audio_processing.h	/^  virtual ~MockEchoCancellation() {}$/;"	f	class:webrtc::test::MockEchoCancellation
~MockEchoControlMobile	webrtc/modules/audio_processing/include/mock_audio_processing.h	/^  virtual ~MockEchoControlMobile() {}$/;"	f	class:webrtc::test::MockEchoControlMobile
~MockGainControl	webrtc/modules/audio_processing/include/mock_audio_processing.h	/^  virtual ~MockGainControl() {}$/;"	f	class:webrtc::test::MockGainControl
~MockHighPassFilter	webrtc/modules/audio_processing/include/mock_audio_processing.h	/^  virtual ~MockHighPassFilter() {}$/;"	f	class:webrtc::test::MockHighPassFilter
~MockLevelEstimator	webrtc/modules/audio_processing/include/mock_audio_processing.h	/^  virtual ~MockLevelEstimator() {}$/;"	f	class:webrtc::test::MockLevelEstimator
~MockNoiseSuppression	webrtc/modules/audio_processing/include/mock_audio_processing.h	/^  virtual ~MockNoiseSuppression() {}$/;"	f	class:webrtc::test::MockNoiseSuppression
~MockVad	webrtc/common_audio/vad/mock/mock_vad.h	/^  virtual ~MockVad() { Die(); }$/;"	f	class:webrtc::MockVad
~MockVoiceDetection	webrtc/modules/audio_processing/include/mock_audio_processing.h	/^  virtual ~MockVoiceDetection() {}$/;"	f	class:webrtc::test::MockVoiceDetection
~Module	webrtc/modules/include/module.h	/^  virtual ~Module() {}$/;"	f	class:webrtc::Module
~MovingMoments	webrtc/modules/audio_processing/transient/moving_moments.cc	/^MovingMoments::~MovingMoments() {}$/;"	f	class:webrtc::MovingMoments
~NAT	webrtc/base/nattypes.h	/^  virtual ~NAT() { }$/;"	f	class:rtc::NAT
~NATInternalSocketFactory	webrtc/base/natsocketfactory.h	/^  virtual ~NATInternalSocketFactory() {}$/;"	f	class:rtc::NATInternalSocketFactory
~NATServer	webrtc/base/natserver.cc	/^NATServer::~NATServer() {$/;"	f	class:rtc::NATServer
~NegotiateAuthContext	webrtc/base/httpcommon.cc	/^  virtual ~NegotiateAuthContext() {$/;"	f	struct:rtc::NegotiateAuthContext
~NetworkBinderInterface	webrtc/base/networkmonitor.h	/^  virtual ~NetworkBinderInterface() {}$/;"	f	class:rtc::NetworkBinderInterface
~NetworkManager	webrtc/base/network.cc	/^NetworkManager::~NetworkManager() {$/;"	f	class:rtc::NetworkManager
~NetworkManagerBase	webrtc/base/network.cc	/^NetworkManagerBase::~NetworkManagerBase() {$/;"	f	class:rtc::NetworkManagerBase
~NetworkMonitorBase	webrtc/base/networkmonitor.cc	/^NetworkMonitorBase::~NetworkMonitorBase() {}$/;"	f	class:rtc::NetworkMonitorBase
~NetworkMonitorFactory	webrtc/base/networkmonitor.cc	/^NetworkMonitorFactory::~NetworkMonitorFactory() {}$/;"	f	class:rtc::NetworkMonitorFactory
~NetworkMonitorInterface	webrtc/base/networkmonitor.cc	/^NetworkMonitorInterface::~NetworkMonitorInterface() {}$/;"	f	class:rtc::NetworkMonitorInterface
~NewSocketPool	webrtc/base/socketpool.cc	/^NewSocketPool::~NewSocketPool() {$/;"	f	class:rtc::NewSocketPool
~NoiseLevelEstimator	webrtc/modules/audio_processing/level_controller/noise_level_estimator.cc	/^NoiseLevelEstimator::~NoiseLevelEstimator() {}$/;"	f	class:webrtc::NoiseLevelEstimator
~NoiseSuppression	webrtc/modules/audio_processing/include/audio_processing.h	/^  virtual ~NoiseSuppression() {}$/;"	f	class:webrtc::NoiseSuppression
~NoiseSuppressionImpl	webrtc/modules/audio_processing/noise_suppression_impl.cc	/^NoiseSuppressionImpl::~NoiseSuppressionImpl() {}$/;"	f	class:webrtc::NoiseSuppressionImpl
~NotifyingAsyncClosureBase	webrtc/base/asyncinvoker.cc	/^NotifyingAsyncClosureBase::~NotifyingAsyncClosureBase() {$/;"	f	class:rtc::NotifyingAsyncClosureBase
~NullSocketServer	webrtc/base/nullsocketserver.cc	/^NullSocketServer::~NullSocketServer() {}$/;"	f	class:rtc::NullSocketServer
~NullStream	webrtc/base/stream.cc	/^NullStream::~NullStream() {$/;"	f	class:rtc::NullStream
~OpenSSLAdapter	webrtc/base/openssladapter.cc	/^OpenSSLAdapter::~OpenSSLAdapter() {$/;"	f	class:rtc::OpenSSLAdapter
~OpenSSLCertificate	webrtc/base/opensslidentity.cc	/^OpenSSLCertificate::~OpenSSLCertificate() {$/;"	f	class:rtc::OpenSSLCertificate
~OpenSSLDigest	webrtc/base/openssldigest.cc	/^OpenSSLDigest::~OpenSSLDigest() {$/;"	f	class:rtc::OpenSSLDigest
~OpenSSLKeyPair	webrtc/base/opensslidentity.cc	/^OpenSSLKeyPair::~OpenSSLKeyPair() {$/;"	f	class:rtc::OpenSSLKeyPair
~OpenSSLStreamAdapter	webrtc/base/opensslstreamadapter.cc	/^OpenSSLStreamAdapter::~OpenSSLStreamAdapter() {$/;"	f	class:rtc::OpenSSLStreamAdapter
~Option	webrtc/modules/audio_processing/include/config.h	/^    ~Option() {$/;"	f	struct:webrtc::Config::Option
~Optional	webrtc/base/optional.h	/^  ~Optional() {$/;"	f	class:rtc::final
~OwnerThread	webrtc/base/signalthread_unittest.cc	/^  virtual ~OwnerThread() {$/;"	f	class:OwnerThread
~Packet	webrtc/base/testclient.cc	/^TestClient::Packet::~Packet() {$/;"	f	class:rtc::TestClient::Packet
~PeakLevelEstimator	webrtc/modules/audio_processing/level_controller/peak_level_estimator.cc	/^PeakLevelEstimator::~PeakLevelEstimator() {}$/;"	f	class:webrtc::PeakLevelEstimator
~PerfTestData	webrtc/base/criticalsection_unittest.cc	/^  ~PerfTestData() {}$/;"	f	class:rtc::PerfTestData
~PhysicalSocket	webrtc/base/physicalsocketserver.cc	/^PhysicalSocket::~PhysicalSocket() {$/;"	f	class:rtc::PhysicalSocket
~PhysicalSocketServer	webrtc/base/physicalsocketserver.cc	/^PhysicalSocketServer::~PhysicalSocketServer() {$/;"	f	class:rtc::PhysicalSocketServer
~PitchBasedVad	webrtc/modules/audio_processing/vad/pitch_based_vad.cc	/^PitchBasedVad::~PitchBasedVad() {$/;"	f	class:webrtc::PitchBasedVad
~PlatformThread	webrtc/base/platform_thread.cc	/^PlatformThread::~PlatformThread() {$/;"	f	class:rtc::PlatformThread
~PoleZeroFilter	webrtc/modules/audio_processing/vad/pole_zero_filter.h	/^  ~PoleZeroFilter() {}$/;"	f	class:webrtc::PoleZeroFilter
~PoleZeroFilterTest	webrtc/modules/audio_processing/vad/pole_zero_filter_unittest.cc	/^  ~PoleZeroFilterTest() {}$/;"	f	class:webrtc::PoleZeroFilterTest
~PosixSignalHandler	webrtc/base/physicalsocketserver.cc	/^  ~PosixSignalHandler() {$/;"	f	class:rtc::PosixSignalHandler	file:
~ProcCpuInfo	webrtc/base/linux.cc	/^ProcCpuInfo::~ProcCpuInfo() {$/;"	f	class:rtc::ProcCpuInfo
~ProxyServer	webrtc/base/proxyserver.cc	/^ProxyServer::~ProxyServer() {$/;"	f	class:rtc::ProxyServer
~ProxyTest	webrtc/base/proxy_unittest.cc	/^  ~ProxyTest() {$/;"	f	class:ProxyTest
~PushResampler	webrtc/common_audio/resampler/push_resampler.cc	/^PushResampler<T>::~PushResampler() {$/;"	f	class:webrtc::PushResampler
~PushSincResampler	webrtc/common_audio/resampler/push_sinc_resampler.cc	/^PushSincResampler::~PushSincResampler() {$/;"	f	class:webrtc::PushSincResampler
~QueuedTask	webrtc/base/task_queue.h	/^  virtual ~QueuedTask() {}$/;"	f	class:rtc::QueuedTask
~RMSLevel	webrtc/modules/audio_processing/rms_level.cc	/^RMSLevel::~RMSLevel() {}$/;"	f	class:webrtc::RMSLevel
~RTCCertificate	webrtc/base/rtccertificate.cc	/^RTCCertificate::~RTCCertificate() {$/;"	f	class:rtc::RTCCertificate
~RTCCertificateGeneratorInterface	webrtc/base/rtccertificategenerator.h	/^  virtual ~RTCCertificateGeneratorInterface() {}$/;"	f	class:rtc::RTCCertificateGeneratorInterface
~RTCCertificateGeneratorTest	webrtc/base/rtccertificategenerator_unittest.cc	/^  ~RTCCertificateGeneratorTest() {}$/;"	f	class:rtc::RTCCertificateGeneratorTest
~RTCCertificateTest	webrtc/base/rtccertificate_unittest.cc	/^  ~RTCCertificateTest() {}$/;"	f	class:rtc::RTCCertificateTest
~RTPFragmentationHeader	webrtc/modules/include/module_common_types.h	/^  ~RTPFragmentationHeader() {$/;"	f	class:webrtc::RTPFragmentationHeader
~RWLockWrapper	webrtc/system_wrappers/include/rw_lock_wrapper.h	/^  virtual ~RWLockWrapper() {}$/;"	f	class:webrtc::RWLockWrapper
~RaceCheckerScope	webrtc/base/race_checker.cc	/^RaceCheckerScope::~RaceCheckerScope() {$/;"	f	class:rtc::internal::RaceCheckerScope
~RandomGenerator	webrtc/base/helpers.cc	/^  virtual ~RandomGenerator() {}$/;"	f	class:rtc::RandomGenerator
~RateLimitTest	webrtc/base/rate_limiter_unittest.cc	/^  virtual ~RateLimitTest() {}$/;"	f	class:webrtc::RateLimitTest
~RateLimiter	webrtc/base/rate_limiter.cc	/^RateLimiter::~RateLimiter() {}$/;"	f	class:webrtc::RateLimiter
~RateLimiter	webrtc/base/ratelimiter.h	/^  virtual ~RateLimiter() {}$/;"	f	class:rtc::RateLimiter
~RateStatistics	webrtc/base/rate_statistics.cc	/^RateStatistics::~RateStatistics() {}$/;"	f	class:webrtc::RateStatistics
~RateTracker	webrtc/base/ratetracker.cc	/^RateTracker::~RateTracker() {$/;"	f	class:rtc::RateTracker
~RawFile	webrtc/modules/audio_processing/test/test_utils.cc	/^RawFile::~RawFile() {$/;"	f	class:webrtc::RawFile
~ReadableWav	webrtc/common_audio/wav_header.h	/^  virtual ~ReadableWav() {}$/;"	f	class:webrtc::ReadableWav
~ReadableWavBuffer	webrtc/common_audio/wav_header_unittest.cc	/^  virtual ~ReadableWavBuffer() {$/;"	f	class:webrtc::ReadableWavBuffer
~RealFourier	webrtc/common_audio/real_fourier.h	/^  virtual ~RealFourier() {};$/;"	f	class:webrtc::RealFourier
~RealFourierOpenmax	webrtc/common_audio/real_fourier_openmax.cc	/^RealFourierOpenmax::~RealFourierOpenmax() {$/;"	f	class:webrtc::RealFourierOpenmax
~RealFourierTest	webrtc/common_audio/real_fourier_unittest.cc	/^  ~RealFourierTest() {$/;"	f	class:webrtc::RealFourierTest
~Receiver	webrtc/base/virtualsocket_unittest.cc	/^  ~Receiver() {$/;"	f	struct:Receiver
~RefClass	webrtc/base/refcountedobject_unittest.cc	/^  virtual ~RefClass() {}$/;"	f	class:rtc::__anon50::RefClass
~RefClassWithMixedValues	webrtc/base/refcountedobject_unittest.cc	/^  virtual ~RefClassWithMixedValues() {}$/;"	f	class:rtc::__anon50::RefClassWithMixedValues
~RefClassWithRvalue	webrtc/base/refcountedobject_unittest.cc	/^  virtual ~RefClassWithRvalue() {}$/;"	f	class:rtc::__anon50::RefClassWithRvalue
~RefCountInterface	webrtc/base/refcount.h	/^  virtual ~RefCountInterface() {}$/;"	f	class:rtc::RefCountInterface
~RefCountedObject	webrtc/base/refcountedobject.h	/^  virtual ~RefCountedObject() {}$/;"	f	class:rtc::RefCountedObject
~RegKey	webrtc/base/win32regkey.cc	/^RegKey::~RegKey() {$/;"	f	class:rtc::RegKey
~Resampler	webrtc/common_audio/resampler/resampler.cc	/^Resampler::~Resampler()$/;"	f	class:webrtc::Resampler
~ReuseSocketPool	webrtc/base/socketpool.cc	/^ReuseSocketPool::~ReuseSocketPool() {$/;"	f	class:rtc::ReuseSocketPool
~RewindableStream	webrtc/common_types.h	/^  virtual ~RewindableStream() {}$/;"	f	class:webrtc::RewindableStream
~RollingAccumulator	webrtc/base/rollingaccumulator.h	/^  ~RollingAccumulator() {$/;"	f	class:rtc::RollingAccumulator
~RtcHistogramMap	webrtc/system_wrappers/source/metrics_default.cc	/^  ~RtcHistogramMap() {}$/;"	f	class:webrtc::metrics::__anon251::RtcHistogramMap
~RtcpPacketTypeCounterObserver	webrtc/common_types.h	/^  virtual ~RtcpPacketTypeCounterObserver() {}$/;"	f	class:webrtc::RtcpPacketTypeCounterObserver
~RtcpStatisticsCallback	webrtc/common_types.h	/^  virtual ~RtcpStatisticsCallback() {}$/;"	f	class:webrtc::RtcpStatisticsCallback
~Runnable	webrtc/base/thread.h	/^  virtual ~Runnable() {}$/;"	f	class:rtc::Runnable
~SSLCertChain	webrtc/base/sslidentity.cc	/^SSLCertChain::~SSLCertChain() {$/;"	f	class:rtc::SSLCertChain
~SSLCertificate	webrtc/base/sslidentity.h	/^  virtual ~SSLCertificate() {}$/;"	f	class:rtc::SSLCertificate
~SSLCertificateStats	webrtc/base/sslidentity.cc	/^SSLCertificateStats::~SSLCertificateStats() {$/;"	f	class:rtc::SSLCertificateStats
~SSLIdentity	webrtc/base/sslidentity.h	/^  virtual ~SSLIdentity() {}$/;"	f	class:rtc::SSLIdentity
~SSLIdentityExpirationTest	webrtc/base/sslidentity_unittest.cc	/^  ~SSLIdentityExpirationTest() {$/;"	f	class:SSLIdentityExpirationTest
~SSLIdentityTest	webrtc/base/sslidentity_unittest.cc	/^  ~SSLIdentityTest() {$/;"	f	class:SSLIdentityTest
~SSLStreamAdapter	webrtc/base/sslstreamadapter.cc	/^SSLStreamAdapter::~SSLStreamAdapter() {}$/;"	f	class:rtc::SSLStreamAdapter
~SSLStreamAdapterTestBase	webrtc/base/sslstreamadapter_unittest.cc	/^  ~SSLStreamAdapterTestBase() {$/;"	f	class:SSLStreamAdapterTestBase
~STLElementDeleter	webrtc/system_wrappers/include/stl_util.h	/^  ~STLElementDeleter<T>() { STLDeleteElements(container_); }$/;"	f	class:webrtc::STLElementDeleter
~STLValueDeleter	webrtc/system_wrappers/include/stl_util.h	/^  ~STLValueDeleter<T>() { STLDeleteValues(container_); }$/;"	f	class:webrtc::STLValueDeleter
~SampleInfo	webrtc/system_wrappers/source/metrics_default.cc	/^SampleInfo::~SampleInfo() {}$/;"	f	class:webrtc::metrics::SampleInfo
~SaturatingGainEstimator	webrtc/modules/audio_processing/level_controller/saturating_gain_estimator.cc	/^SaturatingGainEstimator::~SaturatingGainEstimator() {}$/;"	f	class:webrtc::SaturatingGainEstimator
~ScopedDisallowBlockingCalls	webrtc/base/thread.cc	/^Thread::ScopedDisallowBlockingCalls::~ScopedDisallowBlockingCalls() {$/;"	f	class:rtc::Thread::ScopedDisallowBlockingCalls
~ScopedFakeClock	webrtc/base/fakeclock.cc	/^ScopedFakeClock::~ScopedFakeClock() {$/;"	f	class:rtc::ScopedFakeClock
~ScopedPtrCollection	webrtc/base/scopedptrcollection.h	/^  ~ScopedPtrCollection() {$/;"	f	class:rtc::ScopedPtrCollection
~ScopedTimer	webrtc/modules/audio_processing/test/audio_processing_simulator.cc	/^AudioProcessingSimulator::ScopedTimer::~ScopedTimer() {$/;"	f	class:webrtc::test::AudioProcessingSimulator::ScopedTimer
~SecureRandomGenerator	webrtc/base/helpers.cc	/^  ~SecureRandomGenerator() {$/;"	f	class:rtc::SecureRandomGenerator
~SendPacketObserver	webrtc/common_types.h	/^  virtual ~SendPacketObserver() {}$/;"	f	class:webrtc::SendPacketObserver
~SendSideDelayObserver	webrtc/common_types.h	/^  virtual ~SendSideDelayObserver() {}$/;"	f	class:webrtc::SendSideDelayObserver
~SequencedTaskCheckerImpl	webrtc/base/sequenced_task_checker_impl.cc	/^SequencedTaskCheckerImpl::~SequencedTaskCheckerImpl() {}$/;"	f	class:rtc::SequencedTaskCheckerImpl
~SequencedTaskCheckerScope	webrtc/base/sequenced_task_checker_impl.cc	/^SequencedTaskCheckerScope::~SequencedTaskCheckerScope() {}$/;"	f	class:rtc::internal::SequencedTaskCheckerScope
~SetBoolOnDeleteTask	webrtc/base/task_unittest.cc	/^  virtual ~SetBoolOnDeleteTask() {$/;"	f	class:rtc::SetBoolOnDeleteTask
~SignalClassifier	webrtc/modules/audio_processing/level_controller/signal_classifier.cc	/^SignalClassifier::~SignalClassifier() {}$/;"	f	class:webrtc::SignalClassifier
~SignalThread	webrtc/base/signalthread.cc	/^SignalThread::~SignalThread() {$/;"	f	class:rtc::SignalThread
~SignalWhenDestroyedThread	webrtc/base/thread_unittest.cc	/^  virtual ~SignalWhenDestroyedThread() {$/;"	f	class:SignalWhenDestroyedThread
~SigslotReceiver	webrtc/base/sigslot_unittest.cc	/^  ~SigslotReceiver() {$/;"	f	class:SigslotReceiver
~SincResampler	webrtc/common_audio/resampler/sinc_resampler.cc	/^SincResampler::~SincResampler() {}$/;"	f	class:webrtc::SincResampler
~SincResamplerCallback	webrtc/common_audio/resampler/sinc_resampler.h	/^  virtual ~SincResamplerCallback() {}$/;"	f	class:webrtc::SincResamplerCallback
~SincResamplerTest	webrtc/common_audio/resampler/sinc_resampler_unittest.cc	/^  virtual ~SincResamplerTest() {}$/;"	f	class:webrtc::SincResamplerTest
~SinusoidalLinearChirpSource	webrtc/common_audio/resampler/sinusoidal_linear_chirp_source.h	/^  virtual ~SinusoidalLinearChirpSource() {}$/;"	f	class:webrtc::SinusoidalLinearChirpSource
~SlowSignalThread	webrtc/base/signalthread_unittest.cc	/^    virtual ~SlowSignalThread() {$/;"	f	class:SignalThreadTest::SlowSignalThread
~Socket	webrtc/base/socket.h	/^  virtual ~Socket() {}$/;"	f	class:rtc::Socket
~SocketClient	webrtc/base/thread_unittest.cc	/^  ~SocketClient() {$/;"	f	class:SocketClient
~SocketDispatcher	webrtc/base/physicalsocketserver.cc	/^SocketDispatcher::~SocketDispatcher() {$/;"	f	class:rtc::SocketDispatcher
~SocketFactory	webrtc/base/socketfactory.h	/^  virtual ~SocketFactory() {}$/;"	f	class:rtc::SocketFactory
~SocketServerScope	webrtc/base/thread.h	/^  ~SocketServerScope() {$/;"	f	class:rtc::SocketServerScope
~SocketStream	webrtc/base/socketstream.cc	/^SocketStream::~SocketStream() {$/;"	f	class:rtc::SocketStream
~SocketTestServer	webrtc/base/testutils.h	/^  virtual ~SocketTestServer() {$/;"	f	class:testing::SocketTestServer
~SplTest	webrtc/common_audio/signal_processing/signal_processing_unittest.cc	/^   virtual ~SplTest() {$/;"	f	class:SplTest
~StandaloneVad	webrtc/modules/audio_processing/vad/standalone_vad.cc	/^StandaloneVad::~StandaloneVad() {$/;"	f	class:webrtc::StandaloneVad
~StreamAdapterInterface	webrtc/base/stream.cc	/^StreamAdapterInterface::~StreamAdapterInterface() {$/;"	f	class:rtc::StreamAdapterInterface
~StreamCache	webrtc/base/socketpool.cc	/^StreamCache::~StreamCache() {$/;"	f	class:rtc::StreamCache
~StreamDataCountersCallback	webrtc/common_types.h	/^  virtual ~StreamDataCountersCallback() {}$/;"	f	class:webrtc::StreamDataCountersCallback
~StreamInterface	webrtc/base/stream.cc	/^StreamInterface::~StreamInterface() {$/;"	f	class:rtc::StreamInterface
~StreamPool	webrtc/base/socketpool.h	/^  virtual ~StreamPool() { }$/;"	f	class:rtc::StreamPool
~StreamReference	webrtc/base/stream.cc	/^StreamReference::~StreamReference() {$/;"	f	class:rtc::StreamReference
~Suppressor	webrtc/modules/audio_processing/noise_suppression_impl.cc	/^  ~Suppressor() {$/;"	f	class:webrtc::NoiseSuppressionImpl::Suppressor
~Task	webrtc/base/task.cc	/^Task::~Task() {$/;"	f	class:rtc::Task
~TaskAbortTest	webrtc/base/task_unittest.cc	/^  ~TaskAbortTest() {}$/;"	f	class:rtc::TaskAbortTest
~TaskContext	webrtc/base/task_queue_gcd.cc	/^  virtual ~TaskContext() {}$/;"	f	struct:rtc::TaskQueue::TaskContext
~TaskQueue	webrtc/base/task_queue_gcd.cc	/^TaskQueue::~TaskQueue() {$/;"	f	class:rtc::TaskQueue
~TaskQueue	webrtc/base/task_queue_libevent.cc	/^TaskQueue::~TaskQueue() {$/;"	f	class:rtc::TaskQueue
~TaskQueue	webrtc/base/task_queue_win.cc	/^TaskQueue::~TaskQueue() {$/;"	f	class:rtc::TaskQueue
~TaskRunner	webrtc/base/taskrunner.cc	/^TaskRunner::~TaskRunner() {$/;"	f	class:rtc::TaskRunner
~TaskTest	webrtc/base/task_unittest.cc	/^  ~TaskTest() {}$/;"	f	class:rtc::TaskTest
~TestClient	webrtc/base/testclient.cc	/^TestClient::~TestClient() {$/;"	f	class:rtc::TestClient
~TestEchoServer	webrtc/base/testechoserver.h	/^  ~TestEchoServer() {$/;"	f	class:rtc::TestEchoServer
~TestMessage	webrtc/base/thread_unittest.cc	/^  virtual ~TestMessage() {}$/;"	f	struct:TestMessage
~Thread	webrtc/base/thread.cc	/^Thread::~Thread() {$/;"	f	class:rtc::Thread
~ThreadCheckerImpl	webrtc/base/thread_checker_impl.cc	/^ThreadCheckerImpl::~ThreadCheckerImpl() {$/;"	f	class:rtc::ThreadCheckerImpl
~ThreadManager	webrtc/base/thread.cc	/^ThreadManager::~ThreadManager() {$/;"	f	class:rtc::ThreadManager
~ThreadSafe	webrtc/base/thread_annotations_unittest.cc	/^  ~ThreadSafe() {$/;"	f	class:__anon68::ThreadSafe
~ThreadTask	webrtc/base/rate_limiter_unittest.cc	/^  virtual ~ThreadTask() {}$/;"	f	class:webrtc::ThreadTask
~TimeoutChangeTest	webrtc/base/task_unittest.cc	/^  ~TimeoutChangeTest() {}$/;"	f	class:rtc::TimeoutChangeTest
~TimerEvent	webrtc/base/task_queue_libevent.cc	/^  ~TimerEvent() { event_del(&ev); }$/;"	f	struct:rtc::__anon65::TimerEvent
~TimestampAligner	webrtc/base/timestampaligner.cc	/^TimestampAligner::~TimestampAligner() {}$/;"	f	class:rtc::TimestampAligner
~TmToSeconds	webrtc/base/timeutils_unittest.cc	/^  ~TmToSeconds() {$/;"	f	class:rtc::TmToSeconds
~TraceCallback	webrtc/common_types.h	/^  virtual ~TraceCallback() {}$/;"	f	class:webrtc::TraceCallback
~TraceEndOnScopeClose	webrtc/base/trace_event.h	/^  ~TraceEndOnScopeClose() {$/;"	f	class:webrtc::trace_event_internal::TraceEndOnScopeClose
~TraceImpl	webrtc/system_wrappers/source/trace_impl.cc	/^TraceImpl::~TraceImpl() {$/;"	f	class:webrtc::TraceImpl
~TracePosix	webrtc/system_wrappers/source/trace_posix.cc	/^TracePosix::~TracePosix() {$/;"	f	class:webrtc::TracePosix
~TransEntry	webrtc/base/natserver.cc	/^NATServer::TransEntry::~TransEntry() {$/;"	f	class:rtc::NATServer::TransEntry
~TransformAdapter	webrtc/base/transformadapter.cc	/^TransformAdapter::~TransformAdapter() {$/;"	f	class:rtc::TransformAdapter
~TransformInterface	webrtc/base/transformadapter.h	/^  virtual ~TransformInterface() { }$/;"	f	class:rtc::TransformInterface
~TransientDetector	webrtc/modules/audio_processing/transient/transient_detector.cc	/^TransientDetector::~TransientDetector() {}$/;"	f	class:webrtc::TransientDetector
~TransientSuppressor	webrtc/modules/audio_processing/transient/transient_suppressor.cc	/^TransientSuppressor::~TransientSuppressor() {}$/;"	f	class:webrtc::TransientSuppressor
~TranslatorMap	webrtc/base/natsocketfactory.cc	/^NATSocketServer::TranslatorMap::~TranslatorMap() {$/;"	f	class:rtc::NATSocketServer::TranslatorMap
~TryCritScope	webrtc/base/criticalsection.cc	/^TryCritScope::~TryCritScope() {$/;"	f	class:rtc::TryCritScope
~TypingDetection	webrtc/modules/audio_processing/typing_detection.cc	/^TypingDetection::~TypingDetection() {}$/;"	f	class:webrtc::TypingDetection
~UnixFilesystem	webrtc/base/unixfilesystem.cc	/^UnixFilesystem::~UnixFilesystem() {}$/;"	f	class:rtc::UnixFilesystem
~UnwrapMainThreadScope	webrtc/base/messagequeue_unittest.cc	/^  ~UnwrapMainThreadScope() {$/;"	f	struct:UnwrapMainThreadScope
~Vad	webrtc/modules/audio_processing/voice_detection_impl.cc	/^  ~Vad() {$/;"	f	class:webrtc::VoiceDetectionImpl::Vad
~VadAudioProc	webrtc/modules/audio_processing/vad/vad_audio_proc.cc	/^VadAudioProc::~VadAudioProc() {$/;"	f	class:webrtc::VadAudioProc
~VadCircularBuffer	webrtc/modules/audio_processing/vad/vad_circular_buffer.cc	/^VadCircularBuffer::~VadCircularBuffer() {$/;"	f	class:webrtc::VadCircularBuffer
~VirtualSocket	webrtc/base/virtualsocketserver.cc	/^VirtualSocket::~VirtualSocket() {$/;"	f	class:rtc::VirtualSocket
~VirtualSocketServer	webrtc/base/virtualsocketserver.cc	/^VirtualSocketServer::~VirtualSocketServer() {$/;"	f	class:rtc::VirtualSocketServer
~VoiceDetection	webrtc/modules/audio_processing/include/audio_processing.h	/^  virtual ~VoiceDetection() {}$/;"	f	class:webrtc::VoiceDetection
~VoiceDetectionImpl	webrtc/modules/audio_processing/voice_detection_impl.cc	/^VoiceDetectionImpl::~VoiceDetectionImpl() {}$/;"	f	class:webrtc::VoiceDetectionImpl
~VolumeCallbacks	webrtc/modules/audio_processing/agc/agc_manager_direct.h	/^  virtual ~VolumeCallbacks() {}$/;"	f	class:webrtc::VolumeCallbacks
~WPDNode	webrtc/modules/audio_processing/transient/wpd_node.cc	/^WPDNode::~WPDNode() {}$/;"	f	class:webrtc::WPDNode
~WPDTree	webrtc/modules/audio_processing/transient/wpd_tree.cc	/^WPDTree::~WPDTree() {}$/;"	f	class:webrtc::WPDTree
~WavFile	webrtc/common_audio/wav_file.h	/^  virtual ~WavFile() {}$/;"	f	class:webrtc::WavFile
~WavReader	webrtc/common_audio/wav_file.cc	/^WavReader::~WavReader() {$/;"	f	class:webrtc::WavReader
~WavWriter	webrtc/common_audio/wav_file.cc	/^WavWriter::~WavWriter() {$/;"	f	class:webrtc::WavWriter
~WeakPtrBase	webrtc/base/weak_ptr.cc	/^WeakPtrBase::~WeakPtrBase() {}$/;"	f	class:rtc::internal::WeakPtrBase
~WeakPtrFactory	webrtc/base/weak_ptr.h	/^  ~WeakPtrFactory() { ptr_ = nullptr; }$/;"	f	class:rtc::WeakPtrFactory
~WeakReference	webrtc/base/weak_ptr.cc	/^WeakReference::~WeakReference() {}$/;"	f	class:rtc::internal::WeakReference
~WeakReferenceOwner	webrtc/base/weak_ptr.cc	/^WeakReferenceOwner::~WeakReferenceOwner() {$/;"	f	class:rtc::internal::WeakReferenceOwner
~Win32Socket	webrtc/base/win32socketserver.cc	/^Win32Socket::~Win32Socket() {$/;"	f	class:rtc::Win32Socket
~Win32SocketServer	webrtc/base/win32socketserver.cc	/^Win32SocketServer::~Win32SocketServer() {$/;"	f	class:rtc::Win32SocketServer
~Win32Thread	webrtc/base/win32socketserver.h	/^  virtual ~Win32Thread() {$/;"	f	class:rtc::Win32Thread
~Win32Window	webrtc/base/win32window.cc	/^Win32Window::~Win32Window() {$/;"	f	class:rtc::Win32Window
~Win32WindowPickerForTest	webrtc/base/win32windowpicker_unittest.cc	/^  ~Win32WindowPickerForTest() {$/;"	f	class:rtc::Win32WindowPickerForTest
~WinPing	webrtc/base/winping.cc	/^WinPing::~WinPing() {$/;"	f	class:rtc::WinPing
~WindowPicker	webrtc/base/windowpicker.h	/^  virtual ~WindowPicker() {}$/;"	f	class:rtc::WindowPicker
~WindowPickerFactory	webrtc/base/windowpickerfactory.h	/^  virtual ~WindowPickerFactory() {}$/;"	f	class:rtc::WindowPickerFactory
~WindowsCommandLineArguments	webrtc/base/flags.cc	/^WindowsCommandLineArguments::~WindowsCommandLineArguments() {$/;"	f	class:rtc::WindowsCommandLineArguments
~WinsockInitializer	webrtc/base/win32socketinit.cc	/^  ~WinsockInitializer() {$/;"	f	class:rtc::WinsockInitializer
~Worker	webrtc/base/signalthread.cc	/^SignalThread::Worker::~Worker() {$/;"	f	class:rtc::SignalThread::Worker
~X11WindowPicker	webrtc/base/x11windowpicker.cc	/^X11WindowPicker::~X11WindowPicker() {$/;"	f	class:rtc::X11WindowPicker
~XDisplay	webrtc/base/testutils.h	/^  ~XDisplay() { if (display_) XCloseDisplay(display_); }$/;"	f	struct:testing::XDisplay
~XErrorSuppressor	webrtc/base/x11windowpicker.cc	/^  ~XErrorSuppressor() {$/;"	f	class:rtc::XErrorSuppressor
~XWindowEnumerator	webrtc/base/x11windowpicker.cc	/^  ~XWindowEnumerator() {$/;"	f	class:rtc::XWindowEnumerator
~XWindowProperty	webrtc/base/x11windowpicker.cc	/^  ~XWindowProperty() {$/;"	f	class:rtc::XWindowProperty
~_connection0	webrtc/base/sigslot.h	/^		virtual ~_connection0()$/;"	f	class:sigslot::_connection0
~_connection1	webrtc/base/sigslot.h	/^		virtual ~_connection1()$/;"	f	class:sigslot::_connection1
~_connection2	webrtc/base/sigslot.h	/^		virtual ~_connection2()$/;"	f	class:sigslot::_connection2
~_connection3	webrtc/base/sigslot.h	/^		virtual ~_connection3()$/;"	f	class:sigslot::_connection3
~_connection4	webrtc/base/sigslot.h	/^		virtual ~_connection4()$/;"	f	class:sigslot::_connection4
~_connection5	webrtc/base/sigslot.h	/^		virtual ~_connection5()$/;"	f	class:sigslot::_connection5
~_connection6	webrtc/base/sigslot.h	/^		virtual ~_connection6()$/;"	f	class:sigslot::_connection6
~_connection7	webrtc/base/sigslot.h	/^		virtual ~_connection7()$/;"	f	class:sigslot::_connection7
~_connection8	webrtc/base/sigslot.h	/^		virtual ~_connection8()$/;"	f	class:sigslot::_connection8
~_connection_base0	webrtc/base/sigslot.h	/^		virtual ~_connection_base0() {}$/;"	f	class:sigslot::_connection_base0
~_connection_base1	webrtc/base/sigslot.h	/^		virtual ~_connection_base1() {}$/;"	f	class:sigslot::_connection_base1
~_connection_base2	webrtc/base/sigslot.h	/^		virtual ~_connection_base2() {}$/;"	f	class:sigslot::_connection_base2
~_connection_base3	webrtc/base/sigslot.h	/^		virtual ~_connection_base3() {}$/;"	f	class:sigslot::_connection_base3
~_connection_base4	webrtc/base/sigslot.h	/^		virtual ~_connection_base4() {}$/;"	f	class:sigslot::_connection_base4
~_connection_base5	webrtc/base/sigslot.h	/^		virtual ~_connection_base5() {}$/;"	f	class:sigslot::_connection_base5
~_connection_base6	webrtc/base/sigslot.h	/^		virtual ~_connection_base6() {}$/;"	f	class:sigslot::_connection_base6
~_connection_base7	webrtc/base/sigslot.h	/^		virtual ~_connection_base7() {}$/;"	f	class:sigslot::_connection_base7
~_connection_base8	webrtc/base/sigslot.h	/^		virtual ~_connection_base8() {}$/;"	f	class:sigslot::_connection_base8
~_signal_base0	webrtc/base/sigslot.h	/^		~_signal_base0()$/;"	f	class:sigslot::_signal_base0
~_signal_base1	webrtc/base/sigslot.h	/^		~_signal_base1()$/;"	f	class:sigslot::_signal_base1
~_signal_base2	webrtc/base/sigslot.h	/^		~_signal_base2()$/;"	f	class:sigslot::_signal_base2
~_signal_base3	webrtc/base/sigslot.h	/^		~_signal_base3()$/;"	f	class:sigslot::_signal_base3
~_signal_base4	webrtc/base/sigslot.h	/^		~_signal_base4()$/;"	f	class:sigslot::_signal_base4
~_signal_base5	webrtc/base/sigslot.h	/^		~_signal_base5()$/;"	f	class:sigslot::_signal_base5
~_signal_base6	webrtc/base/sigslot.h	/^		~_signal_base6()$/;"	f	class:sigslot::_signal_base6
~_signal_base7	webrtc/base/sigslot.h	/^		~_signal_base7()$/;"	f	class:sigslot::_signal_base7
~_signal_base8	webrtc/base/sigslot.h	/^		~_signal_base8()$/;"	f	class:sigslot::_signal_base8
~_signal_base_interface	webrtc/base/sigslot.h	/^		virtual ~_signal_base_interface() {}$/;"	f	class:sigslot::_signal_base_interface
~has_slots	webrtc/base/sigslot.h	/^		virtual ~has_slots()$/;"	f	class:sigslot::has_slots
~has_slots_interface	webrtc/base/sigslot.h	/^		virtual ~has_slots_interface()$/;"	f	class:sigslot::has_slots_interface
~linked_ptr	webrtc/base/linked_ptr.h	/^    ~linked_ptr()$/;"	f	class:rtc::linked_ptr
~lock_block	webrtc/base/sigslot.h	/^		~lock_block()$/;"	f	class:sigslot::lock_block
~multi_threaded_global	webrtc/base/sigslot.h	/^		virtual ~multi_threaded_global()$/;"	f	class:sigslot::multi_threaded_global
~multi_threaded_local	webrtc/base/sigslot.cc	/^multi_threaded_local::~multi_threaded_local() {$/;"	f	class:sigslot::multi_threaded_local
~multi_threaded_local	webrtc/base/sigslot.h	/^		virtual ~multi_threaded_local()$/;"	f	class:sigslot::multi_threaded_local
~scoped_refptr	webrtc/base/scoped_ref_ptr.h	/^  ~scoped_refptr() {$/;"	f	class:rtc::scoped_refptr
~single_threaded	webrtc/base/sigslot.h	/^                virtual ~single_threaded() {}$/;"	f	class:sigslot::single_threaded
